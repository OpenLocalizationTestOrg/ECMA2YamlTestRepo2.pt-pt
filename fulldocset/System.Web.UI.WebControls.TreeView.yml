### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeView
  id: TreeView
  children:
  - System.Web.UI.WebControls.TreeView.#ctor
  - System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  - System.Web.UI.WebControls.TreeView.CheckedNodes
  - System.Web.UI.WebControls.TreeView.CollapseAll
  - System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  - System.Web.UI.WebControls.TreeView.CollapseImageUrl
  - System.Web.UI.WebControls.TreeView.CreateControlCollection
  - System.Web.UI.WebControls.TreeView.CreateNode
  - System.Web.UI.WebControls.TreeView.DataBind
  - System.Web.UI.WebControls.TreeView.DataBindings
  - System.Web.UI.WebControls.TreeView.EnableClientScript
  - System.Web.UI.WebControls.TreeView.ExpandAll
  - System.Web.UI.WebControls.TreeView.ExpandDepth
  - System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  - System.Web.UI.WebControls.TreeView.ExpandImageUrl
  - System.Web.UI.WebControls.TreeView.FindNode(System.String)
  - System.Web.UI.WebControls.TreeView.GetCallbackResult
  - System.Web.UI.WebControls.TreeView.HoverNodeStyle
  - System.Web.UI.WebControls.TreeView.ImageSet
  - System.Web.UI.WebControls.TreeView.LeafNodeStyle
  - System.Web.UI.WebControls.TreeView.LevelStyles
  - System.Web.UI.WebControls.TreeView.LineImagesFolder
  - System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  - System.Web.UI.WebControls.TreeView.NodeIndent
  - System.Web.UI.WebControls.TreeView.Nodes
  - System.Web.UI.WebControls.TreeView.NodeStyle
  - System.Web.UI.WebControls.TreeView.NodeWrap
  - System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  - System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.ParentNodeStyle
  - System.Web.UI.WebControls.TreeView.PathSeparator
  - System.Web.UI.WebControls.TreeView.PerformDataBinding
  - System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  - System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  - System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RootNodeStyle
  - System.Web.UI.WebControls.TreeView.SaveViewState
  - System.Web.UI.WebControls.TreeView.SelectedNode
  - System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  - System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  - System.Web.UI.WebControls.TreeView.SelectedValue
  - System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  - System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  - System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  - System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  - System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  - System.Web.UI.WebControls.TreeView.ShowLines
  - System.Web.UI.WebControls.TreeView.SkipLinkText
  - System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.TagKey
  - System.Web.UI.WebControls.TreeView.Target
  - System.Web.UI.WebControls.TreeView.TrackViewState
  - System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  - System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  - System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  - System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  - System.Web.UI.WebControls.TreeView.TreeNodePopulate
  - System.Web.UI.WebControls.TreeView.Visible
  langs:
  - csharp
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
  type: Class
  summary: "Apresenta dados hierárquicos, tais como uma tabela de conteúdos, numa estrutura de árvore."
  remarks: "Neste tópico:- [introdução](#introduction)      -   [nós](#nodes)      -   [dados estáticos](#static_data)      -   [vincular a dados](#binding_to_data)      -   [dinâmico de nó de população](#dynamic_node_population)      -   [personalizar a Interface de utilizador](#customizing_the_user_interface)      -   [eventos](#events)      -   [Scrolling](#scrolling)      -   [acessibilidade](#accessibility)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # é utilizado para apresentar dados hierárquicos, tais como uma tabela de conteúdo ou o diretório do ficheiro, numa estrutura de árvore de controlo TreeView a introdução e suporta o seguinte funcionalidades:-vínculo de dados permite que os nós do controlo estar vinculado aos dados de tabela ou relacionais de XML,.            -Site navegação através da integração com o <xref:System.Web.UI.WebControls.SiteMapDataSource>controlo.</xref:System.Web.UI.WebControls.SiteMapDataSource>      -Texto o nó que pode ser apresentado como texto simples ou hiperligações.      -Acesso programático para o modelo de objeto de TreeView criar árvores, preencher nós, defina as propriedades, e assim sucessivamente dinamicamente.      -População do nó do lado do cliente (em browsers suportados).      -A capacidade para apresentar uma caixa de verificação junto a cada nó.      -Aspeto personalizável através de temas, estilos e imagens definido pelo utilizador.          > [!NOTE] > Controlo TreeView a foi concebido para ser utilizado dentro de um <xref:System.Web.UI.UpdatePanel>controlar apenas quando <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>está definido como `true`.</xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> </xref:System.Web.UI.UpdatePanel> <xref:System.Web.UI.UpdatePanel>controlos são utilizados para atualizar selecionadas regiões de uma página em vez de atualizar a página com uma nova colocação.</xref:System.Web.UI.UpdatePanel> Para obter mais informações, consulte [descrição geral do controlo UpdatePanel](~/add/includes/ajax-current-ext-md.md) e [descrição geral de composição de página parcial](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;nodes&quot;></a># # Nós que controlo TreeView é constituído por nós. Cada entrada na árvore da denomina-se um nó e é representada por um <xref:System.Web.UI.WebControls.TreeNode>objeto.</xref:System.Web.UI.WebControls.TreeNode> Tipos de nó são definidos do seguinte modo:-denomina-se um nó que contém outros nós um *nó principal*.      -O nó que está contido por outro nó é chamado um *o nó secundário*.      -Um nó que não tem subordinados é chamado um *o nó de folha*.      -O nó que não está contido em qualquer outro nó, mas o predecessor para todos os outros nós é o *nó raiz*.       Um nó pode ser um elemento principal e um principal subordinado, mas raiz, e nós de folha são mutuamente exclusivos. Várias propriedades de visual e comportamentais de nós são determinadas pelo se um nó é uma raiz, um subordinado ou um nó de folha.       Embora uma estrutura de árvore típica tem apenas um nó de raiz, o controlo TreeView permite-lhe adicionar vários nós raiz para a estrutura de árvore. Isto é útil quando pretende apresentar item listagens sem apresentar um único nó raiz, como uma lista de categorias de produto.       Cada nó tem um <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade e um <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> O valor da <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade é apresentada na TreeView, enquanto o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade é utilizada para armazenar quaisquer dados adicionais sobre o nó, tais como os dados que são transmitidos originem eventos que estão associados com o nó.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       Um nó pode ser dos dois modos: modo de seleção e o modo de navegação. Por predefinição, um nó está no modo de seleção. Para colocar um nó em modo de navegação, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade para o nó a um valor diferente de uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Para colocar um nó em modo de seleção, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade para o nó como uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Navegadores de Internet algumas têm uma limitação que pode afetar o desempenho do controlo TreeView. Por exemplo, Microsoft Internet Explorer 6.0 tem um limite de caráter do URL de carateres de 2067 que mensagens do mesmo. Se o número de carateres num URL de um nó é maior do que esse número, expandir esse nó falhará e sem exceção é emitida.      <a name=&quot;static_data&quot;></a># # Dados estáticos no modelo de dados mais simples do controlo TreeView são dados estáticos. Para apresentar dados estáticos utilizando sintaxe declarativa, primeiro aninhar abrir e fechar `<Nodes>` etiquetas entre a abertura e fecho do controlo TreeView. Em seguida, crie a estrutura de árvore por aninhamento `<asp:TreeNode>` elementos entre a abertura e fecho `<Nodes>` etiquetas. Cada `<asp:TreeNode>` elemento representa um nó na árvore e mapeia para um <xref:System.Web.UI.WebControls.TreeNode>objeto.</xref:System.Web.UI.WebControls.TreeNode> Pode definir as propriedades de cada nó ao definir os atributos do respetivo `<asp:TreeNode>` elemento. Para criar subordinado nós, aninhar adicionais `<asp:TreeNode>` elementos entre a abertura e fecho `<asp:TreeNode>` etiquetas do nó principal.      <a name=&quot;binding_to_data&quot;></a># # Enlace para o controlo TreeView a dados também pode ser vinculado a dados. Pode utilizar qualquer um dos dois métodos para vincular o controlo TreeView para o tipo de origem de dados adequada:-a TreeView controlo pode utilizar qualquer controlo de origem de dados que implementa o <xref:System.Web.UI.IHierarchicalDataSource>interface, tal como um <xref:System.Web.UI.WebControls.XmlDataSource>controlo ou um <xref:System.Web.UI.WebControls.SiteMapDataSource>controlo.</xref:System.Web.UI.WebControls.SiteMapDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.IHierarchicalDataSource> Para vincular a um controlo de origem de dados, defina o <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>propriedade do controlo TreeView para o <xref:System.Web.UI.Control.ID%2A>valor do controlo de origem de dados.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> O controlo TreeView automaticamente está vinculado ao controlo de origem de dados especificada. Este é o método preferencial para vincular a dados.      -Controlo TreeView também pode ser vinculado a um <xref:System.Xml.XmlDocument>objeto ou um <xref:System.Data.DataSet>objeto com relações.</xref:System.Data.DataSet> </xref:System.Xml.XmlDocument> Para vincular a uma destas origens de dados, defina o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>propriedade de TreeView controlar à origem de dados e, em seguida, chame o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>método.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>       Quando o enlace a uma origem de dados em que cada item de dados contém várias propriedades (por exemplo, um elemento XML com vários atributos), um nó apresenta o valor que é devolvido pelo `ToString` método do item de dados, por predefinição. No caso de um elemento XML, o nó mostra o nome do elemento, que mostra a estrutura subjacente da árvore, mas não é muito útil caso contrário. É possível vincular um nó para uma propriedade do item de dados específicos, especificando os enlaces de nó de árvore com o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>coleção.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> O <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>coleção contém `TreeNodeBinding` objetos que definem a relação entre um item de dados e o nó que é a associação à.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Pode especificar os critérios de enlace e a propriedade do item de dados a apresentar no nó. Para obter mais informações sobre os enlaces de nó de árvore, consulte <xref:System.Web.UI.WebControls.TreeNodeBinding>.</xref:System.Web.UI.WebControls.TreeNodeBinding>      > [!IMPORTANT] > Um utilizador mal intencionado pode criar um pedido de chamada de retorno e obter dados para os nós do que o Programador de página não apresenta controlo TreeView. Por conseguinte, a segurança dos dados tem de ser implementada pela origem de dados. Não utilize o <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>propriedade para ocultar os dados.</xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>      <a name=&quot;dynamic_node_population&quot;></a># # Dinâmica nó população por vezes, não é prático estaticamente definir a estrutura de árvore, porque a origem de dados devolve excesso de dados ou porque os dados para apresentar dependem de informações que ocorre no tempo de execução. Por este motivo, o controlo TreeView suporta a população de nó dinâmico. Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>para um nó for definida como `true`, esse nó obtém preenchido em tempo de execução quando o nó é expandido.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Para preencher um nó de forma dinâmica, tem de definir um método de processamento de eventos que contém a lógica para preencher um nó para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>eventos.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       Browsers que suportam scripts de chamada de retorno também podem tirar partido da população de nó do lado do cliente. (Isto inclui 5.5 do Internet Explorer e posteriores e algumas outros browsers.) População do nó do lado do cliente permite que o controlo TreeView preencher um nó utilizando o script de cliente quando os utilizadores expanda o nó, sem necessidade de uma ida e volta ao servidor. Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>      <a name=&quot;customizing_the_user_interface&quot;></a># # Personalizar a Interface de utilizador existe é várias formas de personalizar o aspecto do controlo TreeView. Em primeiro lugar, pode especificar um estilo diferentes (por exemplo, o tamanho do tipo de letra e cores) para cada um dos tipos de nó.       Se utilizar folhas de estilo em cascata (CSS) para personalizar o aspecto do controlo, utilize estilos inline ou um ficheiro separado do CSS, mas não ambos. Utilizar estilos inline e um ficheiro separado do CSS pode causar resultados inesperados. Para obter mais informações sobre a utilização de folhas de estilo com controlos, consulte [controlos de servidor Web e CSS estilos](~/add/includes/ajax-current-ext-md.md).       A tabela seguinte lista os estilos de nó disponível.      | Propriedade de estilo de nó | Descrição |   |-------------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>| As definições de estilo para um nó quando o ponteiro do rato está posicionado sobre ele. |   | <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>| As definições de estilo para os nós de folha. |   | <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>| As predefinições de estilo para um nó. |   | <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>| As definições de estilo para os nós principais. |   | <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>| As definições de estilo para o nó raiz. |   | <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>| As definições de estilo para um nó selecionado. |       Também pode controlar o estilo de nós no profundidade específicas dentro da árvore da utilizando o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> O estilo primeiro na coleção corresponde ao estilo de nós ao nível do primeiro na árvore. O estilo do segundo na coleção corresponde ao estilo de nós ao nível da segunda na árvore e assim sucessivamente. Isto é frequentemente utilizado para gerar a tabela de menus de navegação de conteúdo – estilo onde nós em determinadas numa profundidade devem ter o mesmo aspeto, independentemente se tiverem nós subordinados.      > [!NOTE] > Se um estilo está definido para um determinado profundidade nível utilizando o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção, que estilo substitui quaisquer raiz, principal ou definições de estilo de nó de folha para os nós em que profundidade.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>       Outra forma para alterar o aspecto do controlo é para personalizar as imagens que são apresentadas no controlo TreeView. Pode especificar o seu próprio conjunto personalizado de imagens para as diferentes partes do controlo, definindo as propriedades mostradas na tabela seguinte.      | Propriedade de imagem | Descrição |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>| O URL de uma imagem a apresentar para o indicador de nó expansíveis.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Esta imagem é normalmente um sinal de subtração (-). |   | <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>| O URL de uma imagem a apresentar para o indicador de nó expansíveis.</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> Esta imagem é normalmente um sinal de adição (+). |   | <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>| O URL para a pasta que contém as imagens de linha utilizada para ligar nós principais a nós subordinados.</xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> A propriedade <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>também tem de ser definida `true` para esta propriedade ter um efeito. |   | <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>| O URL de uma imagem a apresentar para o indicador de nó não expansível. |      > [!NOTE] > Não é necessário personalizar cada propriedade de imagem.</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> Se não for explicitamente definida uma propriedade de imagem, é utilizada a imagem predefinida incorporada.       O controlo TreeView também lhe permite apresentar uma caixa de verificação junto a um nó. Quando o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>propriedade está definida como um valor diferente de `TreeNodeTypes.None`, as caixas de verificação são apresentadas junto os tipos de nó especificado.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>propriedade pode ser definida como uma combinação bit a bit do <xref:System.Web.UI.WebControls.TreeNodeTypes>valores de membro de enumeração.</xref:System.Web.UI.WebControls.TreeNodeTypes> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>       Sempre que a página é publicada para o servidor, o <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>coleção é preenchida automaticamente com os nós selecionados.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Quando as caixas de verificação são apresentadas, pode utilizar o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>evento para executar uma rotina personalizada sempre que o estado de uma caixa de verificação é alterado entre pedidos POST para o servidor.</xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>      <a name=&quot;events&quot;></a># # Eventos controlo TreeView fornece vários eventos que podem ser programa contra. Isto permite-lhe executar uma rotina personalizada sempre que ocorrer um evento. A tabela seguinte lista os eventos que são suportados pelo controlo TreeView.      | Evento | Descrição |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>| Ocorre quando as caixas de verificação do controlo TreeView alterar o estado entre pedidos POST para o servidor. |   | <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>| Ocorre quando um nó seleccionado no controlo TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>| Ocorre quando um nó é expandido no controlo TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>| Ocorre quando um nó é fechado no controlo TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>| Ocorre quando um nó com a respetiva propriedade <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>definida como `true` é expandido no controlo TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>| Ocorre quando um item de dados está vinculado a um nó no controlo TreeView. |      <a name=&quot;scrolling&quot;> </a> # # Deslocamento TreeView o controlo não tem o deslocamento incorporada.</xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> </xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Para adicionar o deslocamento, coloque o controlo TreeView num <xref:System.Web.UI.WebControls.Panel>controlar e barras de deslocamento para adicionar o <xref:System.Web.UI.WebControls.Panel>controlo.</xref:System.Web.UI.WebControls.Panel> </xref:System.Web.UI.WebControls.Panel> Para obter mais informações, consulte [painel Descrição geral de controlo do Web Server](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;accessibility&quot;></a># # Acessibilidade markup composto por predefinição para este controlo pode não em conformidade com as normas de acessibilidade. Para obter detalhes sobre o suporte de acessibilidade para este controlo, consulte [controlos do ASP.NET e acessibilidade](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a># # Sintaxe declarativa```   <asp:TreeView       AccessKey=&quot;string&quot;       AutoGenerateDataBindings=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CollapseImageToolTip=&quot;string&quot;       CollapseImageUrl=&quot;uri&quot;       CssClass=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EnableClientScript=&quot;True|False&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ExpandDepth=&quot;string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|           14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30&quot;       ExpandImageToolTip=&quot;string&quot;       ExpandImageUrl=&quot;uri&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       ImageSet=&quot;Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|           BulletedList|BulletedList2|BulletedList3|BulletedList4|           Arrows|News|Contacts|Inbox|Events|Faq&quot;       LineImagesFolder=&quot;string&quot;       MaxDataBindDepth=&quot;integer&quot;       NodeIndent=&quot;integer&quot;       NodeWrap=&quot;True|False&quot;       NoExpandImageUrl=&quot;uri&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedNodeChanged=&quot;SelectedNodeChanged event handler&quot;       OnTreeNodeCheckChanged=&quot;TreeNodeCheckChanged event handler&quot;       OnTreeNodeCollapsed=&quot;TreeNodeCollapsed event handler&quot;       OnTreeNodeDataBound=&quot;TreeNodeDataBound event handler&quot;       OnTreeNodeExpanded=&quot;TreeNodeExpanded event handler&quot;       OnTreeNodePopulate=&quot;TreeNodePopulate event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PathSeparator=&quot;string&quot;       PopulateNodesFromClient=&quot;True|False&quot;       runat=&quot;server&quot;       ShowCheckBoxes=&quot;None|Root|Parent|Leaf|All&quot;       ShowExpandCollapse=&quot;True|False&quot;       ShowLines=&quot;True|False&quot;       SkinID=&quot;string&quot;       SkipLinkText=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Target=&quot;string&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <DataBindings>                   <asp:TreeNodeBinding                       DataMember=&quot;string&quot;                       Depth=&quot;integer&quot;                       FormatString=&quot;string&quot;                       ImageToolTip=&quot;string&quot;                       ImageToolTipField=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       ImageUrlField=&quot;string&quot;                       NavigateUrl=&quot;uri&quot;                       NavigateUrlField=&quot;string&quot;                       PopulateOnDemand=&quot;True|False&quot;                       SelectAction=&quot;Select|Expand|SelectExpand|None&quot;                       ShowCheckBox=&quot;string&quot;                       Target=&quot;string&quot;                       TargetField=&quot;string&quot;                       Text=&quot;string&quot;                       TextField=&quot;string&quot;                       ToolTip=&quot;string&quot;                       ToolTipField=&quot;string&quot;                       Value=&quot;string&quot;                       ValueField=&quot;string&quot;                   />           </DataBindings>           <HoverNodeStyle />           <LeafNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <LevelStyles>                   <asp:TreeNodeStyle                       BackColor=&quot;color name|#dddddd&quot;                       BorderColor=&quot;color name|#dddddd&quot;                       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|                           Double|Groove|Ridge|Inset|Outset&quot;                       BorderWidth=&quot;size&quot;                       ChildNodesPadding=&quot;size&quot;                       CssClass=&quot;string&quot;                       Font-Bold=&quot;True|False&quot;                       Font-Italic=&quot;True|False&quot;                       Font-Names=&quot;string&quot;                       Font-Overline=&quot;True|False&quot;                       Font-Size=&quot;string|Smaller|Larger|XX-Small|                           X-Small|Small|Medium|Large|X-Large|XX-Large&quot;                       Font-Strikeout=&quot;True|False&quot;                       Font-Underline=&quot;True|False&quot;                       ForeColor=&quot;color name|#dddddd&quot;                       Height=&quot;size&quot;                       HorizontalPadding=&quot;size&quot;                       ImageUrl=&quot;uri&quot;                       NodeSpacing=&quot;size&quot;                       OnDisposed=&quot;Disposed event handler&quot;                       VerticalPadding=&quot;size&quot;                       Width=&quot;size&quot;                   />           </LevelStyles>           <Nodes>                   <asp:TreeNode                       Checked=&quot;True|False&quot;                       Expanded=&quot;string&quot;                       ImageToolTip=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       NavigateUrl=&quot;uri&quot;                       PopulateOnDemand=&quot;True|False&quot;                       SelectAction=&quot;Select|Expand|SelectExpand|None&quot;                       Selected=&quot;True|False&quot;                       ShowCheckBox=&quot;string&quot;                       Target=&quot;string&quot;                       Text=&quot;string&quot;                       ToolTip=&quot;string&quot;                       Value=&quot;string&quot;   >                   </asp:TreeNode>           </Nodes>           <NodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <ParentNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <RootNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <SelectedNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />   </asp:TreeView>   ```"
  example:
  - "This section contains seven code examples:  \n  \n-   The first code example demonstrates how to set up the frames for the second code example.  \n  \n-   The second code example demonstrates how to use declarative syntax to display static data in the TreeView control.  \n  \n-   The third code example demonstrates how to bind the TreeView control to an XML data source.  \n  \n-   The fourth code example provides sample XML data for the third code example.  \n  \n-   The fifth code example demonstrates how to use the TreeView control for site navigation by binding it to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control.  \n  \n-   The sixth code example provides sample site map data for the fifth code example.  \n  \n-   The seventh code example demonstrates how to populate the nodes in the TreeView control from the client.  \n  \n The following code example demonstrates how to set up the frames for the following code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to display static data in the TreeView control. This example is used within the frame set of the preceding example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_2.aspx)]  \n  \n The following code example demonstrates how to bind the TreeView control to an XML data source. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_3.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_3.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```  \n  \n The following code example demonstrates how to use the TreeView control for site navigation by binding it to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control. For this example to work correctly, you must copy the sample site map data, provided after this code example, to a file named Web.sitemap.  \n  \n [!code-vb[TreeViewAutoGenerateBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_4.aspx)]\n [!code-cs[TreeViewAutoGenerateBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_4.aspx)]  \n  \n The following code example provides sample site map data for the preceding code example.  \n  \n```  \n<siteMap>  \n    <siteMapNode title=\"Home\" description=\"Home\" url=\"default.aspx\">  \n        <siteMapNode title=\"Products\" description=\"Products\" url=\"Products.aspx\">  \n            <siteMapNode title=\"Computers\" url=\"Computers.aspx\"/>  \n            <siteMapNode title=\"Accessories\" url=\"Accessories.aspx\"/>       \n        </siteMapNode>  \n    </siteMapNode>  \n</siteMap>  \n```  \n  \n The following code example demonstrates how to populate the nodes in the TreeView control from the client. When client-side node population is enabled, nodes are populated dynamically on the client, without the need to post back to the server.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_5.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_5.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("SelectedNodeChanged")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.SupportsEventValidation]

      public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.HierarchicalDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IPostBackDataHandler
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeView()
  nameWithType: TreeView.TreeView()
  fullName: System.Web.UI.WebControls.TreeView.TreeView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> classe."
  remarks: "Utilize o construtor de TreeView para criar e inicializar uma nova instância de <xref:System.Web.UI.WebControls.TreeView>classe.</xref:System.Web.UI.WebControls.TreeView> Para adicionar um <xref:System.Web.UI.WebControls.TreeView>controlar dinamicamente a uma página, crie um novo <xref:System.Web.UI.WebControls.TreeView>objeto, definir as respetivas propriedades e, em seguida, adicioná-lo para o <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>controlar a coleção de um contentor, tais como o <xref:System.Web.UI.WebControls.PlaceHolder>controlo.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TreeView constructor to add a <xref:System.Web.UI.WebControls.TreeView> control to a page dynamically. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the TreeView constructor to add a <xref:System.Web.UI.WebControls.TreeView> control to a page dynamically. For this example to work correctly, you must copy the sample XML data provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_71_1.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_71_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n  <Chapter Heading=\"Chapter 1\">  \n    <Section Heading=\"Section 1\">  \n    </Section>  \n    <Section Heading=\"Section 2\">  \n    </Section>  \n  </Chapter>  \n  <Chapter Heading=\"Chapter 2\">  \n    <Section Heading=\"Section 1\">  \n    </Section>  \n  </Chapter>  \n</Book>  \n```"
  syntax:
    content: public TreeView ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TreeView.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona os atributos HTML e estilos que precisam de ser composto para especificado <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> controlo."
  remarks: "O método AddAttributesToRender é utilizado principalmente pelos programadores de controlo."
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para compor HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.TreeView.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  id: AutoGenerateDataBindings
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
  fullName: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo gera automaticamente os enlaces de nó de árvore."
  remarks: "Enlaces de nó de árvore definem a relação entre um item de dados e o nó é a associação à. Quando se vincula a uma origem de dados em que cada item de dados contém várias propriedades (por exemplo, um elemento XML com vários atributos), o <xref:System.Web.UI.WebControls.TreeView>controlo tem de saber qual propriedade do item de dados para o enlace para o qual <xref:System.Web.UI.WebControls.TreeNode>propriedade.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView> Se a propriedade AutoGenerateDataBindings estiver definida como `true`, o <xref:System.Web.UI.WebControls.TreeView>controlo gera automaticamente os enlaces de nó de árvore predefinido que definiram o <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade o <xref:System.Web.UI.WebControls.TreeNode>objetos que estão associados com o enlace para o valor que é devolvido pelo `ToString` método do item de dados.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Os enlaces de nó de árvore gerados automaticamente não foram adicionados para o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>coleção.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>       No caso de um elemento XML, o valor que é devolvido pelo `ToString` método é o nome de elemento, que mostra a estrutura subjacente do ficheiro XML, mas não é muito útil caso contrário. Para criar uma árvore mais útil, tem de definir os seus próprios enlaces de nó de árvore preenchendo o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>coleção.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>      > [!NOTE] > Se definir um <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>coleção, o <xref:System.Web.UI.WebControls.TreeView>controlo utiliza esses valores em vez de enlaces de nó de árvore geradas automaticamente.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "This section contains two code examples. The first code example demonstrates how to disable automatic tree node binding generation by setting the AutoGenerateDataBindings property to `false`. The second code example provides sample site map data for the first code example.  \n  \n The following code example demonstrates how to disable automatic tree node binding generation by setting the AutoGenerateDataBindings property to `false`. A <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection is then defined to establish the relationship between the data items in a <xref:System.Web.UI.WebControls.SiteMapDataSource> control and the nodes of the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample site map data, provided after this code example, to a file named Web.sitemap.  \n  \n [!code-vb[TreeViewAutoGenerateBindings#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_169_1.aspx)]\n [!code-cs[TreeViewAutoGenerateBindings#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_169_1.aspx)]  \n  \n The following code example provides sample site map data for the preceding example.  \n  \n```  \n<siteMap>  \n    <siteMapNode title=\"Home\" description=\"Home\" url=\"default.aspx\">  \n        <siteMapNode title=\"Products\" description=\"Products\" url=\"Products.aspx\">  \n            <siteMapNode title=\"Computers\" url=\"Computers.aspx\"/>  \n            <siteMapNode title=\"Accessories\" url=\"Accessories.aspx\"/>       \n        </siteMapNode>  \n    </siteMapNode>  \n</siteMap>  \n```"
  syntax:
    content: public bool AutoGenerateDataBindings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ter o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo gerar automaticamente os enlaces de nó de árvore; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes
  id: CheckedNodes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
  fullName: System.Web.UI.WebControls.TreeView.CheckedNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objetos que representam os nós no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo apresentar uma caixa de verificação selecionada."
  remarks: "Quando as caixas de verificação são apresentadas no <xref:System.Web.UI.WebControls.TreeView>controlo (definindo a <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>propriedade para um valor diferente de `TreeNodeType.None`), utilize a propriedade CheckedNodes para determinar quais os nós apresentam uma caixa de verificação selecionada.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> </xref:System.Web.UI.WebControls.TreeView> Esta coleção costuma é utilizada para iterar através de todos os nós que tenham uma caixa de verificação selecionada na árvore.       O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>evento é desencadeado quando as caixas de verificação do <xref:System.Web.UI.WebControls.TreeView>controlo alterar o estado entre pedidos POST para o servidor.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada, tais como a atualização de base de dados ou conteúdo apresentado, sempre que este evento ocorre.      > [!NOTE] > CheckedNodes a coleção é preenchida com uma profundidade primeiro a transversal da estrutura de árvore: cada nó principal é processada para os nós subordinados antes do próximo nó principal é preenchido."
  example:
  - "The following code example demonstrates how to use the CheckedNodes property to determine which nodes have a selected check box in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewShowCheckBoxes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1136_1.aspx)]\n [!code-cs[TreeViewShowCheckBoxes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1136_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> que contém os nós no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> que apresentar uma caixa de verificação selecionada."
  overload: System.Web.UI.WebControls.TreeView.CheckedNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeView.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeView.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fecha a cada nó na árvore."
  remarks: "O método CollapseAll fornece uma maneira conveniente para fechar a cada nó na árvore."
  example:
  - "The following code example demonstrates how to use the CollapseAll method to collapse all the nodes in the <xref:System.Web.UI.WebControls.TreeView> control at the same time.  \n  \n [!code-cs[TreeViewExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_54_1.aspx)]\n [!code-vb[TreeViewExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_54_1.aspx)]"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  id: CollapseImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a descrição da imagem que é apresentado para o indicador de nó expansíveis."
  remarks: "Utilize a propriedade CollapseImageToolTip para especificar uma descrição para a imagem expansível. O texto que especificar fornece tecnologia de apoio aos dispositivos com uma descrição da imagem que pode ser utilizada para tornar o controlo mais acessível.       O valor desta propriedade é armazenado no estado de visualização.       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the CollapseImageToolTip property to specify a ToolTip for an image that is displayed for the collapsible node indicator.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_978_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_978_1.aspx)]"
  syntax:
    content: public string CollapseImageToolTip { get; set; }
    return:
      type: System.String
      description: "A descrição para a imagem a apresentar para o indicador de nó expansíveis."
  overload: System.Web.UI.WebControls.TreeView.CollapseImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  id: CollapseImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o URL para uma imagem personalizada para o indicador de nó expansíveis."
  remarks: "Utilize a propriedade CollapseImageUrl para especificar uma imagem personalizada para o indicador de nó expansíveis. Esta imagem é apresentada junto a um nó expansível e é normalmente um sinal de subtração (-).       Quando o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade está definida como `true`, a <xref:System.Web.UI.WebControls.TreeView>controlo apresenta um sinal de adição (+) ou um sign(-) minus ou uma imagem de marcador de posição junto de um nó para indicar se o nó foi expansível, expansível ou não expansível, respetivamente.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Pode especificar imagens personalizadas pela definição primeiro o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>propriedade `TreeViewImageSet.Custom`e, em seguida, definir o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>e as propriedades de CollapseImageUrl para os URLs para as imagens personalizadas.</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Se não imagens forem especificadas, são utilizadas as imagens de predefinição. Para ocultar os indicadores de nó de expansão, defina o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade `false`.</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>      > [!NOTE] > Para se certificar de que os nós estão alinhados corretamente no <xref:System.Web.UI.WebControls.TreeView>controlar quando utilizar imagens personalizadas, certifique-se de que todas as imagens especificadas pelo <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e as propriedades de CollapseImageUrl ter as mesmas dimensões.</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView>       Quando utilizar uma imagem personalizada para o indicador de nó minimizável, também deve considerar a definição de <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>propriedade para especificar uma descrição para a imagem.</xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the CollapseImageUrl property to specify a custom image for the collapsible node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1150_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1150_1.aspx)]"
  syntax:
    content: public string CollapseImageUrl { get; set; }
    return:
      type: System.String
      description: "O URL para uma imagem personalizada a apresentar para nós expansíveis. A predefinição é uma cadeia vazia (&quot;&quot;), que apresenta a predefinição menos imagem de sinal (-)."
  overload: System.Web.UI.WebControls.TreeView.CollapseImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: TreeView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.TreeView.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria uma coleção para armazenar os controlos subordinados."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controlo não suporta a incorporar de controlos subordinados.</xref:System.Web.UI.WebControls.TreeView> Este método foi substituído para evitar a adição de controlos subordinados e devolve sempre um <xref:System.Web.UI.EmptyControlCollection?displayProperty=fullName>objeto.</xref:System.Web.UI.EmptyControlCollection?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Devolve sempre um <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CreateNode
  id: CreateNode
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CreateNode()
  nameWithType: TreeView.CreateNode()
  fullName: System.Web.UI.WebControls.TreeView.CreateNode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Devolve uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe. A invocar CreateNode é um método de programa auxiliar."
  remarks: "O método de invocar CreateNode é um método de programa auxiliar que devolve uma nova instância de <xref:System.Web.UI.WebControls.TreeNode>classe.</xref:System.Web.UI.WebControls.TreeNode>       O método de invocar CreateNode é utilizado principalmente pelos programadores de controlo. Programadores do controlo que pretendem expandir a <xref:System.Web.UI.WebControls.TreeView>classe ao alargar a <xref:System.Web.UI.WebControls.TreeNode>classe deve substituir este método para devolver um objeto que deriva de <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView> Um motivo comum para expandir o <xref:System.Web.UI.WebControls.TreeNode>classe está a substituir o <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A>e <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A>métodos.</xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> </xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> </xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.TreeNode CreateNode ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "Uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.CreateNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: DataBind()
  nameWithType: TreeView.DataBind()
  fullName: System.Web.UI.WebControls.TreeView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Chama o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>método de classe base.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>"
  remarks: "Controlos de enlace de dados devem substituir a <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>método em vez do método DataBind.</xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.DataBindings
  id: DataBindings
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: DataBindings
  nameWithType: TreeView.DataBindings
  fullName: System.Web.UI.WebControls.TreeView.DataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objetos que definem a relação entre um item de dados e o nó que é a associação à."
  remarks: "A coleção de enlaces de dados contém <xref:System.Web.UI.WebControls.TreeNodeBinding>objetos que definem a relação entre um item de dados e o nó que é a associação à.</xref:System.Web.UI.WebControls.TreeNodeBinding> Quando o enlace a uma origem de dados em que cada item de dados contém várias propriedades (por exemplo, um elemento XML com vários atributos), um nó apresenta o valor que é devolvido pelo `ToString` método do item de dados, por predefinição. No caso de um elemento XML, o nó mostra o nome de elemento, que mostra a estrutura subjacente da árvore, mas não é muito útil caso contrário. É possível vincular um nó para uma propriedade do item de dados específicas, especificando os enlaces de nó de árvore.       Quando definir a relação entre um item de dados e um nó, tem de especificar ambos os critérios de enlace e os valores à qual vincular as propriedades de <xref:System.Web.UI.WebControls.TreeNode>objeto.</xref:System.Web.UI.WebControls.TreeNode> Os critérios indicam quando um item de dados deve ser vinculado a um nó. Os critérios podem ser especificados com uma profundidade de nó, um membro de dados ou ambos. Uma profundidade de nó Especifica o nível de nó que obtém vinculado. Por exemplo, se especificar uma profundidade de nó de 0, todos os nós na estrutura de árvore nível 0 estão vinculados a utilizar o enlace de nó de árvore. Um membro de dados Especifica o tipo de item de dados na origem de dados subjacente, mas pode representar informações diferentes consoante a origem de dados. Por exemplo, o membro de dados para um elemento XML Especifica o nome do elemento.       Se vários <xref:System.Web.UI.WebControls.TreeNodeBinding>definidos objetos que estão em conflito entre si, o <xref:System.Web.UI.WebControls.TreeView>controlo aplica-se os enlaces de nó de árvore pela seguinte ordem de precedência de: 1.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNodeBinding>  O <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto que define uma profundidade e um membro de dados.</xref:System.Web.UI.WebControls.TreeNodeBinding>      2.  O <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto define apenas a profundidade.</xref:System.Web.UI.WebControls.TreeNodeBinding>      3.  O <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto que define o membro de dados.</xref:System.Web.UI.WebControls.TreeNodeBinding>      4.  O <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto que define o membro de dados e não a profundidade.</xref:System.Web.UI.WebControls.TreeNodeBinding>       Se vários enlaces especificados que cumprem os critérios de precedência mesmo, o enlace primeiro na coleção é aplicado.       Assim que os critérios de enlace é estabelecida, pode então vinculá uma propriedade de um <xref:System.Web.UI.WebControls.TreeNode>objeto que pode ser vinculado a um valor.</xref:System.Web.UI.WebControls.TreeNode> Pode vincular a um atributo ou o campo de um item de dados ou apresentam um valor estático. Para mais informações sobre as propriedades de um <xref:System.Web.UI.WebControls.TreeNode>objeto para um valor, consulte <xref:System.Web.UI.WebControls.TreeNodeBinding>.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> de enlace       Embora a coleção de enlaces de dados pode ser preenchida através de programação, este é normalmente definida de forma declarativa. Para especificar os enlaces de nó de árvore, primeiro aninhar abrir e fechar `<DataBindings>` etiquetas entre a abertura e fecho de etiquetas do <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Em seguida, coloque `<asp:TreeNodeBinding>` elementos entre a abertura e fecho `<DataBindings>` etiquetas para cada nó de árvore do enlace pretendem especificar.       Quando os enlaces de dados são criadas através da definição o <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>propriedade o <xref:System.Web.UI.WebControls.TreeView>controlar para `true`, têm enlaces que são criados o <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>propriedade definida como `true`.</xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> Enlaces de dados que são criados de forma declarativa tem o <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>propriedade definida como `false`.</xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> Utilizando a sintaxe declarativa permite-lhe controlar o comportamento de enlaces de dados individuais."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the DataBindings collection to define the relationship between a data item and the node that it is binding to. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the DataBindings collection to define the relationship between a data item and the node that it is binding to. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml. This example specifies only the <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> property of the binding. A slight performance gain could be added by also specifying the <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> property.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_387_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_387_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeBindingCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> que representa a relação entre um item de dados e o nó que é a associação à."
  overload: System.Web.UI.WebControls.TreeView.DataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
  fullName: System.Web.UI.WebControls.TreeView.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo composições do lado do cliente de script para processar de expansão e collapsing eventos."
  remarks: "Utilize a propriedade EnableClientScript para especificar se o <xref:System.Web.UI.WebControls.TreeView>controlo compõe o script do lado do cliente em browsers compatíveis para processar de expansão e collapsing eventos.</xref:System.Web.UI.WebControls.TreeView> Quando esta propriedade está definida como `true`, browsers compatíveis, execute o código para expandir e fechar nós no cliente. Os dados do nó de árvore devem ser conhecidos seguinte com antecedência para o script do lado do cliente trabalhar. Utilizar script de cliente impede que um pedido post para o servidor sempre que um nó é expandido ou fechado.       Quando os dados do nó de árvore não são conhecidos seguinte com antecedência, nós podem ser populados do cliente, se o `PopulateNodesFromClient` propriedade também está definida como `true`. Neste cenário, terá também de fornecer um método de processamento de eventos para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>eventos para preencher os nós.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>      > [!NOTE] > Se a propriedade EnableClientScript estiver definida como `false`, a <xref:System.Web.UI.WebControls.TreeView>mensagens do controlo para o servidor de cada vez que um nó é expandido ou fechado.</xref:System.Web.UI.WebControls.TreeView>       O valor desta propriedade é armazenado no estado de visualização.       Esta propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [temas ASP.NET e das máscaras de](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the EnableClientScript property to render client-side script that is used to expand and collapse nodes on compatible browsers. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the EnableClientScript property to render client-side script that is used to expand and collapse nodes on compatible browsers. Notice that a post to the server is required to expand and collapse a node when the EnableClientScript property is set to `false`. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewEnableClientScript#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1194_1.aspx)]\n [!code-vb[TreeViewEnableClientScript#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1194_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para compor o script do lado do cliente em browsers compatíveis; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeView.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeView.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Abre-se cada nó na árvore."
  remarks: "O método ExpandAll fornece uma maneira conveniente para abrir a cada nó na árvore."
  example:
  - "The following code example demonstrates how to use the ExpandAll method to expand all the nodes in the <xref:System.Web.UI.WebControls.TreeView> control at the same time.  \n  \n [!code-cs[TreeViewExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_100_1.aspx)]\n [!code-vb[TreeViewExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth
  id: ExpandDepth
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
  fullName: System.Web.UI.WebControls.TreeView.ExpandDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o número de níveis são expandidos quando um <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo é apresentado pela primeira vez."
  remarks: "Utilize a propriedade ExpandDepth para controlar a composição do <xref:System.Web.UI.WebControls.TreeView>controlar na primeira vez que é apresentado.</xref:System.Web.UI.WebControls.TreeView> Em novas colocações subsequentes, os nós de mantém o respetivo estado expandido atual."
  syntax:
    content: public int ExpandDepth { get; set; }
    return:
      type: System.Int32
      description: "A profundidade a apresentar quando o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> é apresentada inicialmente. A predefinição é de -1, que apresenta todos os nós."
  overload: System.Web.UI.WebControls.TreeView.ExpandDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  id: ExpandImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a descrição da imagem que é apresentado para o indicador de nó expansíveis."
  remarks: "Utilize a propriedade ExpandImageToolTip para especificar uma descrição para a imagem. O texto que especificar fornece tecnologia de apoio aos dispositivos com uma descrição da imagem que pode ser utilizada para tornar o controlo mais acessível.       O valor desta propriedade é armazenado no estado de visualização.       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ExpandImageToolTip property to specify a ToolTip for an image that is displayed for the expandable node indicator.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_839_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_839_1.aspx)]"
  syntax:
    content: public string ExpandImageToolTip { get; set; }
    return:
      type: System.String
      description: "A descrição para a imagem a apresentar para o indicador de nó expansíveis."
  overload: System.Web.UI.WebControls.TreeView.ExpandImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  id: ExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o URL para uma imagem personalizada para o indicador de nó expansíveis."
  remarks: "Utilize a propriedade ExpandImageUrl para especificar uma imagem personalizada para o indicador de nó expansíveis. Esta imagem é apresentada junto a um nó expansível e é normalmente um sinal de adição (+).       Quando o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade está definida como `true`, a <xref:System.Web.UI.WebControls.TreeView>controlo apresenta um sinal de adição (+) ou o sinal de subtração (-) ou uma imagem de marcador de posição junto de um nó para indicar se o nó foi expansível, expansível ou não expansível, respetivamente.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Pode especificar imagens personalizadas pela definição primeiro o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>propriedade `TreeViewImageSet.Custom`e, em seguida, definir o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, ExpandImageUrl, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>Propriedades para os URLs para as imagens personalizadas.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Se não imagens forem especificadas, são utilizadas as imagens de predefinição. Para ocultar os indicadores de nó de expansão, defina o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade `false`.</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>      > [!NOTE] > Para se certificar de que os nós estão alinhados corretamente no <xref:System.Web.UI.WebControls.TreeView>controlar quando utilizar imagens personalizadas, certifique-se de que todas as imagens especificadas pelo <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, ExpandImageUrl, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>propriedades têm as mesmas dimensões.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView>       Para apresentar uma imagem personalizada corretamente, poderá ter de definir <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>para `false`.</xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>       Quando utilizar uma imagem personalizada para o indicador de nó expansível, também deve considerar a definição de <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>propriedade para especificar uma descrição para a imagem.</xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the ExpandImageUrl property to specify a custom image for the expandable node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_567_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_567_1.aspx)]"
  syntax:
    content: public string ExpandImageUrl { get; set; }
    return:
      type: System.String
      description: "O URL para uma imagem personalizada a apresentar para nós expansíveis. A predefinição é uma cadeia vazia (&quot;&quot;), que apresenta a predefinição imagem de sinal de adição (+)."
  overload: System.Web.UI.WebControls.TreeView.ExpandImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.FindNode(System.String)
  id: FindNode(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: FindNode(String)
  nameWithType: TreeView.FindNode(String)
  fullName: System.Web.UI.WebControls.TreeView.FindNode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo no caminho do valor especificado."
  remarks: "Utilizar o método de FindNode para obter um nó de <xref:System.Web.UI.WebControls.TreeView>controlo, o caminho do valor especificado.</xref:System.Web.UI.WebControls.TreeView> O caminho de valor contém uma lista separada por delimitador de valores de nó que formam um caminho de nó raiz para o nó atual. Cada nó armazena o caminho de valor no <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> O <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>propriedade especifica o caráter delimitador que é utilizado para separar os valores de nó.</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>"
  example:
  - "The following code example demonstrates how to use the FindNode method to retrieve a node from the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[TreeViewFindNode#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_72_1.aspx)]\n [!code-vb[TreeViewFindNode#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_72_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);
    parameters:
    - id: valuePath
      type: System.String
      description: "O caminho de valor de um nó."
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> no caminho do valor especificado."
  overload: System.Web.UI.WebControls.TreeView.FindNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: TreeView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Devolve o resultado de um evento de chamada de retorno que tenha como destino um controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controlar implementa o <xref:System.Web.UI.ICallbackEventHandler>interface e utiliza o <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>para obter dados e o método GetCallbackResult para devolver os dados obtidos ao controlo.</xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "Os resultados da chamada de retorno."
  overload: System.Web.UI.WebControls.TreeView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  id: HoverNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> objeto permite-lhe definir o aspeto de um nó quando o ponteiro do rato está posicionado sobre ele."
  remarks: "Utilize a propriedade HoverNodeStyle para controlar o aspeto de um nó quando o ponteiro do rato está posicionado sobre ele. Esta propriedade é só de leitura; No entanto, pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto que devolve.</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades podem ser definidas de forma declarativa na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto (por exemplo, `HoverNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades também podem ser definidas através de programação no formato `Property.Subproperty` (por exemplo, `HoverNodeStyle.ForeColor`). Esta funcionalidade só é suportada em clientes com capacidade de script.      > [!NOTE] > Para utilizar a propriedade HoverNodeStyle, tem de incluir um `<head>` elemento com um `runat=&quot;server&quot;` atributo.       Definições comuns incluem, normalmente, uma cor de fundo personalizado, cor de primeiro plano, as propriedades de tipo de letra e espaçamento do nó. Propriedades de estilo são aplicadas pela ordem seguinte: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, consoante o tipo de nó.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção está definida, é aplicada neste momento, substituir as outras propriedades de estilo de nó.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  HoverNodeStyle.      > [!NOTE] > As definições de estilo para a propriedade HoverNodeStyle substituirão as definições de estilo de nó correspondente que se encontrem no <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>propriedade.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>       A propriedade HoverNodeStyle não é composta para um nó com a respetiva <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>propriedade definida como `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       Ao contrário do <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>e <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>Propriedades, que são <xref:System.Web.UI.WebControls.TreeNodeStyle>objetos, a propriedade HoverNodeStyle é um <xref:System.Web.UI.WebControls.Style>objeto.</xref:System.Web.UI.WebControls.Style> </xref:System.Web.UI.WebControls.TreeNodeStyle> </xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the HoverNodeStyle property to control the appearance of a node when the mouse pointer is positioned over it. For this example to work, you must include a `<head>` element with a `runat=\"server\"` attribute.  \n  \n [!code-vb[TreeViewHoverNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_293_1.aspx)]\n [!code-cs[TreeViewHoverNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_293_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style HoverNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> que representa o estilo de um nó quando o ponteiro do rato está posicionado sobre ele."
  overload: System.Web.UI.WebControls.TreeView.HoverNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ImageSet
  id: ImageSet
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ImageSet
  nameWithType: TreeView.ImageSet
  fullName: System.Web.UI.WebControls.TreeView.ImageSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o grupo de imagens a utilizar para o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade ImageSet para especificar o grupo de imagens a utilizar para o <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Pode selecionar um conjunto predefinido de imagens para dar o controlo de um aspeto padrão ou definir o seu próprio conjunto personalizado.      > [!NOTE] > ImageSet a propriedade não afeta as definições de estilo para um nó. Definir a propriedade de estilo adequada, tal como o <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>propriedade, se pretender adicionar cores personalizadas e espaçamento.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>       A tabela seguinte lista os valores válidos para a propriedade ImageSet o.      | Conjunto de imagem | Descrição |   |---------------|-----------------|   | `TreeViewImageSet.Arrows`| Um conjunto de imagem predefinida que utiliza as imagens de seta. |   | `TreeViewImageSet.BulletedList`| Um conjunto de imagem predefinida que utiliza as imagens de marca em forma de diamante. |   | `TreeViewImageSet.BulletedList2`| Um conjunto de imagem predefinida que utiliza as imagens de marca em forma quadrada. |   | `TreeViewImageSet.BulletedList3`| Imagens de marca em forma de um conjunto predefinido de diamante sectioned,. |   | `TreeViewImageSet.BulletedList4`| Um conjunto predefinido de alternativo sectioned, imagens de marca em tamanhos que variam consoante o nível em forma diamante. |   | `TreeViewImageSet.Contacts`| Um conjunto de imagem predefinida que utiliza as imagens de MSN Messenger. |   | `TreeViewImageSet.Custom`| Um conjunto de imagem definido pelo utilizador. |   | `TreeViewImageSet.Events`| Um conjunto de imagem predefinida que utiliza as imagens escovado de registo de eventos. |   | `TreeViewImageSet.Faq`| Um conjunto de imagem predefinida que utiliza as imagens escovado de FAQ. |   | `TreeViewImageSet.Inbox`| Um conjunto de imagem predefinida que utiliza as imagens electrónico-correio-escovado. |   | `TreeViewImageSet.News`| Um conjunto de imagem predefinida que utiliza as imagens escovado em pares. |   | `TreeViewImageSet.Simple`| Um conjunto de imagem predefinida que utiliza destaca de forma simples. |   | `TreeViewImageSet.Simple2`| Um conjunto de imagem predefinida que utiliza as formas de manchas simples. |   | `TreeViewImageSet.Msdn`| Um conjunto de imagem predefinida que utiliza a imagens MSDN. |   | `TreeViewImageSet.WindowsHelp`| Um conjunto de imagem predefinida que utiliza as imagens de ajuda do Microsoft Windows. |   | `TreeViewImageSet.XPFileExplorer`| Um conjunto de imagem predefinida que utiliza as imagens do Explorador do Windows disponíveis no Microsoft Windows XP. |       Ao definir um conjunto personalizado de imagens, deve especificar uma imagem para cada uma das propriedades na tabela seguinte. Caso contrário, a imagem predefinida para essa propriedade é utilizada.      | Propriedade | Descrição |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>| O URL de uma imagem personalizada para o indicador de nó expansíveis. |   | <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>| O URL de uma imagem personalizada para o indicador de nó expansíveis. |   | <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>| O URL para uma pasta que contém imagens personalizadas para as linhas que ligam nós. |   | <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>| O URL de uma imagem personalizada para o indicador de nó não expansível. |       O valor desta propriedade é armazenado no estado de visualização.</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>"
  example:
  - "The following code example demonstrates how to use the ImageSet property to display the Windows Explorer set of images in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewImageSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_587_1.aspx)]\n [!code-vb[TreeViewImageSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_587_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeViewImageSet
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.TreeViewImageSet&quot;> </xref> valores. A predefinição é <xref uid=&quot;langword_csharp_TreeViewImageSet.Custom&quot; name=&quot;TreeViewImageSet.Custom&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ImageSet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de imagem especificado não é um do <xref href=&quot;System.Web.UI.WebControls.TreeViewImageSet&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  id: LeafNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> objeto permite-lhe definir o aspecto de nós de folha."
  remarks: "Utilize a propriedade LeafNodeStyle para controlar o aspecto de nós de folha de <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Esta propriedade é só de leitura; No entanto, pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto devolve.</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades podem ser definidas de forma declarativa na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto (por exemplo, `LeafNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades também podem ser definidas através de programação no formato `Property.Subproperty` (por exemplo, `LeafNodeStyle.ForeColor`). Definições comuns incluem, normalmente, uma cor de fundo personalizado, cor de primeiro plano, as propriedades de tipo de letra e espaçamento do nó. Propriedades de estilo são aplicadas pela seguinte ordem de precedência de: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou LeafNodeStyle, dependendo do tipo de nó.</xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção está definida, é aplicada neste momento, substituir as outras propriedades de estilo de nó.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Se precisar de gerar a tabela de menus de navegação de conteúdo – estilo onde nós a um determinado nível devem ter o mesmo aspeto, independentemente se tiverem os nós subordinados, poderá considerar a utilização de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>propriedade em vez de a definição das propriedades de estilo individuais.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the LeafNodeStyle property to control the appearance of the leaf nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewLeafNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_398_1.aspx)]\n [!code-cs[TreeViewLeafNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_398_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> que representa o estilo de nós de folha de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.LeafNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LevelStyles
  id: LevelStyles
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
  fullName: System.Web.UI.WebControls.TreeView.LevelStyles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> objetos que representam os estilos de nó de níveis da árvore individuais."
  remarks: "Utilizar a coleção de LevelStyles como alternativa para as propriedades de estilo individuais (tais como o <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>propriedade) para controlar o estilo de nós a individuais níveis da árvore.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> O estilo primeiro na coleção corresponde ao estilo de nós no primeiro nível da árvore. O estilo do segundo na coleção corresponde ao estilo de nós no segundo nível de árvore e assim sucessivamente. Esta propriedade é frequentemente utilizada para gerar a tabela de menus de navegação de conteúdo – estilo onde nós a um determinado nível devem ter o mesmo aspeto, independentemente se tiverem nós subordinados.       Propriedades de estilo são aplicadas pela ordem seguinte: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, consoante o tipo de nó.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Se a coleção de LevelStyles estiver definida, será aplicado neste momento, substituir as outras propriedades de estilo de nó.      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the LevelStyles property to create a navigation menu. The control is always fully expanded, with the expansion node indicators and images hidden. Also, the <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> property is used to control the spacing of the node levels.  \n  \n [!code-vb[TreeViewLevelStyles#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_985_1.aspx)]\n [!code-cs[TreeViewLevelStyles#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_985_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyleCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.StyleCollection&quot;> </xref> que representa os estilos de nó de níveis da árvore individuais."
  overload: System.Web.UI.WebControls.TreeView.LevelStyles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder
  id: LineImagesFolder
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
  fullName: System.Web.UI.WebControls.TreeView.LineImagesFolder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o caminho para uma pasta que contém as imagens de linha que são utilizadas para ligar os nós subordinados para nós principais."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controlo pode apresentar linhas que ligam os nós subordinados para nós principais quando o <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>propriedade está definida como `true`.</xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> </xref:System.Web.UI.WebControls.TreeView> Quando são apresentadas linhas, utilize a propriedade LineImagesFolder para especificar uma pasta acessível através da Web que contém o conjunto de pré-compostas imagens a utilizar para as linhas. A tabela seguinte descreve as imagens que são utilizadas pelo <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView>      | Imagem | Descrição |   |-----------|-----------------|   | Dash.gif| Uma imagem de linha apresentada junto ao nó raiz quando existe apenas um nó de raiz na estrutura de árvore e o nó de raiz é uma folha. |   | Dashminus.gif| Uma imagem de sinal de subtração (-) apresentada junto ao nó raiz quando existe apenas um nó de raiz na estrutura de árvore para indicar que o nó de raiz é expandido. |   | Dashplus.gif| Uma imagem de sinal de adição (+) apresentada junto ao nó raiz quando existe apenas um nó de raiz na estrutura de árvore para indicar que o nó de raiz está fechado. |   | I.gif| Uma imagem de linha apresentada para se ligar nós adjacentes. |   | L.gif| Uma imagem de linha apresentados junto para o último nó numa sucursal quando o nó for uma folha. |   | Lminus.gif| Uma imagem de linha apresentados junto para o último nó numa sucursal para indicar que o nó é expandido. |   | Lplus.gif| Uma imagem de linha apresentados junto para o último nó numa sucursal para indicar que o nó está fechado. |   | Minus.gif| Uma imagem de sinal de subtração (-) apresentada junto ao primeiro nó de raiz numa estrutura de árvore que contém vários nós raiz para indicar que o nó é expandida. Esta imagem não contém uma linha adicional e é apresentada apenas depois do nó de raiz foi fechado uma vez. Quando a página é carregada pela primeira vez, é apresentada a imagem de Rminus.gif. |   | Noexpand.gif| Uma imagem de spacer em branco apresentada junto a um nó de folha. Esta imagem permite que o texto à linha de cópia de segurança verticalmente. |   | Plus.gif| Uma imagem de sinal de adição (+) apresentada junto ao primeiro nó de raiz numa estrutura de árvore que contém vários nós raiz para indicar que o nó está fechada. Esta imagem não contém uma linha adicional e é apresentada apenas depois do nó de raiz foi expandido uma vez. Quando a página é carregada pela primeira vez, é apresentada a imagem de Rplus.gif. |   | R.gif| Uma imagem de linha apresentada junto ao primeiro nó de raiz numa estrutura de árvore que contém vários nós raiz para indicar que o nó é um nó de folha. |   | Rminus.gif| Uma imagem de sinal de subtração (-) apresentada junto ao primeiro nó de raiz numa estrutura de árvore que contém vários nós raiz para indicar que o nó é expandida. Esta imagem contém uma linha adicional e só é apresentada quando a página é carregada pela primeira vez. Depois do nó de raiz foi fechado uma vez, é apresentada o Minus.gif imagem. |   | Rplus.gif| Uma imagem de sinal de adição (+) apresentada junto ao primeiro nó de raiz numa estrutura de árvore que contém vários nós raiz para indicar que o nó está fechada. Esta imagem contém uma linha adicional e só é apresentada quando a página é carregada pela primeira vez. Depois do nó de raiz foi expandido uma vez, é apresentada a imagem de Plus.gif. |   | T.gif| Uma imagem de linha apresentada junto a um nó no meio da estrutura de árvore (numa intersecção t) para indicar que o nó é uma folha. |   | Tminus.gif| Uma imagem de sinal de subtração (-) apresentada junto a um nó no meio da estrutura de árvore (numa intersecção t) para indicar que o nó é expandido. |   | Tplus.gif| Uma imagem de sinal de adição (+) apresentada junto a um nó no meio da estrutura de árvore (numa intersecção t) para indicar que o nó está fechado. |      > [!NOTE] > Se a propriedade LineImagesFolder não estiver definida, o <xref:System.Web.UI.WebControls.TreeView>controlo irá utilizar as imagens predefinidas incorporadas, (20 x 20 pixéis).</xref:System.Web.UI.WebControls.TreeView>       Alguns designers visual, como o Microsoft Visual Studio, fornecem ferramentas para gerar as imagens de linha.       O tempo de execução não inverte imagens personalizadas para apresenta para a esquerda. Para suportar as páginas Web de esquerda para a direita e para a esquerda, tem de criar conjuntos de imagem para ambas as direções.       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the LineImagesFolder property to specify the folder that contains the line images to display in the <xref:System.Web.UI.WebControls.TreeView> control. To work with this example, use the Line Designer tool beforehand to create a set of line images. Place them in a folder named LineImages within the directory for the sample application.  \n  \n [!code-cs[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_52_1.aspx)]\n [!code-vb[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_52_1.aspx)]"
  syntax:
    content: public string LineImagesFolder { get; set; }
    return:
      type: System.String
      description: "O caminho para uma pasta que contém as imagens de linha utilizadas para ligar nós. A predefinição é uma cadeia vazia (&quot;&quot;), que indica que a propriedade LineImagesFolder não está definida."
  overload: System.Web.UI.WebControls.TreeView.LineImagesFolder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Processos de voltar a colocar dados para o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "A estrutura de página do ASP.NET controla todos os controlos de servidor que devolvem `true` da chamada de método LoadPostData e, em seguida, invoca o <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>método nesses controlos.</xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>"
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "O identificador da chave para o controlo."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "A coleção de todos os valores de nome de entrada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> alterações de estado do controlo como resultado o evento de nova colocação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o estado de visualização guardado anteriormente do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um objeto que contém os valores de estado de vista guardado para o controlo."
  overload: System.Web.UI.WebControls.TreeView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  id: MaxDataBindDepth
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
  fullName: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o número máximo de níveis de árvore à qual vincular o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Quando se vincula a <xref:System.Web.UI.WebControls.TreeView>controlar a uma origem de dados, utilize a propriedade MaxDataBindDepth para limitar o número de níveis da árvore para vincular ao controlo.</xref:System.Web.UI.WebControls.TreeView> Por exemplo, definir esta propriedade `2` vincula apenas o nó de raiz e quaisquer nós que estão imediatamente sob o nó de raiz para o <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Todos os nós restantes na origem de dados são ignorados.      > [!IMPORTANT] > Um utilizador mal intencionado pode criar um pedido de chamada de retorno e obter dados para os nós do <xref:System.Web.UI.WebControls.TreeView>controlo que o Programador de página não apresenta.</xref:System.Web.UI.WebControls.TreeView> Por conseguinte, a segurança dos dados tem de ser implementada pela origem de dados. Não utilize a propriedade MaxDataBindDepth para ocultar os dados.       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the MaxDataBindDepth property to bind only the first two node levels (depths 0 and 1) to the <xref:System.Web.UI.WebControls.TreeView> control. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the MaxDataBindDepth property to bind only the first two node levels (depths 0 and 1) to the <xref:System.Web.UI.WebControls.TreeView> control. All node levels in the data source are ignored. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewMaxDataBindDepth#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1168_1.aspx)]\n [!code-vb[TreeViewMaxDataBindDepth#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1168_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public int MaxDataBindDepth { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de níveis de árvore à qual vincular o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo. A predefinição é de -1, está vinculado a todos os níveis de árvore na origem de dados para o controlo."
  overload: System.Web.UI.WebControls.TreeView.MaxDataBindDepth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado é inferior a <xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeIndent
  id: NodeIndent
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
  fullName: System.Web.UI.WebControls.TreeView.NodeIndent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a quantidade de avanço (em pixéis) para o menor de nós do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade NodeIndent para controlar a quantidade de espaçamento entre o limite esquerdo de um nó subordinado e o limite esquerdo do respetivo nó principal.      > [!NOTE] > NodeIndent a propriedade afeta todos os nós subordinados no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Não é possível controlar a quantidade de avanço de cada nó individualmente.       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the NodeIndent property to control the indentation of child nodes.  \n  \n [!code-cs[TreeViewNodeIndent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1001_1.aspx)]\n [!code-vb[TreeViewNodeIndent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1001_1.aspx)]"
  syntax:
    content: public int NodeIndent { get; set; }
    return:
      type: System.Int32
      description: "A quantidade de espaço (em pixéis) entre o limite esquerdo de um nó subordinado e o limite esquerdo do respetivo nó principal. A predefinição é 20."
  overload: System.Web.UI.WebControls.TreeView.NodeIndent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Nodes
  id: Nodes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Nodes
  nameWithType: TreeView.Nodes
  fullName: System.Web.UI.WebControls.TreeView.Nodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objetos que representa os nós raiz no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade de nós para obter um <xref:System.Web.UI.WebControls.TreeNodeCollection>objeto que contém todos os nós raiz da árvore.</xref:System.Web.UI.WebControls.TreeNodeCollection> Esta coleção é normalmente utilizada para iterar rapidamente através de todos os nós raiz ou para aceder a um nó de raiz específicos na árvore da.      > [!NOTE] > Uma estrutura de árvore típica tem apenas um nó de raiz; no entanto, pode adicionar vários nós raiz o <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView>       A propriedade de nós também pode ser utilizada para gerir os nós raiz da árvore através de programação. Pode adicionar, inserir, remover e obter <xref:System.Web.UI.WebControls.TreeNode>objetos da coleção.</xref:System.Web.UI.WebControls.TreeNode> Todas as atualizações para a coleção são refletidas automaticamente no <xref:System.Web.UI.WebControls.TreeView>controlo após a próxima percurso de ida e volta ao servidor.</xref:System.Web.UI.WebControls.TreeView>       Para aceder os nós subordinados de um nó de raiz, utilize o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>propriedade do nó.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Utilize o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>propriedade de cada nó do nível principal subsequente para navegar para baixo os níveis de nó.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>"
  example:
  - "The following code example demonstrates how to use the Nodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1353_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1353_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> que contém os nós raiz no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.Nodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeStyle
  id: NodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
  fullName: System.Web.UI.WebControls.TreeView.NodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> objeto permite-lhe definir o aspecto de predefinição de nós a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade de NodeStyle para controlar o aspecto da predefinição de um nó de <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Esta propriedade é só de leitura; No entanto, pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto devolve.</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades podem ser definidas de forma declarativa na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto (por exemplo, `NodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades também podem ser definidas através de programação no formato `Property.Subproperty` (por exemplo, `NodeStyle.ForeColor`). Definições comuns incluem, normalmente, uma cor de fundo personalizado, cor de primeiro plano, as propriedades de tipo de letra e espaçamento do nó. Propriedades de estilo são aplicadas pela seguinte ordem de precedência de: 1.  NodeStyle.      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, consoante o tipo de nó.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção está definida, é aplicada neste momento, substituir as outras propriedades de estilo de nó.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>      > [!NOTE] > As definições de estilo de nó correspondente no <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>Propriedades substituem as definições de estilo da propriedade NodeStyle.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>       Se precisar de gerar a tabela de menus de navegação de estilo de conteúdo em que nós de um determinado nível devem ter o mesmo aspeto, independentemente se tiverem os nós subordinados, poderá considerar a utilização de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>propriedade em vez de a definição das propriedades de estilo individuais.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the NodeStyle property to control the appearance of nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_190_1.aspx)]\n [!code-cs[TreeViewNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_190_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> que representa o estilo predefinido de um nó."
  overload: System.Web.UI.WebControls.TreeView.NodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeWrap
  id: NodeWrap
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
  fullName: System.Web.UI.WebControls.TreeView.NodeWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se texto encapsula num wrapper num nó quando o nó fica sem espaço."
  remarks: "Utilize a propriedade NodeWrap para especificar se o texto que é apresentado em cada nó encapsula num wrapper quando fica sem espaço.       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the NodeWrap property to wrap the text of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewNodeWrap#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_767_1.aspx)]\n [!code-vb[TreeViewNodeWrap#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_767_1.aspx)]"
  syntax:
    content: public bool NodeWrap { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Moldar texto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.NodeWrap*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  id: NoExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o URL para uma imagem personalizada para o indicador de nó não é possível expandir."
  remarks: "Utilize a propriedade NoExpandImageUrl para especificar uma imagem personalizada para o indicador de nó não é possível expandir. A imagem de indicador de nó não expansível (ou spacer) é apresentado junto de nós de folha (em vez de indicadores de nó expansível e expansível) para alinhar os nós de folha connosco raiz ou principal.       Quando o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade está definida como `true`, a <xref:System.Web.UI.WebControls.TreeView>controlo apresenta um sinal de adição (+) ou o sinal de subtração (-) ou uma imagem de marcador de posição junto de um nó para indicar se o nó foi expansível, expansível ou não expansível, respetivamente.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Pode especificar imagens personalizadas pela definição primeiro o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>propriedade `TreeViewImageSet.Custom`e, em seguida, definir o NoExpandImageUrl <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>Propriedades para os URLs das imagens personalizadas.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Se não imagens forem especificadas, são utilizadas as imagens de predefinição. Para ocultar os indicadores de nó de expansão, defina o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade `false`.</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>      > [!NOTE] > Para se certificar de que os nós estão alinhados corretamente no <xref:System.Web.UI.WebControls.TreeView>controlar quando utilizar imagens personalizadas, certifique-se de que todas as imagens especificadas pelo NoExpandImageUrl, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>propriedades têm as mesmas dimensões.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the NoExpandImageUrl property to specify a custom image for the non-expandable node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_258_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_258_1.aspx)]"
  syntax:
    content: public string NoExpandImageUrl { get; set; }
    return:
      type: System.String
      description: "O URL para uma imagem personalizada a apresentar para nós não é possível expandir. A predefinição é uma cadeia vazia (&quot;&quot;), que apresenta a imagem predefinida em branco."
  overload: System.Web.UI.WebControls.TreeView.NoExpandImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: TreeView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> eventos."
  remarks: "O método &quot; OnInit é chamado pelo <xref:System.Web.UI.WebControls.TreeView>controlo para aumentar o <xref:System.Web.UI.Control.Init>eventos.</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.TreeView> É geralmente utilizado pelos programadores do controlo quando expandir a <xref:System.Web.UI.WebControls.TreeView>classe.</xref:System.Web.UI.WebControls.TreeView>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método &quot; OnInit também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.TreeView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: TreeView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> eventos."
  remarks: "O método OnPreRender seja substituído para se registar para a nova colocação. Se o script de cliente estiver ativada, também compõe o script necessária e campos ocultos.       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnPreRender também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um &lt;xref:System.EventArgs?displayProperty=fullName&gt; que contém dados de eventos."
  overload: System.Web.UI.WebControls.TreeView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  id: OnSelectedNodeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnSelectedNodeChanged(EventArgs)
  nameWithType: TreeView.OnSelectedNodeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.TreeView.SelectedNodeChanged&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>o evento é gerado quando um nó é selecionado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada, tais como atualizar o conteúdo apresentado, sempre que este evento ocorre.       Opcionalmente, pode definir o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>propriedade de um nó para especificar que o evento é gerado quando é selecionado esse nó.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>não é composto para um nó com a respetiva <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>propriedade definida como `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelectedNodeChanged também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSelectedNodeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um &lt;xref:System.EventArgs?displayProperty=fullName&gt; que contém dados de eventos."
  overload: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeCheckChanged(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>evento é desencadeado quando uma caixa de verificação a <xref:System.Web.UI.WebControls.TreeView>controlo muda de estado entre pedidos POST para o servidor.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada, tais como a atualização de base de dados ou conteúdo apresentado, sempre que este evento ocorre.       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnTreeNodeCheckChanged também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> que contém dados de eventos."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeCollapsed(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeCollapsed&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>evento é gerado quando um nó é fechado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada sempre que este evento ocorre.       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnTreeNodeCollapsed também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> que contém dados de eventos."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeDataBound(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeDataBound&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>o evento é gerado quando um item de dados está vinculado a um nó de <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada sempre que este evento ocorre.       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnTreeNodeDataBound também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> que contém dados de eventos."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeExpanded(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeExpanded&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>evento é gerado quando um nó é expandido no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada sempre que este evento ocorre.      > [!NOTE] > Se o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>para um nó for definida como <xref:System.Web.UI.WebControls.TreeNodeSelectAction>ou <xref:System.Web.UI.WebControls.TreeNodeSelectAction>, a <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>evento também é gerado quando esse nó é clicado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnTreeNodeExpanded também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> que contém dados de eventos."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodePopulate(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodePopulate&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Por vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende da intervenção do utilizador. Por este motivo, o <xref:System.Web.UI.WebControls.TreeView>controlo suporta a população de nó dinâmico.</xref:System.Web.UI.WebControls.TreeView> Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>para um nó for definida como `true`, esse nó obtém preenchido em tempo de execução quando o nó é expandido.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Para preencher um nó dinamicamente, defina primeiro a <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>propriedade para o nó para `true`.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Em seguida, defina um método de processamento de eventos para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>evento que preenche programaticamente o nó.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Um método de processamento de eventos normal obtém dados do nó de uma origem de dados, coloca os dados numa estrutura nó e, em seguida, adiciona a estrutura de nó para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção do nó que está a ser preenchida.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Uma estrutura do nó é criada adicionando <xref:System.Web.UI.WebControls.TreeNode>objetos para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção de um nó principal.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>para um nó for definida como `true`, o nó tem de ser preenchido dinamicamente.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Forma declarativa não é possível aninhar o outro nó abaixo do mesmo; caso contrário, irá ocorrer um erro na página.       Browsers suportados (browsers do Microsoft Internet Explorer compatível com a 4.0 e posterior) também podem tirar partido da população de nó do lado do cliente. Quando ativada, isto permite que o <xref:System.Web.UI.WebControls.TreeView>controlo para preencher dinamicamente um nó no cliente quando esse nó é expandido, o que impede a necessidade de post para o servidor.</xref:System.Web.UI.WebControls.TreeView> Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnTreeNodePopulate também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> que contém dados de eventos."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  id: ParentNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> objeto permite-lhe definir o aspeto de nós principais no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade ParentNodeStyle para controlar o aspeto de nós principais no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Esta propriedade é só de leitura; No entanto, pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto devolve.</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades podem ser definidas de forma declarativa na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto (por exemplo, `ParentNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades também podem ser definidas através de programação no formato `Property.Subproperty` (por exemplo, `ParentNodeStyle.ForeColor`). Definições comuns incluem, normalmente, uma cor de fundo personalizado, cor de primeiro plano, as propriedades de tipo de letra e espaçamento do nó. Propriedades de estilo são aplicadas pela seguinte ordem de precedência de: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, ParentNodeStyle, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, consoante o tipo de nó.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção está definida, é aplicada neste momento, substituir as outras propriedades de estilo de nó.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Se precisar de gerar a tabela de menus de navegação de estilo de conteúdo em que nós de um determinado nível devem ter o mesmo aspeto, independentemente se tiverem os nós subordinados, poderá considerar a utilização de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>propriedade em vez de a definição das propriedades de estilo individuais.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the ParentNodeStyle property to control the appearance of the parent nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewParentNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_454_1.aspx)]\n [!code-vb[TreeViewParentNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_454_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> que representa o estilo de nós principais no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ParentNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PathSeparator
  id: PathSeparator
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
  fullName: System.Web.UI.WebControls.TreeView.PathSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o caráter utilizado para delimitar os valores de nó que são especificados pelo <xref:System.Web.UI.WebControls.TreeNode.ValuePath*>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ValuePath*>"
  remarks: "O <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade contém uma lista separada por delimitador de valores de nó que formam um caminho de nó raiz para o nó atual.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Utilize a propriedade PathSeparator para especificar o caráter delimitador que é utilizado para separar os valores de nó. Este valor é frequentemente utilizado ao analisar a lista para os valores individuais.       Consoante o texto que é apresentado no <xref:System.Web.UI.WebControls.TreeView>controlo, o caráter delimitador poderá ser necessário alterar para evitar quaisquer conflitos.</xref:System.Web.UI.WebControls.TreeView> Por exemplo, se definir o caráter delimitador para uma vírgula, o texto apresentado não deve conter qualquer vírgulas; caso contrário, o <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade não pode ser analisada com exatidão.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the PathSeparator property to specify the delimiter character for the <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> property of a node. This value is then used to parse the <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> property for the individual values.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_62_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_62_1.aspx)]"
  syntax:
    content: public char PathSeparator { get; set; }
    return:
      type: System.Char
      description: "O caráter utilizado para delimitar os valores de nó especificados no <xref:System.Web.UI.WebControls.TreeNode.ValuePath*>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ValuePath*> A predefinição é uma marca de barra (/)."
  overload: System.Web.UI.WebControls.TreeView.PathSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding
  id: PerformDataBinding
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PerformDataBinding()
  nameWithType: TreeView.PerformDataBinding()
  fullName: System.Web.UI.WebControls.TreeView.PerformDataBinding()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria todos os nós com base na origem de dados."
  remarks: "O método PerformDataBinding é um método de programa auxiliar que é chamado pelo <xref:System.Web.UI.WebControls.TreeView>controlo para vincular a origem de dados especificada para o controlo.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected override void PerformDataBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  id: PopulateNodesFromClient
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
  fullName: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se os dados do nó são preenchidos a pedido do cliente."
  remarks: "Por vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende da intervenção do utilizador. Por este motivo, o <xref:System.Web.UI.WebControls.TreeView>controlo suporta a população de nó dinâmico.</xref:System.Web.UI.WebControls.TreeView> Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>para um nó for definida como `true`, esse nó obtém preenchido em tempo de execução quando o nó é expandido.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Para além de preencher nós pedido, é possível preencher nós diretamente no browser cliente suportada. Quando a propriedade PopulateNodesFromClient está definida como `true`, é chamado um serviço do cliente para preencher os nós de árvore, que elimina a necessidade de post para o servidor. Caso contrário, o <xref:System.Web.UI.WebControls.TreeView>mensagens do controlo para o servidor para preencher os nós.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>propriedade também tem de ser definida `true` por ordem para a propriedade PopulateNodesFromClient ser definida como `true`.</xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>       Para preencher um nó no cliente, defina primeiro a propriedade PopulateNodesFromClient `true` e, em seguida, defina o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>propriedade para o nó para `true`.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Em seguida, defina um método de processamento de eventos para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>evento que preenche programaticamente o nó.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Um método de processamento de eventos normal obtém dados do nó de uma origem de dados, coloca os dados numa estrutura nó e, em seguida, adiciona a estrutura de nó para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção do nó que está a ser preenchida.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Criar uma estrutura de nó adicionando <xref:System.Web.UI.WebControls.TreeNode>objetos para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção de um nó principal.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>para um nó for definida como `true`, o nó tem de ser preenchido dinamicamente.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Forma declarativa não é possível aninhar o outro nó abaixo do mesmo; caso contrário, irá ocorrer um erro na página.      > [!NOTE] > A funcionalidade de população de nó do lado do cliente é suportada em browsers que suportam scripts de chamada de retorno. Para verificar se o browser suporta acesso de scripts de chamada de retorno, utilize a <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>propriedade de <xref:System.Web.HttpBrowserCapabilities>classe.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Pode aceder a instância da <xref:System.Web.HttpBrowserCapabilities>classe para o pedido atual através da <xref:System.Web.HttpRequest.Browser%2A>propriedade da <xref:System.Web.HttpRequest>classe.</xref:System.Web.HttpRequest> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpBrowserCapabilities>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the PopulateNodesFromClient property to enable client-side population of the nodes in the <xref:System.Web.UI.WebControls.TreeView> control. Notice that when client-side node population is enabled, nodes are populated dynamically on the client, without the need to post back to the server.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_522_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_522_1.aspx)]"
  syntax:
    content: public bool PopulateNodesFromClient { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para preencher dados de nó de árvore a pedido do cliente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: TreeView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o evento de chamada de retorno com os argumentos especificados."
  remarks: "O método RaiseCallbackEvent é um método de programa auxiliar para o <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>método.</xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Uma cadeia que representa um argumento de evento opcional para passar para o processador de eventos."
  overload: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: TreeView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo para processar um evento que é gerado quando um formulário é devolvido ao servidor. O método RaisePostBackEvent é um método de programa auxiliar para o &lt;xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A&gt; método."
  remarks: "A página transmite o valor da `eventArgument` parâmetro ao método RaisePostBackEvent do controlo que implementa o <xref:System.Web.UI.IPostBackEventHandler?displayProperty=fullName>interface.</xref:System.Web.UI.IPostBackEventHandler?displayProperty=fullName> Isto <xref:System.Web.UI.WebControls.TreeView>controlo também compõe o elemento HTML que faz com que a ocorrência de evento originem.</xref:System.Web.UI.WebControls.TreeView> Se o controlo composições do lado do cliente script publicar novamente para o servidor, o argumento do script seja transmitido a `eventArgument` parâmetro. Se o evento de nova colocação é causado por um simples submeter para o servidor, o `eventArgument` parâmetro é `null`.       O método RaisePostBackEvent fornece a funcionalidade para muitos eventos que são implementados por controlos de servidor Web e HTML."
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Uma cadeia que representa um argumento de evento opcional para passar para o processador de eventos."
  overload: System.Web.UI.WebControls.TreeView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  id: RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaisePostDataChangedEvent()
  nameWithType: TreeView.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sinais de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo ao notificar a aplicação de ASP.NET que o estado do controlo é alterado."
  remarks: "Alterar eventos para o <xref:System.Web.UI.WebControls.TreeView>controlo são gerados a partir do método RaisePostDataChangedEvent.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected virtual void RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: TreeView.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderBeginTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Compõe o HTML tag do controlo para o escritor especificado de início."
  remarks: "O método RenderBeginTag é utilizado principalmente pelos programadores de controlo."
  syntax:
    content: public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para compor HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.TreeView.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: TreeView.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Composições nós no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize o método de RenderContents para compor os nós no <xref:System.Web.UI.WebControls.TreeView>controlo ao cliente.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída utilizado para escrever o conteúdo para uma página Web."
  overload: System.Web.UI.WebControls.TreeView.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  id: RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: TreeView.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderEndTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Compõe o HTML fechar tag do controlo para o escritor especificado."
  remarks: "O método RenderEndTag é utilizado principalmente pelos programadores de controlo."
  syntax:
    content: public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para compor HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.TreeView.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle
  id: RootNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.RootNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> objeto permite-lhe definir o aspecto do nó raiz no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade RootNodeStyle para controlar o aspecto do nó raiz no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Esta propriedade é só de leitura; No entanto, pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto devolve.</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades podem ser definidas de forma declarativa na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto (por exemplo, `RootNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades também podem ser definidas através de programação no formato `Property.Subproperty` (por exemplo, `RootNodeStyle.ForeColor`). Definições comuns incluem, normalmente, uma cor de fundo personalizado, cor de primeiro plano, as propriedades de tipo de letra e espaçamento do nó. Propriedades de estilo são aplicadas pela seguinte ordem de precedência de: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  RootNodeStyle, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, consoante o tipo de nó.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção está definida, é aplicada neste momento, substituir as outras propriedades de estilo de nó.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>4.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Se precisar de gerar a tabela de menus de navegação de estilo de conteúdo em que nós de um determinado nível devem ter o mesmo aspeto, independentemente se tiverem os nós subordinados, poderá considerar a utilização de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>propriedade em vez de a definição das propriedades de estilo individuais.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the RootNodeStyle property to control the appearance of the root node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewRootNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1116_1.aspx)]\n [!code-cs[TreeViewRootNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1116_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> que representa o estilo do nó raiz no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.RootNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeView.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Guarda o estado do <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Estado de visualização atual do controlo de servidor; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não houver nenhuma vista de estado associada ao controlo."
  overload: System.Web.UI.WebControls.TreeView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNode
  id: SelectedNode
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
  fullName: System.Web.UI.WebControls.TreeView.SelectedNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto que representa o nó selecionado o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O texto de um nó de <xref:System.Web.UI.WebControls.TreeView>controlo pode estar em um de dois modos: modo de seleção e o modo de navegação.</xref:System.Web.UI.WebControls.TreeView> Por predefinição, um nó está no modo de seleção. Para colocar um nó em modo de navegação, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade para o nó a um valor diferente de uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Para colocar um nó em modo de seleção, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade para o nó para uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       Quando um nó está no modo de seleção, o utilizador pode selecionar um nó ao clicar no texto no nó. Utilize a propriedade SelectedNode para determinar o nó que está selecionado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Um nó não pode ser selecionada quando o <xref:System.Web.UI.WebControls.TreeView>controlo apresenta hiperligações.</xref:System.Web.UI.WebControls.TreeView> Quando são apresentadas hiperligações, a propriedade SelectedNode sempre devolve `null`.       Quando o utilizador seleciona um nó diferente no <xref:System.Web.UI.WebControls.TreeView>controlo ao clicar no texto no novo nó, o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>o evento é gerado, por predefinição.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView> Pode especificar um evento diferentes, definindo o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>propriedade para a propriedade.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> A tabela seguinte lista as opções disponíveis.      | Ação de seleção | Descrição |   |----------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Activa/desactiva o nó entre expandido e fechado.</xref:System.Web.UI.WebControls.TreeNodeSelectAction> Gera o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ou evento de <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>, conforme apropriado. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Eleva não há eventos quando um nó é selecionado. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Gera o evento de <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>Quando um nó é selecionado. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Eleva ambos o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>e <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>eventos quando um nó é selecionado.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Nós apenas são expandidos, nunca fechado. |      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>não é composto para um nó com a respetiva <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>propriedade definida como `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the SelectedNode property to determine the value of the selected node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_601_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_601_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode SelectedNode { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> que representa o nó selecionado o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SelectedNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  id: SelectedNodeChanged
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNodeChanged
  nameWithType: TreeView.SelectedNodeChanged
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um nó é selecionado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O evento de SelectedNodeChanged é gerado quando um nó é selecionado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada, tais como atualizar o conteúdo apresentado, sempre que este evento ocorre.       Opcionalmente, pode definir o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>propriedade para um nó especificar que o evento é gerado quando é selecionado esse nó.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> A tabela seguinte lista as opções disponíveis.      | Ação de seleção | Descrição |   |----------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Activa/desactiva o nó entre expandido e fechado.</xref:System.Web.UI.WebControls.TreeNodeSelectAction> Gera o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ou evento de <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>, conforme apropriado. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Eleva não há eventos quando um nó é selecionado. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Gera o evento de SelectedNodeChanged quando um nó é selecionado. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Gera o SelectedNodeChanged ambas e <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>eventos quando um nó é selecionado.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Nós apenas são expandidos, nunca fechado. |      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>não é composto para um nó com a respetiva <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>propriedade definida como `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       O evento SelectedNodeChanged é desencadeado apenas no post novamente quando um utilizador clica um nó. O evento não é desencadeado se a <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>propriedade é alterada de forma programática.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the SelectedNodeChanged event to update a <xref:System.Web.UI.WebControls.Label> control when a node is selected in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_102_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_102_1.aspx)]"
  syntax:
    content: public event EventHandler SelectedNodeChanged;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  id: SelectedNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> objeto que controla o aspecto do nó selecionado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade SelectedNodeStyle para controlar o aspecto do nó selecionado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Esta propriedade é só de leitura; No entanto, pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto devolve.</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades podem ser definidas de forma declarativa na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TreeNodeStyle>objeto (por exemplo, `SelectedNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> As propriedades também podem ser definidas através de programação no formato `Property.Subproperty` (por exemplo, `SelectedNodeStyle.ForeColor`). Definições comuns incluem, normalmente, uma cor de fundo personalizado, cor de primeiro plano, as propriedades de tipo de letra e espaçamento do nó. Propriedades de estilo são aplicadas pela seguinte ordem de precedência de: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, consoante o tipo de nó.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>coleção está definida, é aplicada neste momento, substituir as outras propriedades de estilo de nó.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  SelectedNodeStyle.      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the SelectedNodeStyle property to control the appearance of the selected node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_204_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_204_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> que representa o estilo do nó selecionado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica que a propriedade SelectedNodeStyle não está definida."
  overload: System.Web.UI.WebControls.TreeView.SelectedNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
  fullName: System.Web.UI.WebControls.TreeView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o valor do nó selecionado."
  remarks: "A propriedade SelectedValue fornece uma maneira conveniente para determinar o valor do nó selecionado. Esta propriedade devolve simplesmente o valor da <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade o <xref:System.Web.UI.WebControls.TreeNode>objeto que é referenciado pelo <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>propriedade.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Se nenhum nó atualmente selecionado o <xref:System.Web.UI.WebControls.TreeView>controlar, uma cadeia vazia (&quot;&quot;) é devolvido.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: public string SelectedValue { get; }
    return:
      type: System.String
      description: "O valor do nó selecionado."
  overload: System.Web.UI.WebControls.TreeView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  id: SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataBound(TreeNode,Boolean)
  nameWithType: TreeView.SetNodeDataBound(TreeNode,Boolean)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataBound(TreeNode,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite que uma classe derivada definir se especificado <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> controlo está vinculado a dados."
  remarks: "Utilize o método SetNodeDataBound para indicar se especificado <xref:System.Web.UI.WebControls.TreeNode>está vinculado a dados.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataBound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para definir o nó como vinculados a dados; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  id: SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataItem(TreeNode,Object)
  nameWithType: TreeView.SetNodeDataItem(TreeNode,Object)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataItem(TreeNode,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite que uma classe derivada ao definir o item de dados especificado para <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> controlo."
  remarks: "Utilize o método SetNodeDataItem para especificar o item de dados especificado para <xref:System.Web.UI.WebControls.TreeNode>controlo.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataItem
      type: System.Object
      description: "Item de dados para o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  id: SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataPath(TreeNode,String)
  nameWithType: TreeView.SetNodeDataPath(TreeNode,String)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataPath(TreeNode,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite que uma classe derivada definir o caminho de dados especificado para <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> controlo."
  remarks: "Utilize o método SetNodeDataPath para definir o caminho de dados especificado para <xref:System.Web.UI.WebControls.TreeNode>controlo.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataPath
      type: System.String
      description: "O caminho de dados para o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  id: ShowCheckBoxes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
  fullName: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica que tipos de nó apresentará uma caixa de verificação a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Para fornecer suporte de seleção de vários nós no <xref:System.Web.UI.WebControls.TreeView>controlo, pode apresentar caixas de verificação junto a imagem para um nó.</xref:System.Web.UI.WebControls.TreeView> Utilize a propriedade ShowCheckBoxes para especificar os tipos de nó apresentará uma caixa de verificação. Por exemplo, se esta propriedade está definida como `TreeNodeType.Parent`, as caixas de verificação são apresentadas para cada nó principal na árvore. A tabela seguinte lista os valores válidos para esta propriedade.      | Tipo de nó | Descrição |   |---------------|-----------------|   | `TreeNodeType.All`| Caixas de verificação são apresentadas para todos os nós. |   | `TreeNodeType.Leaf`| Caixas de verificação são apresentadas para todos os nós de folha. |   | `TreeNodeType.None`| Caixas de verificação não são apresentadas. |   | `TreeNodeType.Parent`| Caixas de verificação são apresentadas para todos os nós principais. |   | `TreeNodeType.Root`| Caixas de verificação são apresentadas para todos os nós de raiz. |       O tipo de enumeração que é utilizado para a propriedade ShowCheckBoxes é uma enumeração de sinalizador, que lhe permite combinar valores através de operações bit a bit. Por exemplo, para apresentar as caixas de verificação para os nós principais e de folha, utilize o operador ou bit a bit para combinar o `TreeNodeType.Parent` e `TreeNodeType.Leaf` valores.       Para determinar quais os nós têm a respetiva caixa de verificação selecionada, itere através de nós do <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>coleção.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>      > [!NOTE] > Pode substituir o ShowCheckBoxes ao efectuar a definição de <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>propriedade para cada nó.</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>       Se tiver de fornecer apenas único-seleção de suporte, considere utilizar o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>propriedade.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the ShowCheckBoxes property to show and hide the check boxes for the different node types.  \n  \n [!code-vb[TreeViewShowCheckBoxes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_915_1.aspx)]\n [!code-cs[TreeViewShowCheckBoxes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_915_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeTypes
      description: "Uma combinação bit a bit do <xref href=&quot;System.Web.UI.WebControls.TreeNodeTypes&quot;> </xref> valores. A predefinição é <xref uid=&quot;langword_csharp_TreeNodeType.None&quot; name=&quot;TreeNodeType.None&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ShowCheckBoxes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor de combinação bit a bit está fora do intervalo do <xref href=&quot;System.Web.UI.WebControls.TreeNodeTypes&quot;> </xref> enumeração."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  id: ShowExpandCollapse
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
  fullName: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se são apresentadas indicadores de nó de expansão."
  remarks: "Indicadores de nó de expansão são utilizados para mostrar se um nó é expandido, fechado ou não é possível expandir. Utilize a propriedade ShowExpandCollapse para especificar se os indicadores de nó de expansão são apresentadas no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView>       Quando a propriedade ShowExpandCollapse está definida como `true`, a <xref:System.Web.UI.WebControls.TreeView>controlo apresenta um sinal de adição (+) ou o sinal de subtração (-) ou uma imagem de marcador de posição junto de um nó para indicar se o nó foi expansível, expansível ou não expansível, respetivamente.</xref:System.Web.UI.WebControls.TreeView> Pode especificar imagens personalizadas pela definição primeiro o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>propriedade `TreeViewImageSet.Custom`e, em seguida, definir o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>Propriedades para os URLs das imagens personalizadas.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Se não imagens forem especificadas, são utilizadas as imagens de predefinição.       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the ShowExpandCollapse property to show and hide the expansion node icons.  \n  \n [!code-cs[TreeViewShowExpandCollapse#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_168_1.aspx)]\n [!code-vb[TreeViewShowExpandCollapse#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_168_1.aspx)]"
  syntax:
    content: public bool ShowExpandCollapse { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para mostrar a expansão indicadores de nó; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ShowExpandCollapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowLines
  id: ShowLines
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowLines
  nameWithType: TreeView.ShowLines
  fullName: System.Web.UI.WebControls.TreeView.ShowLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se são apresentadas as linhas que ligam os nós subordinados para nós principais."
  remarks: "Utilize a propriedade ShowLines para especificar se as linhas que estão a ligar nós subordinados nós principais são apresentadas. Quando esta propriedade está definida como `true`, a <xref:System.Web.UI.WebControls.TreeView>controlo procura a pasta acessível através da Web que é especificada pelo <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>propriedade para as imagens de linha.</xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> </xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Se o <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>propriedade não for definida, o <xref:System.Web.UI.WebControls.TreeView>controlo irá utilizar as imagens predefinidas incorporadas, (20 x 20 pixéis).</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the ShowLines property to display lines connecting nodes in the <xref:System.Web.UI.WebControls.TreeView> control. Be sure to use the Line Designer tool to create a set of line images and place them in a folder named LineImages within the directory for the sample application.  \n  \n [!code-cs[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_251_1.aspx)]\n [!code-vb[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_251_1.aspx)]"
  syntax:
    content: public bool ShowLines { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para apresentar as linhas que ligam nós; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ShowLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText
  id: SkipLinkText
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
  fullName: System.Web.UI.WebControls.TreeView.SkipLinkText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que é utilizado para compor o texto alternativo para leitores de ecrã ignorar conteúdo para o controlo."
  remarks: "A propriedade SkipLinkText é uma propriedade que pode definir para tornar uma página Web mais ou menos acessível. Páginas Web que contêm conteúdo que repete pode fornecer para um mecanismo para os utilizadores de leitores de ecrã ignorar conteúdo que está a ser de leitura em voz alta.       O <xref:System.Web.UI.WebControls.TreeView>controlo fornece a propriedade SkipLinkText como uma forma para o controlo de toda a ser ignorado por leitores de ecrã.</xref:System.Web.UI.WebControls.TreeView> Se a propriedade SkipLinkText estiver definida, é composta uma imagem invisível com texto alternativo, dá ao utilizador a opção para ir para o fim do controlo. Leitores de ecrã o texto alternativo de leitura em voz alta, enquanto a imagem ocupar espaço de único pixel. Para um controlo preciso de pixel durante a composição da página, defina a propriedade de SkipLinkText como uma cadeia vazia (&quot;&quot;) e fornecer o suas próprias mecanismo para ignorar a árvore.       A propriedade SkipLinkText está definida para a cadeia vazia por predefinição, o que faz com que os leitores de ecrã não ignore o controlo.       O valor desta propriedade é armazenado no estado de visualização.       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  syntax:
    content: public string SkipLinkText { get; set; }
    return:
      type: System.String
      description: "A cadeia que o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> compõe como texto alternativo com uma imagem invisível como uma sugestão de leitores de ecrã. A predefinição é &quot;Ligações de navegação de ignorar&quot;."
  overload: System.Web.UI.WebControls.TreeView.SkipLinkText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Devolve o resultado de um evento de chamada de retorno que tenha como destino um controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controlar implementa o <xref:System.Web.UI.ICallbackEventHandler>interface e utiliza o <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>para obter dados e o <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>método para devolver os dados obtidos ao controlo.</xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> </xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "Os resultados da chamada de retorno."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o evento de chamada de retorno com os argumentos especificados."
  remarks: "Os programadores do controlo devem ignorar o <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>método.</xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Uma cadeia que representa um argumento de evento opcional para passar para o processador de eventos."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Processos de voltar a colocar dados para o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Os programadores do controlo devem ignorar o <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>método.</xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>"
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "O identificador da chave para o controlo."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "A coleção de todos os valores de nome de entrada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> alterações de estado do controlo como resultado o evento de nova colocação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sinais de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo ao notificar a aplicação de ASP.NET que o estado do controlo é alterado."
  remarks: "Os programadores do controlo devem ignorar o <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>método.</xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>"
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo para processar um evento que é gerado quando um formulário é devolvido ao servidor."
  remarks: "Os programadores do controlo devem ignorar o <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>método.</xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Uma cadeia que representa um argumento de evento opcional para passar para o processador de eventos."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TagKey
  nameWithType: TreeView.TagKey
  fullName: System.Web.UI.WebControls.TreeView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> valor para o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "A propriedade TagKey permite que o fluxo de saída ao escrever a adequado HTML marca de cópia de segurança para o <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Devolve sempre um <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.TreeView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Target
  nameWithType: TreeView.Target
  fullName: System.Web.UI.WebControls.TreeView.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a janela de destino ou um intervalo no qual a apresentar o conteúdo da página Web que está associado um nó."
  remarks: "Utilize a propriedade de destino para especificar o window ou frame onde apresentar o conteúdo Web que está ligado a um nó quando esse nó é clicado.      > [!NOTE] > Propriedade de destino a composto como um `target` atributo. O `target` atributo no `anchor` elementos não é permitida na definição do tipo de documento XHTML 1.1. Não defina a propriedade de destino, se a saída composta para o <xref:System.Web.UI.WebControls.TreeView>deve ser compatível XHTML 1.1.</xref:System.Web.UI.WebControls.TreeView> Para obter mais informações, consulte [XHTML normas no Visual Studio e ao ASP.NET](~/add/includes/ajax-current-ext-md.md).   >> Ao criar acessíveis páginas Web, deve evitar utilizar a propriedade de destino para outra janela de destino. Para obter mais informações, consulte [controlos do ASP.NET e acessibilidade](~/add/includes/ajax-current-ext-md.md).       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the Target property to display the Web content that is linked to a node in a new window when that node is clicked.  \n  \n [!code-vb[TreeViewTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1247_1.aspx)]\n [!code-cs[TreeViewTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1247_1.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "A janela de destino ou um intervalo no qual a apresentar o conteúdo da página de Web ligado. Os valores têm de começar com uma letra no intervalo de a z (sensível), exceto determinados valores especiais que começam com um caráter de sublinhado, conforme mostrado na seguinte tabela.       <table><thead><tr><th> Valor de destino       </th><th> Compõe o conteúdo       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> Uma nova janela sem fotogramas.       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> O principal de frameset imediata.       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> Painel de procura.       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> A frame com o foco.       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> A janela completa sem fotogramas.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Consulte a documentação do browser para determinar se o <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> valor é suportado.  Por exemplo, Microsoft Internet Explorer 5.0 e posterior suporta a <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> valor de destino.      </div>       A predefinição é uma cadeia vazia (&quot;&quot;), que atualiza o window ou frame com o foco."
  overload: System.Web.UI.WebControls.TreeView.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeView.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Regista as alterações de estado de visualização para o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlar para que podem ser armazenados no <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objeto para o controlo. Isto <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> é acessível através de &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; propriedade."
  remarks: "O método TrackViewState seja substituído para marcar o ponto de partida para iniciar o controlo e a guardar as alterações ao controlo como parte do Estado de visualização do controlo."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  id: TreeNodeCheckChanged
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeCheckChanged
  nameWithType: TreeView.TreeNodeCheckChanged
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma caixa de verificação a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo muda de estado entre pedidos POST para o servidor."
  remarks: "O evento TreeNodeCheckChanged é gerado quando a caixa de verificação no <xref:System.Web.UI.WebControls.TreeView>controlo muda de estado entre pedidos POST para o servidor.</xref:System.Web.UI.WebControls.TreeView> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada, tais como a atualização de base de dados ou conteúdo apresentado, sempre que este evento ocorre.       Apesar do evento TreeNodeCheckChanged é desencadeado no post novamente, alterar uma caixa de verificação não irá causar uma mensagem anterior.       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodeCheckChanged event to update a <xref:System.Web.UI.WebControls.Label> control when the check boxes of the <xref:System.Web.UI.WebControls.TreeView> control change state between posts to the server.  \n  \n [!code-vb[TreeViewCheckChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_134_1.aspx)]\n [!code-cs[TreeViewCheckChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_134_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  id: TreeNodeCollapsed
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeCollapsed
  nameWithType: TreeView.TreeNodeCollapsed
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um nó é fechado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O evento de TreeNodeCollapsed é gerado quando um nó é fechado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada sempre que este evento ocorre.       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodeCollapsed event to update the content of a <xref:System.Web.UI.WebControls.Label> control when the user collapses a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewTreeNodeExpand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_89_1.aspx)]\n [!code-vb[TreeViewTreeNodeExpand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_89_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  id: TreeNodeDataBound
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeDataBound
  nameWithType: TreeView.TreeNodeDataBound
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um item de dados está vinculado a um nó de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O evento de TreeNodeDataBound é gerado quando um item de dados está vinculado a um nó de <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada sempre que este evento ocorre.       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TreeNodeDataBound event to change the image for a node when some condition is met. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the TreeNodeDataBound event to change the image for a node when some condition is met. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml. Also be sure to provide your own images for this example to display.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_83_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_83_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  id: TreeNodeExpanded
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeExpanded
  nameWithType: TreeView.TreeNodeExpanded
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um nó é expandido no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O evento de TreeNodeExpanded é gerado quando um nó é expandido no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada sempre que este evento ocorre.      > [!NOTE] > Se o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>para um nó for definida como `TreeNodeSelectAction.Expand` ou `TreeNodeSelectAction.SelectExpand`, o evento de TreeNodeExpanded também é gerado quando esse nó é clicado no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodeExpanded event to update the content of a <xref:System.Web.UI.WebControls.Label> control when the user expands a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewTreeNodeExpand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_90_1.aspx)]\n [!code-vb[TreeViewTreeNodeExpand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_90_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  id: TreeNodePopulate
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodePopulate
  nameWithType: TreeView.TreeNodePopulate
  fullName: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um nó com a respetiva <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand*>propriedade definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> é expandido no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand*>"
  remarks: "Por vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende da intervenção do utilizador. Por este motivo, o <xref:System.Web.UI.WebControls.TreeView>controlo suporta a população de nó dinâmico.</xref:System.Web.UI.WebControls.TreeView> Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>para um nó for definida como `true`, esse nó obtém preenchido em tempo de execução quando o nó é expandido.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Para preencher um nó dinamicamente, defina primeiro a <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>propriedade para o nó para `true`.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Em seguida, defina um método de processamento de eventos para o evento TreeNodePopulate que preenche o nó através de programação. Um método de processamento de eventos normal obtém dados do nó de uma origem de dados, coloca os dados numa estrutura nó e, em seguida, adiciona a estrutura de nó para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção do nó que está a ser preenchida.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Uma estrutura do nó é criada adicionando <xref:System.Web.UI.WebControls.TreeNode>objetos para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção de um nó principal.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>para um nó for definida como `true`, o nó tem de ser preenchido dinamicamente.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Forma declarativa não é possível aninhar o outro nó abaixo do mesmo; caso contrário, irá ocorrer um erro na página.       Browsers suportados (browsers do Microsoft Internet Explorer compatível com a 4.0 e posterior) também podem tirar partido da população de nó do lado do cliente. Quando ativada, isto permite que o <xref:System.Web.UI.WebControls.TreeView>controlo para preencher um nó dinamicamente no cliente quando esse nó é expandido, o que impede a necessidade de post para o servidor.</xref:System.Web.UI.WebControls.TreeView> Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodePopulate event to populate the nodes in the <xref:System.Web.UI.WebControls.TreeView> control dynamically on the server. Notice that the <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> property is set to `false` to prevent expanding-node events from being handled on the client.  \n  \n [!code-cs[TreeViewTreeNodePopulate#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[TreeViewTreeNodePopulate#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_5_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Visible
  id: Visible
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Visible
  nameWithType: TreeView.Visible
  fullName: System.Web.UI.WebControls.TreeView.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o controlo é composto como IU na página."
  remarks: "Se a propriedade Visible estiver definida como `false`, o controlo não é composto."
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o controlo está visível na página; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.HierarchicalDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.HierarchicalDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.TreeView.#ctor
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeView()
  nameWithType: TreeView.TreeView()
  fullName: System.Web.UI.WebControls.TreeView.TreeView()
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TreeView.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
  fullName: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
  fullName: System.Web.UI.WebControls.TreeView.CheckedNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeView.CollapseAll
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeView.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeView.CollapseAll()
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageUrl
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateControlCollection()
  nameWithType: TreeView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.TreeView.CreateControlCollection()
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.TreeView.CreateNode
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateNode()
  nameWithType: TreeView.CreateNode()
  fullName: System.Web.UI.WebControls.TreeView.CreateNode()
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeView.DataBind
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBind()
  nameWithType: TreeView.DataBind()
  fullName: System.Web.UI.WebControls.TreeView.DataBind()
- uid: System.Web.UI.WebControls.TreeView.DataBindings
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBindings
  nameWithType: TreeView.DataBindings
  fullName: System.Web.UI.WebControls.TreeView.DataBindings
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBindingCollection
  nameWithType: TreeNodeBindingCollection
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
  fullName: System.Web.UI.WebControls.TreeView.EnableClientScript
- uid: System.Web.UI.WebControls.TreeView.ExpandAll
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeView.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeView.ExpandAll()
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
  fullName: System.Web.UI.WebControls.TreeView.ExpandDepth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.FindNode(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: FindNode(String)
  nameWithType: TreeView.FindNode(String)
  fullName: System.Web.UI.WebControls.TreeView.FindNode(String)
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: TreeView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.GetCallbackResult()
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.HoverNodeStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.TreeView.ImageSet
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ImageSet
  nameWithType: TreeView.ImageSet
  fullName: System.Web.UI.WebControls.TreeView.ImageSet
- uid: System.Web.UI.WebControls.TreeViewImageSet
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeViewImageSet
  nameWithType: TreeViewImageSet
  fullName: System.Web.UI.WebControls.TreeViewImageSet
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.LeafNodeStyle
- uid: System.Web.UI.WebControls.TreeNodeStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeStyle
  nameWithType: TreeNodeStyle
  fullName: System.Web.UI.WebControls.TreeNodeStyle
- uid: System.Web.UI.WebControls.TreeView.LevelStyles
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
  fullName: System.Web.UI.WebControls.TreeView.LevelStyles
- uid: System.Web.UI.WebControls.TreeNodeStyleCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeStyleCollection
  nameWithType: TreeNodeStyleCollection
  fullName: System.Web.UI.WebControls.TreeNodeStyleCollection
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
  fullName: System.Web.UI.WebControls.TreeView.LineImagesFolder
- uid: System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.LoadPostData(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
  fullName: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
- uid: System.Web.UI.WebControls.TreeView.NodeIndent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
  fullName: System.Web.UI.WebControls.TreeView.NodeIndent
- uid: System.Web.UI.WebControls.TreeView.Nodes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Nodes
  nameWithType: TreeView.Nodes
  fullName: System.Web.UI.WebControls.TreeView.Nodes
- uid: System.Web.UI.WebControls.TreeView.NodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
  fullName: System.Web.UI.WebControls.TreeView.NodeStyle
- uid: System.Web.UI.WebControls.TreeView.NodeWrap
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
  fullName: System.Web.UI.WebControls.TreeView.NodeWrap
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: TreeView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: TreeView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnSelectedNodeChanged(EventArgs)
  nameWithType: TreeView.OnSelectedNodeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(EventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCheckChanged(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeNodeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeEventArgs
  nameWithType: TreeNodeEventArgs
  fullName: System.Web.UI.WebControls.TreeNodeEventArgs
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCollapsed(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeDataBound(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeExpanded(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodePopulate(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.ParentNodeStyle
- uid: System.Web.UI.WebControls.TreeView.PathSeparator
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
  fullName: System.Web.UI.WebControls.TreeView.PathSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PerformDataBinding()
  nameWithType: TreeView.PerformDataBinding()
  fullName: System.Web.UI.WebControls.TreeView.PerformDataBinding()
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
  fullName: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: TreeView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: TreeView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostDataChangedEvent()
  nameWithType: TreeView.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: TreeView.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: TreeView.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: TreeView.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderEndTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.RootNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SaveViewState
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeView.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeView.SaveViewState()
- uid: System.Web.UI.WebControls.TreeView.SelectedNode
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
  fullName: System.Web.UI.WebControls.TreeView.SelectedNode
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeChanged
  nameWithType: TreeView.SelectedNodeChanged
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SelectedValue
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
  fullName: System.Web.UI.WebControls.TreeView.SelectedValue
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataBound(TreeNode,Boolean)
  nameWithType: TreeView.SetNodeDataBound(TreeNode,Boolean)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataBound(TreeNode,Boolean)
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataItem(TreeNode,Object)
  nameWithType: TreeView.SetNodeDataItem(TreeNode,Object)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataItem(TreeNode,Object)
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataPath(TreeNode,String)
  nameWithType: TreeView.SetNodeDataPath(TreeNode,String)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataPath(TreeNode,String)
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
  fullName: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
- uid: System.Web.UI.WebControls.TreeNodeTypes
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeTypes
  nameWithType: TreeNodeTypes
  fullName: System.Web.UI.WebControls.TreeNodeTypes
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
  fullName: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
- uid: System.Web.UI.WebControls.TreeView.ShowLines
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowLines
  nameWithType: TreeView.ShowLines
  fullName: System.Web.UI.WebControls.TreeView.ShowLines
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
  fullName: System.Web.UI.WebControls.TreeView.SkipLinkText
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.TagKey
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TagKey
  nameWithType: TreeView.TagKey
  fullName: System.Web.UI.WebControls.TreeView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.TreeView.Target
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Target
  nameWithType: TreeView.Target
  fullName: System.Web.UI.WebControls.TreeView.Target
- uid: System.Web.UI.WebControls.TreeView.TrackViewState
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeView.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeView.TrackViewState()
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeCheckChanged
  nameWithType: TreeView.TreeNodeCheckChanged
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
- uid: System.Web.UI.WebControls.TreeNodeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeEventHandler
  nameWithType: TreeNodeEventHandler
  fullName: System.Web.UI.WebControls.TreeNodeEventHandler
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeCollapsed
  nameWithType: TreeView.TreeNodeCollapsed
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
- uid: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeDataBound
  nameWithType: TreeView.TreeNodeDataBound
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeExpanded
  nameWithType: TreeView.TreeNodeExpanded
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
- uid: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodePopulate
  nameWithType: TreeView.TreeNodePopulate
  fullName: System.Web.UI.WebControls.TreeView.TreeNodePopulate
- uid: System.Web.UI.WebControls.TreeView.Visible
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Visible
  nameWithType: TreeView.Visible
  fullName: System.Web.UI.WebControls.TreeView.Visible
- uid: System.Web.UI.WebControls.TreeView.#ctor*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeView
  nameWithType: TreeView.TreeView
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AddAttributesToRender
  nameWithType: TreeView.AddAttributesToRender
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
- uid: System.Web.UI.WebControls.TreeView.CollapseAll*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseAll
  nameWithType: TreeView.CollapseAll
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateControlCollection
  nameWithType: TreeView.CreateControlCollection
- uid: System.Web.UI.WebControls.TreeView.CreateNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateNode
  nameWithType: TreeView.CreateNode
- uid: System.Web.UI.WebControls.TreeView.DataBind*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBind
  nameWithType: TreeView.DataBind
- uid: System.Web.UI.WebControls.TreeView.DataBindings*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBindings
  nameWithType: TreeView.DataBindings
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
- uid: System.Web.UI.WebControls.TreeView.ExpandAll*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandAll
  nameWithType: TreeView.ExpandAll
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.FindNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: FindNode
  nameWithType: TreeView.FindNode
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: GetCallbackResult
  nameWithType: TreeView.GetCallbackResult
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
- uid: System.Web.UI.WebControls.TreeView.ImageSet*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ImageSet
  nameWithType: TreeView.ImageSet
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
- uid: System.Web.UI.WebControls.TreeView.LevelStyles*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
- uid: System.Web.UI.WebControls.TreeView.LoadPostData*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadPostData
  nameWithType: TreeView.LoadPostData
- uid: System.Web.UI.WebControls.TreeView.LoadViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadViewState
  nameWithType: TreeView.LoadViewState
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
- uid: System.Web.UI.WebControls.TreeView.NodeIndent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
- uid: System.Web.UI.WebControls.TreeView.Nodes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Nodes
  nameWithType: TreeView.Nodes
- uid: System.Web.UI.WebControls.TreeView.NodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
- uid: System.Web.UI.WebControls.TreeView.NodeWrap*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.OnInit*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnInit
  nameWithType: TreeView.OnInit
- uid: System.Web.UI.WebControls.TreeView.OnPreRender*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnPreRender
  nameWithType: TreeView.OnPreRender
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnSelectedNodeChanged
  nameWithType: TreeView.OnSelectedNodeChanged
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCheckChanged
  nameWithType: TreeView.OnTreeNodeCheckChanged
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCollapsed
  nameWithType: TreeView.OnTreeNodeCollapsed
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeDataBound
  nameWithType: TreeView.OnTreeNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeExpanded
  nameWithType: TreeView.OnTreeNodeExpanded
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodePopulate
  nameWithType: TreeView.OnTreeNodePopulate
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
- uid: System.Web.UI.WebControls.TreeView.PathSeparator*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PerformDataBinding
  nameWithType: TreeView.PerformDataBinding
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: TreeView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: TreeView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostDataChangedEvent
  nameWithType: TreeView.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderBeginTag
  nameWithType: TreeView.RenderBeginTag
- uid: System.Web.UI.WebControls.TreeView.RenderContents*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderContents
  nameWithType: TreeView.RenderContents
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderEndTag
  nameWithType: TreeView.RenderEndTag
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SaveViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SaveViewState
  nameWithType: TreeView.SaveViewState
- uid: System.Web.UI.WebControls.TreeView.SelectedNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SelectedValue*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataBound
  nameWithType: TreeView.SetNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataItem
  nameWithType: TreeView.SetNodeDataItem
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataPath
  nameWithType: TreeView.SetNodeDataPath
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
- uid: System.Web.UI.WebControls.TreeView.ShowLines*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowLines
  nameWithType: TreeView.ShowLines
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.TreeView.TagKey*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TagKey
  nameWithType: TreeView.TagKey
- uid: System.Web.UI.WebControls.TreeView.Target*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Target
  nameWithType: TreeView.Target
- uid: System.Web.UI.WebControls.TreeView.TrackViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TrackViewState
  nameWithType: TreeView.TrackViewState
- uid: System.Web.UI.WebControls.TreeView.Visible*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Visible
  nameWithType: TreeView.Visible
