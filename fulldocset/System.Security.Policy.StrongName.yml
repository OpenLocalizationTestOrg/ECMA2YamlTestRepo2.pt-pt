### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.StrongName
  id: StrongName
  children:
  - System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  - System.Security.Policy.StrongName.Clone
  - System.Security.Policy.StrongName.Copy
  - System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  - System.Security.Policy.StrongName.Equals(System.Object)
  - System.Security.Policy.StrongName.GetHashCode
  - System.Security.Policy.StrongName.Name
  - System.Security.Policy.StrongName.PublicKey
  - System.Security.Policy.StrongName.ToString
  - System.Security.Policy.StrongName.Version
  langs:
  - csharp
  name: StrongName
  nameWithType: StrongName
  fullName: System.Security.Policy.StrongName
  type: Class
  summary: "Fornece o nome seguro de uma assemblagem de código como provas para a avaliação da política. Esta classe não pode ser herdada."
  remarks: "A classe de StrongName representa provas de um nome exclusivo, criptograficamente segura de uma assemblagem de código. O nome seguro é composta por uma chave pública, um determinado nome e uma versão. A chave pública corresponde à chave privada do fabricante que é mantido em segredo e com que a assemblagem tem de ser assinada por ordem para o nome seguro ser válida.       Nomes seguros, normalmente, são atribuídos a assemblagens com <xref:System.Reflection.AssemblyKeyFileAttribute>, <xref:System.Reflection.AssemblyKeyNameAttribute>ou <xref:System.Reflection.AssemblyDelaySignAttribute>em conjunto com o utilitário de SN (consulte [Sn.exe (ferramenta de nome seguro)](~/add/includes/ajax-current-ext-md.md)).</xref:System.Reflection.AssemblyDelaySignAttribute> </xref:System.Reflection.AssemblyKeyNameAttribute> </xref:System.Reflection.AssemblyKeyFileAttribute>       <xref:System.Security.Permissions.StrongNameIdentityPermission>utiliza esta classe para confirmar que chamar código numa assemblagem do código específico com nome seguro.</xref:System.Security.Permissions.StrongNameIdentityPermission>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StrongName : System.Security.Policy.EvidenceBase, System.Security.Policy.IIdentityPermissionFactory
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements:
  - System.Security.Policy.IIdentityPermissionFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: StrongName(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Policy.StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> classe com o blob de chave pública de nome seguro, o nome e a versão."
  remarks: "O `name` parâmetro pode ser `null`, mas não pode ser uma cadeia vazia (&quot;&quot;).       Para obter mais informações sobre nomes seguros, ver <xref:System.Security.Permissions.StrongNameIdentityPermission>e <xref:System.Security.Permissions.StrongNamePublicKeyBlob>.</xref:System.Security.Permissions.StrongNamePublicKeyBlob> </xref:System.Security.Permissions.StrongNameIdentityPermission>"
  syntax:
    content: public StrongName (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);
    parameters:
    - id: blob
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "O <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> do publicador de software."
    - id: name
      type: System.String
      description: "A secção nome simples de nome seguro."
    - id: version
      type: System.Version
      description: "O <xref:System.Version>do nome seguro.</xref:System.Version>"
  overload: System.Security.Policy.StrongName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>blob</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>version</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> name </code> parâmetro é uma cadeia vazia (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Clone
  id: Clone
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Clone()
  nameWithType: StrongName.Clone()
  fullName: System.Security.Policy.StrongName.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria um novo objeto que é uma cópia da instância atual."
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Um novo objeto que é uma cópia desta instância."
  overload: System.Security.Policy.StrongName.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Copy
  id: Copy
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Copy()
  nameWithType: StrongName.Copy()
  fullName: System.Security.Policy.StrongName.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria uma cópia equivalente atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  syntax:
    content: public object Copy ();
    parameters: []
    return:
      type: System.Object
      description: "Uma cópia nova, idêntica atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  id: CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: CreateIdentityPermission(Evidence)
  nameWithType: StrongName.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.StrongName.CreateIdentityPermission(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria um <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> que corresponde a atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  remarks: "A permissão de identidade para um nome seguro pode ser utilizada para determinar se chamar código numa determinada forte com o nome assemblagem de código."
  syntax:
    content: public System.Security.IPermission CreateIdentityPermission (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "O <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> partir do qual pode construir o <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref>."
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> para especificado <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.CreateIdentityPermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StrongName.Equals(Object)
  fullName: System.Security.Policy.StrongName.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se o nome seguro especificado é igual ao nome seguro atual."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O nome seguro para a comparação com o nome seguro atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nome seguro especificado é igual ao nome seguro atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.StrongName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StrongName.GetHashCode()
  fullName: System.Security.Policy.StrongName.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o código hash de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Name
  id: Name
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Name
  nameWithType: StrongName.Name
  fullName: System.Security.Policy.StrongName.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o nome simple de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A parte de nome simples a <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.PublicKey
  id: PublicKey
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongName.PublicKey
  fullName: System.Security.Policy.StrongName.PublicKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  remarks: "Um blob é informações criptográficas que exclusivamente Especifica a chave pública do publicador de software.       Os BLOBs diferem dos certificados em que o blob tem apenas informações sobre a chave pública; o certificado também inclui informações que associa o nome do titular com a chave, bem como informações para confirmar o certificado."
  syntax:
    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; }
    return:
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "The <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;></xref> of the current <xref href=&quot;System.Security.Policy.StrongName&quot;></xref>."
  overload: System.Security.Policy.StrongName.PublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.ToString
  id: ToString
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: ToString()
  nameWithType: StrongName.ToString()
  fullName: System.Security.Policy.StrongName.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria uma representação de cadeia de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  remarks: "Este método é útil durante a depuração para obter uma representação de fácil leitura do objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Version
  id: Version
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Version
  nameWithType: StrongName.Version
  fullName: System.Security.Policy.StrongName.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o <xref:System.Version>de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>.</xref:System.Version>"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "O <xref:System.Version>de atual <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>.</xref:System.Version>"
  overload: System.Security.Policy.StrongName.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: StrongName(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Policy.StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
- uid: System.Security.Permissions.StrongNamePublicKeyBlob
  parent: System.Security.Permissions
  isExternal: false
  name: StrongNamePublicKeyBlob
  nameWithType: StrongNamePublicKeyBlob
  fullName: System.Security.Permissions.StrongNamePublicKeyBlob
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Security.Policy.StrongName.Clone
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Clone()
  nameWithType: StrongName.Clone()
  fullName: System.Security.Policy.StrongName.Clone()
- uid: System.Security.Policy.StrongName.Copy
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Copy()
  nameWithType: StrongName.Copy()
  fullName: System.Security.Policy.StrongName.Copy()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: CreateIdentityPermission(Evidence)
  nameWithType: StrongName.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.StrongName.CreateIdentityPermission(Evidence)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.StrongName.Equals(System.Object)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Equals(Object)
  nameWithType: StrongName.Equals(Object)
  fullName: System.Security.Policy.StrongName.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.StrongName.GetHashCode
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: GetHashCode()
  nameWithType: StrongName.GetHashCode()
  fullName: System.Security.Policy.StrongName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.StrongName.Name
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Name
  nameWithType: StrongName.Name
  fullName: System.Security.Policy.StrongName.Name
- uid: System.Security.Policy.StrongName.PublicKey
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: PublicKey
  nameWithType: StrongName.PublicKey
  fullName: System.Security.Policy.StrongName.PublicKey
- uid: System.Security.Policy.StrongName.ToString
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: ToString()
  nameWithType: StrongName.ToString()
  fullName: System.Security.Policy.StrongName.ToString()
- uid: System.Security.Policy.StrongName.Version
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Version
  nameWithType: StrongName.Version
  fullName: System.Security.Policy.StrongName.Version
- uid: System.Security.Policy.StrongName.#ctor*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: StrongName
  nameWithType: StrongName.StrongName
- uid: System.Security.Policy.StrongName.Clone*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Clone
  nameWithType: StrongName.Clone
- uid: System.Security.Policy.StrongName.Copy*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Copy
  nameWithType: StrongName.Copy
- uid: System.Security.Policy.StrongName.CreateIdentityPermission*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: CreateIdentityPermission
  nameWithType: StrongName.CreateIdentityPermission
- uid: System.Security.Policy.StrongName.Equals*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Equals
  nameWithType: StrongName.Equals
- uid: System.Security.Policy.StrongName.GetHashCode*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: GetHashCode
  nameWithType: StrongName.GetHashCode
- uid: System.Security.Policy.StrongName.Name*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Name
  nameWithType: StrongName.Name
- uid: System.Security.Policy.StrongName.PublicKey*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: PublicKey
  nameWithType: StrongName.PublicKey
- uid: System.Security.Policy.StrongName.ToString*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: ToString
  nameWithType: StrongName.ToString
- uid: System.Security.Policy.StrongName.Version*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Version
  nameWithType: StrongName.Version
