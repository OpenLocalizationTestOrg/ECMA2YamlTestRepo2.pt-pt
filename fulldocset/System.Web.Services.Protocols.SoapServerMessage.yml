### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapServerMessage
  id: SoapServerMessage
  children:
  - System.Web.Services.Protocols.SoapServerMessage.Action
  - System.Web.Services.Protocols.SoapServerMessage.EnsureInStage
  - System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage
  - System.Web.Services.Protocols.SoapServerMessage.MethodInfo
  - System.Web.Services.Protocols.SoapServerMessage.OneWay
  - System.Web.Services.Protocols.SoapServerMessage.Server
  - System.Web.Services.Protocols.SoapServerMessage.SoapVersion
  - System.Web.Services.Protocols.SoapServerMessage.Url
  langs:
  - csharp
  name: SoapServerMessage
  nameWithType: SoapServerMessage
  fullName: System.Web.Services.Protocols.SoapServerMessage
  type: Class
  summary: "Represents the data in a SOAP request received or a SOAP response sent by an XML Web service method at a specific <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref>. This class cannot be inherited."
  remarks: ''
  example:
  - "The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service method. This specific fragment processes the SoapServerMessage passed into the <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=fullName> method of the SOAP extension by writing properties of the SoapServerMessage to the log file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public sealed class SoapServerMessage : System.Web.Services.Protocols.SoapMessage'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.SoapMessage
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.SoapMessage.ContentEncoding
  - System.Web.Services.Protocols.SoapMessage.ContentType
  - System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)
  - System.Web.Services.Protocols.SoapMessage.Exception
  - System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)
  - System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)
  - System.Web.Services.Protocols.SoapMessage.GetReturnValue
  - System.Web.Services.Protocols.SoapMessage.Headers
  - System.Web.Services.Protocols.SoapMessage.Stage
  - System.Web.Services.Protocols.SoapMessage.Stream
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.Action
  id: Action
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: Action
  nameWithType: SoapServerMessage.Action
  fullName: System.Web.Services.Protocols.SoapServerMessage.Action
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the SOAPAction HTTP request header field for the SOAP request or SOAP response."
  remarks: "The Action property can be accessed during any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - "The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service. This particular fragment outputs to that log file the value of the `SOAPAction` HTTP request header field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override string Action { get; }
    return:
      type: System.String
      description: "The SOAPAction HTTP request header field for the SOAP request or SOAP response."
  overload: System.Web.Services.Protocols.SoapServerMessage.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.EnsureInStage
  id: EnsureInStage
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: EnsureInStage()
  nameWithType: SoapServerMessage.EnsureInStage()
  fullName: System.Web.Services.Protocols.SoapServerMessage.EnsureInStage()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  syntax:
    content: protected override void EnsureInStage ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapServerMessage.EnsureInStage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage
  id: EnsureOutStage
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: EnsureOutStage()
  nameWithType: SoapServerMessage.EnsureOutStage()
  fullName: System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  syntax:
    content: protected override void EnsureOutStage ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.MethodInfo
  id: MethodInfo
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: MethodInfo
  nameWithType: SoapServerMessage.MethodInfo
  fullName: System.Web.Services.Protocols.SoapServerMessage.MethodInfo
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets a representation of the method prototype for the XML Web service method for which the SOAP request is intended."
  remarks: "Although the MethodInfo property can be accessed during any stage, the method information is only available during <xref:System.Web.Services.Protocols.SoapMessageStage> and <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - "The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service. This particular fragment outputs to that log file the name of the XML Web service method requested.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }
    return:
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;></xref> representing the XML Web service method for which the SOAP request is intended."
  overload: System.Web.Services.Protocols.SoapServerMessage.MethodInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.OneWay
  id: OneWay
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: OneWay
  nameWithType: SoapServerMessage.OneWay
  fullName: System.Web.Services.Protocols.SoapServerMessage.OneWay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets a value indicating whether the client waits for the server to finish processing an XML Web service method."
  remarks: "A <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> or <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> applied to an XML Web service method or XML Web service client can specify whether the XML Web service method is one way or not by setting the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of the attribute.       The OneWay property can be accessed during any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - "The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service. This particular fragment outputs to that log file a phrase stating the XML Web service method is one-way, when the OneWay property is `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override bool OneWay { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the client waits for the server to completely process a method; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Services.Protocols.SoapServerMessage.OneWay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.Server
  id: Server
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: Server
  nameWithType: SoapServerMessage.Server
  fullName: System.Web.Services.Protocols.SoapServerMessage.Server
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the instance of the class handling the method invocation on the Web server."
  remarks: "The Server property is an instance of the class implementing the XML Web service. If a SOAP extension knew ahead of time the type of the class, it could cast Server to that type and access properties and methods of the class implementing the XML Web service. The Server property can be accessed during <xref:System.Web.Services.Protocols.SoapMessageStage> or <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - "The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service. This particular fragment outputs to the log file the type of the XML Web service, if it is `MathSvc`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public object Server { get; }
    return:
      type: System.Object
      description: "The instance of the class implementing the XML Web service."
  overload: System.Web.Services.Protocols.SoapServerMessage.Server*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> is not <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> or <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.SoapVersion
  id: SoapVersion
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: SoapVersion
  nameWithType: SoapServerMessage.SoapVersion
  fullName: System.Web.Services.Protocols.SoapServerMessage.SoapVersion
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the version of the SOAP protocol used to communicate with the XML Web service."
  remarks: "The SoapVersion property is guaranteed to be valid after the <xref:System.Web.Services.Protocols.SoapMessageStage> stage. In the <xref:System.Web.Services.Protocols.SoapMessageStage> stage the property is available, but the SOAP message has not been completely processed and SOAP extensions that may alter the contents of the SOAP message have not run."
  syntax:
    content: public override System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }
    return:
      type: System.Web.Services.Protocols.SoapProtocolVersion
      description: "One of the <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;></xref> values. The default is <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;></xref>."
  overload: System.Web.Services.Protocols.SoapServerMessage.SoapVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapServerMessage.Url
  id: Url
  parent: System.Web.Services.Protocols.SoapServerMessage
  langs:
  - csharp
  name: Url
  nameWithType: SoapServerMessage.Url
  fullName: System.Web.Services.Protocols.SoapServerMessage.Url
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the base URL of the XML Web service."
  remarks: "The Url property can be accessed during any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - "The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service. This particular fragment outputs to that log file the URL of the XML Web service.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override string Url { get; }
    return:
      type: System.String
      description: "The base URL of the XML Web service."
  overload: System.Web.Services.Protocols.SoapServerMessage.Url*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: System.Web.Services.Protocols.SoapMessage
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Services.Protocols.SoapServerMessage.Action
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: Action
  nameWithType: SoapServerMessage.Action
  fullName: System.Web.Services.Protocols.SoapServerMessage.Action
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapServerMessage.EnsureInStage
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: EnsureInStage()
  nameWithType: SoapServerMessage.EnsureInStage()
  fullName: System.Web.Services.Protocols.SoapServerMessage.EnsureInStage()
- uid: System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: EnsureOutStage()
  nameWithType: SoapServerMessage.EnsureOutStage()
  fullName: System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage()
- uid: System.Web.Services.Protocols.SoapServerMessage.MethodInfo
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: MethodInfo
  nameWithType: SoapServerMessage.MethodInfo
  fullName: System.Web.Services.Protocols.SoapServerMessage.MethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.SoapServerMessage.OneWay
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: OneWay
  nameWithType: SoapServerMessage.OneWay
  fullName: System.Web.Services.Protocols.SoapServerMessage.OneWay
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapServerMessage.Server
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: Server
  nameWithType: SoapServerMessage.Server
  fullName: System.Web.Services.Protocols.SoapServerMessage.Server
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.SoapServerMessage.SoapVersion
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: SoapVersion
  nameWithType: SoapServerMessage.SoapVersion
  fullName: System.Web.Services.Protocols.SoapServerMessage.SoapVersion
- uid: System.Web.Services.Protocols.SoapProtocolVersion
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapProtocolVersion
  nameWithType: SoapProtocolVersion
  fullName: System.Web.Services.Protocols.SoapProtocolVersion
- uid: System.Web.Services.Protocols.SoapServerMessage.Url
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: Url
  nameWithType: SoapServerMessage.Url
  fullName: System.Web.Services.Protocols.SoapServerMessage.Url
- uid: System.Web.Services.Protocols.SoapServerMessage.Action*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: Action
  nameWithType: SoapServerMessage.Action
- uid: System.Web.Services.Protocols.SoapServerMessage.EnsureInStage*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: EnsureInStage
  nameWithType: SoapServerMessage.EnsureInStage
- uid: System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: EnsureOutStage
  nameWithType: SoapServerMessage.EnsureOutStage
- uid: System.Web.Services.Protocols.SoapServerMessage.MethodInfo*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: MethodInfo
  nameWithType: SoapServerMessage.MethodInfo
- uid: System.Web.Services.Protocols.SoapServerMessage.OneWay*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: OneWay
  nameWithType: SoapServerMessage.OneWay
- uid: System.Web.Services.Protocols.SoapServerMessage.Server*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: Server
  nameWithType: SoapServerMessage.Server
- uid: System.Web.Services.Protocols.SoapServerMessage.SoapVersion*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: SoapVersion
  nameWithType: SoapServerMessage.SoapVersion
- uid: System.Web.Services.Protocols.SoapServerMessage.Url*
  parent: System.Web.Services.Protocols.SoapServerMessage
  isExternal: false
  name: Url
  nameWithType: SoapServerMessage.Url
