### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.RegistryPermissionAttribute
  id: RegistryPermissionAttribute
  children:
  - System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.RegistryPermissionAttribute.All
  - System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  - System.Security.Permissions.RegistryPermissionAttribute.Create
  - System.Security.Permissions.RegistryPermissionAttribute.CreatePermission
  - System.Security.Permissions.RegistryPermissionAttribute.Read
  - System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  - System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  - System.Security.Permissions.RegistryPermissionAttribute.Write
  langs:
  - csharp
  name: RegistryPermissionAttribute
  nameWithType: RegistryPermissionAttribute
  fullName: System.Security.Permissions.RegistryPermissionAttribute
  type: Class
  summary: "Permite que as ações de segurança para <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> seja aplicada ao código utilizando a segurança declarativa. Esta classe não pode ser herdada."
  remarks: "Depende do âmbito da declaração de que está autorizado a <xref:System.Security.Permissions.SecurityAction>que é utilizado.</xref:System.Security.Permissions.SecurityAction>       As informações de segurança declaradas por um atributo de segurança são armazenadas nos metadados do destino de atributo e são acedidas pelo sistema em tempo de execução. Atributos de segurança são utilizados apenas para a segurança declarativa. Para segurança imperativo, utilize a classe de permissão correspondente."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: RegistryPermissionAttribute(SecurityAction)
  nameWithType: RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.RegistryPermissionAttribute&quot;> </xref> classe com especificado <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  syntax:
    content: public RegistryPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Um do <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valores."
  overload: System.Security.Permissions.RegistryPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> action </code> parâmetro não é um <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.All
  id: All
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: All
  nameWithType: RegistryPermissionAttribute.All
  fullName: System.Security.Permissions.RegistryPermissionAttribute.All
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o acesso total para as chaves de registo especificada."
  remarks: "Acesso a chaves implica acesso a todas as subchaves e todos os valores."
  syntax:
    content: public string All { get; set; }
    return:
      type: System.String
      description: "Uma lista delimitada por vírgulas de caminhos de chave de registo, para acesso total."
  overload: System.Security.Permissions.RegistryPermissionAttribute.All*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O acessor de obtenção é chamado; só é fornecido para compatibilidade de compilador do c#."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  id: ChangeAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: ChangeAccessControl
  nameWithType: RegistryPermissionAttribute.ChangeAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o controlo de acesso de alteração para as chaves de registo especificada."
  remarks: "Acesso a chaves implica acesso a todos os valores que contém e todas as variáveis sob a mesma.      > [!IMPORTANT] > Uma lista de controlo de acesso (ACL) descreve utilizadores individuais ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas para as chaves de registo especificado.  A capacidade de alterar uma ACL é uma permissão importante e deverá ser concedida com cuidado."
  syntax:
    content: public string ChangeAccessControl { get; set; }
    return:
      type: System.String
      description: "Uma lista delimitada por vírgulas de caminhos de chave de registo, para controlo de acesso de alteração. ."
  overload: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.Create
  id: Create
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: Create
  nameWithType: RegistryPermissionAttribute.Create
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Create
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o acesso de nível de criar para as chaves de registo especificada."
  remarks: "Acesso a chaves implica acesso a todos os valores que contém e todas as variáveis sob a mesma."
  syntax:
    content: public string Create { get; set; }
    return:
      type: System.String
      description: "Uma lista delimitada por vírgulas de caminhos de chave de registo, para acesso de nível de criar."
  overload: System.Security.Permissions.RegistryPermissionAttribute.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: RegistryPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve um novo <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref>."
  remarks: "Este método só deve ser chamado pelo sistema de segurança, nunca pelo código da aplicação.       No momento da compilação, atributos converter declarações de segurança para um formato serializado nos metadados. Dados de segurança declarativos nos metadados são criados a partir a permissão que este método devolve que corresponde a este atributo."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> que corresponde a este atributo."
  overload: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.Read
  id: Read
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: Read
  nameWithType: RegistryPermissionAttribute.Read
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Read
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o acesso de leitura para as chaves de registo especificada."
  remarks: "Acesso a chaves implica acesso a todos os valores que contém e todas as variáveis sob a mesma."
  syntax:
    content: public string Read { get; set; }
    return:
      type: System.String
      description: "Uma lista delimitada por vírgulas de caminhos de chave de registo, para acesso de leitura."
  overload: System.Security.Permissions.RegistryPermissionAttribute.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  id: ViewAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: ViewAccessControl
  nameWithType: RegistryPermissionAttribute.ViewAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o controlo de acesso de vista para as chaves de registo especificada."
  remarks: "Acesso a chaves implica acesso a todos os valores que contém e todas as variáveis sob a mesma.      > [!IMPORTANT] > Uma lista de controlo de acesso (ACL) descreve utilizadores individuais ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas para as chaves de registo especificado.  A capacidade de ver uma ACL é uma permissão importante e deverá ser concedida com cuidado."
  syntax:
    content: public string ViewAccessControl { get; set; }
    return:
      type: System.String
      description: "Uma lista delimitada por vírgulas de caminhos de chave de registo, para controlo de acesso de vista."
  overload: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  id: ViewAndModify
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: ViewAndModify
  nameWithType: RegistryPermissionAttribute.ViewAndModify
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um conjunto especificado de chaves de registo que podem ser visualizadas e modificadas."
  remarks: "Acesso a chaves implica acesso a todos os valores que contém e todas as variáveis sob a mesma.       Esta propriedade especifica <xref:System.Security.Permissions.RegistryPermissionAttribute.Create%2A>, <xref:System.Security.Permissions.RegistryPermissionAttribute.Read%2A>, e <xref:System.Security.Permissions.RegistryPermissionAttribute.Write%2A>direitos de acesso para as chaves especificadas e os respetivos valores.</xref:System.Security.Permissions.RegistryPermissionAttribute.Write%2A> </xref:System.Security.Permissions.RegistryPermissionAttribute.Read%2A> </xref:System.Security.Permissions.RegistryPermissionAttribute.Create%2A> Os direitos de acesso são apenas; os dados de registo estas não incluírem o acesso controlo direitos <xref:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl%2A>ou <xref:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl%2A>.</xref:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl%2A> </xref:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl%2A>      > [!NOTE] > O acessor de obtenção é fornecido para compatibilidade de compilador do c#. O compilador do c# necessita de propriedades de atributo para ser de leitura/escrita."
  syntax:
    content: public string ViewAndModify { get; set; }
    return:
      type: System.String
      description: "Uma lista delimitada por vírgulas de caminhos de chave de registo, para criar, ler e acesso de escrita."
  overload: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O acessor de obtenção é chamado; só é fornecido para compatibilidade de compilador do c#."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.Write
  id: Write
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: Write
  nameWithType: RegistryPermissionAttribute.Write
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Write
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o acesso de escrita para as chaves de registo especificada."
  remarks: "Acesso a chaves implica acesso a todos os valores que contém e todas as variáveis sob a mesma."
  syntax:
    content: public string Write { get; set; }
    return:
      type: System.String
      description: "Uma lista delimitada por vírgulas de caminhos de chave de registo, para acesso de escrita."
  overload: System.Security.Permissions.RegistryPermissionAttribute.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: RegistryPermissionAttribute(SecurityAction)
  nameWithType: RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.RegistryPermissionAttribute.All
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: All
  nameWithType: RegistryPermissionAttribute.All
  fullName: System.Security.Permissions.RegistryPermissionAttribute.All
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ChangeAccessControl
  nameWithType: RegistryPermissionAttribute.ChangeAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.Create
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Create
  nameWithType: RegistryPermissionAttribute.Create
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Create
- uid: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: RegistryPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.RegistryPermissionAttribute.Read
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Read
  nameWithType: RegistryPermissionAttribute.Read
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Read
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAccessControl
  nameWithType: RegistryPermissionAttribute.ViewAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAndModify
  nameWithType: RegistryPermissionAttribute.ViewAndModify
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
- uid: System.Security.Permissions.RegistryPermissionAttribute.Write
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Write
  nameWithType: RegistryPermissionAttribute.Write
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Write
- uid: System.Security.Permissions.RegistryPermissionAttribute.#ctor*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: RegistryPermissionAttribute
  nameWithType: RegistryPermissionAttribute.RegistryPermissionAttribute
- uid: System.Security.Permissions.RegistryPermissionAttribute.All*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: All
  nameWithType: RegistryPermissionAttribute.All
- uid: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ChangeAccessControl
  nameWithType: RegistryPermissionAttribute.ChangeAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.Create*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Create
  nameWithType: RegistryPermissionAttribute.Create
- uid: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: RegistryPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.RegistryPermissionAttribute.Read*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Read
  nameWithType: RegistryPermissionAttribute.Read
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAccessControl
  nameWithType: RegistryPermissionAttribute.ViewAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAndModify
  nameWithType: RegistryPermissionAttribute.ViewAndModify
- uid: System.Security.Permissions.RegistryPermissionAttribute.Write*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Write
  nameWithType: RegistryPermissionAttribute.Write
