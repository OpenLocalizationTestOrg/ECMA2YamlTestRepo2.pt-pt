### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  id: EditorPartCollection
  children:
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)
  langs:
  - csharp
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
  type: Class
  summary: "Contém uma coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos utilizados para editar as propriedades, o esquema, o aspeto e o comportamento de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos. Esta classe não pode ser herdada."
  remarks: "A classe de EditorPartCollection é uma coleção só de leitura de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos, normalmente utilizados por um <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>zona para controlar o conjunto de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos incluídos por zona.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       Quando uma página de peças Web introduz o modo de edição e um utilizador seleccionar um controlo para editar, inicia o processo de edição. A zona cria um novo objeto de EditorPartCollection constituídas pelo <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos incluídos por zona.</xref:System.Web.UI.WebControls.WebParts.EditorPart> Em várias fases do processo de edição, a zona acede o objeto de EditorPartCollection para guardar ou obter valores de propriedade entre o <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos na coleção e o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar atualmente a ser editado.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       Pode criar uma coleção de EditorPartCollection dos controlos para utilização programática se, por exemplo, terá de realizar algumas operações em massa num conjunto de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos.</xref:System.Web.UI.WebControls.WebParts.EditorPart> Apesar do objeto de EditorPartCollection é só de leitura, pode efetuar alterações programáticas para as propriedades dos controlos subjacentes referenciadas na coleção."
  example:
  - "The following code example demonstrates several uses of the EditorPartCollection class. There are four parts to this code example:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is edited by the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls.  \n  \n-   A Web page that references the `TextDisplayWebPart` control, contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control with several of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls from the Web Parts control set declared in the zone, and contains some event-driven code to create and manipulate an EditorPartCollection object.  \n  \n-   An explanation of how the code example works when you load it in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#4](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_1.ascx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#4](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_1.ascx)]  \n  \n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box. This custom property can be edited when the control is in edit mode, along with the standard <xref:System.Web.UI.WebControls.WebParts.WebPart> control properties.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_2.cs)]\n [!code-vb[WebParts_EditorPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_2.vb)]  \n  \n The third part of the code example is the Web page. Notice that the `<asp:editorzone>` element for the page contains declarations for three <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. Two of these controls become part of a custom EditorPartCollection object that is created when the `Button1_Click` method executes.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_3.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_3.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. You click the **Create EditorPartCollection** button to see the effects on the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that are created by the code that is manipulating the EditorPartCollection object. Also, notice that the <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control allows you to edit the custom `TextDisplayWebPart.ContentText` property. This is possible because the property is marked with a `WebBrowsable` attribute in the source code for the control. If you update the property value in the editing UI, you must return the page to normal browse mode to see the effect of updating the `TextDisplayWebPart.ContentText` property."
  syntax:
    content: 'public sealed class EditorPartCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: EditorPartCollection()
  nameWithType: EditorPartCollection.EditorPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância vazia do <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> classe."
  remarks: "O construtor de EditorPartCollection inicializa uma instância vazia da <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>classe.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> Esta sobrecarga do construtor é utilizada internamente pelo <xref:System.Web.UI.WebControls.WebParts.EditorZone>classe no respetivo <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>método para criar um objeto da coleção vazia.</xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone> A zona, em seguida, cria instâncias de todas as <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos declarado no modelo de zona subordinada e utiliza um método interno para os adicionar à coleção.</xref:System.Web.UI.WebControls.WebParts.EditorPart>       Não é possível utilizar esta sobrecarga do construtor EditorPartCollection para criar uma nova instância do <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>e adicionar <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos ao mesmo.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> Tem de utilizar uma das outras sobrecargas para o construtor de EditorPartCollection em vez disso."
  syntax:
    content: public EditorPartCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: EditorPartCollection(ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> classe mediante a transmissão num <xref:System.Collections.ICollection>coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos.</xref:System.Collections.ICollection>"
  remarks: "O construtor de EditorPartCollection inicializa uma instância do <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>classe e transmite numa coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> Esta é uma sobrecarga do <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>construtor que pode utilizar para criar um novo <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>objeto e adicionar <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos ao mesmo.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>       Apesar do <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>instância criada por este construtor é só de leitura, pode continuar a aceder o indivíduo <xref:System.Web.UI.WebControls.WebParts.EditorPart>controla na coleção através de programação e as respetivas propriedades e métodos de chamada.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>       Um cenário comum para utilizar o construtor de EditorPartCollection seria se pretender efetuar algumas operações de lote num conjunto completo de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos, tal como alterar o conteúdo, o aspeto ou a posição de um grupo dos atributos relacionado.</xref:System.Web.UI.WebControls.WebParts.EditorPart>       Outro cenário comum para utilizar o construtor de EditorPartCollection está a desenvolver personalizada <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos que pretende associar um controlo de servidor, para que os utilizadores podem editar as propriedades personalizadas no controlo.</xref:System.Web.UI.WebControls.WebParts.EditorPart> Neste cenário, o controlo de servidor tem de implementar o <xref:System.Web.UI.WebControls.WebParts.IWebEditable>interface, como parte da tarefa, devendo proceder a <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>método.</xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.IWebEditable> Este método, para ativar a personalizada <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos para editar o controlo de servidor, tem de adicionar o <xref:System.Web.UI.WebControls.WebParts.EditorPart>controla a um <xref:System.Collections.ICollection>instância, tal como um <xref:System.Collections.ArrayList>objeto.</xref:System.Collections.ArrayList> </xref:System.Collections.ICollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> Em seguida, pode passar a coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos a <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>construtor para criar uma nova <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>de objeto, que o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>zona utiliza para configurar os controlos e iniciar o processo de edição.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to create a custom <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> and, even though the collection is read-only, still perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event creates an <xref:System.Collections.ArrayList> object, adds two of the three <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object using the EditorPartCollection constructor. It also demonstrates how you can make changes to the underlying <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, even though the collection is read-only.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/e5070951-5a25-4f76-bb91-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/e5070951-5a25-4f76-bb91-_1.aspx)]  \n  \n You can load the page in a browser and switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. You click the **Create EditorPartCollection** button to see the effects on the two <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that are added to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object."
  syntax:
    content: public EditorPartCollection (System.Collections.ICollection editorParts);
    parameters:
    - id: editorParts
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>de <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)
  id: '#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: EditorPartCollection(EditorPartCollection,ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> classe mediante a transmissão num <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos e um <xref:System.Collections.ICollection>coleção adicional de <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos.</xref:System.Collections.ICollection>"
  syntax:
    content: public EditorPartCollection (System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts);
    parameters:
    - id: existingEditorParts
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "Um <xref:System.Collections.ICollection>de existente <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos numa zona.</xref:System.Collections.ICollection>"
    - id: editorParts
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>de <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos não numa zona, mas criados através de programação.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  id: Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: Contains(EditorPart)
  nameWithType: EditorPartCollection.Contains(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(EditorPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Devolve um valor que indica se um determinado controlo está na coleção."
  remarks: "O método contém determina se um específico <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlo já está a ser o <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>objeto.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to determine whether a particular <xref:System.Web.UI.WebControls.WebParts.EditorPart> control is in an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event does not add the `LayoutEditorPart1` control to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object when it adds the other controls. To confirm that the `LayoutEditorPart1` control is not in the collection, the code uses the Contains method.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/969094d1-8b47-4d8c-86ee-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/969094d1-8b47-4d8c-86ee-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see the all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the background color of the `LayoutEditorPart1` control is different from the other controls, because it is not part of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WebParts.EditorPart editorPart);
    parameters:
    - id: editorPart
      type: System.Web.UI.WebControls.WebParts.EditorPart
      description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> a ser testados para atualizar o estado como membro da coleção."
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se o <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> na coleção."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: CopyTo(EditorPart[],Int32)
  nameWithType: EditorPartCollection.CopyTo(EditorPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(EditorPart[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Copia a coleção para uma matriz de <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlos."
  remarks: "O método CopyTo é útil quando pretender criar uma matriz de personalizado que pode conter o <xref:System.Web.UI.WebControls.WebParts.EditorPart>controla no <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>objeto, um subconjunto desses controlos ou um superconjunto desses controlos.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to create a custom array of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event creates an array of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, adds the `LayoutEditorPart1` control to the array, and then uses the CopyTo method to copy the controls from the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object to the array.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/3d4bbcff-7b5d-49cc-93ed-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/3d4bbcff-7b5d-49cc-93ed-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the titles of all the controls in the custom array are listed near the bottom of the page."
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.EditorPart[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.EditorPart[]
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> que contém a coleção de controlos copiada."
    - id: index
      type: System.Int32
      description: "O ponto de partida da matriz no qual pretende colocar o conteúdo da coleção."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  id: Empty
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: Empty
  nameWithType: EditorPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Referencia uma instância estática, como só de leitura, vazia da coleção."
  remarks: "Uma instância estática, como só de leitura, vazia do <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>reduz a utilização de memória em casos em que pretende que uma instância de coleção vazia para devolver o tipo de objeto correto a partir de um método ou para comparar a instância com outro objeto, mas não terá de adicionar membros à instância.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>"
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  id: IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: IndexOf(EditorPart)
  nameWithType: EditorPartCollection.IndexOf(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(EditorPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Devolve a posição de um membro da coleção específica."
  remarks: "O método IndexOf é útil se tiver vários <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlos de uma página de peças Web e tem de localizar um controlo específico na coleção.</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to use the IndexOf method to locate an <xref:System.Web.UI.WebControls.WebParts.EditorPart> control in an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event creates an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, and then uses the IndexOf method to locate the `PropertyGridEditorPart1` control in the collection, and set its <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> property.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/77edafbe-2b10-4862-af07-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/77edafbe-2b10-4862-af07-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the `PropertyGridEditorPart1` control, which is near the bottom of the page, has a title but no border."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WebParts.EditorPart editorPart);
    parameters:
    - id: editorPart
      type: System.Web.UI.WebControls.WebParts.EditorPart
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> que é um membro da coleção."
    return:
      type: System.Int32
      description: "Um número inteiro que corresponde ao índice de uma <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlo na coleção."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EditorPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Devolve um membro específico da coleção de acordo com um identificador exclusivo."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de uma determinada <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> numa coleção."
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPart
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> no índice especificado na coleção."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection()
  nameWithType: EditorPartCollection.EditorPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection(ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection(EditorPartCollection,ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Contains(EditorPart)
  nameWithType: EditorPartCollection.Contains(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(EditorPart)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.EditorPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPart
  nameWithType: EditorPart
  fullName: System.Web.UI.WebControls.WebParts.EditorPart
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: CopyTo(EditorPart[],Int32)
  nameWithType: EditorPartCollection.CopyTo(EditorPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(EditorPart[],Int32)
- uid: System.Web.UI.WebControls.WebParts.EditorPart[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPart
  nameWithType: EditorPart
  fullName: System.Web.UI.WebControls.WebParts.EditorPart[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.EditorPart
    name: EditorPart
    nameWithType: EditorPart
    fullName: EditorPart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Empty
  nameWithType: EditorPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: IndexOf(EditorPart)
  nameWithType: EditorPartCollection.IndexOf(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(EditorPart)
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: EditorPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Contains
  nameWithType: EditorPartCollection.Contains
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: CopyTo
  nameWithType: EditorPartCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: IndexOf
  nameWithType: EditorPartCollection.IndexOf
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Item
  nameWithType: EditorPartCollection.Item
