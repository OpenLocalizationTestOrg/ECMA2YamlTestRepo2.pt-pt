### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.RegistryAuditRule
  id: RegistryAuditRule
  children:
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.RegistryRights
  langs:
  - csharp
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule
  fullName: System.Security.AccessControl.RegistryAuditRule
  type: Class
  summary: "Representa um conjunto de direitos de acesso a serem auditados para um utilizador ou grupo. Esta classe não pode ser herdada."
  remarks: "A classe de RegistryAuditRule é um de um conjunto de classes que o .NET Framework fornece para gerir a segurança de controlo de acesso de Windows em chaves de registo. Para uma descrição geral destas classes e a respetiva relação estruturas de controlo de acesso de Windows subjacente, consulte <xref:System.Security.AccessControl.RegistrySecurity>.</xref:System.Security.AccessControl.RegistrySecurity>      > [!NOTE] > Só pode ser aplicada a segurança de controlo de acesso do Windows para as chaves de registo. Não é possível aplicar a pares chave/valor individual armazenados uma chave.       Para obter uma lista das regras de auditoria aplicado atualmente para uma chave de registo, utilize o <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>método para obter um <xref:System.Security.AccessControl.RegistrySecurity>de objeto e, em seguida, utilize o <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>método para obter uma coleção de objetos de RegistryAuditRule.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> </xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>       Objetos de RegistryAuditRule não mapeiam um para um com entradas de controlo de acesso na lista de controlo de acesso discricionário (DACL) subjacente. Quando chegar o conjunto de todas as regras para uma chave de registo de auditoria, o conjunto contém o número mínimo de regras necessárias atualmente para expressar todas as entradas de controlo de acesso.      > [!NOTE] > As entradas de controlo de acesso subjacente alterar como aplicar e remover regras. As informações nas regras intercaladas se possível, para manter o menor número de entradas de controlo de acesso. Assim, ao ler a lista atual de regras,-lo poderá não parece ser exatamente a lista de todas as regras que adicionou.       Utilize RegistryAuditRule objetos para especificar os direitos de acesso a serem auditados para um utilizador ou grupo. Para aplicar uma regra a uma chave de registo, utilize o <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>método para obter o <xref:System.Security.AccessControl.RegistrySecurity>objeto.</xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName> Modificar o <xref:System.Security.AccessControl.RegistrySecurity>objeto ao utilizar os seus métodos para adicionar a regra e, em seguida, utilize o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>método reattach o objeto de segurança.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>      > [!IMPORTANT] > Alterações efetuadas a um <xref:System.Security.AccessControl.RegistrySecurity>objeto não afetam os níveis de acesso da chave do registo até a chamar o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>método para atribuir o objeto de segurança alterada para a chave de registo.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>       Objetos de RegistryAuditRule são imutáveis. Segurança para uma chave de registo é modificada utilizando os métodos do <xref:System.Security.AccessControl.RegistrySecurity>classe para adicionar ou remover regras; como tal, as entradas de controlo de acesso subjacente são modificadas.</xref:System.Security.AccessControl.RegistrySecurity>"
  syntax:
    content: 'public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> classe, especificando o utilizador ou grupo para auditar, os direitos de auditoria, se deve colocar a herança na conta e a auditoria com êxito, falha ou ambos."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules."
  syntax:
    content: public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "O utilizador ou grupo a regra aplica-se. Tem de ser do tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ou um tipo como <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> que pode ser convertido no tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> valores especificar os tipos de acesso a auditoria."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valores especificando se se aplica a regra de auditoria para as subchaves da chave atual."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valores que afetam a forma como uma regra de auditoria herdados é propagada para as subchaves da chave atual."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores especificar se pretende auditoria com êxito, falha ou ambos."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Especifica um valor inválido.       - ou - <code>flags</code> Especifica um valor inválido.       - ou - <code>inheritanceFlags</code> Especifica um valor inválido.       - ou - <code>propagationFlags</code> Especifica um valor inválido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>registryRights</code> é zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>é nenhum tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> nem um tipo como <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> que pode ser convertido no tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> classe, especificando o nome de utilizador ou grupo a auditoria, os direitos de auditoria, se deve colocar a herança na conta e a auditoria com êxito, falha ou ambos."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.  \n  \n This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor."
  syntax:
    content: public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "O nome de utilizador ou grupo a regra aplica-se."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> valores especificar os tipos de acesso a auditoria."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Uma combinação de <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> sinalizadores que especifica se se aplica a regra de auditoria para as subchaves da chave atual."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Uma combinação de <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> sinalizadores que afetam a forma como uma regra de auditoria herdados é propagada para as subchaves da chave atual."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores especificar se pretende auditoria com êxito, falha ou ambos."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Especifica um valor inválido.       - ou - <code>flags</code> Especifica um valor inválido.       - ou - <code>inheritanceFlags</code> Especifica um valor inválido.       - ou - <code>propagationFlags</code> Especifica um valor inválido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>registryRights</code>é zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>identity</code> é uma cadeia de comprimento zero.       - ou - <code>identity</code> é superior a 512 caracteres."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  id: RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém os direitos de acesso afetados pela regra de auditoria."
  remarks: "<xref:System.Security.AccessControl.RegistryAuditRule>os objetos são imutáveis.</xref:System.Security.AccessControl.RegistryAuditRule> Pode criar uma nova regra de auditoria que representa um utilizador diferente, direitos diferentes ou uma combinação de diferentes <xref:System.Security.AccessControl.AuditFlags>sinalizadores, mas não é possível modificar uma regra de auditoria existente.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public System.Security.AccessControl.RegistryRights RegistryRights { get; }
    return:
      type: System.Security.AccessControl.RegistryRights
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> valores que indica os direitos afetados pela regra de auditoria."
  overload: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule.RegistryAuditRule
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
