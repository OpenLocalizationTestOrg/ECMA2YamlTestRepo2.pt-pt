### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.FeatureSupport
  id: FeatureSupport
  children:
  - System.Windows.Forms.FeatureSupport.#ctor
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  langs:
  - csharp
  name: FeatureSupport
  nameWithType: FeatureSupport
  fullName: System.Windows.Forms.FeatureSupport
  type: Class
  summary: "Provides <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref> methods for retrieving feature information from the current system."
  remarks: "Use the `static` methods of this class when the classes you query for feature information implement the <xref:System.Windows.Forms.IFeatureSupport> interface. Otherwise, inherit from FeatureSupport and provide your own implementation. For an implementation of this class, see <xref:System.Windows.Forms.OSFeature>.       To get the version number of a feature, call <xref:System.Windows.Forms.FeatureSupport.GetVersionPresent%2A>. Call <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to determine if a particular feature or version of a feature is installed."
  example:
  - "The following example uses the <xref:System.Windows.Forms.OSFeature> implementation of FeatureSupport and queries for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.f_11_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.f_11_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.f_11_1.cpp)]"
  syntax:
    content: 'public abstract class FeatureSupport : System.Windows.Forms.IFeatureSupport'
  inheritance:
  - System.Object
  implements:
  - System.Windows.Forms.IFeatureSupport
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.FeatureSupport.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.FeatureSupport
  langs:
  - csharp
  name: FeatureSupport()
  nameWithType: FeatureSupport.FeatureSupport()
  fullName: System.Windows.Forms.FeatureSupport.FeatureSupport()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.FeatureSupport&quot;></xref> class."
  syntax:
    content: protected FeatureSupport ();
    parameters: []
  overload: System.Windows.Forms.FeatureSupport.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FeatureSupport.GetVersionPresent(System.Object)
  id: GetVersionPresent(System.Object)
  parent: System.Windows.Forms.FeatureSupport
  langs:
  - csharp
  name: GetVersionPresent(Object)
  nameWithType: FeatureSupport.GetVersionPresent(Object)
  fullName: System.Windows.Forms.FeatureSupport.GetVersionPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "When overridden in a derived class, gets the version of the specified feature that is available on the system."
  remarks: 'Version numbers consist of three parts: major, minor, and build. Typically, a version number is displayed as &quot;major number.minor number.build number&quot;.'
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OSFeature> implementation of <xref:System.Windows.Forms.FeatureSupport> and queries for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code requires that `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_0_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_0_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_0_1.cpp)]"
  syntax:
    content: public abstract Version GetVersionPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "The feature whose version is requested."
    return:
      type: System.Version
      description: "A <xref:System.Version> representing the version number of the specified feature available on the system; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the feature is not installed."
  overload: System.Windows.Forms.FeatureSupport.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  id: GetVersionPresent(System.String,System.String)
  parent: System.Windows.Forms.FeatureSupport
  langs:
  - csharp
  name: GetVersionPresent(String,String)
  nameWithType: FeatureSupport.GetVersionPresent(String,String)
  fullName: System.Windows.Forms.FeatureSupport.GetVersionPresent(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the version of the specified feature that is available on the system."
  remarks: "Version numbers consist of three parts: major, minor, and build. Typically, a version number is displayed as &quot;major number.minor number.build number&quot;.       See the documentation for the product containing the feature to determine the names to pass to the `featureClassName` and the `featureConstName` parameters."
  syntax:
    content: public static Version GetVersionPresent (string featureClassName, string featureConstName);
    parameters:
    - id: featureClassName
      type: System.String
      description: "The fully qualified name of the class to query for information about the specified feature. This class must implement the <xref href=&quot;System.Windows.Forms.IFeatureSupport&quot;></xref> interface or inherit from a class that implements this interface."
    - id: featureConstName
      type: System.String
      description: "The fully qualified name of the feature to look for."
    return:
      type: System.Version
      description: "A <xref:System.Version> with the version number of the specified feature available on the system; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the feature is not installed."
  overload: System.Windows.Forms.FeatureSupport.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  id: IsPresent(System.Object)
  parent: System.Windows.Forms.FeatureSupport
  langs:
  - csharp
  name: IsPresent(Object)
  nameWithType: FeatureSupport.IsPresent(Object)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether any version of the specified feature is installed in the system."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OSFeature> implementation of <xref:System.Windows.Forms.FeatureSupport> and queries for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code requires that `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_2_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_2_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_2_1.cpp)]"
  syntax:
    content: public virtual bool IsPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "The feature to look for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the feature is present; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.FeatureSupport.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  id: IsPresent(System.Object,System.Version)
  parent: System.Windows.Forms.FeatureSupport
  langs:
  - csharp
  name: IsPresent(Object,Version)
  nameWithType: FeatureSupport.IsPresent(Object,Version)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(Object,Version)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether the specified or newer version of the specified feature is installed in the system."
  syntax:
    content: public virtual bool IsPresent (object feature, Version minimumVersion);
    parameters:
    - id: feature
      type: System.Object
      description: "The feature to look for."
    - id: minimumVersion
      type: System.Version
      description: "A <xref:System.Version> representing the minimum version number of the feature to look for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the feature is present and its version number is greater than or equal to the specified minimum version number; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the feature is not installed or its version number is below the specified minimum number."
  overload: System.Windows.Forms.FeatureSupport.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  id: IsPresent(System.String,System.String)
  parent: System.Windows.Forms.FeatureSupport
  langs:
  - csharp
  name: IsPresent(String,String)
  nameWithType: FeatureSupport.IsPresent(String,String)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether any version of the specified feature is installed in the system. This method is <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>."
  remarks: "See the documentation for the product containing the feature to determine the names to pass to the `featureClassName` and the `featureConstName` parameters."
  syntax:
    content: public static bool IsPresent (string featureClassName, string featureConstName);
    parameters:
    - id: featureClassName
      type: System.String
      description: "The fully qualified name of the class to query for information about the specified feature. This class must implement the <xref href=&quot;System.Windows.Forms.IFeatureSupport&quot;></xref> interface or inherit from a class that implements this interface."
    - id: featureConstName
      type: System.String
      description: "The fully qualified name of the feature to look for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified feature is present; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the specified feature is not present or if the product containing the feature is not installed."
  overload: System.Windows.Forms.FeatureSupport.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  id: IsPresent(System.String,System.String,System.Version)
  parent: System.Windows.Forms.FeatureSupport
  langs:
  - csharp
  name: IsPresent(String,String,Version)
  nameWithType: FeatureSupport.IsPresent(String,String,Version)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(String,String,Version)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether the specified or newer version of the specified feature is installed in the system. This method is <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>."
  remarks: "See the documentation for the product containing the feature to determine the names to pass to the `featureClassName` and the `featureConstName` parameters."
  syntax:
    content: public static bool IsPresent (string featureClassName, string featureConstName, Version minimumVersion);
    parameters:
    - id: featureClassName
      type: System.String
      description: "The fully qualified name of the class to query for information about the specified feature. This class must implement the <xref href=&quot;System.Windows.Forms.IFeatureSupport&quot;></xref> interface or inherit from a class that implements this interface."
    - id: featureConstName
      type: System.String
      description: "The fully qualified name of the feature to look for."
    - id: minimumVersion
      type: System.Version
      description: "A <xref:System.Version> representing the minimum version number of the feature."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the feature is present and its version number is greater than or equal to the specified minimum version number; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the feature is not installed or its version number is below the specified minimum number."
  overload: System.Windows.Forms.FeatureSupport.IsPresent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.FeatureSupport.#ctor
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: FeatureSupport()
  nameWithType: FeatureSupport.FeatureSupport()
  fullName: System.Windows.Forms.FeatureSupport.FeatureSupport()
- uid: System.Windows.Forms.FeatureSupport.GetVersionPresent(System.Object)
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: GetVersionPresent(Object)
  nameWithType: FeatureSupport.GetVersionPresent(Object)
  fullName: System.Windows.Forms.FeatureSupport.GetVersionPresent(Object)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: GetVersionPresent(String,String)
  nameWithType: FeatureSupport.GetVersionPresent(String,String)
  fullName: System.Windows.Forms.FeatureSupport.GetVersionPresent(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: IsPresent(Object)
  nameWithType: FeatureSupport.IsPresent(Object)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: IsPresent(Object,Version)
  nameWithType: FeatureSupport.IsPresent(Object,Version)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(Object,Version)
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: IsPresent(String,String)
  nameWithType: FeatureSupport.IsPresent(String,String)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(String,String)
- uid: System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: IsPresent(String,String,Version)
  nameWithType: FeatureSupport.IsPresent(String,String,Version)
  fullName: System.Windows.Forms.FeatureSupport.IsPresent(String,String,Version)
- uid: System.Windows.Forms.FeatureSupport.#ctor*
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: FeatureSupport
  nameWithType: FeatureSupport.FeatureSupport
- uid: System.Windows.Forms.FeatureSupport.GetVersionPresent*
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: GetVersionPresent
  nameWithType: FeatureSupport.GetVersionPresent
- uid: System.Windows.Forms.FeatureSupport.IsPresent*
  parent: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: IsPresent
  nameWithType: FeatureSupport.IsPresent
