### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.PagerSettings
  id: PagerSettings
  children:
  - System.Web.UI.WebControls.PagerSettings.#ctor
  - System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl
  - System.Web.UI.WebControls.PagerSettings.FirstPageText
  - System.Web.UI.WebControls.PagerSettings.LastPageImageUrl
  - System.Web.UI.WebControls.PagerSettings.LastPageText
  - System.Web.UI.WebControls.PagerSettings.Mode
  - System.Web.UI.WebControls.PagerSettings.NextPageImageUrl
  - System.Web.UI.WebControls.PagerSettings.NextPageText
  - System.Web.UI.WebControls.PagerSettings.PageButtonCount
  - System.Web.UI.WebControls.PagerSettings.Position
  - System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl
  - System.Web.UI.WebControls.PagerSettings.PreviousPageText
  - System.Web.UI.WebControls.PagerSettings.PropertyChanged
  - System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.PagerSettings.ToString
  - System.Web.UI.WebControls.PagerSettings.Visible
  langs:
  - csharp
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
  type: Class
  summary: "Represents the properties of the paging controls in a control that supports pagination. This class cannot be inherited."
  remarks: "Controls that support pagination (such as the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView> controls) can display a set of controls called *the pager* that allows the user to navigate the pages within the control. The PagerSettings class is used by these controls to represent the properties of the pager. In general, the PagerSettings object is stored in the `PagerSettings` property of the control. You can customize the pager by setting the properties of the PagerSettings object.       The pager supports several different display modes. To specify the mode in which to display the pager, set the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property. The following table describes the different modes.      |Mode|Description|   |----------|-----------------|   |<xref:System.Web.UI.WebControls.PagerButtons>|Previous-page and next-page buttons.|   |<xref:System.Web.UI.WebControls.PagerButtons>|Previous-page, next-page, first-page, and last -page buttons.|   |<xref:System.Web.UI.WebControls.PagerButtons>|Numbered link buttons to access pages directly.|   |<xref:System.Web.UI.WebControls.PagerButtons>|Numbered-link, first-link, and last-link buttons.|       When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons>, <xref:System.Web.UI.WebControls.PagerButtons>, or <xref:System.Web.UI.WebControls.PagerButtons> value you can customize the text of the non-numeric buttons by setting the properties shown in the following table.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.PagerSettings.FirstPageText%2A>|Text for the first-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.PreviousPageText%2A>|Text for the previous-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.NextPageText%2A>|Text for the next-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.LastPageText%2A>|Text for the last-page button.|       As an alternative, you can also display images for the non-numeric buttons by setting the properties as shown in the following table.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl%2A>|The URL to an image to display for the first-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl%2A>|The URL to an image to display for the previous-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.NextPageImageUrl%2A>|The URL to an image to display for the next-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.LastPageImageUrl%2A>|The URL to an image to display for the last-page button.|      > [!NOTE] >  When an image property is set, the corresponding text property acts as the alternate text for the image. For example, when the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl%2A> property is set, the text that is specified by the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageText%2A> property is displayed as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, you can specify the number of page buttons to display in the pager by setting the <xref:System.Web.UI.WebControls.PagerSettings.PageButtonCount%2A> property.       The pager can be displayed at the top, the bottom, or both the top and bottom of a control. To specify the position of the pager, set the <xref:System.Web.UI.WebControls.PagerSettings.Position%2A> property. To show or hide the pager, use the <xref:System.Web.UI.WebControls.PagerSettings.Visible%2A> property."
  example:
  - "The following code example demonstrates how to use the PagerSettings object that is contained in the <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> property to customize the text of the buttons that are displayed in the pager row of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[PagerSettingsText#1](~/add/codesnippet/VisualBasic/t-system.web.ui.webcontr_5_1.aspx)]\n [!code-cs[PagerSettingsText#1](~/add/codesnippet/CSharp/t-system.web.ui.webcontr_5_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public sealed class PagerSettings : System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: PagerSettings()
  nameWithType: PagerSettings.PagerSettings()
  fullName: System.Web.UI.WebControls.PagerSettings.PagerSettings()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Web.UI.WebControls.PagerSettings&quot;></see> class."
  remarks: "Use the PagerSettings constructor to create a new instance of the <xref:System.Web.UI.WebControls.PagerSettings> class.      > [!NOTE] >  The PagerSettings constructor generally is used by control developers when providing paging support in a custom control."
  syntax:
    content: public PagerSettings ();
    parameters: []
  overload: System.Web.UI.WebControls.PagerSettings.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl
  id: FirstPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: FirstPageImageUrl
  nameWithType: PagerSettings.FirstPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for the first-page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the FirstPageImageUrl property to specify the URL to an image to display for the first-page button.      > [!NOTE] >  As an alternative, you can display text for the first-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageText%2A> property instead of the FirstPageImageUrl property. If the FirstPageImageUrl and <xref:System.Web.UI.WebControls.PagerSettings.FirstPageText%2A> properties are both set, the image is displayed with the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageText%2A> property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the FirstPageImageUrl property to display an image for the first-page button in the pager row of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[PagerSettingsImages#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1218_1.aspx)]\n [!code-vb[PagerSettingsImages#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1218_1.aspx)]"
  syntax:
    content: public string FirstPageImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for the first-page button. The default is an empty string (&quot;&quot;), which indicates that the FirstPageImageUrl is not set."
  overload: System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.FirstPageText
  id: FirstPageText
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: FirstPageText
  nameWithType: PagerSettings.FirstPageText
  fullName: System.Web.UI.WebControls.PagerSettings.FirstPageText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display for the first-page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the FirstPageText property to specify the text to display for the first-page button.      > [!NOTE] >  As an alternative, you can display an image for the first-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl%2A> property instead of the FirstPageText property. If the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl%2A> and FirstPageText properties are both set, the image is displayed with the FirstPageText property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the FirstPageText property to customize the text that is displayed for the first-page button of the pager row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[PagerSettingsText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1140_1.aspx)]\n [!code-cs[PagerSettingsText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1140_1.aspx)]"
  syntax:
    content: public string FirstPageText { get; set; }
    return:
      type: System.String
      description: "The text to display for the first-page button. The default is `&quot;&lt;&lt;&quot;`, which renders as `&quot;"
  overload: System.Web.UI.WebControls.PagerSettings.FirstPageText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.LastPageImageUrl
  id: LastPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: LastPageImageUrl
  nameWithType: PagerSettings.LastPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.LastPageImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for the last-page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the LastPageImageUrl property to specify the URL to an image to display for the last-page button.      > [!NOTE] >  As an alternative, you can simply display text for the last-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.LastPageText%2A> property instead of the LastPageImageUrl property. If the LastPageImageUrl and <xref:System.Web.UI.WebControls.PagerSettings.LastPageText%2A> properties are both set, the image is displayed with the <xref:System.Web.UI.WebControls.PagerSettings.LastPageText%2A> property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the LastPageImageUrl property to display an image for the last-page button in the pager row of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[PagerSettingsImages#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1321_1.aspx)]\n [!code-vb[PagerSettingsImages#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1321_1.aspx)]"
  syntax:
    content: public string LastPageImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for the last-page button. The default is an empty string (&quot;&quot;), which indicates that the LastPageImageUrl is not set."
  overload: System.Web.UI.WebControls.PagerSettings.LastPageImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.LastPageText
  id: LastPageText
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: LastPageText
  nameWithType: PagerSettings.LastPageText
  fullName: System.Web.UI.WebControls.PagerSettings.LastPageText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display for the last-page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the LastPageText property to specify the text to display for the last-page button.      > [!NOTE] >  As an alternative, you can display an image for the last-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.LastPageImageUrl%2A> property instead of the LastPageText property. If the <xref:System.Web.UI.WebControls.PagerSettings.LastPageImageUrl%2A> and LastPageText properties are both set, the image is displayed with the LastPageText property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the LastPageText property to customize the text that is displayed for the last-page button of the pager row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[PagerSettingsText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_447_1.aspx)]\n [!code-cs[PagerSettingsText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_447_1.aspx)]"
  syntax:
    content: public string LastPageText { get; set; }
    return:
      type: System.String
      description: "The text to display for the last-page button. The default is `&quot;&gt;&gt;&quot;`, which renders as `&quot;&gt;&gt;&quot;`."
  overload: System.Web.UI.WebControls.PagerSettings.LastPageText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.Mode
  id: Mode
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: Mode
  nameWithType: PagerSettings.Mode
  fullName: System.Web.UI.WebControls.PagerSettings.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the mode in which to display the pager controls in a control that supports pagination."
  remarks: "Controls that support pagination provide multiple modes in which to display the paging controls. Use the Mode property to specify the mode. The following table describes the different modes for pagination controls.      |Mode|Description|   |----------|-----------------|   |<xref:System.Web.UI.WebControls.PagerButtons>|Previous-page and next-page buttons.|   |<xref:System.Web.UI.WebControls.PagerButtons>|Previous-page, next-page, first-page, and last-page buttons.|   |<xref:System.Web.UI.WebControls.PagerButtons>|Numbered link buttons to access pages directly.|   |<xref:System.Web.UI.WebControls.PagerButtons>|Numbered and first-link and last-link buttons.|       When the Mode property is set to the <xref:System.Web.UI.WebControls.PagerButtons>, <xref:System.Web.UI.WebControls.PagerButtons>, or <xref:System.Web.UI.WebControls.PagerButtons> value, you can specify custom text for the non-numeric buttons by setting the properties shown in the following table.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.PagerSettings.FirstPageText%2A>|Text for the first-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.PreviousPageText%2A>|Text for the previous-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.NextPageText%2A>|Text for the next-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.LastPageText%2A>|Text for the last-page button.|       As an alternative, you can also display images for the non-numeric buttons by setting the properties shown in the following table.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl%2A>|The URL to an image to display for the first-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl%2A>|The URL to an image to display for the previous-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.NextPageImageUrl%2A>|The URL to an image to display for the next-page button.|   |<xref:System.Web.UI.WebControls.PagerSettings.LastPageImageUrl%2A>|The URL to an image to display for the last-page button.|      > [!NOTE] >  When an image property is set, the corresponding text property acts as the alternate text for the image. For example, when the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl%2A> property is set, the text that is specified by the <xref:System.Web.UI.WebControls.PagerSettings.FirstPageText%2A> property is displayed as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the Mode property to specify that the pager row for a <xref:System.Web.UI.WebControls.GridView> control should display numeric buttons.  \n  \n [!code-cs[PagerSettingsNumeric#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_548_1.aspx)]\n [!code-vb[PagerSettingsNumeric#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_548_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.PagerButtons Mode { get; set; }
    return:
      type: System.Web.UI.WebControls.PagerButtons
      description: "One of the <see cref=&quot;T:System.Web.UI.WebControls.PagerButtons&quot;></see> values. The default is <xref uid=&quot;langword_csharp_PagerButtons.Numeric&quot; name=&quot;PagerButtons.Numeric&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.PagerSettings.Mode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The Mode is set to a value that is not one of the  values."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.NextPageImageUrl
  id: NextPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: NextPageImageUrl
  nameWithType: PagerSettings.NextPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.NextPageImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for the next-page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the NextPageImageUrl property to specify the URL to an image to display for the next-page button.      > [!NOTE] >  As an alternative, you can simply display text for the next-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.NextPageText%2A> property instead of the NextPageImageUrl property. If the NextPageImageUrl and <xref:System.Web.UI.WebControls.PagerSettings.NextPageText%2A> properties are both set, the image is displayed with the <xref:System.Web.UI.WebControls.PagerSettings.NextPageText%2A> property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the NextPageImageUrl property to display an image for the next-page button in the pager row of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[PagerSettingsImages#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_131_1.aspx)]\n [!code-vb[PagerSettingsImages#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_131_1.aspx)]"
  syntax:
    content: public string NextPageImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for the next-page button. The default is an empty string (&quot;&quot;), which indicates that the NextPageImageUrl is not set."
  overload: System.Web.UI.WebControls.PagerSettings.NextPageImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.NextPageText
  id: NextPageText
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: NextPageText
  nameWithType: PagerSettings.NextPageText
  fullName: System.Web.UI.WebControls.PagerSettings.NextPageText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display for the next-page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the NextPageText property to specify the text to display for the next-page button.      > [!NOTE] >  As an alternative, you can display an image for the next-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.NextPageImageUrl%2A> property instead of the NextPageText property. If the <xref:System.Web.UI.WebControls.PagerSettings.NextPageImageUrl%2A> and NextPageText properties are both set, the image is displayed with the NextPageText property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the NextPageText property to customize the text that is displayed for the next-page button of the pager row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[PagerSettingsText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1075_1.aspx)]\n [!code-cs[PagerSettingsText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1075_1.aspx)]"
  syntax:
    content: public string NextPageText { get; set; }
    return:
      type: System.String
      description: "The text to display for the next-page button. The default is `&quot;&gt;&quot;`, which renders as `&quot;&gt;&quot;`."
  overload: System.Web.UI.WebControls.PagerSettings.NextPageText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.PageButtonCount
  id: PageButtonCount
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: PageButtonCount
  nameWithType: PagerSettings.PageButtonCount
  fullName: System.Web.UI.WebControls.PagerSettings.PageButtonCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the number of page buttons to display in the pager when the &lt;xref:System.Web.UI.WebControls.PagerSettings.Mode%2A&gt; property is set to the <see cref=&quot;T:System.Web.UI.WebControls.PagerButtons&quot;></see> or <see cref=&quot;T:System.Web.UI.WebControls.PagerButtons&quot;></see> value."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the PageButtonCount property to specify the number of page buttons to display in the pager.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the PageButtonCount property to display five page buttons at a time in the pager row of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[PagerSettingsNumeric#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1011_1.aspx)]\n [!code-vb[PagerSettingsNumeric#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1011_1.aspx)]"
  syntax:
    content: public int PageButtonCount { get; set; }
    return:
      type: System.Int32
      description: "The number of page buttons to display in the pager. The default is 10."
  overload: System.Web.UI.WebControls.PagerSettings.PageButtonCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The PageButtonCount is set to a value that is less than 1."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.Position
  id: Position
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: Position
  nameWithType: PagerSettings.Position
  fullName: System.Web.UI.WebControls.PagerSettings.Position
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that specifies the location where the pager is displayed."
  remarks: "Use the Position property to specify the location at which to display the pager. The following table describes the different positions.      |Position|Location|   |--------------|--------------|   |<xref:System.Web.UI.WebControls.PagerPosition>|The bottom of the control.|   |<xref:System.Web.UI.WebControls.PagerPosition>|The top of the control.|   |<xref:System.Web.UI.WebControls.PagerPosition>|At both the top and bottom of the control.|       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the Position property to display the pager row at the bottom of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[PagerSettingsText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1173_1.aspx)]\n [!code-cs[PagerSettingsText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1173_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.PagerPosition Position { get; set; }
    return:
      type: System.Web.UI.WebControls.PagerPosition
      description: "One of the <see cref=&quot;T:System.Web.UI.WebControls.PagerPosition&quot;></see> values. The default is <see cref=&quot;T:System.Web.UI.WebControls.PagerPosition&quot;></see>."
  overload: System.Web.UI.WebControls.PagerSettings.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The Position is set to a value that is not one of the  values."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl
  id: PreviousPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: PreviousPageImageUrl
  nameWithType: PagerSettings.PreviousPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for the previous-page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the PreviousPageImageUrl property to specify the URL to an image to display for the previous-page button.      > [!NOTE] >  As an alternative, you can display text for the previous-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.PreviousPageText%2A> property instead of the PreviousPageImageUrl property. If the PreviousPageImageUrl and <xref:System.Web.UI.WebControls.PagerSettings.PreviousPageText%2A> properties are both set, the image is displayed with the <xref:System.Web.UI.WebControls.PagerSettings.PreviousPageText%2A> property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the PreviousPageImageUrl property to display an image for the previous-page button in the pager row of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[PagerSettingsImages#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_417_1.aspx)]\n [!code-vb[PagerSettingsImages#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_417_1.aspx)]"
  syntax:
    content: public string PreviousPageImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for the previous-page button. The default is an empty string (&quot;&quot;), which indicates that the PreviousPageImageUrl is not set."
  overload: System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.PreviousPageText
  id: PreviousPageText
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: PreviousPageText
  nameWithType: PagerSettings.PreviousPageText
  fullName: System.Web.UI.WebControls.PagerSettings.PreviousPageText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display for the previous page button."
  remarks: "When the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property is set to the <xref:System.Web.UI.WebControls.PagerButtons> or <xref:System.Web.UI.WebControls.PagerButtons> value, use the PreviousPageText property to specify the text to display for the previous-page button.      > [!NOTE] >  As an alternative, you can display an image for the previous-page button by setting the <xref:System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl%2A> property instead of the PreviousPageText property. If the <xref:System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl%2A> and PreviousPageText properties are both set, the image is displayed with the PreviousPageText property acting as the alternate text for the image. On browsers that support ToolTips, this text is also displayed as a ToolTip for the corresponding button.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the PreviousPageText property to customize the text that is displayed for the previous-page button of the pager row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[PagerSettingsText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[PagerSettingsText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public string PreviousPageText { get; set; }
    return:
      type: System.String
      description: "The text to display for the previous page button. The default is `&quot;&lt;&quot;`, which renders as `&quot;"
  overload: System.Web.UI.WebControls.PagerSettings.PreviousPageText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.PropertyChanged
  id: PropertyChanged
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: PagerSettings.PropertyChanged
  fullName: System.Web.UI.WebControls.PagerSettings.PropertyChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Occurs when a property of a <see cref=&quot;T:System.Web.UI.WebControls.PagerSettings&quot;></see> object changes values."
  remarks: "The PropertyChanged event is raised each time a property of a <xref:System.Web.UI.WebControls.PagerSettings> object changes values. The PropertyChanged event commonly is used by data-bound controls that support pagination to rebind the data to the control when the pager settings change.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PropertyChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: PagerSettings.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value that indicates whether the server control is tracking its view state changes."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.PagerSettings> instance is cast to the <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data source view is marked to save its state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: PagerSettings.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Loads the previously saved view state of the <see cref=&quot;T:System.Web.UI.WebControls.PagerSettings&quot;></see> object."
  remarks: "Use the IStateManager.LoadViewState method to load the previously saved view state of the <xref:System.Web.UI.WebControls.PagerSettings> object.      > [!NOTE] >  The IStateManager.LoadViewState method is private and cannot be called."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An object that represents the state of the ."
  overload: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: PagerSettings.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the current view state of the <see cref=&quot;T:System.Web.UI.WebControls.PagerSettings&quot;></see> object."
  remarks: "The IStateManager.SaveViewState method is a helper method that is used by the <xref:System.Web.UI.WebControls.PagerSettings> class to save the state of the object.      > [!NOTE] >  The IStateManager.SaveViewState method is private and cannot be called."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: PagerSettings.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Marks the starting point at which to begin tracking and saving view state changes to the <see cref=&quot;T:System.Web.UI.WebControls.PagerSettings&quot;></see> object."
  remarks: "The IStateManager.TrackViewState method is overridden to mark the starting point at which to begin tracking and saving changes to the <xref:System.Web.UI.WebControls.PagerSettings> object as part of the view state for the object.      > [!NOTE] >  The IStateManager.TrackViewState method is private and cannot be called."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.ToString
  id: ToString
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: ToString()
  nameWithType: PagerSettings.ToString()
  fullName: System.Web.UI.WebControls.PagerSettings.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retrieves the string representation of a <see cref=&quot;T:System.Web.UI.WebControls.PagerSettings&quot;></see> object."
  remarks: "The ToString method is used to retrieve a string representation of a <xref:System.Web.UI.WebControls.PagerSettings> object. The ToString method has been overridden to always return an empty string."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.UI.WebControls.PagerSettings.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.PagerSettings.Visible
  id: Visible
  parent: System.Web.UI.WebControls.PagerSettings
  langs:
  - csharp
  name: Visible
  nameWithType: PagerSettings.Visible
  fullName: System.Web.UI.WebControls.PagerSettings.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether the paging controls are displayed in a control that supports pagination."
  remarks: "Use the Visible property to specify whether the paging controls are displayed in a control that supports pagination. To hide the paging controls, set the Visible property to `false`.       The value of this property is stored in view state."
  example:
  - "The following code example demonstrates how to use the Visible property to hide the pager row when a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.  \n  \n [!code-vb[PagerSettingsVisible#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1323_1.aspx)]\n [!code-cs[PagerSettingsVisible#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1323_1.aspx)]"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display the pager; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.PagerSettings.Visible*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.PagerSettings.#ctor
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PagerSettings()
  nameWithType: PagerSettings.PagerSettings()
  fullName: System.Web.UI.WebControls.PagerSettings.PagerSettings()
- uid: System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: FirstPageImageUrl
  nameWithType: PagerSettings.FirstPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.PagerSettings.FirstPageText
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: FirstPageText
  nameWithType: PagerSettings.FirstPageText
  fullName: System.Web.UI.WebControls.PagerSettings.FirstPageText
- uid: System.Web.UI.WebControls.PagerSettings.LastPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: LastPageImageUrl
  nameWithType: PagerSettings.LastPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.LastPageImageUrl
- uid: System.Web.UI.WebControls.PagerSettings.LastPageText
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: LastPageText
  nameWithType: PagerSettings.LastPageText
  fullName: System.Web.UI.WebControls.PagerSettings.LastPageText
- uid: System.Web.UI.WebControls.PagerSettings.Mode
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: Mode
  nameWithType: PagerSettings.Mode
  fullName: System.Web.UI.WebControls.PagerSettings.Mode
- uid: System.Web.UI.WebControls.PagerButtons
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerButtons
  nameWithType: PagerButtons
  fullName: System.Web.UI.WebControls.PagerButtons
- uid: System.Web.UI.WebControls.PagerSettings.NextPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: NextPageImageUrl
  nameWithType: PagerSettings.NextPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.NextPageImageUrl
- uid: System.Web.UI.WebControls.PagerSettings.NextPageText
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: NextPageText
  nameWithType: PagerSettings.NextPageText
  fullName: System.Web.UI.WebControls.PagerSettings.NextPageText
- uid: System.Web.UI.WebControls.PagerSettings.PageButtonCount
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PageButtonCount
  nameWithType: PagerSettings.PageButtonCount
  fullName: System.Web.UI.WebControls.PagerSettings.PageButtonCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.PagerSettings.Position
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: Position
  nameWithType: PagerSettings.Position
  fullName: System.Web.UI.WebControls.PagerSettings.Position
- uid: System.Web.UI.WebControls.PagerPosition
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerPosition
  nameWithType: PagerPosition
  fullName: System.Web.UI.WebControls.PagerPosition
- uid: System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PreviousPageImageUrl
  nameWithType: PagerSettings.PreviousPageImageUrl
  fullName: System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl
- uid: System.Web.UI.WebControls.PagerSettings.PreviousPageText
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PreviousPageText
  nameWithType: PagerSettings.PreviousPageText
  fullName: System.Web.UI.WebControls.PagerSettings.PreviousPageText
- uid: System.Web.UI.WebControls.PagerSettings.PropertyChanged
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PropertyChanged
  nameWithType: PagerSettings.PropertyChanged
  fullName: System.Web.UI.WebControls.PagerSettings.PropertyChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: PagerSettings.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: PagerSettings.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: PagerSettings.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: PagerSettings.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.PagerSettings.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.PagerSettings.ToString
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: ToString()
  nameWithType: PagerSettings.ToString()
  fullName: System.Web.UI.WebControls.PagerSettings.ToString()
- uid: System.Web.UI.WebControls.PagerSettings.Visible
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: Visible
  nameWithType: PagerSettings.Visible
  fullName: System.Web.UI.WebControls.PagerSettings.Visible
- uid: System.Web.UI.WebControls.PagerSettings.#ctor*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings.FirstPageImageUrl*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: FirstPageImageUrl
  nameWithType: PagerSettings.FirstPageImageUrl
- uid: System.Web.UI.WebControls.PagerSettings.FirstPageText*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: FirstPageText
  nameWithType: PagerSettings.FirstPageText
- uid: System.Web.UI.WebControls.PagerSettings.LastPageImageUrl*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: LastPageImageUrl
  nameWithType: PagerSettings.LastPageImageUrl
- uid: System.Web.UI.WebControls.PagerSettings.LastPageText*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: LastPageText
  nameWithType: PagerSettings.LastPageText
- uid: System.Web.UI.WebControls.PagerSettings.Mode*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: Mode
  nameWithType: PagerSettings.Mode
- uid: System.Web.UI.WebControls.PagerSettings.NextPageImageUrl*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: NextPageImageUrl
  nameWithType: PagerSettings.NextPageImageUrl
- uid: System.Web.UI.WebControls.PagerSettings.NextPageText*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: NextPageText
  nameWithType: PagerSettings.NextPageText
- uid: System.Web.UI.WebControls.PagerSettings.PageButtonCount*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PageButtonCount
  nameWithType: PagerSettings.PageButtonCount
- uid: System.Web.UI.WebControls.PagerSettings.Position*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: Position
  nameWithType: PagerSettings.Position
- uid: System.Web.UI.WebControls.PagerSettings.PreviousPageImageUrl*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PreviousPageImageUrl
  nameWithType: PagerSettings.PreviousPageImageUrl
- uid: System.Web.UI.WebControls.PagerSettings.PreviousPageText*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: PreviousPageText
  nameWithType: PagerSettings.PreviousPageText
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: PagerSettings.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: PagerSettings.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: PagerSettings.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.PagerSettings.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: PagerSettings.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.PagerSettings.ToString*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: ToString
  nameWithType: PagerSettings.ToString
- uid: System.Web.UI.WebControls.PagerSettings.Visible*
  parent: System.Web.UI.WebControls.PagerSettings
  isExternal: false
  name: Visible
  nameWithType: PagerSettings.Visible
