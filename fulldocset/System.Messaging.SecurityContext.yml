### YamlMime:ManagedReference
items:
- uid: System.Messaging.SecurityContext
  id: SecurityContext
  children:
  - System.Messaging.SecurityContext.Dispose
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Messaging.SecurityContext
  type: Class
  summary: "Representa o contexto de segurança de uma mensagem numa fila."
  remarks: "O contexto de segurança contém informações de segurança em cache, tais como um certificado interno, a chave privada correspondente, o SID do utilizador, necessária para anexar um certificado e o identificador do remetente uma mensagem quando pedir autenticação.       Se um cliente, como uma aplicação ASP.NET, representa tem um utilizador para enviar uma mensagem para uma fila, a identidade do utilizador é utilizada para aceder a fila. Se a fila está remota, estas credenciais são colocadas em cache e utilizadas para as mensagens que posteriormente são enviadas para a fila. Por conseguinte, o SID nas mensagens subsequentes serão a identidade em cache do primeiro utilizador que enviou uma mensagem para a fila. A identidade em cache do primeiro utilizador que enviou uma mensagem para a fila será utilizada para os utilizadores subsequentes.       Para ultrapassar o problema, defina o contexto de segurança utilizando <xref:System.Messaging.Message.SecurityContext%2A>antes de enviar uma mensagem para uma fila remota para se certificar de que as credenciais do utilizador atual são utilizadas para obter acesso para a fila.</xref:System.Messaging.Message.SecurityContext%2A> No entanto, é a melhor prática sugerida: 1.  Se a fila de uma fila autenticada.      2.  Executar a aplicação ASP.NET como uma identidade de domínio e autorizar essa aplicação para escrever para a fila.      3.  Não represente o utilizador ao utilizar a fila. Em vez disso, obter a identidade do emissor e efetuar a verificação da aplicação ASP.NET de autorização ou incluir a identidade do emissor como parte da mensagem e efetuar a verificação da aplicação de recetor de autorização."
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.SecurityContext.Dispose
  id: Dispose
  parent: System.Messaging.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Messaging.SecurityContext&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.SecurityContext.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.SecurityContext.Dispose
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
- uid: System.Messaging.SecurityContext.Dispose*
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
