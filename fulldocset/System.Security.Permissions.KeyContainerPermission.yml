### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermission
  id: KeyContainerPermission
  children:
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  - System.Security.Permissions.KeyContainerPermission.AccessEntries
  - System.Security.Permissions.KeyContainerPermission.Copy
  - System.Security.Permissions.KeyContainerPermission.Flags
  - System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  - System.Security.Permissions.KeyContainerPermission.ToXml
  - System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission
  fullName: System.Security.Permissions.KeyContainerPermission
  type: Class
  summary: "Controla a capacidade de aceder contentores de chaves. Esta classe não pode ser herdada."
  remarks: "Esta permissão é utilizado para fornecer acesso limitado a contentores de chaves."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> classe com o acesso especificado."
  remarks: ''
  example:
  - "The following code example shows the use of the KeyContainerPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/csharp/dcb7bb7e-ef30-44de-aaf3-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/cpp/dcb7bb7e-ef30-44de-aaf3-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/visualbasic/dcb7bb7e-ef30-44de-aaf3-_1.vb)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> valores."
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>Não é uma combinação válida do <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> classe com permissão restrita ou sem restrições."
  remarks: "Cria um `None` (totalmente restrito) ou `Unrestricted` acesso a contentores de chaves."
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Um do <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valores."
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>Não é um <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valor."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> classe com o acesso global especificado e os direitos de acesso do contentor de chaves específico."
  remarks: ''
  example:
  - "The following code example shows the use of the KeyContainerPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/csharp/504c0c1a-d76c-49a6-8315-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/cpp/504c0c1a-d76c-49a6-8315-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/visualbasic/504c0c1a-d76c-49a6-8315-_1.vb)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags, System.Security.Permissions.KeyContainerPermissionAccessEntry[] accessList);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> valores."
    - id: accessList
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
      description: "Uma matriz de <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objetos identificar direitos de acesso do contentor de chaves específico."
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>Não é uma combinação válida do <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> valores."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  id: AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém a coleção de <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objetos associados a permissão atual."
  remarks: "Cada <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>objeto na coleção Especifica os direitos de acesso para um contentor de chaves específico.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryCollection AccessEntries { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot;> </xref> que contém o <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objetos para este <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  id: Copy
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: System.Security.Permissions.KeyContainerPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma cópia da permissão atual idêntica."
  remarks: "Uma cópia da permissão representa o mesmo acesso aos recursos, como a permissão original."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Uma cópia da permissão atual."
  overload: System.Security.Permissions.KeyContainerPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: System.Security.Permissions.KeyContainerPermission.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém o contentor de chaves sinalizadores de permissão que se aplicam a todos os contentores de chaves associados a permissão."
  remarks: "A propriedade de sinalizadores é definida pelo construtor."
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> valores."
  overload: System.Security.Permissions.KeyContainerPermission.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Reconstructs uma permissão com um estado especificado de uma codificação de XML."
  remarks: "O método FromXml reconstructs um <xref:System.Security.Permissions.KeyContainerPermission>objeto de uma codificação XML definido pela <xref:System.Security.SecurityElement>classe.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.KeyContainerPermission> Utilize o <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A>método para codificar o XML de <xref:System.Security.Permissions.KeyContainerPermission>, incluindo informações de estado.</xref:System.Security.Permissions.KeyContainerPermission> </xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A>"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> que contém a codificação de XML utilizado para reconstrua a permissão."
  overload: System.Security.Permissions.KeyContainerPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>Não é um elemento de permissão válido.       - ou - o número da versão <code>securityElement</code> não é suportada."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma permissão que está a interseção da permissão atual e a permissão especificada."
  remarks: "A intersecção de dois permissões é uma permissão que descreve o conjunto de operações de ambas as descrevem em comum. Apenas um pedido que transmite ambas as permissões individuais passarão a interseção."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para intersect com a permissão atual. Tem de ser do mesmo tipo com a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a interseção da permissão atual e a permissão especificada. Esta nova permissão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a interseção está vazia."
  overload: System.Security.Permissions.KeyContainerPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>Não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não especificar uma permissão do mesmo tipo como a permissão atual."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se a permissão atual é um subconjunto da permissão especificado."
  remarks: "A permissão atual é um subconjunto da permissão especificada se a permissão atual Especifica um conjunto de operações que detida está contido em permissão especificado. Por exemplo, uma permissão para <xref:System.Security.Permissions.KeyContainerPermissionFlags>acesso é um subconjunto de uma permissão para <xref:System.Security.Permissions.KeyContainerPermissionFlags>acesso.</xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para testar a relação de subconjunto. Esta permissão tem de ser do mesmo tipo com a permissão atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a permissão atual é um subconjunto da permissão especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>Não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não especificar uma permissão do mesmo tipo como a permissão atual."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se a permissão atual sem restrições."
  remarks: "Uma permissão sem restrições representa acesso a todos os recursos protegidos pela permissão."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a atual permissão é restrita; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma codificação XML de permissão e o respetivo estado atual."
  remarks: "Utilize o <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A>método para restaurar as informações de estado de um <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A>"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> que contém uma codificação XML da permissão, incluindo informações de estado."
  overload: System.Security.Permissions.KeyContainerPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma permissão que é a União de permissão atual e a permissão especificada."
  remarks: "O resultado de uma chamada para União é uma permissão que representa todas as operações representadas pela permissão atual e a permissão especificada. Qualquer pedido que passa a permissão transmite os respetivos union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para combinar com a permissão atual. Tem de ser do mesmo tipo de que a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a União de permissão atual e a permissão especificada."
  overload: System.Security.Permissions.KeyContainerPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>Não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não especificar uma permissão do mesmo tipo como a permissão atual."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
    name: KeyContainerPermissionAccessEntry
    nameWithType: KeyContainerPermissionAccessEntry
    fullName: KeyContainerPermissionAccessEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntryCollection
  nameWithType: KeyContainerPermissionAccessEntryCollection
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: System.Security.Permissions.KeyContainerPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: System.Security.Permissions.KeyContainerPermission.Flags
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.#ctor*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission.KeyContainerPermission
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
- uid: System.Security.Permissions.KeyContainerPermission.Copy*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy
  nameWithType: KeyContainerPermission.Copy
- uid: System.Security.Permissions.KeyContainerPermission.Flags*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
- uid: System.Security.Permissions.KeyContainerPermission.FromXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml
  nameWithType: KeyContainerPermission.FromXml
- uid: System.Security.Permissions.KeyContainerPermission.Intersect*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect
  nameWithType: KeyContainerPermission.Intersect
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: KeyContainerPermission.IsSubsetOf
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: KeyContainerPermission.IsUnrestricted
- uid: System.Security.Permissions.KeyContainerPermission.ToXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml
  nameWithType: KeyContainerPermission.ToXml
- uid: System.Security.Permissions.KeyContainerPermission.Union*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union
  nameWithType: KeyContainerPermission.Union
