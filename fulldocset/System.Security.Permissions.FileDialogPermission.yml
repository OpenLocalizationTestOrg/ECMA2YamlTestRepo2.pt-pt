### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileDialogPermission
  id: FileDialogPermission
  children:
  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)
  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.FileDialogPermission.Access
  - System.Security.Permissions.FileDialogPermission.Copy
  - System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.FileDialogPermission.IsUnrestricted
  - System.Security.Permissions.FileDialogPermission.ToXml
  - System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: FileDialogPermission
  nameWithType: FileDialogPermission
  fullName: System.Security.Permissions.FileDialogPermission
  type: Class
  summary: "Controls the ability to access files or folders through a **File** dialog box. This class cannot be inherited."
  remarks: "This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileDialogPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)
  id: '#ctor(System.Security.Permissions.FileDialogPermissionAccess)'
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: FileDialogPermission(FileDialogPermissionAccess)
  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;></xref> class with the specified access."
  syntax:
    content: public FileDialogPermission (System.Security.Permissions.FileDialogPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.FileDialogPermissionAccess
      description: "A bitwise combination of the <xref href=&quot;System.Security.Permissions.FileDialogPermissionAccess&quot;></xref> values."
  overload: System.Security.Permissions.FileDialogPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>access</code> parameter is not a valid combination of the <xref href=&quot;System.Security.Permissions.FileDialogPermissionAccess&quot;></xref> values."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: FileDialogPermission(PermissionState)
  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;></xref> class with either restricted or unrestricted permission, as specified."
  remarks: "Creates either fully restricted (`None`) or `Unrestricted` access to **File** dialog boxes."
  syntax:
    content: public FileDialogPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "One of the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> values (<xref uid=&quot;langword_csharp_Unrestricted&quot; name=&quot;Unrestricted&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>)."
  overload: System.Security.Permissions.FileDialogPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>state</code> parameter is not a valid value of <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Access
  id: Access
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Access
  nameWithType: FileDialogPermission.Access
  fullName: System.Security.Permissions.FileDialogPermission.Access
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Gets or sets the permitted access to files."
  syntax:
    content: public System.Security.Permissions.FileDialogPermissionAccess Access { get; set; }
    return:
      type: System.Security.Permissions.FileDialogPermissionAccess
      description: "The permitted access to files."
  overload: System.Security.Permissions.FileDialogPermission.Access*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An attempt is made to set the <code>access</code> parameter to a value that is not a valid combination of the <xref href=&quot;System.Security.Permissions.FileDialogPermissionAccess&quot;></xref> values."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Copy
  id: Copy
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: FileDialogPermission.Copy()
  fullName: System.Security.Permissions.FileDialogPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns an identical copy of the current permission."
  remarks: "A copy of the permission represents the same access to resources as the original permission."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A copy of the current permission."
  overload: System.Security.Permissions.FileDialogPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: FileDialogPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileDialogPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Reconstructs a permission with a specified state from an XML encoding."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "The XML encoding used to reconstruct the permission."
  overload: System.Security.Permissions.FileDialogPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>esd</code> parameter is not a valid permission element.       -or-       The version number of the <code>esd</code> parameter is not supported."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: FileDialogPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns a permission that is the intersection of the current permission and the specified permission."
  remarks: "The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to intersect with the current permission. It must be the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the intersection is empty."
  overload: System.Security.Permissions.FileDialogPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determines whether the current permission is a subset of the specified permission."
  remarks: "The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Permissions.FileDialogPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: FileDialogPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileDialogPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Returns a value indicating whether the current permission is unrestricted."
  remarks: "An unrestricted permission represents access to all resources protected by the permission."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current permission is unrestricted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Permissions.FileDialogPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: FileDialogPermission.ToXml()
  fullName: System.Security.Permissions.FileDialogPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates an XML encoding of the permission and its current state."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "An XML encoding of the permission, including state information."
  overload: System.Security.Permissions.FileDialogPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: FileDialogPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates a permission that is the union of the current permission and the specified permission."
  remarks: "The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to combine with the current permission. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "A new permission that represents the union of the current permission and the specified permission."
  overload: System.Security.Permissions.FileDialogPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FileDialogPermission(FileDialogPermissionAccess)
  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
- uid: System.Security.Permissions.FileDialogPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileDialogPermissionAccess
  nameWithType: FileDialogPermissionAccess
  fullName: System.Security.Permissions.FileDialogPermissionAccess
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FileDialogPermission(PermissionState)
  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.FileDialogPermission.Access
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Access
  nameWithType: FileDialogPermission.Access
  fullName: System.Security.Permissions.FileDialogPermission.Access
- uid: System.Security.Permissions.FileDialogPermission.Copy
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Copy()
  nameWithType: FileDialogPermission.Copy()
  fullName: System.Security.Permissions.FileDialogPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: FileDialogPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileDialogPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: FileDialogPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Intersect(IPermission)
- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: FileDialogPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileDialogPermission.IsUnrestricted()
- uid: System.Security.Permissions.FileDialogPermission.ToXml
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: ToXml()
  nameWithType: FileDialogPermission.ToXml()
  fullName: System.Security.Permissions.FileDialogPermission.ToXml()
- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: FileDialogPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Union(IPermission)
- uid: System.Security.Permissions.FileDialogPermission.#ctor*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FileDialogPermission
  nameWithType: FileDialogPermission.FileDialogPermission
- uid: System.Security.Permissions.FileDialogPermission.Access*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Access
  nameWithType: FileDialogPermission.Access
- uid: System.Security.Permissions.FileDialogPermission.Copy*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Copy
  nameWithType: FileDialogPermission.Copy
- uid: System.Security.Permissions.FileDialogPermission.FromXml*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FromXml
  nameWithType: FileDialogPermission.FromXml
- uid: System.Security.Permissions.FileDialogPermission.Intersect*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Intersect
  nameWithType: FileDialogPermission.Intersect
- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: FileDialogPermission.IsSubsetOf
- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: FileDialogPermission.IsUnrestricted
- uid: System.Security.Permissions.FileDialogPermission.ToXml*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: ToXml
  nameWithType: FileDialogPermission.ToXml
- uid: System.Security.Permissions.FileDialogPermission.Union*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Union
  nameWithType: FileDialogPermission.Union
