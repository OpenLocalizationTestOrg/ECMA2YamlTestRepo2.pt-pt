### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceView
  id: SqlDataSourceView
  children:
  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  - System.Web.UI.WebControls.SqlDataSourceView.CanPage
  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.SqlDataSourceView.CanSort
  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Deleted
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Deleting
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  - System.Web.UI.WebControls.SqlDataSourceView.Filtering
  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Inserted
  - System.Web.UI.WebControls.SqlDataSourceView.Inserting
  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Selected
  - System.Web.UI.WebControls.SqlDataSourceView.Selecting
  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Updated
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Updating
  langs:
  - csharp
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
  type: Class
  summary: "Suporta o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlar e fornece uma interface para controlos vinculados a dados efetuar as operações de dados SQL com bases de dados relacionais."
  remarks: "A classe de SqlDataSourceView destina-se principalmente a ser utilizada por controlos vinculados a dados e não como um objeto programável no código da página.       Controlos de origem de dados do ASP.NET contém uma ou mais listas de dados, representados por objetos de vista de origem de dados. A classe de SqlDataSourceView expande o <xref:System.Web.UI.DataSourceView>classe, define as capacidades do <xref:System.Web.UI.WebControls.SqlDataSource>controlo com o qual está associado e implementa a funcionalidade de dados básicos para o controlo de origem de dados.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceView> A classe de SqlDataSourceView implementa a funcionalidade de dados para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, incluindo o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operações, ordenação, filtragem e gerir as definições que são mantidas na vista estado.</xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Apesar do objeto de SqlDataSourceView não está exposto diretamente para os programadores de página pelo <xref:System.Web.UI.WebControls.SqlDataSource>controlo, muitas das propriedades são.</xref:System.Web.UI.WebControls.SqlDataSource> A operação mais básica que efetua uma vista de origem de dados é a obtenção de dados da utilização de base de dados subjacente a <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método, o que obtém um <xref:System.Collections.IEnumerable>colecção de itens de dados.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> A classe de SqlDataSourceView implementa obtenção de dados de bases de dados relacionais através de consultas SQL. As consultas de SQL Server podem ser parametrizadas para maior flexibilidade e segurança. Os seguintes métodos de obtenção de dados, propriedades e os eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.SqlDataSource>controlo para programadores de página e outros os chamadores: - <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>evento - o <xref:System.Web.UI.WebControls.SqlDataSource.Selected>objeto de SqlDataSourceView o evento suporta a atualização dos dados numa base de dados relacional utilizando comandos do SQL Server.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSource.Selecting> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Os comandos do SQL Server podem ser parametrizados para maior flexibilidade e segurança. Controlos vinculados a dados, tais como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para efetuar atualizações automaticamente utilizando SqlDataSourceView, enquanto outros controlos não é possível.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Os seguintes métodos de atualização, propriedades e os eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.SqlDataSource>controlo para programadores de página e outros os chamadores: - <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Updating>evento - o <xref:System.Web.UI.WebControls.SqlDataSource.Updated>evento SqlDataSourceView o suporta inserir novas linhas de dados numa base de dados relacional.</xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Updating> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Os comandos do SQL Server especificadas no <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>propriedade pode ser parametrizada para maior flexibilidade e segurança.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Controlos vinculados a dados, tais como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para efetuar inserções automaticamente utilizando SqlDataSourceView, enquanto outros controlos não é possível.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Os seguintes métodos, propriedades, de inserção e eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.SqlDataSource>controlo para programadores de página e outros os chamadores: - o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>evento - o <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>eventos SqlDataSourceView o objeto também suporta a eliminação de dados da base de dados relacional.</xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Tal como acontece com outros comandos, o SQL os comandos que são especificadas no <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>propriedade pode ser parametrizada para maior flexibilidade e segurança.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Controlos vinculados a dados, tais como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para efetuar eliminações automaticamente utilizando SqlDataSourceView, enquanto outros controlos não é possível.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Os seguintes métodos, propriedades, de eliminar e eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.SqlDataSource>controlo para programadores de página e outros os chamadores: - o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento - o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>evento obtenção de dados é mais poderoso quando a cláusula que é utilizada para filtrar os dados durante a obtenção de dados dinâmica.</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Por outras palavras, uma consulta SQL com static onde cláusula não é tão flexível e como uma consulta de SQL Server onde os valores na cláusula WHERE estão vinculados aos valores que podem alterar, tais como valores que são apresentados em controlos numa página Web Forms. Em vez de reconstruir um SQL consultar e definir o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade em cada carga de página, pode utilizar o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>e <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>Propriedades para aplicar a filtragem dinâmica para obtenção de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Estas propriedades são implementadas pelo SqlDataSourceView e expostas diretamente pelo respetivo <xref:System.Web.UI.WebControls.SqlDataSource>controlo para controlos vinculados a dados e os outros chamadores.</xref:System.Web.UI.WebControls.SqlDataSource>       Pode ordenar os dados que é possível obter com a <xref:System.Web.UI.WebControls.SqlDataSource>controlo ao adicionar uma cláusula ORDER BY, que faz com que a base de dados efetuar a ordenação para si ao obter dados ou ao ordenar os dados na memória depois é obtido.</xref:System.Web.UI.WebControls.SqlDataSource> Pode fornecer uma expressão de ordenação para a SqlDataSourceView definindo a <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>propriedade o <xref:System.Web.UI.DataSourceSelectArguments>objeto que é transferido para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> A sintaxe para o <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>propriedade é o mesmo que a sintaxe para um <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>propriedade.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Se utilizar um procedimento armazenado para obter dados, também pode utilizar o <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>propriedade para especificar um parâmetro que é utilizado especificamente para ordenar os resultados de uma chamada de procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>       Quando mais do que um utilizador pode alterar a base de dados em simultâneo, não há a possibilidade de conflitos de concorrência. O <xref:System.Web.UI.WebControls.SqlDataSource>controlo tem controlos de concorrência através de <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource> A funcionalidade está implementada a <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>       Como muitos outros controlos de servidor de Web, o SqlDataSourceView implementa o <xref:System.Web.UI.IStateManager>interface e utiliza a vista de estado para controlar o respetivo estado em pedidos de página.</xref:System.Web.UI.IStateManager> As implementações do <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>e propriedade e o <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>métodos são fornecidos para ativar o controlo de estado de vista para o controlo.</xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> Para obter mais informações, consulte [descrição geral da gestão de estado de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> especificada a definição de classe <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo como o proprietário da vista atual."
  remarks: "O construtor de SqlDataSourceView é chamado pelo <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>método para devolver uma nova instância de uma vista de origem de dados com especificado `name` parâmetro.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> O <xref:System.Web.UI.WebControls.SqlDataSource>controlo está associado apenas um <xref:System.Web.UI.WebControls.SqlDataSourceView>a vista os nomes de objeto num dado momento e sempre `Table`, apesar desta restrição nomenclatura impõe o <xref:System.Web.UI.WebControls.SqlDataSource>controlo, não o <xref:System.Web.UI.WebControls.SqlDataSourceView>.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> Pode substituir o <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>método para suportar as vistas de uma convenção de nomenclatura diferentes.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>       O <xref:System.Web.HttpContext>objeto que é transmitido pelo `context` parâmetro é utilizado pela vista de origem de dados para objetos de parâmetro de acesso, tais como o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>e <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>Propriedades.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SqlDataSource
      description: "O controlo de origem de dados com o qual o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> está associado."
    - id: name
      type: System.String
      description: "Um nome exclusivo para a vista de origem de dados, no âmbito do controlo de origem de dados é a proprietária."
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se uma operação de obtenção de dados, será cancelada quando qualquer parâmetro que é contida no <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>coleção é avaliada para <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>"
  remarks: "O valor da <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>propriedade é armazenada no estado de visualização.</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>"
  syntax:
    content: public bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se uma operação de obtenção de dados, será cancelada quando um parâmetro está contido no <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>coleção avaliada como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo suporta a operação de eliminação."
  remarks: "Devolve de propriedade CanDelete `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>propriedade está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Uma operação de eliminação ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a operação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo suporta a operação insert."
  remarks: "Devolve de propriedade CanInsert `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>propriedade está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Uma operação de inserção ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a operação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo suporta a paginação dos dados obtidos."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>objecto não suporta paginação.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo suporta a obtenção do número total de linhas de dados, além do conjunto de dados."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>objecto não suporta obter contagens de linhas.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo suporta uma vista ordenada nos dados obtidos."
  remarks: "Devolve de propriedade CanSort `true`, se atual <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>propriedade está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor e o <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>propriedade está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a ordenação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo suporta a operação de atualização."
  remarks: "Devolve de propriedade CanUpdate `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>propriedade está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Uma operação de eliminação ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a operação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o valor que indica como o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo efetua as atualizações e elimina quando dados numa linha no subjacentes da base de dados alterações durante o período de tempo da operação."
  remarks: "A propriedade ConflictDetection determina se os parâmetros para valores antigos e novos são aplicados para o `Update` método. Por exemplo, se o comando que é especificado pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade devolve um <xref:System.Data.DataSet>objeto com as colunas `Name` e `Number`, e a propriedade ConflictDetection está definida para o <xref:System.Web.UI.ConflictOptions>valor, são criados os parâmetros para `Name` e `Number` para a operação de atualização.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Se a propriedade ConflictDetection estiver definida como o <xref:System.Web.UI.ConflictOptions>valor, são criados os parâmetros para `Name`, `Number`, `original_Name`, e `original_Number`.</xref:System.Web.UI.ConflictOptions> (O nome exato dos parâmetros para os valores originais depende o <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Em seguida, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto determina se o método que é especificado no <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>propriedade tem parâmetros correspondentes.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>       O controlo de simultaneidade é uma técnica utilizam arquivos de dados para controlar a forma como os dados são ler e alterados no arquivo de quando múltiplos clientes estão a aceder e manipular os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-la a um utilizador, enquanto outro cliente lê os mesmos dados e apresenta-la a um utilizador diferente. Se ambos os atualizar os dados e a submetê-las para o armazenamento de dados, alguns resultado inesperado poderão ocorrer, porque ambos os clientes podem atualizar valores diferentes para os mesmos dados. Isto é considerado um conflito. Ao definir a propriedade de ConflictDetection o <xref:System.Web.UI.ConflictOptions>valor, a operação de atualização, em seguida, pode comparar os valores antigos e novos para a origem de dados original para detetar conflitos e lidar com os mesmos conforme necessário.</xref:System.Web.UI.ConflictOptions>       O valor de ConflictDetection propriedade é armazenado na vista de estado."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Um do <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores. A predefinição é o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de eliminação com a <> </> *> cadeia SQL, quaisquer parâmetros que são especificados no <> </> *> coleção e os valores que são especificadas na <code> keys </code> e <code> oldValues </code> coleções."
  remarks: "As chamadas de método de eliminar o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>método, transmitir o `keys` e `oldValues` parâmetros.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de objeto ou linha valores de chaves para o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*>operação eliminar.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém valores de linha são avaliados apenas se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>propriedade está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas eliminadas da base de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>propriedade é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> utiliza para eliminar dados da base de dados subjacente."
  remarks: "Uma vez que os produtos de base de dados diferente utilizam varieties diferentes do SQL Server, a sintaxe da cadeia SQL depende do atual fornecedor ADO.NET a ser utilizado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Se a cadeia do SQL Server é uma consulta parametrizada ou comando, o marcador de posição do parâmetro depende também o fornecedor ADO.NET a ser utilizado. Por exemplo, se o fornecedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o fornecedor predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o marcador de posição do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o fornecedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o marcador de posição do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md).       DeleteCommand pode ser uma cadeia de SQL Server ou o nome de um procedimento armazenado, se a base de dados subjacente suporta procedimentos armazenados.       O valor de DeleteCommand propriedade é armazenado na vista de estado."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_947_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_947_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "Cadeia de um SQL Server que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> utiliza para eliminar dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto a <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "O valor de DeleteCommandType propriedade é armazenado na vista de estado."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. A predefinição é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de eliminação concluído."
  remarks: "Processe o evento de eliminados para examinar os valores dos parâmetros de saída, uma vez concluída uma operação de eliminação. Os parâmetros de saída estão disponíveis a partir de <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção de DeleteParameters contiver qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos marcadores de posição do parâmetro na cadeia de SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>       Os nomes dos parâmetros poderão ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>propriedade; especificamente, se o nome identifica uma chave primária, tal como uma chave que for especificado utilizando o `DataKeyNames` propriedade de um controlo vinculado a dados ou na elimine e atualizar cenários nos quais o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>propriedade está definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` é passado para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Neste caso, a cadeia de formato é aplicada a cada nome de parâmetro do `oldValues` coleção.       Consoante o fornecedor ADO.NET, a ordem dos parâmetros da coleção de DeleteParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>fornecedores associar os parâmetros da coleção de acordo com a ordem em que os parâmetros são apresentados na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>fornecedor, o que é o fornecedor do ADO.NET predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa os parâmetros na coleção por correspondente ao nome do parâmetro com o marcador de posição na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1005_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1005_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de eliminação."
  remarks: "Processar o evento de eliminação para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controlo efetua a operação de eliminação.</xref:System.Web.UI.WebControls.SqlDataSource>       A ligação à origem de dados subjacente ainda não está aberta quando o delegado de processador de eventos é chamado. Por conseguinte, não é possível cancelar a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operação diretamente ao chamar o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> No entanto, pode cancelar a operação, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de eliminação com a <> </> *> cadeia SQL, quaisquer parâmetros que são especificados no <> </> *> coleção e os valores que são especificadas na <code> keys </code> e <code> oldValues </code> coleções."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o herdados <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>método para eliminar dados de uma base de dados.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteDelete diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       Os valores que estão contidos no `keys` coleção são avaliadas e intercalados com os valores que estão contidos pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>coleção.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>propriedade está definida como o <xref:System.Web.UI.ConflictOptions>valor, os valores que estão contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>propriedade e são também Unidas.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Antes da operação de eliminação é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>eventos.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes de um eliminar.       Para efetuar uma operação de eliminação, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto compilações um <xref:System.Data.Common.DbCommand>objeto utilizando o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>texto e quaisquer associados <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>Propriedades e, em seguida, executa a <xref:System.Data.Common.DbCommand>objeto contra a base de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Depois de concluída a operação de eliminação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>eventos.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> Pode processar este evento para examinar os valores de retorno e códigos de erro e efetuar qualquer processamento posterior ao."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>do objeto ou linha valores de chave para a operação de ExecuteDelete para eliminar.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém valores de linha são avaliados apenas se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>propriedade está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas eliminadas da base de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current user does not have the correct permissions to access to the database.  \n  \n \\- or -  \n  \n The instance of the control is an <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control and access is denied to the path specified for the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile*> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de inserção utilizando o <> </> *> cadeia SQL, quaisquer parâmetros que são especificados no <> </> *> coleção e os valores que são especificadas na <code> values </code> coleção."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o herdados <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>método para introduzir dados numa base de dados.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteInsert diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>       Antes da operação insert é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>eventos.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes de uma insert.       Para efetuar uma operação de inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto compilações um <xref:System.Data.Common.DbCommand>objeto utilizando o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>texto e quaisquer associados <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>Propriedades e, em seguida, executa a <xref:System.Data.Common.DbCommand>objeto contra a base de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Depois de concluída a inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>eventos.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Pode processar este evento para examinar os valores de retorno e códigos de erro e efetuar qualquer processamento posterior ao."
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de valores utilizados com o <> </> *> propriedade para efetuar a operação de base de dados de inserção.</xref:System.Collections.IDictionary> Se existirem sem parâmetros associados à consulta, ou se o <> </> *> propriedade não é uma consulta SQL parametrizada, transmita <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas inseridas na base de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma ligação com a origem de dados subjacente."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O utilizador atual não tem as permissões corretas para obter acesso à base de dados."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>propriedade é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém dados a partir da base de dados subjacente utilizando o <> </> *> cadeia SQL e quaisquer parâmetros que estão no <> </> *> coleção."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o método ExecuteSelect herdado para obter dados a partir de uma base de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteSelect diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Antes que seja efetuada a obtenção de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>eventos.</xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes de dados são obtidos.       Para efetuar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto compilações um <xref:System.Data.Common.DbCommand>objeto utilizando o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>texto e quaisquer associados <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>e executa-lo contra a base de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSource.Selected>eventos.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> Pode processar este evento para examinar os valores de retorno, códigos de erro e efetuar qualquer processamento posterior ao.       O método ExecuteSelect devolve um <xref:System.Data.DataView>objeto se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode>, ou um <xref:System.Data.IDataReader>objeto se <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>estiver definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode>.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> Fechar o <xref:System.Data.IDataReader>Quando tiver concluído a leitura dos dados de objeto.</xref:System.Data.IDataReader>       Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode>e colocação em cache está ativada, o <xref:System.Web.UI.WebControls.SqlDataSourceView>obtém dados a partir do e guarda dados em cache durante a operação de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> A cache é criada, rejeitados ou atualizada com base no comportamento especificado pela combinação de colocação em cache quando o <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>Propriedades.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>      > [!IMPORTANT] > Quando estiver a utilizar representação do cliente em autenticação do Windows, os dados são colocadas em cache quando o primeiro utilizador acede os dados. Se outro utilizador solicita os mesmos dados, os dados são obtidos a partir da cache. Os dados não são obtidos pelo efetuar outra chamada para a base de dados para verificar o acesso do utilizador para os dados. Se espera que vários utilizadores acedam aos dados e quiser cada obtenção para os dados a ser verificado pelo configurações de segurança da base de dados, não utilize a colocação em cache.       Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode>e um <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>foi especificado, é avaliado juntamente com qualquer fornecido <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>e o filtro resultante é aplicado à lista de dados durante a operação de obtenção de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> objeto utilizado para pedir operações nos dados para além de obtenção de dados básica."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n Caching is enabled but the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode*> property of the data source is not set to <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*> property is set but <xref:System.Data.SqlClient.SqlCommand.CommandType*> is not set to <xref href=\"System.Data.CommandType\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The data source cannot create a database connection.  \n  \n \\- or -  \n  \n Caching is enabled but the internal cache and command types do not match."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de atualização utilizando o <> </> *> cadeia SQL, quaisquer parâmetros que estão no <> </> *> coleção e os valores que são especificadas na <code> keys </code>, <code> values </code>, e <code> oldValues </code> coleções."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o método ExecuteUpdate herdado para atualizar os dados numa base de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteUpdate diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       Os valores contidos no `keys` e `values` coleções são avaliadas e intercaladas com quaisquer valores contidos o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>propriedade está definida como <xref:System.Web.UI.ConflictOptions>, os valores contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>e também intercaladas.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Antes da operação de atualização é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>eventos.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes de uma atualização.       Para efetuar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView>baseia-se um <xref:System.Data.Common.DbCommand>objeto utilizando o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>texto e quaisquer associados <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>Propriedades e, em seguida, executa a <xref:System.Data.Common.DbCommand>objeto contra a base de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>eventos.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> Pode processar este evento para examinar os valores de retorno e códigos de erro e efetuar qualquer processamento posterior ao."
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de chaves primárias para utilizar com o <> </> *> propriedade para efetuar a operação de base de dados de atualização.</xref:System.Collections.IDictionary> Se não existem chaves associadas à consulta ou se o <> </> *> propriedade não é uma consulta SQL parametrizada, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de valores a utilizar com o <> </> *> propriedade para efetuar a operação de base de dados de atualização.</xref:System.Collections.IDictionary> Se existirem sem parâmetros associados à consulta, ou se o <> </> *> não é um SQL Server com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que representa os valores originais na base de dados.</xref:System.Collections.IDictionary> Se existirem sem parâmetros associados à consulta, ou se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade não é uma consulta SQL parametrizada, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas atualizadas na base de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O utilizador atual não tem as permissões corretas para obter acesso à base de dados."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>propriedade é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma expressão de filtragem que é aplicada quando o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>método é chamado.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>"
  remarks: "A sintaxe que é utilizada para a propriedade FilterExpression é uma sintaxe de estilo – cadeia de formato. Pode incluir parâmetros na propriedade FilterExpression. Se o tipo do parâmetro de cadeia ou caráter, coloque o parâmetro entre plicas. As aspas não são necessárias, se o parâmetro for um tipo numérico.       O <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>coleção contém os parâmetros que são avaliados para os marcadores de posição que se encontram no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>       O <xref:System.Web.UI.WebControls.SqlDataSource>controlo suporta filtragem dados apenas quando no `DataSet` modo.</xref:System.Web.UI.WebControls.SqlDataSource>       O valor de FilterExpression propriedade é armazenado na vista de estado.      > [!IMPORTANT] > Deve validar qualquer valor de parâmetro de filtro que recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro para a expressão de filtro e aplica-se de que o <xref:System.Data.DataView>objeto é devolvido pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se estiver a utilizar o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade como medida de segurança para limitar o número de itens que são devolvidos, é necessário validar os valores de parâmetros antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1180_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1180_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa uma expressão de filtro aplicada quando os dados são obtidos utilizando o <xref:System.Web.UI.WebControls.SqlDataSource.Select*>método.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade FilterExpression foi definida quando o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> está a ser o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> modo."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de filtro."
  remarks: "Processar o evento de filtragem para efetuar operações de validação nos valores de parâmetros de filtro antes do <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto efetua uma operação de filtro.</xref:System.Web.UI.WebControls.SqlDataSourceView> Pode cancelar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método definindo a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>object `true`.</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> O evento é gerado apenas se o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>propriedade está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Deve validar qualquer valor de parâmetro de filtro que recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro para a expressão de filtro e aplica-se de que o <xref:System.Data.DataView>objeto é devolvido pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se estiver a utilizar o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade como medida de segurança para limitar o número de itens que são devolvidos, é necessário validar os valores de parâmetros antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de parâmetros que estão associados a quaisquer marcadores de posição de parâmetro no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>cadeia.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  remarks: "Os parâmetros da coleção de FilterParameters estão associados a quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Os marcadores de posição do parâmetro estão especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>são avaliados por ordem e correspondia para objetos de parâmetro na coleção FilterParameters quando o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método é chamado.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Deve validar qualquer valor de parâmetro de filtro que recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro para a expressão de filtro e aplica-se de que o <xref:System.Data.DataView>objeto é devolvido pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se estiver a utilizar o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade como medida de segurança para limitar o número de itens que são devolvidos, é necessário validar os valores de parâmetros antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_165_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_165_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém um conjunto de parâmetros associados a quaisquer marcadores de posição do parâmetro encontrados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de inserção utilizando o <> </> *> cadeia SQL, quaisquer parâmetros que são especificados no <> </> *> coleção e os valores que são especificadas na <code> values </code> coleção."
  remarks: "As chamadas de método Insert o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>método, transmitir o `values` parâmetro.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de parâmetros para o <> </> *> propriedade a utilizar para efetuar a operação de base de dados de inserção.</xref:System.Collections.IDictionary> Se existirem sem parâmetros associados à consulta, ou se o <> </> *> não é um SQL Server com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas inseridas na base de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma ligação com a origem de dados subjacente."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>propriedade é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> utiliza o objeto a inserir dados na base de dados subjacente."
  remarks: "Uma vez que os produtos de base de dados diferente utilizam varieties diferentes do SQL Server, a sintaxe da cadeia SQL depende do atual fornecedor ADO.NET a ser utilizado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia do SQL Server é uma consulta parametrizada ou comando, o marcador de posição do parâmetro depende também o fornecedor ADO.NET a ser utilizado. Por exemplo, se o fornecedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o fornecedor predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o marcador de posição do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o fornecedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o marcador de posição do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade InsertCommand pode ser uma cadeia de SQL Server ou o nome de um procedimento armazenado, se a origem de dados suporta procedimentos armazenados.       O valor do InsertCommand propriedade é armazenado na vista de estado."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "Cadeia de um SQL Server que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> utiliza para inserir dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto a <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "O valor de InsertCommandType propriedade é armazenado na vista de estado."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_733_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_733_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O valor é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de inserção foi concluída."
  remarks: "Processe o evento de Inserted para examinar os valores dos parâmetros de saída, uma vez concluída uma operação de inserção. Os parâmetros de saída estão disponíveis a partir de <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_39_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_39_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de inserção."
  remarks: "Processar o evento de Inserting para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controlo efetua a operação insert.</xref:System.Web.UI.WebControls.SqlDataSource>       A ligação à origem de dados subjacente ainda não está aberta quando o delegado de processador de eventos é chamado. Por conseguinte, não é possível cancelar a operação de base de dados diretamente ao chamar o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> No entanto, pode cancelar a operação de base de dados através da definição de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção de coleção InsertParameters contiver qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos marcadores de posição do parâmetro na cadeia de SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>       Consoante o fornecedor ADO.NET, a ordem dos parâmetros da coleção de coleção InsertParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>fornecedores associar os parâmetros da coleção de acordo com a ordem em que os parâmetros são apresentados na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>fornecedor, o que é o fornecedor do ADO.NET predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa os parâmetros na coleção por correspondente ao nome do parâmetro com um alias de marcador de posição na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_530_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_530_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto está a guardar as alterações para o estado de vista."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a vista de origem de dados está marcada para guardar Estado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restaura o estado de visualização guardado anteriormente para a vista de origem de dados."
  remarks: "Este método é principalmente utilizado pelo [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] infraestrutura e não se destina a ser utilizado diretamente a partir do seu código.  No entanto, os programadores do controlo podem substituir este método para especificar a forma como um controlo de servidor personalizado restaura o estado de visualização. Para obter mais informações, consulte [descrição geral da gestão de estado de ASP.NET](~/add/includes/ajax-current-ext-md.md).       O método LoadViewState restaura as informações de estado de visualização para o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto num pedido de página anterior, que foi guardado pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>método.</xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objecto que representa o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma cadeia de formato para aplicar a nomes de quaisquer parâmetros que são transmitidos para o <> </> *> ou <> </> *> método."
  remarks: "A cadeia de formato corresponda à OldValuesParameterFormatString é aplicada ao chaves primárias apenas, tais como as que são identificados pelo `DataKeyNames` propriedade do controlo vinculado a dados ou na elimine e cenários de atualização onde o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>propriedade está definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` é passado para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> Neste caso, a cadeia de formato é aplicada a cada nome de parâmetro do `oldValues` coleção. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>       O valor do corresponda à OldValuesParameterFormatString propriedade é armazenado na vista de estado."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa uma cadeia de formato aplicada aos nomes de qualquer <code> oldValues </code> parâmetros transmitidos para o <> </> *> ou <> </> *> métodos. A predefinição é &quot;{0}&quot;."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleted&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo foi concluída uma operação de eliminação."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleted também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleting&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo tenta uma operação de eliminação."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleting também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an OnDeleting handler is added to attempt to back up the database to disk before the delete is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/359c75a9-ee0e-4d55-bdc1-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Filtering&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo filtra os resultados de uma operação de seleção."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnFiltering também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserted&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo foi concluída uma operação de inserção."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserted também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the OnInserted event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/81209d4c-52a2-4147-b8d8-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/81209d4c-52a2-4147-b8d8-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserting&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo tenta uma operação de inserção."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserting também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the OnInserting event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/ff2f58f9-1a94-4cce-ae83-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selected&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo foi concluída uma operação de obtenção de dados."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelected também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selecting&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo tenta uma operação de obtenção de dados."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelecting também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updated&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo foi concluída uma operação de atualização."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnUpdated também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/9236d411-d01f-4dc8-b1eb-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/9236d411-d01f-4dc8-b1eb-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updating&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo tenta uma operação de atualização."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnUpdating também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/29c8c16e-94d1-48d3-be46-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/29c8c16e-94d1-48d3-be46-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  id: ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a cadeia que é utilizada para o prefixo de um marcador de posição do parâmetro numa consulta SQL parametrizada."
  remarks: "Consultas de SQL Server e comandos podem ser parametrizados, em que contêm os marcadores de posição para valores que estão vinculados à consulta em tempo de execução. Consoante o fornecedor ADO.NET que está definido para o <xref:System.Web.UI.WebControls.SqlDataSource>controlo, o que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade, os parâmetros são avaliados pelo alias ou pelo respetivo ordenação no <xref:System.Web.UI.WebControls.ParameterCollection>objeto.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Se o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>não está definido ou está definido como o <xref:System.Data.SqlClient?displayProperty=fullName>, os parâmetros são avaliados pelo alias e a propriedade ParameterPrefix é utilizada para adicionar um prefixo de parâmetro para o <xref:System.Web.UI.WebControls.Parameter.Name%2A>propriedade de cada <xref:System.Web.UI.WebControls.Parameter>objeto um <xref:System.Web.UI.WebControls.ParameterCollection>durante uma operação de manipulação de dados ou a obtenção de dados.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade está definida como o <xref:System.Data.OleDb?displayProperty=fullName>ou <xref:System.Data.Odbc?displayProperty=fullName>, os parâmetros são avaliados por ordem e o ParameterPrefix e <xref:System.Web.UI.WebControls.Parameter.Name%2A>propriedades são ignoradas.</xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Se expandir o <xref:System.Web.UI.WebControls.SqlDataSourceView>classe, pode substituir a propriedade ParameterPrefix para fornecer um prefixo de que o `&quot;@&quot;` cadeia, se necessário.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual string ParameterPrefix { get; }
    return:
      type: System.String
      description: "O &quot;@&quot; cadeia."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Compara as capacidades que são pedidas para um <> </> *> operação relativamente aos que a vista de suporte e é chamado <> </> *> método."
  remarks: "O método de RaiseUnsupportedCapabilityError é utilizado pela vista de origem de dados para examinar cada uma das funcionalidades que são solicitadas por um controlo vinculado a dados, que é representado pelo <xref:System.Web.UI.DataSourceSelectArguments>objeto que é transferido para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método e para comparar as capacidades para as funcionalidades que são suportadas pela vista de origem de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> Para as funcionalidades que são representadas pelo <xref:System.Web.UI.DataSourceSelectArguments>de objeto e não são suportados pela vista de origem de dados, uma <xref:System.NotSupportedException>surge uma exceção.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "Um do <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref> valores é comparado com as capacidades que suporte a vista."
  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A origem de dados não tiver selecionado <code> capability </code> ativada."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Guarda as alterações para o estado de visualização para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> controlo desde o momento em que a página foi publicada para o servidor."
  remarks: "O método SaveViewState é principalmente utilizado pelos programadores do controlo.       Vista de estado é a acumulação dos valores das propriedades para um controlo de servidor. Estes valores são automaticamente colocados na <xref:System.Web.UI.Control.ViewState%2A>propriedade para o controlo de servidor, que é uma instância de <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> O <xref:System.Web.UI.Control.ViewState%2A>valor para o controlo de servidor, em seguida, é mantido um objeto string depois de guardar Estado fase do ciclo de vida de controlo do servidor.</xref:System.Web.UI.Control.ViewState%2A>       Quando for guardado o estado de visualização, o objeto de cadeia persistida depois de guardar Estado fase do ciclo de vida de controlo do servidor é devolvido ao cliente como uma variável que está armazenada num HTML `Hidden` elemento. Quando cria os controlos de servidor personalizado, pode melhorar a eficiência ao substituir o método SaveViewState e modificar o `ViewState` propriedade para o controlo de servidor. Para obter mais informações, consulte [descrição geral da gestão de estado de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> Ver estado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não houver nenhuma vista de estado associada ao objeto."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém dados a partir da base de dados subjacente utilizando o <> </> *> cadeia SQL e quaisquer parâmetros que estão no <> </> *> coleção."
  remarks: "As chamadas de método Select o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>método, transmitir o `selectArgs` parâmetro.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>       O <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>método devolve um <xref:System.Data.DataView>objeto, se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>propriedade está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>ou valor devolve um <xref:System.Data.IDataReader>objeto, se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>propriedade está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Fechar o <xref:System.Data.IDataReader>Quando tiver concluído a leitura dos dados de objeto.</xref:System.Data.IDataReader>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> utilizado para operações de pedido nos dados para além de obtenção de dados básica."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <code> selectArgs </code> transmitido para selecionar o método especificar que a origem de dados deve efetuar algumas tarefas adicionais ao obter dados para ativar a paginação ou ordenação através dos dados obtidos, mas o controlo de origem de dados não suporta a capacidade de pedido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma ligação com a origem de dados subjacente."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto utiliza para obter dados da base de dados subjacente."
  remarks: "Uma vez que os produtos de base de dados diferente utilizam varieties diferentes do SQL Server, a sintaxe da cadeia SQL depende do atual fornecedor ADO.NET a ser utilizado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia do SQL Server é uma consulta parametrizada ou comando, o marcador de posição do parâmetro depende também o fornecedor ADO.NET a ser utilizado. Por exemplo, se o fornecedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o fornecedor predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o marcador de posição do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o fornecedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o marcador de posição do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade SelectCommand pode ser uma cadeia de SQL Server ou o nome de um procedimento armazenado, se a origem de dados suporta procedimentos armazenados.      > [!IMPORTANT] > É mais seguro para utilizar um procedimento armazenado de uma instrução SQL para a propriedade SelectCommand.       O valor da propriedade SelectCommand armazenados na vista de estado."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_1.aspx)]  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "Cadeia de um SQL Server que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> utiliza para obter dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto a <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>propriedade é uma consulta de SQL Server ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "O valor de SelectCommandType propriedade é armazenado na vista de estado."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_934_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_934_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. A predefinição é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando foi concluída uma operação de obtenção de dados."
  remarks: "Processe o evento de selecionados para examinar os valores dos parâmetros de saída, uma vez concluída uma operação de obtenção de dados. Os parâmetros de saída estão disponíveis a partir de <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de obtenção de dados."
  remarks: "Processar o evento Selecting para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controlo efetua a operação de obtenção de dados.</xref:System.Web.UI.WebControls.SqlDataSource>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção de SelectParameters contiver qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos marcadores de posição do parâmetro na cadeia de SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>       Consoante o fornecedor ADO.NET, a ordem dos parâmetros da coleção de SelectParameters só pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>fornecedores associar os parâmetros da coleção de acordo com a ordem em que os parâmetros são apresentados na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>fornecedor, o que é o fornecedor do ADO.NET predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa os parâmetros na coleção por correspondente ao nome do parâmetro com um alias de marcador de posição na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_723_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_723_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome de um parâmetro de procedimento armazenado que é utilizado para ordenar os dados obtidos quando obtenção de dados é efetuada através de um procedimento armazenado."
  remarks: "A propriedade SortParameterName é avaliada apenas quando o SQL comando que está contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade é o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Neste caso, se a propriedade SortParameterName estiver definida, que contém o nome de um parâmetro que é utilizado para ordenar os resultados do procedimento armazenado.       Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>for definida, é prepended para a propriedade SortParameterName.</xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>       O valor da SortParameterName propriedade é armazenado na vista de estado."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "O nome de um parâmetro de procedimento armazenado utilizado para ordenar os dados obtidos quando obtenção de dados é efetuada através de um procedimento armazenado."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a vista de origem de dados está marcada para guardar Estado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objecto que representa o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte <xref href=&quot;System.Web.UI.IStateManager.SaveViewState&quot;> </xref>."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> Ver estado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não houver nenhuma vista de estado associada ao objeto."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Web.UI.IStateManager.TrackViewState*>.</xref:System.Web.UI.IStateManager.TrackViewState*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Faz com que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto controlar as alterações ao estado de visualização para que as alterações podem ser armazenadas no <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objeto para o controlo e persistentes através de pedidos para a mesma página."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de atualização utilizando o <> </> *> cadeia SQL, quaisquer parâmetros que estão no <> </> *> coleção e os valores que são especificadas na <code> keys </code>, <code> values </code>, e <code> oldValues </code> coleções."
  remarks: "As chamadas de método de atualização de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>método, transmitir o `keys`, `values`, e `oldValues` parâmetros.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/0d500e90-6fd2-4112-8e56-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/0d500e90-6fd2-4112-8e56-_1.aspx)]"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de chaves primárias para utilizar com o <> </> *> propriedade para efetuar a operação de base de dados de atualização.</xref:System.Collections.IDictionary> Se existem não existem chaves associadas à consulta ou se o <> </> *> não é um SQL Server com parâmetros de consulta, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de valores a utilizar com o <> </> *> propriedade para efetuar a operação de base de dados de atualização.</xref:System.Collections.IDictionary> Se existirem sem parâmetros associados à consulta, ou se o <> </> *> não é um SQL Server com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que representa os valores originais na base de dados.</xref:System.Collections.IDictionary> Se existirem sem parâmetros associados à consulta, ou se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>não é um SQL Server com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas atualizadas na base de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma ligação com a origem de dados subjacente."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>propriedade é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto utiliza para atualizar os dados na base de dados subjacente."
  remarks: "Uma vez que os produtos de base de dados diferente utilizam varieties diferentes do SQL Server, a sintaxe da cadeia SQL depende do atual fornecedor ADO.NET a ser utilizado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia do SQL Server é uma consulta parametrizada ou comando, o marcador de posição do parâmetro depende também o fornecedor ADO.NET a ser utilizado. Por exemplo, se o fornecedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o fornecedor predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o marcador de posição do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o fornecedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o marcador de posição do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade de UpdateCommand pode ser uma cadeia de SQL Server ou o nome de um procedimento armazenado, se a origem de dados suporta procedimentos armazenados.       O valor de UpdateCommand propriedade é armazenado na vista de estado."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "Cadeia de um SQL Server que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> utiliza para atualizar os dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto a <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "O valor de UpdateCommandType propriedade é armazenado na vista de estado."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. A predefinição é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de atualização foi concluída."
  remarks: "Processe o evento de atualizada para examinar os valores dos parâmetros de saída após uma operação de atualização foi concluída. Os parâmetros de saída estão disponíveis a partir de <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_139_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_139_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção de UpdateParameters contiver qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos marcadores de posição do parâmetro que estão na cadeia de SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>       Os nomes dos parâmetros poderão ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>propriedade; especificamente, se o nome identifica uma chave primária, tal como uma chave que for especificado utilizando o `DataKeyNames` propriedade, ou elimine no e cenários de atualização onde o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>propriedade está definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` são transmitidos para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Neste caso, a cadeia de formato é aplicada a cada nome de parâmetro do `oldValues` coleção.       Consoante o fornecedor ADO.NET, a ordem dos parâmetros da coleção de UpdateParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>fornecedores associar os parâmetros da coleção de acordo com a ordem em que os parâmetros são apresentados na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>fornecedor, o que é o fornecedor do ADO.NET predefinido para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa os parâmetros na coleção por correspondente ao nome do parâmetro com um alias de marcador de posição na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre o SQL Server consultas e comandos parametrizados, consulte [utilizando parâmetros com o controlo de SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1249_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1249_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de atualização."
  remarks: "Processar o evento de atualização para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controlo efetua a operação de atualização.</xref:System.Web.UI.WebControls.SqlDataSource>       A ligação à origem de dados subjacente ainda não está aberta quando o delegado de processador de eventos é chamado. Por conseguinte, não é possível cancelar a operação diretamente ao chamar o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> No entanto, pode cancelar a operação de base de dados através da definição de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.SqlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventArgs
  nameWithType: SqlDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventArgs
  nameWithType: SqlDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete
  nameWithType: SqlDataSourceView.Delete
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: SqlDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: SqlDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: SqlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: SqlDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert
  nameWithType: SqlDataSourceView.Insert
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: SqlDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: SqlDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: SqlDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: SqlDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: SqlDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: SqlDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: SqlDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: SqlDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: SqlDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select
  nameWithType: SqlDataSourceView.Select
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update
  nameWithType: SqlDataSourceView.Update
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
