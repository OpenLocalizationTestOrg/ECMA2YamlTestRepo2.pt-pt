### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: "Resolve recursos externos de XML com o nome por um Uniform Resource Identifier (URI)."
  remarks: "O tipo de XmlResolver é utilizado para resolver recursos externos de XML, como entidades, definições de tipo de documento (DTDs) ou esquemas. Também é utilizado para processo incluem e importar elementos encontrados nas folhas de estilos de idiomas de folha de estilos extensível (XSL) ou esquemas de idioma (XSD) de definição de esquema XML.       XmlResolver processa todos os aspetos da negociar a ligação aos recursos, incluindo o processamento de credenciais de segurança, ao abrir a ligação à origem de dados e devolver o recurso sob a forma de um fluxo ou outro tipo de objeto. O objeto que chama o XmlResolver tem a tarefa de interpretar o fluxo.       O <xref:System.Xml>espaço de nomes inclui duas implementações concretas da classe XmlResolver:- <xref:System.Xml.XmlUrlResolver>a resolução predefinida para todas as classes no <xref:System.Xml>espaço de nomes.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml> Suporta o `file://` e `http://` protocolos e pedidos da <xref:System.Net.WebRequest?displayProperty=fullName>classe.</xref:System.Net.WebRequest?displayProperty=fullName> Para obter exemplos de expandir a classe para melhorar o desempenho, consulte o <xref:System.Xml.XmlUrlResolver>página de referência.</xref:System.Xml.XmlUrlResolver>      - <xref:System.Xml.XmlSecureResolver>ajuda a proteger outro objeto XmlResolver o objeto de objeto de encapsulamento de aplicações e restringir os recursos que pode aceder.</xref:System.Xml.XmlSecureResolver> Por exemplo, o <xref:System.Xml.XmlSecureResolver>pode proibir o acesso aos sites da Internet específicos ou de zonas.</xref:System.Xml.XmlSecureResolver>       Pode criar e especificar a suas próprias resolução. Se não especificar uma resolução, utilizada pelo leitor uma predefinição <xref:System.Xml.XmlUrlResolver>com credenciais do utilizador.</xref:System.Xml.XmlUrlResolver>       Especifique o XmlResolver a utilizar ao definir o <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>propriedade e transmitir o <xref:System.Xml.XmlReaderSettings>de objeto para o <xref:System.Xml.XmlReader.Create%2A>método.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>       Se o recurso é armazenado num sistema que requer autenticação, utilize o <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>propriedade para especificar as credenciais necessárias.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      ## Fornecer credenciais de autenticação que o ficheiro que contém os dados XML para ler pode ter uma política de acesso restrito. Se é necessária a autenticação para aceder a um recurso de rede, utilize o <xref:System.Xml.XmlResolver.Credentials%2A>propriedade para especificar as credenciais necessárias.</xref:System.Xml.XmlResolver.Credentials%2A> Se o <xref:System.Xml.XmlResolver.Credentials%2A>não for definida, as credenciais serão definidas como `null`.</xref:System.Xml.XmlResolver.Credentials%2A>       Por exemplo, suponha que as credenciais são necessárias quando pedir dados a partir da web para efeitos de autenticação. A menos que o diretório virtual web permite o acesso anónimo, tem de definir o <xref:System.Xml.XmlResolver.Credentials%2A>propriedade fornecer credenciais.</xref:System.Xml.XmlResolver.Credentials%2A> O exemplo seguinte cria um <xref:System.Xml.XmlReader>objeto que utiliza um <xref:System.Xml.XmlUrlResolver>com as credenciais predefinidas para aceder ao site http://localhost/bookstore/inventory.xml.</xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlReader>       [!code-cpp[XmlReaderSettings.cctor#2](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)][!code-cs[XmlReaderSettings.cctor#2](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)][!code-vb[XmlReaderSettings.cctor#2](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb) ] pode fornecer credenciais diferentes para diferentes URIs e adicioná-los para uma cache.     Estas credenciais são utilizadas para verificar a autenticação para o URI diferente, independentemente da origem original do XML. O exemplo seguinte mostra como adicionar credenciais para uma cache.       [!code-vb[XslCompiledTransform.Load#11](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)][!code-cs[XslCompiledTransform.Load#11](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs) ] # # considerações de segurança considere os seguintes itens ao trabalhar com a classe de XmlResolver.        -XmlResolver objetos podem conter informações confidenciais, tais como as credenciais do utilizador. Deve ter cuidado quando XmlResolver a colocação em cache objetos e não deverá passar o objeto de XmlResolver para um componente não fidedigno.      -Se está a conceber uma propriedade de classe que utiliza a classe de XmlResolver, a propriedade deve ser definida como uma propriedade só de escrita. A propriedade pode ser utilizada para especificar o XmlResolver a utilizar, mas não pode ser utilizado para devolver um objeto de XmlResolver.      -Se a sua aplicação aceitar XmlResolver objetos a partir do código não fidedigno, não é parte do princípio de que o URI transmitida para o <xref:System.Xml.XmlResolver.GetEntity%2A>método será igual à que é devolvido pelo <xref:System.Xml.XmlResolver.ResolveUri%2A>método.</xref:System.Xml.XmlResolver.ResolveUri%2A> </xref:System.Xml.XmlResolver.GetEntity%2A> Classes derivadas da classe de XmlResolver podem substituir o <xref:System.Xml.XmlResolver.GetEntity%2A>método e devolver dados que são diferentes da que estavam contido no URI do original.</xref:System.Xml.XmlResolver.GetEntity%2A>      -A aplicação pode mitigar memória denial-of-ameaças de serviço para o <xref:System.Xml.XmlResolver.GetEntity%2A>método implementando um <xref:System.Runtime.InteropServices.ComTypes.IStream>que limita o número de bytes lidos.</xref:System.Runtime.InteropServices.ComTypes.IStream> </xref:System.Xml.XmlResolver.GetEntity%2A> Isto ajuda a proteger contra situações onde o código malicioso tenta transmitir um fluxo de bytes a infinito o <xref:System.Xml.XmlResolver.GetEntity%2A>método.</xref:System.Xml.XmlResolver.GetEntity%2A>"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \n  \n [!code-cs[XmlResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlresolver_3.cs)]\n [!code-vb[XmlResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_3.vb)]"
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> classe."
  remarks: "Este construtor é designado por construtores de classes derivadas para inicializar o estado deste tipo."
  syntax:
    content: protected XmlResolver ();
    parameters: []
  overload: System.Xml.XmlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando substituí-lo de uma classe derivada, define as credenciais utilizadas para autenticar pedidos web."
  remarks: "Se o diretório virtual não necessitar de autenticação, esta propriedade não tem de ser definida. Caso contrário, é necessário fornecer as credenciais do utilizador.       O seguinte código c# define as credenciais no <xref:System.Xml.XmlResolver>objeto.</xref:System.Xml.XmlResolver>      ```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```Pode associar credenciais diferentes URIs diferente e adicione-a uma cache. Em seguida, pode utilizar as credenciais para verificar a autenticação para diferentes URIs, independentemente da origem original do XML.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "As credenciais para ser utilizado para autenticar pedidos web. Se esta propriedade não for definida, o valor será assumida a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; ou seja, o <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref> tenha sem credenciais de utilizador."
  overload: System.Xml.XmlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando substituí-lo de uma classe derivada, mapeia um URI para um objeto que contém o recurso real."
  remarks: "Este método é utilizado quando o autor da chamada pretende mapear um URI fornecido para o objeto que contém o recurso real que representa o URI. O tipo de objeto devolvido é negociável; No entanto, a implementação tem sempre de suportar <xref:System.IO.Stream?displayProperty=fullName>.</xref:System.IO.Stream?displayProperty=fullName>       Para a versão assíncrona deste método, consulte <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > A aplicação pode mitigar memória denial-of-ameaças de serviço para o método GetEntity implementando um <xref:System.Runtime.InteropServices.ComTypes.IStream>que limita o número de bytes lidos.</xref:System.Runtime.InteropServices.ComTypes.IStream> Isto ajuda a proteger contra situações em que tenta transmitir um fluxo de bytes infinito para o método de GetEntity código malicioso."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI devolvido de <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não utilizado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto para devolver. A versão atual devolve apenas os objetos de System.IO. stream."
    return:
      type: System.Object
      description: "Um objeto de fluxo ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for especificado um tipo diferente de fluxo."
  overload: System.Xml.XmlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>Não é um <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> tipo."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O URI especificado não é um URI absoluto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Não há um erro de tempo de execução (por exemplo, uma ligação ao servidor interrompido)."
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "No modo assíncrono mapeia um URI para um objeto que contém o recurso real."
  remarks: "Esta é a versão assíncrona de <xref:System.Xml.XmlResolver.GetEntity%2A>, com a mesma funcionalidade.</xref:System.Xml.XmlResolver.GetEntity%2A> Para utilizar este método, tem de definir o <xref:System.Xml.XmlReaderSettings.Async%2A>Sinalizador para `true`.</xref:System.Xml.XmlReaderSettings.Async%2A>"
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI devolvido de <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não utilizado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto para devolver. A versão atual só devolve <xref:System.IO.Stream>objetos.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Um objeto de fluxo ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for especificado um tipo diferente de fluxo."
  overload: System.Xml.XmlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando substituí-lo de uma classe derivada, resolve o URI absoluto de URIs de base e relativo."
  remarks: "O URI absoluto pode ser utilizado como o URI base para todos os pedidos subsequentes para entidades que relativa a este URI."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "O URI base utilizado para resolver o URI relativo."
    - id: relativeUri
      type: System.String
      description: "O URI para resolver. O URI pode ser absoluto ou relativo. Se absoluto, este valor eficazmente substitui o `baseUri` valor. Se relativo, combina com o `baseUri` para tornar um URI absoluto."
    return:
      type: System.Uri
      description: "O URI absoluto ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o URI relativo não é possível resolver."
  overload: System.Xml.XmlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Permite que a resolução de tipos de retorno que &lt;xref:System.IO.Stream?displayProperty=fullName&gt;."
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI."
    - id: type
      type: System.Type
      description: "O tipo de retorno."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> type </code> é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlResolver.SupportsType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlResolver.#ctor*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver.XmlResolver
- uid: System.Xml.XmlResolver.Credentials*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
- uid: System.Xml.XmlResolver.GetEntity*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlResolver.GetEntity
- uid: System.Xml.XmlResolver.GetEntityAsync*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlResolver.GetEntityAsync
- uid: System.Xml.XmlResolver.ResolveUri*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlResolver.ResolveUri
- uid: System.Xml.XmlResolver.SupportsType*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlResolver.SupportsType
