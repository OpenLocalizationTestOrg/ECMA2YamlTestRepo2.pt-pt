### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "Fornece serviços de estado da sessão para uma aplicação. Esta classe não pode ser herdada."
  remarks: "SessionStateModule é ASP. Processador de estado da sessão de predefinida da rede. Escreve dados de sessão e obtém-lo a partir do arquivo de estado da sessão e gera o **Session_OnStart** e **Session_OnEnd** eventos. Para obter mais informações sobre como utilizar o estado da sessão ASP.NET para armazenar e obter os valores para uma sessão de utilizador, consulte [descrição geral do Estado de sessão ASP.NET](~/add/includes/ajax-current-ext-md.md).       Pode substituir o SessionStateModule por uma implementação personalizada a <xref:System.Web.IHttpModule>interface que gere o estado da sessão.</xref:System.Web.IHttpModule> Para obter um exemplo de um módulo de estado da sessão personalizado, consulte o <xref:System.Web.SessionState.SessionStateUtility>Descrição geral de classe.</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> classe."
  remarks: "Este construtor não se destina a ser chamado a partir do código da aplicação.       Um <xref:System.Web.HttpApplication>objeto é criado quando uma aplicação ASP.NET é iniciada.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>chamadas de objeto a <xref:System.Web.SessionState.SessionStateModule>construtor para criar o <xref:System.Web.SessionState.SessionStateModule>objeto para a aplicação.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> O <xref:System.Web.SessionState.SessionStateModule>é especificado na configuração para uma aplicação.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Executa o código de limpeza final antes do <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objeto é libertado da memória."
  remarks: "Este método não se destina a ser chamado a partir do código da aplicação.       Um <xref:System.Web.HttpApplication>objeto é criado quando uma aplicação ASP.NET é iniciada.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>objeto cria e inicia o <xref:System.Web.SessionState.SessionStateModule>objeto para a aplicação e chama o método de Dispose quando o objeto é lançado.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> O <xref:System.Web.SessionState.SessionStateModule>é especificado na configuração para uma aplicação.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ocorre quando uma sessão termina."
  remarks: "O evento de fim é gerado no final de um pedido quando o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>método foi chamado ou quando a sessão expirou.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Uma sessão expira se o número de minutos especificado pelo <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>propriedade transmite sem um pedido que está a ser efetuadas para a sessão.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       O **Session_OnEnd** eventos é utilizado para efetuar qualquer trabalho de limpeza para uma sessão como disposing dos recursos utilizados por sessão.       Pode especificar um processador para o evento de extremidade adicionando um subroutine pública nomeado **Session_OnEnd** para o ficheiro global. asax.      > [!NOTE] > O **Session_OnEnd** evento apenas é suportada quando o estado da sessão <xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>valor da propriedade é <xref:System.Web.SessionState.SessionStateMode>, que é a predefinição.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> Se o estado da sessão <xref:System.Web.SessionState.HttpSessionState.Mode%2A>está definido como <xref:System.Web.SessionState.SessionStateMode>ou <xref:System.Web.SessionState.SessionStateMode>, em seguida, a **Session_OnEnd** evento no ficheiro global. asax é ignorado.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> Se o estado da sessão <xref:System.Web.SessionState.HttpSessionState.Mode%2A>valor da propriedade é <xref:System.Web.SessionState.SessionStateMode>, em seguida, suporte para o **Session_OnEnd** evento é determinado pelo fornecedor de arquivo de estado de sessão personalizado.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       Apesar do evento de fim é público, só pode processá-lo ao adicionar um processador de eventos no ficheiro global. asax. Esta restrição é implementada porque <xref:System.Web.HttpApplication>instâncias são reutilizadas para desempenho.</xref:System.Web.HttpApplication> Quando uma sessão expira, apenas o **Session_OnEnd** evento especificado no ficheiro global. asax é executado, para impedir que o código de um processador de eventos de fim associado ao chamar um <xref:System.Web.HttpApplication>instância que está a ser utilizada.</xref:System.Web.HttpApplication>       Para obter mais informações sobre o ficheiro global. asax, consulte [global. asax sintaxe](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Chama inicialização code quando um <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objeto é criado."
  remarks: "Este método não se destina a ser chamado a partir do código da aplicação.       Um <xref:System.Web.HttpApplication>é criado quando uma aplicação ASP.NET é iniciada.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>objeto chama o método Init, quando cria o <xref:System.Web.SessionState.SessionStateModule>objeto para a aplicação.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> O <xref:System.Web.SessionState.SessionStateModule>classe é especificada na configuração para uma aplicação.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "A aplicação atual."
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo no [sessionState elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração está definido como <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> ou <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>, e a aplicação ASP.NET tem menos de <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> confiança."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo no [sessionState elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração está definido como <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> e <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> atributo está vazio ou não existe.       - ou - o <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo no [sessionState elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração está definido como <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> e o fornecedor identificado pelo nome no <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> atributo não foi adicionado para o [fornecedores elemento para sessionState (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa) subelemento."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Liberta o estado da sessão para especificado <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para o qual libertar o estado da sessão."
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "No modo assíncrono liberta o estado da sessão para especificado <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para o qual libertar o estado da sessão."
    return:
      type: System.Threading.Tasks.Task
      description: "A <xref:System.Threading.Tasks.Task>para a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "O evento que ocorre quando é criada uma sessão."
  remarks: "O evento de início é gerado no início de um pedido quando é iniciada uma nova sessão. Uma nova sessão é iniciada se é efetuado um pedido que não contém um identificador de sessão, o identificador de sessão é inválido ou a sessão associada com um identificador de sessão expirou.       O **Session_OnStart** eventos é utilizado para efetuar qualquer trabalho de inicialização de uma sessão de como configurar os valores predefinidos para variáveis de sessão.       Pode especificar um processador para o evento de início, adicionando um subroutine pública nomeado **Session_OnStart** para o ficheiro global. asax.       Para obter mais informações sobre o ficheiro global. asax, consulte [global. asax sintaxe](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
