### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlClientFactory
  id: SqlClientFactory
  children:
  - System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator
  - System.Data.SqlClient.SqlClientFactory.CreateCommand
  - System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder
  - System.Data.SqlClient.SqlClientFactory.CreateConnection
  - System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder
  - System.Data.SqlClient.SqlClientFactory.CreateDataAdapter
  - System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator
  - System.Data.SqlClient.SqlClientFactory.CreateParameter
  - System.Data.SqlClient.SqlClientFactory.CreatePermission(System.Security.Permissions.PermissionState)
  - System.Data.SqlClient.SqlClientFactory.Instance
  - System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService(System.Type)
  langs:
  - csharp
  name: SqlClientFactory
  nameWithType: SqlClientFactory
  fullName: System.Data.SqlClient.SqlClientFactory
  type: Class
  summary: "Represents a set of methods for creating instances of the <xref href=&quot;System.Data.SqlClient&quot;></xref> provider&quot;s implementation of the data source classes."
  syntax:
    content: 'public sealed class SqlClientFactory : System.Data.Common.DbProviderFactory, IServiceProvider'
  inheritance:
  - System.Object
  - System.Data.Common.DbProviderFactory
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator
  id: CanCreateDataSourceEnumerator
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CanCreateDataSourceEnumerator
  nameWithType: SqlClientFactory.CanCreateDataSourceEnumerator
  fullName: System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a <xref href=&quot;System.Data.Sql.SqlDataSourceEnumerator&quot;></xref> can be created; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> ."
  remarks: "The <xref:System.Data.Common.DbProviderFactory> class provides the <xref:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator%2A> property so that inheritors can indicate whether they can provide a data source enumerator. The <xref:System.Data.SqlClient.SqlClientFactory> displays this property, but its value is always `true`."
  example:
  - "The following example displays a list of all available SQL Server data sources, using code that could enumerate data sources for any provider.  \n  \n [!code-vb[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._6_1.vb)]\n [!code-cs[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/add/codesnippet/csharp/p-system.data.sqlclient._6_1.cs)]"
  syntax:
    content: public override bool CanCreateDataSourceEnumerator { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a <xref href=&quot;System.Data.Sql.SqlDataSourceEnumerator&quot;></xref> can be created; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreateCommand
  id: CreateCommand
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: SqlClientFactory.CreateCommand()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a strongly typed <xref href=&quot;System.Data.Common.DbCommand&quot;></xref> instance."
  remarks: ''
  example:
  - "The following code fragment returns a strongly typed <xref:System.Data.Common.DbCommand> instance:  \n  \n```vb#  \nDim newFactory As SqlClientFactory = SqlClientFactory.Instance  \nDim cmd As DbCommand = newFactory.CreateCommand()  \n```  \n  \n```c#  \nSqlClientFactory newFactory = SqlClientFactory.Instance;  \nDbCommand cmd = newFactory.CreateCommand();  \n```"
  syntax:
    content: public override System.Data.Common.DbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A new strongly typed instance of <xref href=&quot;System.Data.Common.DbCommand&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder
  id: CreateCommandBuilder
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreateCommandBuilder()
  nameWithType: SqlClientFactory.CreateCommandBuilder()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a strongly typed <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref> instance."
  remarks: ''
  example:
  - "The following code fragment returns a strongly typed <xref:System.Data.Common.DbCommandBuilder> instance:  \n  \n```vb#  \nDim newFactory As SqlClientFactory = SqlClientFactory.Instance  \nDim cmd As DbCommandBuilder = newFactory.CreateCommandBuilder()  \n```  \n  \n```c#  \nSqlClientFactory newFactory = SqlClientFactory.Instance;  \nDbCommandBuilder cmd = newFactory.CreateCommandBuilder();  \n```"
  syntax:
    content: public override System.Data.Common.DbCommandBuilder CreateCommandBuilder ();
    parameters: []
    return:
      type: System.Data.Common.DbCommandBuilder
      description: "A new strongly typed instance of <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnection
  id: CreateConnection
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreateConnection()
  nameWithType: SqlClientFactory.CreateConnection()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateConnection()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a strongly typed <xref href=&quot;System.Data.Common.DbConnection&quot;></xref> instance."
  remarks: ''
  example:
  - "The following code fragment returns a strongly typed <xref:System.Data.Common.DbConnection> instance:  \n  \n```vb#  \nDim newFactory As SqlClientFactory = SqlClientFactory.Instance  \nDim cmd As DbConnection = newFactory.CreateConnection()  \n```  \n  \n```c#  \nSqlClientFactory newFactory = SqlClientFactory.Instance;  \nDbConnection cmd = newFactory.CreateConnection();  \n  \n```"
  syntax:
    content: public override System.Data.Common.DbConnection CreateConnection ();
    parameters: []
    return:
      type: System.Data.Common.DbConnection
      description: "A new strongly typed instance of <xref href=&quot;System.Data.Common.DbConnection&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CreateConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder
  id: CreateConnectionStringBuilder
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreateConnectionStringBuilder()
  nameWithType: SqlClientFactory.CreateConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a strongly typed <xref href=&quot;System.Data.Common.DbConnectionStringBuilder&quot;></xref> instance."
  remarks: ''
  example:
  - "The following code fragment returns a strongly typed <xref:System.Data.Common.DbConnectionStringBuilder> instance:  \n  \n```vb#  \nDim newFactory As SqlClientFactory = SqlClientFactory.Instance  \nDim cmd As DbConnectionStringBuilder = _  \n    newFactory.CreateConnectionStringBuilder()  \n```  \n  \n```c#  \nSqlClientFactory newFactory = SqlClientFactory.Instance;  \nDbConnectionStringBuilder cmd =   \n    newFactory.CreateConnectionStringBuilder();  \n```"
  syntax:
    content: public override System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder ();
    parameters: []
    return:
      type: System.Data.Common.DbConnectionStringBuilder
      description: "A new strongly typed instance of <xref href=&quot;System.Data.Common.DbConnectionStringBuilder&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreateDataAdapter
  id: CreateDataAdapter
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreateDataAdapter()
  nameWithType: SqlClientFactory.CreateDataAdapter()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateDataAdapter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a strongly typed <xref href=&quot;System.Data.Common.DbDataAdapter&quot;></xref> instance."
  remarks: ''
  example:
  - "The following code fragment returns a strongly typed <xref:System.Data.Common.DbDataAdapter> instance:  \n  \n```vb#  \nDim newFactory As SqlClientFactory = SqlClientFactory.Instance  \nDim cmd As DbDataAdapter = newFactory.CreateDataAdapter()  \n```  \n  \n```c#  \nSqlClientFactory newFactory = SqlClientFactory.Instance;  \nDbDataAdapter cmd = newFactory.CreateDataAdapter();  \n```"
  syntax:
    content: public override System.Data.Common.DbDataAdapter CreateDataAdapter ();
    parameters: []
    return:
      type: System.Data.Common.DbDataAdapter
      description: "A new strongly typed instance of <xref href=&quot;System.Data.Common.DbDataAdapter&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CreateDataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator
  id: CreateDataSourceEnumerator
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreateDataSourceEnumerator()
  nameWithType: SqlClientFactory.CreateDataSourceEnumerator()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a new <xref href=&quot;System.Data.Sql.SqlDataSourceEnumerator&quot;></xref>."
  remarks: ''
  example:
  - "The following example displays a list of all available SQL Server data sources, using code that could enumerate data sources for any provider.  \n  \n [!code-vb[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._2_1.vb)]\n [!code-cs[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/add/codesnippet/csharp/m-system.data.sqlclient._2_1.cs)]"
  syntax:
    content: public override System.Data.Common.DbDataSourceEnumerator CreateDataSourceEnumerator ();
    parameters: []
    return:
      type: System.Data.Common.DbDataSourceEnumerator
      description: "A new data source enumerator."
  overload: System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: SqlClientFactory.CreateParameter()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a strongly typed <xref href=&quot;System.Data.Common.DbParameter&quot;></xref> instance."
  remarks: ''
  example:
  - "The following code fragment returns a strongly typed <xref:System.Data.Common.DbParameter> instance:  \n  \n```vb#  \nDim newFactory As SqlClientFactory = SqlClientFactory.Instance  \nDim cmd As DbParameter = newFactory.CreateParameter()  \n```  \n  \n```c#  \nSqlClientFactory newFactory = SqlClientFactory.Instance;  \nDbParameter cmd = newFactory.CreateParameter();  \n```"
  syntax:
    content: public override System.Data.Common.DbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "A new strongly typed instance of <xref href=&quot;System.Data.Common.DbParameter&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.CreatePermission(System.Security.Permissions.PermissionState)
  id: CreatePermission(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: CreatePermission(PermissionState)
  nameWithType: SqlClientFactory.CreatePermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientFactory.CreatePermission(PermissionState)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns a new <xref href=&quot;System.Security.CodeAccessPermission&quot;></xref>."
  syntax:
    content: public override System.Security.CodeAccessPermission CreatePermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A member of the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> enumeration."
    return:
      type: System.Security.CodeAccessPermission
      description: "A strongly typed instance of <xref href=&quot;System.Security.CodeAccessPermission&quot;></xref>."
  overload: System.Data.SqlClient.SqlClientFactory.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.Instance
  id: Instance
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: Instance
  nameWithType: SqlClientFactory.Instance
  fullName: System.Data.SqlClient.SqlClientFactory.Instance
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets an instance of the <xref href=&quot;System.Data.SqlClient.SqlClientFactory&quot;></xref>. This can be used to retrieve strongly typed data objects."
  remarks: ''
  example:
  - "The following code fragment uses the Instance property to retrieve a **SqlClientFactory** instance, and then return a strongly typed <xref:System.Data.Common.DbCommand> instance:  \n  \n```vb#  \nDim newFactory As SqlClientFactory = SqlClientFactory.Instance  \nDim cmd As DbCommand = newFactory.CreateCommand()  \n```  \n  \n```c#  \nSqlClientFactory newFactory = SqlClientFactory.Instance;  \nDbCommand cmd = newFactory.CreateCommand();  \n```"
  syntax:
    content: public static readonly System.Data.SqlClient.SqlClientFactory Instance;
    return:
      type: System.Data.SqlClient.SqlClientFactory
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: SqlClientFactory.System.IServiceProvider.GetService(Type)
  fullName: System.Data.SqlClient.SqlClientFactory.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "For a description of this member, see &lt;xref:System.IServiceProvider.GetService%2A?displayProperty=fullName&gt;."
  syntax:
    content: object IServiceProvider.GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "An object that specifies the type of service object to get."
    return:
      type: System.Object
      description: "A service object."
  overload: System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbProviderFactory
  isExternal: false
  name: System.Data.Common.DbProviderFactory
- uid: System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CanCreateDataSourceEnumerator
  nameWithType: SqlClientFactory.CanCreateDataSourceEnumerator
  fullName: System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlClientFactory.CreateCommand
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateCommand()
  nameWithType: SqlClientFactory.CreateCommand()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateCommandBuilder()
  nameWithType: SqlClientFactory.CreateCommandBuilder()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder()
- uid: System.Data.Common.DbCommandBuilder
  parent: System.Data.Common
  isExternal: false
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder
  fullName: System.Data.Common.DbCommandBuilder
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnection
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateConnection()
  nameWithType: SqlClientFactory.CreateConnection()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateConnection()
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateConnectionStringBuilder()
  nameWithType: SqlClientFactory.CreateConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder()
- uid: System.Data.Common.DbConnectionStringBuilder
  parent: System.Data.Common
  isExternal: false
  name: DbConnectionStringBuilder
  nameWithType: DbConnectionStringBuilder
  fullName: System.Data.Common.DbConnectionStringBuilder
- uid: System.Data.SqlClient.SqlClientFactory.CreateDataAdapter
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateDataAdapter()
  nameWithType: SqlClientFactory.CreateDataAdapter()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateDataAdapter()
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateDataSourceEnumerator()
  nameWithType: SqlClientFactory.CreateDataSourceEnumerator()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator()
- uid: System.Data.Common.DbDataSourceEnumerator
  parent: System.Data.Common
  isExternal: false
  name: DbDataSourceEnumerator
  nameWithType: DbDataSourceEnumerator
  fullName: System.Data.Common.DbDataSourceEnumerator
- uid: System.Data.SqlClient.SqlClientFactory.CreateParameter
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateParameter()
  nameWithType: SqlClientFactory.CreateParameter()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlClientFactory.CreatePermission(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreatePermission(PermissionState)
  nameWithType: SqlClientFactory.CreatePermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientFactory.CreatePermission(PermissionState)
- uid: System.Security.CodeAccessPermission
  parent: System.Security
  isExternal: false
  name: CodeAccessPermission
  nameWithType: CodeAccessPermission
  fullName: System.Security.CodeAccessPermission
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.SqlClient.SqlClientFactory.Instance
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: Instance
  nameWithType: SqlClientFactory.Instance
  fullName: System.Data.SqlClient.SqlClientFactory.Instance
- uid: System.Data.SqlClient.SqlClientFactory
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlClientFactory
  nameWithType: SqlClientFactory
  fullName: System.Data.SqlClient.SqlClientFactory
- uid: System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService(System.Type)
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: SqlClientFactory.System.IServiceProvider.GetService(Type)
  fullName: System.Data.SqlClient.SqlClientFactory.System.IServiceProvider.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CanCreateDataSourceEnumerator
  nameWithType: SqlClientFactory.CanCreateDataSourceEnumerator
- uid: System.Data.SqlClient.SqlClientFactory.CreateCommand*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateCommand
  nameWithType: SqlClientFactory.CreateCommand
- uid: System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateCommandBuilder
  nameWithType: SqlClientFactory.CreateCommandBuilder
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnection*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateConnection
  nameWithType: SqlClientFactory.CreateConnection
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateConnectionStringBuilder
  nameWithType: SqlClientFactory.CreateConnectionStringBuilder
- uid: System.Data.SqlClient.SqlClientFactory.CreateDataAdapter*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateDataAdapter
  nameWithType: SqlClientFactory.CreateDataAdapter
- uid: System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateDataSourceEnumerator
  nameWithType: SqlClientFactory.CreateDataSourceEnumerator
- uid: System.Data.SqlClient.SqlClientFactory.CreateParameter*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreateParameter
  nameWithType: SqlClientFactory.CreateParameter
- uid: System.Data.SqlClient.SqlClientFactory.CreatePermission*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: CreatePermission
  nameWithType: SqlClientFactory.CreatePermission
- uid: System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService*
  parent: System.Data.SqlClient.SqlClientFactory
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: SqlClientFactory.System.IServiceProvider.GetService
