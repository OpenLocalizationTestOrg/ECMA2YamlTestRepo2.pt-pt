### YamlMime:ManagedReference
items:
- uid: System.Windows.ResourceDictionary
  id: ResourceDictionary
  children:
  - System.Windows.ResourceDictionary.#ctor
  - System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  - System.Windows.ResourceDictionary.BeginInit
  - System.Windows.ResourceDictionary.Clear
  - System.Windows.ResourceDictionary.Contains(System.Object)
  - System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  - System.Windows.ResourceDictionary.Count
  - System.Windows.ResourceDictionary.DeferrableContent
  - System.Windows.ResourceDictionary.EndInit
  - System.Windows.ResourceDictionary.FindName(System.String)
  - System.Windows.ResourceDictionary.GetEnumerator
  - System.Windows.ResourceDictionary.IsFixedSize
  - System.Windows.ResourceDictionary.IsReadOnly
  - System.Windows.ResourceDictionary.Item(System.Object)
  - System.Windows.ResourceDictionary.Keys
  - System.Windows.ResourceDictionary.MergedDictionaries
  - System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  - System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  - System.Windows.ResourceDictionary.Remove(System.Object)
  - System.Windows.ResourceDictionary.Source
  - System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  - System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  - System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  - System.Windows.ResourceDictionary.UnregisterName(System.String)
  - System.Windows.ResourceDictionary.Values
  langs:
  - csharp
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
  type: Class
  summary: "Provides a hash table / dictionary implementation that contains [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] resources used by components and other elements of a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application."
  remarks: "The items in a ResourceDictionary are not immediately processed when application code is loaded by a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] loader. Instead, the ResourceDictionary persists as an object, and the individual values are processed only when they are specifically requested.       The ResourceDictionary class is not derived from <xref:System.Collections.DictionaryBase>. Instead, the ResourceDictionary class implements <xref:System.Collections.IDictionary> but relies on a <xref:System.Collections.Hashtable> internally.       In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], the ResourceDictionary class is typically an implicit collection element that is the object element value of several `Resources` properties, when given in property element syntax. For details on implicit collections in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/add/includes/ajax-current-ext-md.md). An exception is when you want to specify a merged dictionary; for details, see [Merged Resource Dictionaries](~/add/includes/ajax-current-ext-md.md).       Another possible [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] usage is to declare a resource dictionary as a discrete [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] file, and either load it at run time with <xref:System.Windows.Markup.XamlReader.Load%2A> or include it in a (full-trust) project as a resource or loose file. In this case, ResourceDictionary can be declared as an object element, serving as the root element of the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. You must map the appropriate XML namespace values (default for the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] namespace and typically `x:` for the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] namespace) onto the ResourceDictionary element if you plan to use it as the root element. Then you can add child elements that define the resources, each with an  value.      <a name=&quot;xamlImplicitCollectionUsage_ResourceDictionary&quot;></a>    ## XAML Implicit Collection Usage      ```   <object>     <object.resourcesProperty>       oneOrMoreResources     </object.resourcesProperty>   </object>   ```      <a name=&quot;xamlValues_ResourceDictionary&quot;></a>    ## XAML Values    *resourcesProperty*    A property specifying a property element, where the value type of that property is ResourceDictionary. Typically, this is the `Resources` property of <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>, or of <xref:System.Windows.Application> in an application resources case.       *oneOrMoreResources*    One or more resources specified as object elements. Each resource that you specify must have an [x:Key Directive](~/add/includes/ajax-current-ext-md.md) assigned."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]

      [System.Windows.Markup.Ambient]

      [System.Windows.Markup.UsableDuringInitialization(true)]

      public class ResourceDictionary : System.Collections.IDictionary, System.ComponentModel.ISupportInitialize, System.Windows.Markup.INameScope, System.Windows.Markup.IUriContext
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.INameScope
  - System.Windows.Markup.IUriContext
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.#ctor
  id: '#ctor'
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> class."
  syntax:
    content: public ResourceDictionary ();
    parameters: []
  overload: System.Windows.ResourceDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adds a resource by key to this <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  remarks: "Attempting to add a duplicate key raises an exception.       Keys are always added to the base dictionary. Keys in <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> within the current <xref:System.Windows.ResourceDictionary> are not checked for duplication, only the base dictionary is checked for duplicates."
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "The name of the key to add."
    - id: value
      type: System.Object
      description: "The value of the resource to add."
  overload: System.Windows.ResourceDictionary.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> is locked or read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An element with the same key already exists in the <xref href=&quot;System.Collections.Hashtable&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.BeginInit
  id: BeginInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Begins the initialization phase for this <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  remarks: "Calling this method is an indication that the contents of the <xref:System.Windows.ResourceDictionary> are about to be loaded. The next step in the process is to call <xref:System.Windows.ResourceDictionary.EndInit%2A>.       Do not call BeginInit more than once, before calling  <xref:System.Windows.ResourceDictionary.EndInit%2A>. Doing so will raise an exception."
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Called BeginInit more than once before <xref:System.Windows.ResourceDictionary.EndInit*> was called."
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Clear
  id: Clear
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Clears all keys (and values) in the base <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>. This does not clear any merged dictionary items."
  remarks: "If you need to clear merged dictionary items, obtain the particular dictionary from <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> collection and specifically call Clear on that <xref:System.Windows.ResourceDictionary>, although typically the dictionaries are remote and you might not have access. Alternatively, remove the entire <xref:System.Windows.ResourceDictionary> from <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> by calling Remove on the generic collection."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.ResourceDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determines whether the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> contains an element with the specified key."
  remarks: "If the requested key is not in this resource dictionary, the resource lookup logic will also check the merged dictionaries."
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "The key to locate in the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> contains a key-value pair with the specified key; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ResourceDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  id: CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Copies the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> elements to a one-dimensional <xref:System.Collections.DictionaryEntry> at the specified index."
  remarks: "This copies only the base dictionary. The result array will have no <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> if it is reconstituted to be a <xref:System.Windows.ResourceDictionary> again."
  syntax:
    content: public void CopyTo (System.Collections.DictionaryEntry[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.DictionaryEntry[]
      description: "The one-dimensional array that is the destination of the <xref:System.Collections.DictionaryEntry> objects copied from the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> instance. The array must have zero-based indexing."
    - id: arrayIndex
      type: System.Int32
      description: "The zero-based index of `array` where copying begins."
  overload: System.Windows.ResourceDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Count
  id: Count
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets the number of entries in the base <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The current number of entries in the base dictionary."
  overload: System.Windows.ResourceDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.DeferrableContent
  id: DeferrableContent
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets the deferrable content for this resource dictionary."
  syntax:
    content: public System.Windows.DeferrableContent DeferrableContent { get; set; }
    return:
      type: System.Windows.DeferrableContent
      description: "Always returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ResourceDictionary.DeferrableContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.EndInit
  id: EndInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ends the initialization phase, and invalidates the previous tree such that all changes made to keys during the initialization phase can be accounted for."
  remarks: "<xref:System.Windows.ResourceDictionary.BeginInit%2A> and EndInit follow a transaction model. <xref:System.Windows.ResourceDictionary.BeginInit%2A> marks the dictionary uninitialized and EndInit marks it initialized."
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  id: FindName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Not supported by this Dictionary implementation."
  remarks: "The <xref:System.Windows.ResourceDictionary> class does not support registering by name. It uses keys instead."
  syntax:
    content: public object FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name identifier for the object being requested."
    return:
      type: System.Object
      description: "Always returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ResourceDictionary.FindName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returns an <xref:System.Collections.IDictionaryEnumerator> that can be used to iterate through the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  remarks: "The iterator is for the base dictionary only."
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "A specialized enumerator for the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  overload: System.Windows.ResourceDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets whether this <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> is fixed-size."
  remarks: "The default implementation returns the <xref:System.Collections.Hashtable> default, which is `false`."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the hash table is fixed-size; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ResourceDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets whether this <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> is read-only."
  remarks: "This property returns the <xref:System.Collections.Hashtable> default, which is `false`."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the hash table is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ResourceDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets the value associated with the given key."
  remarks: "If the requested key is not in this resource dictionary, the framework resource system will also check the merged dictionaries.       Checking a <xref:System.Windows.ResourceDictionary> by item or index is not generally the preferred way to retrieve resources. You should instead call methods that are capable of participating in the full resource lookup process and look up resources by their keys, and that can find the resources in applications or themes. <xref:System.Windows.FrameworkElement.FindResource%2A> is such a method, and is present on any <xref:System.Windows.FrameworkElement>. Otherwise your attempt to find the resource does not match the true run-time behavior.       However, obtaining resources directly from an individual dictionary might be appropriate if you are retrieving resources from a known <xref:System.Windows.ResourceDictionary> location, and are doing so to avoid the possible performance and scope implications of run-time key lookup.       You do not use indexers to define collection members in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. Instead, you create child elements in markup. The child elements are either child elements of <xref:System.Windows.ResourceDictionary>, or of a property element where the property type is `ResourceDictionary`. For details, see the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] usage sections in <xref:System.Windows.ResourceDictionary>.      <a name=&quot;xamlTextUsage_Item&quot;></a>    ## XAML Text Usage    See Remarks."
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "The desired key to get or set."
    return:
      type: System.Object
      description: "Value of the key."
  overload: System.Windows.ResourceDictionary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Keys
  id: Keys
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets a collection of all keys contained in this <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  remarks: "This property exists because it is required by <xref:System.Collections.IDictionary>, but Keys generally is not useful for most <xref:System.Windows.ResourceDictionary> scenarios.       The returned keys do not include keys within the <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>. Also the keys collection is a snapshot of the keys in the base dictionary. If you subsequently make changes to this <xref:System.Windows.ResourceDictionary>, a stored Keys will not reflect the changes."
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "The collection of all keys."
  overload: System.Windows.ResourceDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  id: MergedDictionaries
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets a collection of the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> dictionaries that constitute the various resource dictionaries in the merged dictionaries."
  remarks: "Dictionaries are merged by adding a <xref:System.Windows.ResourceDictionary> to the generic collection referenced by MergedDictionaries. A merged <xref:System.Windows.ResourceDictionary> does not have resource elements defined within it in markup. Instead, the merged dictionary is a <xref:System.Windows.ResourceDictionary> with no markup child elements defined (or with no elements added through code), but with a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] specified for <xref:System.Windows.ResourceDictionary.Source%2A>. The <xref:System.Windows.ResourceDictionary.Source%2A> designation enables the merged dictionary to come from an external source, such as a separate resource assembly that ships with the application, &quot;loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]&quot;, or a specific localization or global resources assembly.       Specifying resource elements within a <xref:System.Windows.ResourceDictionary> that has <xref:System.Windows.ResourceDictionary.Source%2A> specified is not supported.       Lookup behavior within the MergedDictionaries collection will search the last-added <xref:System.Windows.ResourceDictionary> first, and the search stops as soon as a requested key is found. Duplicate keys across the collection of merged dictionaries are not illegal. For more information on merged dictionary behavior, see [Merged Resource Dictionaries](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlPropertyElementUsage_MergedDictionaries&quot;></a>    ## XAML Property Element Usage      ```   <object>     <object.MergedDictionaries>       oneOrMoreResourceDictionaries     </object.MergedDictionaries>   </object>      ```      <a name=&quot;xamlValues_MergedDictionaries&quot;></a>    ## XAML Values    *oneOrMoreResourceDictionaries*    One or more <xref:System.Windows.ResourceDictionary> object elements. A <xref:System.Windows.ResourceDictionary> used for MergedDictionaries does not have collection content, and specifies a <xref:System.Windows.ResourceDictionary.Source%2A> attribute that references the complete <xref:System.Windows.ResourceDictionary> remotely."
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary> MergedDictionaries { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
      description: "The collection of merged dictionaries."
  overload: System.Windows.ResourceDictionary.MergedDictionaries*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  id: OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Occurs when the <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> receives a request for a resource."
  syntax:
    content: protected virtual void OnGettingValue (object key, ref object value, out bool canCache);
    parameters:
    - id: key
      type: System.Object
      description: "The key of the resource to get."
    - id: value
      type: System.Object
      description: "The value of the requested resource."
    - id: canCache
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the resource can be saved and used later; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ResourceDictionary.OnGettingValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Not supported by this Dictionary implementation."
  remarks: "The <xref:System.Windows.ResourceDictionary> class does not support registering by name. It uses keys instead. The XAML namescope methods are implemented as inoperative versions in <xref:System.Windows.ResourceDictionary> to make it clear that XAML names do not apply to resources.       Calling this method will cause a <xref:System.NotSupportedException> to be thrown."
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: "See Remarks."
    - id: scopedElement
      type: System.Object
      description: "See Remarks."
  overload: System.Windows.ResourceDictionary.RegisterName*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "In all cases when this method is called."
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Removes the entry with the specified key from the base dictionary."
  remarks: "If the <xref:System.Windows.ResourceDictionary> does not contain an element with the specified key, the <xref:System.Windows.ResourceDictionary> remains unchanged. No exception is raised.       This method does not remove keys from the <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>. You must obtain the specific <xref:System.Windows.ResourceDictionary> from the collection to remove those keys, but that might not be possible because you are typically accessing such a dictionary remotely."
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Key of the entry to remove."
  overload: System.Windows.ResourceDictionary.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> is locked or read-only."
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Source
  id: Source
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets the [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] to load resources from."
  remarks: "Typically, Source is specified as a Pack URI, which references the location of a resource dictionary that is included as a noncompiled Resource or Content build action by your application building project. For details on the Pack URI format, see [Pack URIs in WPF](~/add/includes/ajax-current-ext-md.md).       Generally, the Source property is set only for a <xref:System.Windows.ResourceDictionary> that is specified for the <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> property (either as a property element in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], or as a <xref:System.Windows.ResourceDictionary> item of the collection in code). In this context, setting the value for Source will merge the dictionary contents found at the supplied [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] into the current <xref:System.Windows.ResourceDictionary>. Any load failures will cause an exception to be thrown."
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "The source location of an external resource dictionary."
  overload: System.Windows.ResourceDictionary.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.ResourceDictionary> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: void ICollection.CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: "A zero-based <xref:System.Array> that receives the copied items from the <xref href=&quot;System.Windows.Markup.Localizer.BamlLocalizationDictionary&quot;></xref>."
    - id: arrayIndex
      type: System.Int32
      description: "The first position in the specified <xref:System.Array> to receive the copied contents."
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.ResourceDictionary> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref> is synchronized (thread safe); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.ResourceDictionary> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.ResourceDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> object that can be used to iterate through the collection."
  overload: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  id: System#Windows#Markup#IUriContext#BaseUri
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "For a description of this member, see &lt;xref:System.Windows.Markup.IUriContext.BaseUri%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.ResourceDictionary> instance is cast to an <xref:System.Windows.Markup.IUriContext> interface."
  syntax:
    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }
    return:
      type: System.Uri
      description: "The base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the current context."
  overload: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Not supported by this Dictionary implementation."
  remarks: "The <xref:System.Windows.ResourceDictionary> class does not support registering by name. It uses keys instead. Calling this method does nothing."
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: "See Remarks"
  overload: System.Windows.ResourceDictionary.UnregisterName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Values
  id: Values
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets a collection of all values associated with keys contained in this <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>."
  remarks: "This property exists because it is required by <xref:System.Collections.IDictionary>, but generally is not useful for most <xref:System.Windows.ResourceDictionary> scenarios.       The returned values do not include values within the <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>. Also the collection is a snapshot of the values in the base dictionary. If you subsequently make changes to this <xref:System.Windows.ResourceDictionary>, a stored Values will not reflect the changes."
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "The collection of all values."
  overload: System.Windows.ResourceDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.ResourceDictionary.#ctor
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
- uid: System.Windows.ResourceDictionary.BeginInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
- uid: System.Windows.ResourceDictionary.Clear
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ResourceDictionary.Count
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
- uid: System.Windows.DeferrableContent
  parent: System.Windows
  isExternal: false
  name: DeferrableContent
  nameWithType: DeferrableContent
  fullName: System.Windows.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ResourceDictionary.GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
- uid: System.Windows.ResourceDictionary.Keys
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
- uid: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ResourceDictionary>
  nameWithType: Collection<ResourceDictionary>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.ResourceDictionary>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.ResourceDictionary
    name: ResourceDictionary
    nameWithType: ResourceDictionary
    fullName: ResourceDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
- uid: System.Windows.ResourceDictionary.Source
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
- uid: System.Windows.ResourceDictionary.Values
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
- uid: System.Windows.ResourceDictionary.#ctor*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary.ResourceDictionary
- uid: System.Windows.ResourceDictionary.Add*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add
  nameWithType: ResourceDictionary.Add
- uid: System.Windows.ResourceDictionary.BeginInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit
  nameWithType: ResourceDictionary.BeginInit
- uid: System.Windows.ResourceDictionary.Clear*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear
  nameWithType: ResourceDictionary.Clear
- uid: System.Windows.ResourceDictionary.Contains*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains
  nameWithType: ResourceDictionary.Contains
- uid: System.Windows.ResourceDictionary.CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ResourceDictionary.CopyTo
- uid: System.Windows.ResourceDictionary.Count*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit
  nameWithType: ResourceDictionary.EndInit
- uid: System.Windows.ResourceDictionary.FindName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName
  nameWithType: ResourceDictionary.FindName
- uid: System.Windows.ResourceDictionary.GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceDictionary.GetEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item
  nameWithType: ResourceDictionary.Item
- uid: System.Windows.ResourceDictionary.Keys*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
- uid: System.Windows.ResourceDictionary.MergedDictionaries*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
- uid: System.Windows.ResourceDictionary.OnGettingValue*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue
  nameWithType: ResourceDictionary.OnGettingValue
- uid: System.Windows.ResourceDictionary.RegisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName
  nameWithType: ResourceDictionary.RegisterName
- uid: System.Windows.ResourceDictionary.Remove*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove
  nameWithType: ResourceDictionary.Remove
- uid: System.Windows.ResourceDictionary.Source*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName
  nameWithType: ResourceDictionary.UnregisterName
- uid: System.Windows.ResourceDictionary.Values*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
