### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Component
  id: Component
  children:
  - System.ComponentModel.Component.#ctor
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.Finalize
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  langs:
  - csharp
  name: Component
  nameWithType: Component
  fullName: System.ComponentModel.Component
  type: Class
  summary: "Fornece a implementação base para o <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objeto interface e permite que a partilha entre aplicações."
  remarks: "O componente está a classe base para todos os componentes no tempo de execução de idioma comum empacotar referências por referência. Componente é remota e deriva da <xref:System.MarshalByRefObject>classe.</xref:System.MarshalByRefObject> Componente fornece uma implementação do <xref:System.ComponentModel.IComponent>interface.</xref:System.ComponentModel.IComponent> O <xref:System.ComponentModel.MarshalByValueComponent>fornece uma implementação de <xref:System.ComponentModel.IComponent>que marshals por valor.</xref:System.ComponentModel.IComponent> </xref:System.ComponentModel.MarshalByValueComponent>       Pode alojar um componente de qualquer objeto que implementa o <xref:System.ComponentModel.IContainer>interface e pode consultar e obter serviços do respectivo contentor.</xref:System.ComponentModel.IContainer> O contentor cria um <xref:System.ComponentModel.ISite>para cada componente nele contidos.</xref:System.ComponentModel.ISite> O contentor utiliza o site para gerir o componente e é utilizado pelo componente para comunicar com o respectivo contentor.       Um componente deve libertar recursos explicitamente por chamadas para o <xref:System.ComponentModel.Component.Dispose%2A>método, sem aguardar a gestão de memória automático através de uma chamada implícita para o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> Quando um <xref:System.ComponentModel.Container>é eliminado, todos os componentes dentro de <xref:System.ComponentModel.Container>também são eliminados depois.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container>"
  syntax:
    content: >-
      [System.ComponentModel.DesignerCategory("Component")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Component : MarshalByRefObject, IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ComponentModel.Component.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Component&quot;> </xref> classe."
  syntax:
    content: public Component ();
    parameters: []
  overload: System.ComponentModel.Component.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.CanRaiseEvents
  id: CanRaiseEvents
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se o componente pode gerar um evento."
  remarks: "Devolve a implementação de predefinição desta propriedade sempre `true`. As classes que herdam a <xref:System.ComponentModel.Component>classe deve ignorar esta propriedade para fornecer a capacidade de desativar o acionamento de eventos.</xref:System.ComponentModel.Component> Por exemplo, no <xref:System.Windows.Forms.Control>classe, se o controlo está a ser alojado como um controlo ActiveX, o <xref:System.Windows.Forms.Control.CanRaiseEvents%2A>propriedade devolve `false` se o controlo ActiveX tem os eventos congelados.</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Control>"
  syntax:
    content: protected virtual bool CanRaiseEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o componente pode gerar eventos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.CanRaiseEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Container
  id: Container
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> que contém o <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "Os componentes num contentor são controlados numa first in, First out lista, que também define a ordem dos componentes no contentor. O último componente adicionado é o último componente na lista."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "O <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> que contém o <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, se aplicável, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> não está a ser encapsulada num <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.DesignMode
  id: DesignMode
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> está atualmente em modo de estrutura."
  remarks: "O indicador de modo de estrutura é armazenado no <xref:System.ComponentModel.ISite>; por conseguinte, se o <xref:System.ComponentModel.Component>não tem um <xref:System.ComponentModel.ISite>associada, o valor desta propriedade é `false`.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> está no modo de estrutura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose
  id: Dispose
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "É possível chamar Dispose quando tiver terminado de utilizando <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> O método de Dispose deixa o <xref:System.ComponentModel.Component>num Estado não utilizável.</xref:System.ComponentModel.Component> Depois de chamar Dispose, tem de libertar todas as referências para o <xref:System.ComponentModel.Component>para que o recoletor de lixo pode reclame a memória que a <xref:System.ComponentModel.Component>foi occupying.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> Para obter mais informações, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md) e [implementar um método eliminar](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada eliminar antes de libertar a última referência <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.ComponentModel.Component>do objeto `Finalize` método.</xref:System.ComponentModel.Component>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.ComponentModel.Component&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: "Este método é denominado pelo público <xref:System.ComponentModel.Component.Dispose%2A>método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> `Dispose()`invoca protegida `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.ComponentModel.Component>referências.</xref:System.ComponentModel.Component> Este método invoca o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Disposed
  id: Disposed
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ocorre quando o componente é eliminado por uma chamada para o <xref:System.ComponentModel.Component.Dispose*>método.</xref:System.ComponentModel.Component.Dispose*>"
  remarks: 'Quando cria um delegado eliminado, identifique o método que processa o evento. Para associar o evento com o processador de eventos, adicione uma instância do delegado para o evento. O processador de eventos é chamado sempre que o evento ocorre, a menos que remova o delegado. Para mais informações sobre o delegado de processador de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Events
  id: Events
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém a lista de processadores de eventos que estão anexados a este <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: 'Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "Um <xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref> que fornece os delegados para este componente."
  overload: System.ComponentModel.Component.Events*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Finalize
  id: Finalize
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Disponibiliza recursos não geridos e efetuar outras operações de limpeza antes do <xref href=&quot;System.ComponentModel.Component&quot;> </xref> é reclamada a recolha de lixo."
  remarks: "Este método substitui <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Código da aplicação não deve chamar este método; um objeto `Finalize` método é invocado automaticamente durante a recolha de lixo, a menos que Finalização pelo garbage collector foi desativada por uma chamada para o <xref:System.GC.SuppressFinalize%2A>método.</xref:System.GC.SuppressFinalize%2A>       Para obter mais informações, consulte [finalizar métodos e os processos de destruição](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md), e [a substituir o método Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~Component ();
    parameters: []
  overload: System.ComponentModel.Component.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve um objeto que representa um serviço fornecido pelo <xref href=&quot;System.ComponentModel.Component&quot;> </xref> ou pelo respetivo <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  remarks: "Este método pode ser substituído por uma classe derivada."
  syntax:
    content: protected virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Um serviço fornecido pelo <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa um serviço fornecido pelo <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> não fornece o serviço especificado.</xref:System.Object>"
  overload: System.ComponentModel.Component.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Site
  id: Site
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém ou define o <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> do <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "Um <xref:System.ComponentModel.Component>terá uma <xref:System.ComponentModel.ISite>se foi adicionado um <xref:System.ComponentModel.IContainer>e <xref:System.ComponentModel.IContainer>atribui um <xref:System.ComponentModel.ISite>ao mesmo.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.IContainer>É responsável pela atribuição <xref:System.ComponentModel.ISite>para <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> Alterar o valor do componente <xref:System.ComponentModel.ISite>não necessariamente alterar o nome do site a <xref:System.ComponentModel.Component>está atribuída.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> A propriedade do Site deve ser definida apenas por um <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer>       O valor da propriedade é `null` se <xref:System.ComponentModel.Component>é removido do respetivo <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> Atribuir `null` para esta propriedade não necessariamente Remova <xref:System.ComponentModel.Component>do <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component>       A <xref:System.ComponentModel.Component>poderá ou poderá não ter um nome.</xref:System.ComponentModel.Component> Se um <xref:System.ComponentModel.Component>é fornecido um nome, o nome tem de ser exclusivo, entre outros <xref:System.ComponentModel.Component>objetos dentro do respetivo <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.ISite>Armazena o nome do <xref:System.ComponentModel.Component>por conseguinte, apenas pode nome um <xref:System.ComponentModel.Component>se tem uma <xref:System.ComponentModel.ISite>associado ao mesmo.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: public virtual System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "O <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> associados a <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> não está a ser encapsulada num <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>, a <xref href=&quot;System.ComponentModel.Component&quot;> </xref> não tem um <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> associado ao mesmo, ou o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> é removido do respetivo <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Site*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.ToString
  id: ToString
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve um <xref:System.String>contendo o nome do <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, se aplicável.</xref:System.String> Este método não deve ser substituído."
  remarks: "A <xref:System.ComponentModel.Component>pode ou não ter um nome.</xref:System.ComponentModel.Component> Se um <xref:System.ComponentModel.Component>é fornecido um nome, o nome é exclusivo, entre outros <xref:System.ComponentModel.Component>objetos dentro do respetivo <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component>       <xref:System.ComponentModel.ISite>Armazena o nome do <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> Um <xref:System.ComponentModel.Component>só pode ter um <xref:System.ComponentModel.ISite>se foi adicionado um <xref:System.ComponentModel.IContainer>e <xref:System.ComponentModel.IContainer>atribui um <xref:System.ComponentModel.ISite>ao mesmo.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>contendo o nome do <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, se aplicável, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> é sem nome.</xref:System.String>"
  overload: System.ComponentModel.Component.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ComponentModel.Component.#ctor
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.ComponentModel.Component.Finalize
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Component.#ctor*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component
  nameWithType: Component.Component
- uid: System.ComponentModel.Component.CanRaiseEvents*
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
- uid: System.ComponentModel.Component.DesignMode*
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose
  nameWithType: Component.Dispose
- uid: System.ComponentModel.Component.Events*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
- uid: System.ComponentModel.Component.Finalize*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize
  nameWithType: Component.Finalize
- uid: System.ComponentModel.Component.GetService*
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService
  nameWithType: Component.GetService
- uid: System.ComponentModel.Component.Site*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
- uid: System.ComponentModel.Component.ToString*
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString
  nameWithType: Component.ToString
