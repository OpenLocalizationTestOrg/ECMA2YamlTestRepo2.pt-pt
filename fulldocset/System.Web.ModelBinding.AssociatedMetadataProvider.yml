### YamlMime:ManagedReference
items:
- uid: System.Web.ModelBinding.AssociatedMetadataProvider
  id: AssociatedMetadataProvider
  children:
  - System.Web.ModelBinding.AssociatedMetadataProvider.#ctor
  - System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  - System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  - System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  langs:
  - csharp
  name: AssociatedMetadataProvider
  nameWithType: AssociatedMetadataProvider
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider
  type: Class
  summary: "Fornece uma classe abstracta para implementar um fornecedor de metadados."
  remarks: "Um fornecedor de metadados fornece metadados para um modelo. Fornecedores de metadados tem de derivar de <xref:System.Web.ModelBinding.ModelMetadataProvider>.</xref:System.Web.ModelBinding.ModelMetadataProvider> Pode herdam desta classe se pretender utilizar uma validação personalizada ou um validador de terceiros que utiliza metadados baseadas em atributos.       Esta classe implementa os métodos abstractos do <xref:System.Web.ModelBinding.ModelMetadataProvider>classe e contém mais métodos abstractos.</xref:System.Web.ModelBinding.ModelMetadataProvider> Quando implementar esta classe, utilize o <xref:System.Web.ModelBinding.AssociatedValidatorProvider>classe para implementar o validador.</xref:System.Web.ModelBinding.AssociatedValidatorProvider>       Classes de fornecedor de modelo e classes de fornecedor de validador aproximadamente ligado são essenciais. Por conseguinte, funciona de forma independente e ter sem dependências entre si.       No entanto, o fornecedor de metadados expõe metadados que podem ser acedidos e utilizado pelos fornecedores de validação. Por exemplo, o fornecedor predefinido de metadados (o <xref:System.Web.ModelBinding.DataAnnotationsModelMetadataProvider>classe) lê o nome de apresentação de um objeto.</xref:System.Web.ModelBinding.DataAnnotationsModelMetadataProvider> Este nome a apresentar é utilizado pelo <xref:System.Web.ModelBinding.DataAnnotationsModelValidatorProvider>fornecedor de validação quando cria uma mensagem de erro de validação.</xref:System.Web.ModelBinding.DataAnnotationsModelValidatorProvider>"
  syntax:
    content: 'public abstract class AssociatedMetadataProvider : System.Web.ModelBinding.ModelMetadataProvider'
  inheritance:
  - System.Object
  - System.Web.ModelBinding.ModelMetadataProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor
  id: '#ctor'
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: AssociatedMetadataProvider()
  nameWithType: AssociatedMetadataProvider.AssociatedMetadataProvider()
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.AssociatedMetadataProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Quando substituí-lo de uma classe derivada, inicializa uma nova instância da classe que derive de <xref href=&quot;System.Web.ModelBinding.AssociatedMetadataProvider&quot;> </xref> classe."
  syntax:
    content: protected AssociatedMetadataProvider ();
    parameters: []
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  id: CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Quando substituí-lo de uma classe derivada, cria os metadados para um modelo."
  syntax:
    content: protected abstract System.Web.ModelBinding.ModelMetadata CreateMetadata (System.Collections.Generic.IEnumerable<Attribute> attributes, Type containerType, Func<object> modelAccessor, Type modelType, string propertyName);
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "Os atributos."
    - id: containerType
      type: System.Type
      description: "O tipo de contentor, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum contentor."
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "O acessor de modelo."
    - id: modelType
      type: System.Type
      description: "O tipo de modelo."
    - id: propertyName
      type: System.String
      description: "O nome da propriedade, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o modelo não é uma propriedade."
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "Metadados para um modelo."
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  id: FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  nameWithType: AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Permite que deriva de classes para filtrar a lista de atributos."
  remarks: "O código de <xref:System.Web.ModelBinding.AssociatedMetadataProvider>classe base devolve todos os atributos.</xref:System.Web.ModelBinding.AssociatedMetadataProvider> Este método permite filtrar os atributos de classes derivadas."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<Attribute> FilterAttributes (Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor, System.Collections.Generic.IEnumerable<Attribute> attributes);
    parameters:
    - id: containerType
      type: System.Type
      description: "O tipo do contentor."
    - id: propertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "O descritor de propriedade."
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "Os atributos."
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "Uma lista de atributos."
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  id: GetMetadataForProperties(System.Object,System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForProperties(Object,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Quando substituí-lo de uma classe derivada, devolve metadados para todas as propriedades."
  syntax:
    content: public override System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> GetMetadataForProperties (object container, Type containerType);
    parameters:
    - id: container
      type: System.Object
      description: "O contentor."
    - id: containerType
      type: System.Type
      description: "O tipo do contentor."
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}
      description: "Metadados para todas as propriedades."
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>containerType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  id: GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Quando substituí-lo de uma classe derivada, devolve metadados para uma propriedade especificado por um objeto de descritor de propriedade."
  syntax:
    content: protected virtual System.Web.ModelBinding.ModelMetadata GetMetadataForProperty (Func<object> modelAccessor, Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor);
    parameters:
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "O acessor de modelo."
    - id: containerType
      type: System.Type
      description: "O tipo do contentor."
    - id: propertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "O descritor de propriedade."
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "Metadados para a propriedade especificada."
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  id: GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForProperty(Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Quando substituí-lo de uma classe derivada, devolve metadados para uma propriedade especificado por um nome de propriedade."
  syntax:
    content: public override System.Web.ModelBinding.ModelMetadata GetMetadataForProperty (Func<object> modelAccessor, Type containerType, string propertyName);
    parameters:
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "O acessor de modelo."
    - id: containerType
      type: System.Type
      description: "O tipo do contentor."
    - id: propertyName
      type: System.String
      description: "O nome da propriedade."
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "Metadados para a propriedade especificada."
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>containerType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code> propertyName </code> parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou estar vazio.       - ou - uma propriedade com o nome especificado pelo <code> propertyName </code> não é possível localizar no <code> containerType </code> tipo."
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  id: GetMetadataForType(System.Func{System.Object},System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetMetadataForType(Func<Object>,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Quando substituí-lo de uma classe derivada, devolve metadados para o tipo de modelo."
  syntax:
    content: public override System.Web.ModelBinding.ModelMetadata GetMetadataForType (Func<object> modelAccessor, Type modelType);
    parameters:
    - id: modelAccessor
      type: System.Func{System.Object}
      description: "O acessor de modelo."
    - id: modelType
      type: System.Type
      description: "O tipo de modelo."
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "Metadados para o tipo de modelo."
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>modelType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  id: GetTypeDescriptor(System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Type)
  nameWithType: AssociatedMetadataProvider.GetTypeDescriptor(Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Quando substituí-lo de uma classe derivada, devolve um objeto de descritor para um tipo especificado."
  syntax:
    content: protected virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "O objeto descritor de tipo."
  overload: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.ModelBinding.ModelMetadataProvider
  isExternal: false
  name: System.Web.ModelBinding.ModelMetadataProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: AssociatedMetadataProvider()
  nameWithType: AssociatedMetadataProvider.AssociatedMetadataProvider()
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.AssociatedMetadataProvider()
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(IEnumerable<Attribute>,Type,Func<Object>,Type,String)
- uid: System.Web.ModelBinding.ModelMetadata
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: System.Web.ModelBinding.ModelMetadata
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Attribute>
  nameWithType: IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Func{System.Object}
  parent: System
  isExternal: true
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  nameWithType: AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(Type,PropertyDescriptor,IEnumerable<Attribute>)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperties(Object,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(Object,Type)
- uid: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelMetadata>
  nameWithType: IEnumerable<ModelMetadata>
  fullName: System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.ModelBinding.ModelMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: ModelMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,PropertyDescriptor)
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperty(Func<Object>,Type,String)
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(Func<Object>,Type,String)
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForType(Func<Object>,Type)
  nameWithType: AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(Func<Object>,Type)
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetTypeDescriptor(Type)
  nameWithType: AssociatedMetadataProvider.GetTypeDescriptor(Type)
  fullName: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(Type)
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.#ctor*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: AssociatedMetadataProvider
  nameWithType: AssociatedMetadataProvider.AssociatedMetadataProvider
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: CreateMetadata
  nameWithType: AssociatedMetadataProvider.CreateMetadata
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: FilterAttributes
  nameWithType: AssociatedMetadataProvider.FilterAttributes
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperties
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperties
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForProperty
  nameWithType: AssociatedMetadataProvider.GetMetadataForProperty
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetMetadataForType
  nameWithType: AssociatedMetadataProvider.GetMetadataForType
- uid: System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor*
  parent: System.Web.ModelBinding.AssociatedMetadataProvider
  isExternal: false
  name: GetTypeDescriptor
  nameWithType: AssociatedMetadataProvider.GetTypeDescriptor
