### YamlMime:ManagedReference
items:
- uid: System.Windows.DataTemplate
  id: DataTemplate
  children:
  - System.Windows.DataTemplate.#ctor
  - System.Windows.DataTemplate.#ctor(System.Object)
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
  type: Class
  summary: "Descreve a estrutura de visual de um objeto de dados."
  remarks: "Utilize um DataTemplate para especificar a visualização dos seus objetos de dados. DataTemplate objetos são particularmente úteis quando são enlace um <xref:System.Windows.Controls.ItemsControl>como um <xref:System.Windows.Controls.ListBox>para uma coleção de toda.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.ItemsControl> Sem instruções específicas, um <xref:System.Windows.Controls.ListBox>mostra a representação de cadeia dos objetos de uma coleção.</xref:System.Windows.Controls.ListBox> Nesse caso, pode utilizar um DataTemplate para definir a aparência dos objetos de dados. O conteúdo do seu DataTemplate torna-se a estrutura visual dos seus objetos de dados.       Para um debate aprofundado, consulte [descrição geral de Templating dados](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a DataTemplate inline. The DataTemplate specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>. In this example, the data object is a class called `Task`. Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.  \n  \n [!code-xml[DataTemplatingIntro_snip#Inline](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#inline)]  \n  \n It is more common to define a DataTemplate in the resources section so it can be a reusable object, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#AsResource](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#asresource)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n Now you can use `myTaskTemplate` as a resource, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#MyTaskTemplate](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#mytasktemplate)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: >-
      [System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")]

      public class DataTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> classe."
  syntax:
    content: public DataTemplate ();
    parameters: []
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> classe com especificado <xref:System.Windows.DataTemplate.DataType*>propriedade.</xref:System.Windows.DataTemplate.DataType*>"
  remarks: "Para fazer referência ao nome do tipo de classe, utilize o [x: tipo de extensão de Markup](~/add/includes/ajax-current-ext-md.md). Se o modelo destina-se de [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] dados, esta é a cadeia que representa o nome de etiqueta de dados."
  syntax:
    content: public DataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "Se o modelo destina-se de dados de objeto, este é o nome do tipo do objeto de dados."
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataTemplateKey
  id: DataTemplateKey
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a chave predefinida do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  remarks: "Se não definir o [x: chave diretiva](~/add/includes/ajax-current-ext-md.md) num <xref:System.Windows.DataTemplate>que está a ser um <xref:System.Windows.ResourceDictionary>, o DataTemplateKey é utilizado como a chave.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.DataTemplate>"
  syntax:
    content: public object DataTemplateKey { get; }
    return:
      type: System.Object
      description: "A chave predefinida do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataType
  id: DataType
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o tipo para o qual este <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> destina-se."
  remarks: "Esta propriedade é muito semelhante para a <xref:System.Windows.Style.TargetType%2A>propriedade de <xref:System.Windows.Style>classe.</xref:System.Windows.Style> </xref:System.Windows.Style.TargetType%2A> Quando definir esta propriedade para o tipo de dados sem especificar um `x:Key`, a <xref:System.Windows.DataTemplate>aplicado automaticamente a objetos de dados desse tipo.</xref:System.Windows.DataTemplate> Tenha em atenção que, fazê-lo a `x:Key` é definidos implicitamente. Por conseguinte, se atribuir este <xref:System.Windows.DataTemplate>um `x:Key` valor, são substituir o implícita `x:Key` e <xref:System.Windows.DataTemplate>não seria aplicado automaticamente.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate>       Tenha também em atenção que se estão a vincular um <xref:System.Windows.Controls.ContentControl>a uma coleção de `Task` objetos, o <xref:System.Windows.Controls.ContentControl>não utiliza o <xref:System.Windows.DataTemplate>automaticamente.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Controls.ContentControl> Isto acontece porque o enlace existente num <xref:System.Windows.Controls.ContentControl>tem de obter mais informações para distinguir se pretender vincular a um conjunto completo ou objetos individuais.</xref:System.Windows.Controls.ContentControl> Se o <xref:System.Windows.Controls.ContentControl>está a controlar a seleção de um <xref:System.Windows.Controls.ItemsControl>tipo, pode definir o <xref:System.Windows.Data.Binding.Path%2A>propriedade do <xref:System.Windows.Controls.ContentControl>vincula a &quot;`/`&quot; para indicar que está interessado em ao item actual.</xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Data.Binding.Path%2A> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ContentControl> Por exemplo, consulte [como: vincular a uma coleção e, em seguida, apresentar informações com base na seleção](~/add/includes/ajax-current-ext-md.md). Caso contrário, terá de especificar o <xref:System.Windows.DataTemplate>definindo explicitamente o <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>propriedade.</xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> </xref:System.Windows.DataTemplate>       A propriedade DataType é particularmente útil quando tem um <xref:System.Windows.Data.CompositeCollection>de diferentes tipos de objetos de dados.</xref:System.Windows.Data.CompositeCollection>       Se esta propriedade está direcionada para um elemento XML que não se encontra no espaço de nomes predefinido, têm de preceder o nome de elemento com o espaço de nomes ou um designador de espaço de nomes. Para XML exposta através do LINQ para XML, o espaço de nomes aparece chavetas, precedido por uma sequência de escape Chaveta: ```xaml   <DataTemplate DataType=&quot;{}{http://myNamespace}Details&quot;>   ``` For XML exposta através do XPath, o nome do elemento é precedido por um designador de espaço de nomes estabelecida por uma instância do <xref:System.Windows.Data.XmlNamespaceMapping>: ```xaml   <DataTemplate DataType=&quot;mn:Details&quot;>   ``` <a name=&quot;xamlAttributeUsage_DataType&quot;> </a> # # utilização de atributos de XAML ```   <object DataType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_DataType&quot;> </a> # # XAML valores *typeName* se destina-se o modelo de dados de objeto, esta propriedade contém o nome do tipo do objeto de dados (como uma cadeia).            </xref:System.Windows.Data.XmlNamespaceMapping> Para fazer referência ao nome do tipo de classe, utilize o [x: tipo de extensão de Markup](~/add/includes/ajax-current-ext-md.md). Se o modelo destina-se de [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] dados, esta propriedade contém o nome de elemento XML. Consulte os comentários de documentação para obter detalhes sobre como especificar um espaço de nomes não predefinido para o elemento XML."
  syntax:
    content: public object DataType { get; set; }
    return:
      type: System.Object
      description: "O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.Triggers
  id: Triggers
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém uma coleção de acionadores que se aplicam os valores de propriedade ou executar ações com base nas condições de uma ou mais."
  remarks: "Se estiver a criar acionadores dentro de um modelo de dados, os setters dos acionadores devem definir propriedades que se encontrem no âmbito do modelo de dados. Caso contrário, poderá ser mais adequada criar acionadores utilizando um estilo que tenha como alvo o tipo que contém os dados. Por exemplo, se estiver a vincular um <xref:System.Windows.Controls.ListBox>os contentores de controlo, são <xref:System.Windows.Controls.ListBoxItem>objetos.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox> Se estiver a utilizar acionadores para definir as propriedades que não estão no âmbito do <xref:System.Windows.DataTemplate>, em seguida, poderá ser mais adequada criar um <xref:System.Windows.Controls.ListBoxItem>estilo e criar acionadores dentro desse estilo.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.DataTemplate> Para obter mais informações, consulte o que pertence um DataTemplate? no [descrição geral de Templating dados](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Esta propriedade só pode ser definida [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] através da sintaxe de coleção indicada, ou ao aceder ao objeto da coleção e utilizando os diversos métodos, tais como adicionar. A propriedade para aceder ao objeto de coleção em si é só de leitura, a própria coleção é leitura e escrita.      <a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a># # Utilização de elemento de propriedade de XAML ```   <object>     <object.Triggers>       OneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> # # XAML valores *OneOrMoreTriggers* Zero ou mais <xref:System.Windows.TriggerBase>objetos.</xref:System.Windows.TriggerBase>      "
  example:
  - "The following <xref:System.Windows.DataTemplate> demonstrates the use of the Triggers property.  \n  \n [!code-xml[DataBindingLab#AuctionItemDataTemplate](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemdatatemplate)]  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Uma coleção de objetos de Acionador. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Verifica o principal transformada em modelo em relação a um conjunto de regras."
  remarks: "O método utiliza as seguintes regras: - `templatedParent` tem de ser um <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement> não nulo      -A, <xref:System.Windows.DataTemplate>tem de ser aplicada a um <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.DataTemplate>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "O elemento que é aplicado a este modelo."
  overload: System.Windows.DataTemplate.ValidateTemplatedParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.Windows.DataTemplate.#ctor
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DataTemplate.DataTemplateKey
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.DataTemplate.#ctor*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate.DataTemplate
- uid: System.Windows.DataTemplate.DataTemplateKey*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
- uid: System.Windows.DataTemplate.ValidateTemplatedParent*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: DataTemplate.ValidateTemplatedParent
