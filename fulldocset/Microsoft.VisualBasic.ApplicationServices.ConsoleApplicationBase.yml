### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  id: ConsoleApplicationBase
  children:
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  langs:
  - csharp
  name: ConsoleApplicationBase
  nameWithType: ConsoleApplicationBase
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  type: Class
  summary: "Provides properties, methods, and events related to the current application."
  remarks: "The properties exposed by the `My.Application` object return data that is associated only with the current application or DLL. No system-level information can be altered with `My.Application`.       The `My.Application` object consists of the following classes:      -   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> provides members that are available in all projects.      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> provides members available in Windows Forms applications.      -   ConsoleApplicationBase provides members available in console applications."
  example:
  - "This example uses the `My.Application.CommandLineArgs` property to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \n  \n [!code-vb[VbVbalrMyApplication#3](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#3)]"
  syntax:
    content: 'public class ConsoleApplicationBase : Microsoft.VisualBasic.ApplicationServices.ApplicationBase'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: ConsoleApplicationBase()
  nameWithType: ConsoleApplicationBase.ConsoleApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.ConsoleApplicationBase()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase&quot;></xref> class."
  syntax:
    content: public ConsoleApplicationBase ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  id: CommandLineArgs
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: CommandLineArgs
  nameWithType: ConsoleApplicationBase.CommandLineArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets a collection containing the command-line arguments as strings for the current application."
  remarks: "The `My.Application.CommandLineArgs` property provides read-only access to the current application&quot;s command-line arguments for applications that are not ClickOnce deployed.       For a single-instance application, the `My.Application.CommandLineArgs` property returns the command-line arguments for the first instance of an application. To access the arguments for subsequent attempts to start a single-instance application, you must handle the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event and examine the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs> argument.      > [!NOTE] >  The `My.Application.CommandLineArgs` property returns only the command-line arguments. This is different from the behavior of the <xref:System.Environment.CommandLine%2A> property, which returns the application name in addition to the arguments.      > [!NOTE] >  In an application that is ClickOnce deployed, use the <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A> property of the `My.Application.Deployment` object to get the command-line arguments. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A>.       The following table lists examples of tasks involving the `My.Application.CommandLineArgs` property.      |||   |-|-|   |To|See|   |Check the command-line arguments of subsequent attempts to start a single-instance application|<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|No|   |Console Application|**Yes**|   |Windows Control Library|No|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.CommandLineArgs` property to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \n  \n [!code-vb[VbVbalrMyApplication#3](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#3)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> CommandLineArgs { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, containing the command-line arguments as strings for the current application."
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  id: Deployment
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: Deployment
  nameWithType: ConsoleApplicationBase.Deployment
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the current application&quot;s ClickOnce deployment object, which provides support for updating the current deployment programmatically and support for the on-demand download of files."
  remarks: "The `My.Application.Deployment` property returns the application&quot;s ClickOnce <xref:System.Deployment.Application.ApplicationDeployment> object. The <xref:System.Deployment.Application.ApplicationDeployment> object provides support for updating the current deployment programmatically as well as support for the on-demand download of files. For more information on ClickOnce applications and how to deploy them, see [ClickOnce Security and Deployment](~/add/includes/ajax-current-ext-md.md) and [Publishing ClickOnce Applications](~/add/includes/ajax-current-ext-md.md).       Confirm that the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed%2A> property is `True` before you access the `My.Application.Deployment` property. Otherwise, if the application is not deployed using ClickOnce, reading the `My.Application.Deployment` property results in an <xref:System.Deployment.Application.InvalidDeploymentException> exception. For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](~/add/includes/ajax-current-ext-md.md).       For more information on using the `My.Application.Deployment` property, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|**Yes**|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example downloads and installs the update after checking that the application is network-deployed. The <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> method does not update the application unless it is out of date. The application has to restart to use the update.  \n  \n [!code-vb[VbVbalrMyApplication#4](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#4)]  \n  \n Only applications that are ClickOnce deployed can be updated using the `My.Application.Deployment` object. For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](../Topic/How%20to:%20Publish%20a%20ClickOnce%20Application%20using%20the%20Publish%20Wizard.md)."
  syntax:
    content: public System.Deployment.Application.ApplicationDeployment Deployment { get; }
    return:
      type: System.Deployment.Application.ApplicationDeployment
      description: "Returns the <xref href=&quot;System.Deployment.Application.ApplicationDeployment&quot;></xref> object for the application&quot;s ClickOnce deployment."
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "The application is not deployed as a ClickOnce application."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  id: InternalCommandLine
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: InternalCommandLine
  nameWithType: ConsoleApplicationBase.InternalCommandLine
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Sets the values to use as the current application&quot;s command-line arguments."
  remarks: "This method allows you to set the internal value of the command-line arguments used by the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> class. This property determines what the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property returns. If you do not set this property, or you set this property to `Nothing`, the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property obtains the command-line arguments from the <xref:System.Environment.CommandLine%2A> property."
  syntax:
    content: protected System.Collections.ObjectModel.ReadOnlyCollection<string> InternalCommandLine { set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, containing the strings to use as the command-line arguments for the current application."
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  id: IsNetworkDeployed
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: IsNetworkDeployed
  nameWithType: ConsoleApplicationBase.IsNetworkDeployed
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> that represents whether the application was deployed from a network using ClickOnce."
  remarks: "The `My.Application.IsNetworkDeployed` property indicates whether the application was deployed from a network using ClickOnce. For more information on ClickOnce applications, see [ClickOnce Security and Deployment](~/add/includes/ajax-current-ext-md.md).       You should confirm that this property is `True` before you access the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> property. Otherwise, if the application is not deployed from a network using ClickOnce, reading the `My.Application.Deployment` property results in an <xref:System.Deployment.Application.InvalidDeploymentException> exception.       For more information on configuring ClickOnce, see [Publishing ClickOnce Applications](~/add/includes/ajax-current-ext-md.md). For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](~/add/includes/ajax-current-ext-md.md).       For more information on using the `My.Application.IsNetworkDeployed` property, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|**Yes**|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example downloads and installs the update after checking that the application is deployed from a network. The <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> method does not update the application unless it is out of date. The application has to restart to use the update.  \n  \n [!code-vb[VbVbalrMyApplication#4](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#4)]  \n  \n Only applications that are ClickOnce-deployed can be updated using the `My.Application.Deployment` object. For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](../Topic/How%20to:%20Publish%20a%20ClickOnce%20Application%20using%20the%20Publish%20Wizard.md)."
  syntax:
    content: public bool IsNetworkDeployed { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> that represents whether the application was deployed from a network. The value is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the current application was deployed from a network; otherwise the value is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
- uid: System.Deployment.Application.InvalidDeploymentException
  parent: System.Deployment.Application
  isExternal: false
  name: InvalidDeploymentException
  nameWithType: InvalidDeploymentException
  fullName: System.Deployment.Application.InvalidDeploymentException
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: ConsoleApplicationBase()
  nameWithType: ConsoleApplicationBase.ConsoleApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.ConsoleApplicationBase()
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: CommandLineArgs
  nameWithType: ConsoleApplicationBase.CommandLineArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: Deployment
  nameWithType: ConsoleApplicationBase.Deployment
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
- uid: System.Deployment.Application.ApplicationDeployment
  parent: System.Deployment.Application
  isExternal: false
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: InternalCommandLine
  nameWithType: ConsoleApplicationBase.InternalCommandLine
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ConsoleApplicationBase.IsNetworkDeployed
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: ConsoleApplicationBase
  nameWithType: ConsoleApplicationBase.ConsoleApplicationBase
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: CommandLineArgs
  nameWithType: ConsoleApplicationBase.CommandLineArgs
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: Deployment
  nameWithType: ConsoleApplicationBase.Deployment
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: InternalCommandLine
  nameWithType: ConsoleApplicationBase.InternalCommandLine
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ConsoleApplicationBase.IsNetworkDeployed
