### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.GetManifestCompletedEventArgs
  id: GetManifestCompletedEventArgs
  children:
  - System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext
  - System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity
  - System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest
  - System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest
  - System.Deployment.Application.GetManifestCompletedEventArgs.IsCached
  - System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath
  - System.Deployment.Application.GetManifestCompletedEventArgs.ProductName
  - System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity
  - System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri
  - System.Deployment.Application.GetManifestCompletedEventArgs.Version
  langs:
  - csharp
  name: GetManifestCompletedEventArgs
  nameWithType: GetManifestCompletedEventArgs
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs
  type: Class
  summary: "Provides data for the <see cref=&quot;E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted&quot;></see> event of <see cref=&quot;T:System.Deployment.Application.InPlaceHostingManager&quot;></see>."
  remarks: "Use GetManifestCompletedEventArgs to obtain information about a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application after the deployment and application manifests have been downloaded."
  example:
  - "The following code example shows how to use <xref:System.Deployment.Application.InPlaceHostingManager> to install a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application programmatically on a client machine.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/VisualBasic/InPlaceHostingManagerProjectVB/Form1.vb#1)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/CSharp/InPlaceHostingManagerProject/Form1.cs#1)]"
  syntax:
    content: 'public class GetManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'
  inheritance:
  - System.ComponentModel.AsyncCompletedEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext
  id: ActivationContext
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: ActivationContext
  nameWithType: GetManifestCompletedEventArgs.ActivationContext
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the context for the current [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application."
  syntax:
    content: public ActivationContext ActivationContext { get; }
    return:
      type: System.ActivationContext
      description: "An <see cref=&quot;T:System.ActivationContext&quot;></see> object representing the context for the current application."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: GetManifestCompletedEventArgs.ApplicationIdentity
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets a description of the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application."
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; }
    return:
      type: System.ApplicationIdentity
      description: "An <see cref=&quot;T:System.ApplicationIdentity&quot;></see> object."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest
  id: ApplicationManifest
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: ApplicationManifest
  nameWithType: GetManifestCompletedEventArgs.ApplicationManifest
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application manifest for this deployment."
  remarks: "You can use this variable to grab any information you need from the application manifest, such as a list of dependencies, trust information, and so on. For more information on the structure of this document, see [ClickOnce Application Manifest](../Topic/ClickOnce%20Application%20Manifest.md)."
  example:
  - "The following code example shows how to examine an application manifest from within a <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler to determine whether the application requires full trust by default.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#5](~/add/codesnippet/VisualBasic/InPlaceHostingManagerProjectVB/Form1.vb#5)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#5](~/add/codesnippet/CSharp/InPlaceHostingManagerProject/Form1.cs#5)]"
  syntax:
    content: public System.Xml.XmlReader ApplicationManifest { get; }
    return:
      type: System.Xml.XmlReader
      description: "An &lt;xref:System.Xml.XmlReader&gt; representing the application manifest."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest
  id: DeploymentManifest
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: DeploymentManifest
  nameWithType: GetManifestCompletedEventArgs.DeploymentManifest
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] deployment manifest for this deployment."
  syntax:
    content: public System.Xml.XmlReader DeploymentManifest { get; }
    return:
      type: System.Xml.XmlReader
      description: "An &lt;xref:System.Xml.XmlReader&gt; representing the deployment manifest."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.IsCached
  id: IsCached
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: IsCached
  nameWithType: GetManifestCompletedEventArgs.IsCached
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.IsCached
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets a value indicating whether this [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application is cached."
  syntax:
    content: public bool IsCached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the application is cached; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.IsCached*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath
  id: LogFilePath
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: LogFilePath
  nameWithType: GetManifestCompletedEventArgs.LogFilePath
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the location of the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] error log."
  syntax:
    content: public string LogFilePath { get; }
    return:
      type: System.String
      description: "A &lt;xref:System.String&gt; containing the location of the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] error log."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ProductName
  id: ProductName
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: ProductName
  nameWithType: GetManifestCompletedEventArgs.ProductName
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ProductName
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the name of the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application."
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "A &lt;xref:System.String&gt; representing the product name of the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application, as stored in the assembly metadata of the application&quot;s main executable file."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.ProductName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity
  id: SubscriptionIdentity
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: SubscriptionIdentity
  nameWithType: GetManifestCompletedEventArgs.SubscriptionIdentity
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets a string identifying the subscription."
  syntax:
    content: public string SubscriptionIdentity { get; }
    return:
      type: System.String
      description: "A string with information identifying the subscription."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri
  id: SupportUri
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: SupportUri
  nameWithType: GetManifestCompletedEventArgs.SupportUri
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the location of a Web page users can visit to obtain product support for the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application."
  syntax:
    content: public Uri SupportUri { get; }
    return:
      type: System.Uri
      description: "A &lt;xref:System.Uri&gt; containing the value found in the `supportUrl` attribute of the deployment manifest&quot;s `"
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.Version
  id: Version
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  langs:
  - csharp
  name: Version
  nameWithType: GetManifestCompletedEventArgs.Version
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.Version
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the version of the update for the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application."
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "A &lt;xref:System.Version&gt; representing the version number contained within the downloaded manifest."
  overload: System.Deployment.Application.GetManifestCompletedEventArgs.Version*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ActivationContext
  nameWithType: GetManifestCompletedEventArgs.ActivationContext
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ApplicationIdentity
  nameWithType: GetManifestCompletedEventArgs.ApplicationIdentity
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ApplicationManifest
  nameWithType: GetManifestCompletedEventArgs.ApplicationManifest
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: DeploymentManifest
  nameWithType: GetManifestCompletedEventArgs.DeploymentManifest
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.IsCached
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: IsCached
  nameWithType: GetManifestCompletedEventArgs.IsCached
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.IsCached
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: LogFilePath
  nameWithType: GetManifestCompletedEventArgs.LogFilePath
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ProductName
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ProductName
  nameWithType: GetManifestCompletedEventArgs.ProductName
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.ProductName
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: SubscriptionIdentity
  nameWithType: GetManifestCompletedEventArgs.SubscriptionIdentity
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: SupportUri
  nameWithType: GetManifestCompletedEventArgs.SupportUri
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.Version
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: Version
  nameWithType: GetManifestCompletedEventArgs.Version
  fullName: System.Deployment.Application.GetManifestCompletedEventArgs.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ActivationContext
  nameWithType: GetManifestCompletedEventArgs.ActivationContext
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ApplicationIdentity
  nameWithType: GetManifestCompletedEventArgs.ApplicationIdentity
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ApplicationManifest
  nameWithType: GetManifestCompletedEventArgs.ApplicationManifest
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: DeploymentManifest
  nameWithType: GetManifestCompletedEventArgs.DeploymentManifest
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.IsCached*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: IsCached
  nameWithType: GetManifestCompletedEventArgs.IsCached
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: LogFilePath
  nameWithType: GetManifestCompletedEventArgs.LogFilePath
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.ProductName*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: ProductName
  nameWithType: GetManifestCompletedEventArgs.ProductName
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: SubscriptionIdentity
  nameWithType: GetManifestCompletedEventArgs.SubscriptionIdentity
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: SupportUri
  nameWithType: GetManifestCompletedEventArgs.SupportUri
- uid: System.Deployment.Application.GetManifestCompletedEventArgs.Version*
  parent: System.Deployment.Application.GetManifestCompletedEventArgs
  isExternal: false
  name: Version
  nameWithType: GetManifestCompletedEventArgs.Version
