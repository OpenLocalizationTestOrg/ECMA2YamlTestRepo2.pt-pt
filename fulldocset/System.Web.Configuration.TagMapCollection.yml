### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.TagMapCollection
  id: TagMapCollection
  children:
  - System.Web.Configuration.TagMapCollection.#ctor
  - System.Web.Configuration.TagMapCollection.Add(System.Web.Configuration.TagMapInfo)
  - System.Web.Configuration.TagMapCollection.Clear
  - System.Web.Configuration.TagMapCollection.CreateNewElement
  - System.Web.Configuration.TagMapCollection.GetElementKey(System.Configuration.ConfigurationElement)
  - System.Web.Configuration.TagMapCollection.Item(System.Int32)
  - System.Web.Configuration.TagMapCollection.Properties
  - System.Web.Configuration.TagMapCollection.Remove(System.Web.Configuration.TagMapInfo)
  langs:
  - csharp
  name: TagMapCollection
  nameWithType: TagMapCollection
  fullName: System.Web.Configuration.TagMapCollection
  type: Class
  summary: "Contém uma coleção de <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;> </xref> objetos."
  remarks: "O <xref:System.Web.Configuration.TagMapInfo>classe permite-lhe remapear os tipos de etiquetas no momento da compilação.</xref:System.Web.Configuration.TagMapInfo> Este processo de remapeamento faz com que o tipo mapeado a ser utilizada em vez do tipo de tag original para todas as páginas e controlos na aplicação ASP.NET no âmbito do ficheiro de configuração.       A classe de TagMapCollection permite-lhe aceder e modificar programaticamente o `tagMapping` subsecção do `pages` secção de um ficheiro de configuração. Dentro do `tagMapping` subsecção, pode adicionar e remover mapeamentos entre tipos de etiqueta, especificando os nomes completamente qualificados seguros dos tipos.      > [!NOTE] > Ao contrário de outros atributos e coleções no `pages` secção, o remapeamento de etiqueta não tem nenhum correspondente diretiva de página do ASP.NET."
  example:
  - "The following configuration file excerpt shows how to declaratively specify values for several properties of the TagMapCollection type.  \n  \n```  \n<system.web>  \n  <pages>  \n    <tagMapping>  \n      <clear />  \n      <add  \n        tagType=  \n          \"System.Web.UI.WebControls.WebParts.WebPartManager\"  \n        mappedTagType=  \n          \"Microsoft.Sharepoint.WebPartPartManager,   \n           MSPS.Web.dll, Version='2.0.0.0'\"   \n      />  \n      <remove tagType=\"SomeOtherNS.Class, Assemblyname\" />  \n    </tagMapping>  \n   </pages>  \n</system.web>  \n```  \n  \n The following code example shows how to use the TagMapCollection class to programmatically modify tag-mapping settings. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#17](~/add/codesnippet/csharp/t-system.web.configurati_62_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#17](~/add/codesnippet/visualbasic/t-system.web.configurati_62_1.vb)]"
  syntax:
    content: >-
      [System.Configuration.ConfigurationCollection(typeof(System.Web.Configuration.TagMapInfo))]

      public sealed class TagMapCollection : System.Configuration.ConfigurationElementCollection
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationElementCollection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CollectionType
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.ElementName
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: TagMapCollection()
  nameWithType: TagMapCollection.TagMapCollection()
  fullName: System.Web.Configuration.TagMapCollection.TagMapCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Configuration.TagMapCollection&quot;> </xref> classe."
  remarks: "O <xref:System.Web.Configuration.PagesSection.TagMapping%2A>propriedade o <xref:System.Web.Configuration.PagesSection>classe contém sempre uma instância do <xref:System.Web.Configuration.TagMapCollection>tipo.</xref:System.Web.Configuration.TagMapCollection> </xref:System.Web.Configuration.PagesSection> </xref:System.Web.Configuration.PagesSection.TagMapping%2A> Utilize esta instância, em vez de criar os seus próprios."
  syntax:
    content: public TagMapCollection ();
    parameters: []
  overload: System.Web.Configuration.TagMapCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.Add(System.Web.Configuration.TagMapInfo)
  id: Add(System.Web.Configuration.TagMapInfo)
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: Add(TagMapInfo)
  nameWithType: TagMapCollection.Add(TagMapInfo)
  fullName: System.Web.Configuration.TagMapCollection.Add(TagMapInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Adiciona um <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;> </xref> objeto à coleção."
  remarks: "A coleção já não pode conter um <xref:System.Web.Configuration.TagMapInfo>objeto com o mesmo <xref:System.Web.Configuration.TagMapInfo.TagType%2A>valor da propriedade.</xref:System.Web.Configuration.TagMapInfo.TagType%2A> </xref:System.Web.Configuration.TagMapInfo> Se existir um <xref:System.Configuration.ConfigurationException>será emitida.</xref:System.Configuration.ConfigurationException>"
  example:
  - "The following code example shows how to use the Add method. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#42](~/add/codesnippet/csharp/355b41cd-8c30-46e6-ad2a-_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#42](~/add/codesnippet/visualbasic/355b41cd-8c30-46e6-ad2a-_1.vb)]"
  syntax:
    content: public void Add (System.Web.Configuration.TagMapInfo tagMapInformation);
    parameters:
    - id: tagMapInformation
      type: System.Web.Configuration.TagMapInfo
      description: "A <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;> </xref> o objeto a adicionar à coleção."
  overload: System.Web.Configuration.TagMapCollection.Add*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "The <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object to add already exists in the collection.  \n  \n \\- or -  \n  \n The collection is read-only."
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.Clear
  id: Clear
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TagMapCollection.Clear()
  fullName: System.Web.Configuration.TagMapCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Limpa todos os objetos da coleção."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.Configuration.TagMapCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.CreateNewElement
  id: CreateNewElement
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: CreateNewElement()
  nameWithType: TagMapCollection.CreateNewElement()
  fullName: System.Web.Configuration.TagMapCollection.CreateNewElement()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationElement
      description: "A adicionar."
  overload: System.Web.Configuration.TagMapCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: TagMapCollection.GetElementKey(ConfigurationElement)
  fullName: System.Web.Configuration.TagMapCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "A adicionar."
    return:
      type: System.Object
      description: "A adicionar."
  overload: System.Web.Configuration.TagMapCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TagMapCollection.Item(Int32)
  fullName: System.Web.Configuration.TagMapCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;> </xref> objeto na localização de índice especificado."
  remarks: "Se um <xref:System.Web.Configuration.TagMapInfo>objeto já existe no índice especificado, esta propriedade substitui-lo; caso contrário, cria um novo objeto e adiciona-o para a coleção.</xref:System.Web.Configuration.TagMapInfo>"
  example:
  - "The following code example shows how to use the Item property. This example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#40](~/add/codesnippet/csharp/p-system.web.configurati_16_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#40](~/add/codesnippet/visualbasic/p-system.web.configurati_16_1.vb)]"
  syntax:
    content: public System.Web.Configuration.TagMapInfo this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de uma <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;> </xref> objeto na coleção."
    return:
      type: System.Web.Configuration.TagMapInfo
      description: "O <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;> </xref> objeto no índice especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum objecto nesse índice."
  overload: System.Web.Configuration.TagMapCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.Properties
  id: Properties
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: Properties
  nameWithType: TagMapCollection.Properties
  fullName: System.Web.Configuration.TagMapCollection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A adicionar."
  overload: System.Web.Configuration.TagMapCollection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagMapCollection.Remove(System.Web.Configuration.TagMapInfo)
  id: Remove(System.Web.Configuration.TagMapInfo)
  parent: System.Web.Configuration.TagMapCollection
  langs:
  - csharp
  name: Remove(TagMapInfo)
  nameWithType: TagMapCollection.Remove(TagMapInfo)
  fullName: System.Web.Configuration.TagMapCollection.Remove(TagMapInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Remove o objeto especificado da coleção."
  syntax:
    content: public void Remove (System.Web.Configuration.TagMapInfo tagMapInformation);
    parameters:
    - id: tagMapInformation
      type: System.Web.Configuration.TagMapInfo
      description: "A <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;> </xref> objeto na coleção."
  overload: System.Web.Configuration.TagMapCollection.Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Configuration.ConfigurationElementCollection
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.Web.Configuration.TagMapCollection.#ctor
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: TagMapCollection()
  nameWithType: TagMapCollection.TagMapCollection()
  fullName: System.Web.Configuration.TagMapCollection.TagMapCollection()
- uid: System.Web.Configuration.TagMapCollection.Add(System.Web.Configuration.TagMapInfo)
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Add(TagMapInfo)
  nameWithType: TagMapCollection.Add(TagMapInfo)
  fullName: System.Web.Configuration.TagMapCollection.Add(TagMapInfo)
- uid: System.Web.Configuration.TagMapInfo
  parent: System.Web.Configuration
  isExternal: false
  name: TagMapInfo
  nameWithType: TagMapInfo
  fullName: System.Web.Configuration.TagMapInfo
- uid: System.Web.Configuration.TagMapCollection.Clear
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Clear()
  nameWithType: TagMapCollection.Clear()
  fullName: System.Web.Configuration.TagMapCollection.Clear()
- uid: System.Web.Configuration.TagMapCollection.CreateNewElement
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: CreateNewElement()
  nameWithType: TagMapCollection.CreateNewElement()
  fullName: System.Web.Configuration.TagMapCollection.CreateNewElement()
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.TagMapCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: TagMapCollection.GetElementKey(ConfigurationElement)
  fullName: System.Web.Configuration.TagMapCollection.GetElementKey(ConfigurationElement)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Configuration.TagMapCollection.Item(System.Int32)
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TagMapCollection.Item(Int32)
  fullName: System.Web.Configuration.TagMapCollection.Item(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.TagMapCollection.Properties
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Properties
  nameWithType: TagMapCollection.Properties
  fullName: System.Web.Configuration.TagMapCollection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.TagMapCollection.Remove(System.Web.Configuration.TagMapInfo)
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Remove(TagMapInfo)
  nameWithType: TagMapCollection.Remove(TagMapInfo)
  fullName: System.Web.Configuration.TagMapCollection.Remove(TagMapInfo)
- uid: System.Web.Configuration.TagMapCollection.#ctor*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: TagMapCollection
  nameWithType: TagMapCollection.TagMapCollection
- uid: System.Web.Configuration.TagMapCollection.Add*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Add
  nameWithType: TagMapCollection.Add
- uid: System.Web.Configuration.TagMapCollection.Clear*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Clear
  nameWithType: TagMapCollection.Clear
- uid: System.Web.Configuration.TagMapCollection.CreateNewElement*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: CreateNewElement
  nameWithType: TagMapCollection.CreateNewElement
- uid: System.Web.Configuration.TagMapCollection.GetElementKey*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: GetElementKey
  nameWithType: TagMapCollection.GetElementKey
- uid: System.Web.Configuration.TagMapCollection.Item*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Item
  nameWithType: TagMapCollection.Item
- uid: System.Web.Configuration.TagMapCollection.Properties*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Properties
  nameWithType: TagMapCollection.Properties
- uid: System.Web.Configuration.TagMapCollection.Remove*
  parent: System.Web.Configuration.TagMapCollection
  isExternal: false
  name: Remove
  nameWithType: TagMapCollection.Remove
