### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  id: AsymmetricKeyExchangeDeformatter
  children:
  - System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.#ctor
  - System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])
  - System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters
  - System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  langs:
  - csharp
  name: AsymmetricKeyExchangeDeformatter
  nameWithType: AsymmetricKeyExchangeDeformatter
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  type: Class
  summary: "Represents the base class from which all asymmetric key exchange deformatters derive."
  remarks: "Asymmetric key exchange deformatters decrypt key exchange data.       Key exchange allows a sender to create secret information, such as random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.      > [!CAUTION] >  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful."
  example:
  - "The following example demonstrates how to extend the AsymmetricKeyExchangeDeformatter class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#1](~/add/codesnippet/csharp/t-system.security.crypto_17_1.cs)]\n [!code-vb[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#1](~/add/codesnippet/visualbasic/t-system.security.crypto_17_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class AsymmetricKeyExchangeDeformatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  langs:
  - csharp
  name: AsymmetricKeyExchangeDeformatter()
  nameWithType: AsymmetricKeyExchangeDeformatter.AsymmetricKeyExchangeDeformatter()
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.AsymmetricKeyExchangeDeformatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of <xref href=&quot;System.Security.Cryptography.AsymmetricKeyExchangeDeformatter&quot;></xref>."
  remarks: "You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       Use an implementation of <xref:System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey%2A> to establish the key before calling an implementation of <xref:System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange%2A>."
  syntax:
    content: protected AsymmetricKeyExchangeDeformatter ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])
  id: DecryptKeyExchange(System.Byte[])
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  langs:
  - csharp
  name: DecryptKeyExchange(Byte[])
  nameWithType: AsymmetricKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "When overridden in a derived class, extracts secret information from the encrypted key exchange data."
  remarks: "You must specify a key before calling an implementation of this method."
  example:
  - "The following code example demonstrates how to override the DecryptKeyExchange method to create an encrypted key exchange for the specified input data. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricKeyExchangeDeformatter> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#4](~/add/codesnippet/csharp/fb6d8c4e-721e-492c-9736-_1.cs)]\n [!code-vb[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#4](~/add/codesnippet/visualbasic/fb6d8c4e-721e-492c-9736-_1.vb)]"
  syntax:
    content: public abstract byte[] DecryptKeyExchange (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "The key exchange data within which the secret information is hidden."
    return:
      type: System.Byte[]
      description: "The secret information derived from the key exchange data."
  overload: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters
  id: Parameters
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  langs:
  - csharp
  name: Parameters
  nameWithType: AsymmetricKeyExchangeDeformatter.Parameters
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "When overridden in a derived class, gets or sets the parameters for the asymmetric key exchange."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the Parameters property to disallow access to the parameters of the formatter. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricKeyExchangeDeformatter> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#3](~/add/codesnippet/csharp/p-system.security.crypto_6_1.cs)]\n [!code-vb[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#3](~/add/codesnippet/visualbasic/p-system.security.crypto_6_1.vb)]"
  syntax:
    content: public abstract string Parameters { get; set; }
    return:
      type: System.String
      description: "A string in XML format containing the parameters of the asymmetric key exchange operation."
  overload: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "When overridden in a derived class, sets the private key to use for decrypting the secret information."
  remarks: "You must set a key before calling a <xref:System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange%2A> implementation."
  example:
  - "The following code example demonstrates how to override the SetKey to set the public key for encryption operations. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricKeyExchangeDeformatter> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#5](~/add/codesnippet/csharp/bede2b56-64ca-4792-8e38-_1.cs)]\n [!code-vb[System.Security.Cryptography.AsymmetricKeyExchangeDeformatter#5](~/add/codesnippet/visualbasic/bede2b56-64ca-4792-8e38-_1.vb)]"
  syntax:
    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The instance of the implementation of <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;></xref> that holds the private key."
  overload: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.#ctor
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: AsymmetricKeyExchangeDeformatter()
  nameWithType: AsymmetricKeyExchangeDeformatter.AsymmetricKeyExchangeDeformatter()
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.AsymmetricKeyExchangeDeformatter()
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: DecryptKeyExchange(Byte[])
  nameWithType: AsymmetricKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: Parameters
  nameWithType: AsymmetricKeyExchangeDeformatter.Parameters
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.#ctor*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: AsymmetricKeyExchangeDeformatter
  nameWithType: AsymmetricKeyExchangeDeformatter.AsymmetricKeyExchangeDeformatter
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: DecryptKeyExchange
  nameWithType: AsymmetricKeyExchangeDeformatter.DecryptKeyExchange
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.Parameters*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: Parameters
  nameWithType: AsymmetricKeyExchangeDeformatter.Parameters
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: SetKey
  nameWithType: AsymmetricKeyExchangeDeformatter.SetKey
