### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequest
  id: HttpRequest
  children:
  - System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  - System.Web.HttpRequest.Abort
  - System.Web.HttpRequest.AcceptTypes
  - System.Web.HttpRequest.AnonymousID
  - System.Web.HttpRequest.ApplicationPath
  - System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  - System.Web.HttpRequest.BinaryRead(System.Int32)
  - System.Web.HttpRequest.Browser
  - System.Web.HttpRequest.ClientCertificate
  - System.Web.HttpRequest.ContentEncoding
  - System.Web.HttpRequest.ContentLength
  - System.Web.HttpRequest.ContentType
  - System.Web.HttpRequest.Cookies
  - System.Web.HttpRequest.CurrentExecutionFilePath
  - System.Web.HttpRequest.CurrentExecutionFilePathExtension
  - System.Web.HttpRequest.FilePath
  - System.Web.HttpRequest.Files
  - System.Web.HttpRequest.Filter
  - System.Web.HttpRequest.Form
  - System.Web.HttpRequest.GetBufferedInputStream
  - System.Web.HttpRequest.GetBufferlessInputStream
  - System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  - System.Web.HttpRequest.Headers
  - System.Web.HttpRequest.HttpChannelBinding
  - System.Web.HttpRequest.HttpMethod
  - System.Web.HttpRequest.InputStream
  - System.Web.HttpRequest.InsertEntityBody
  - System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpRequest.IsAuthenticated
  - System.Web.HttpRequest.IsLocal
  - System.Web.HttpRequest.IsSecureConnection
  - System.Web.HttpRequest.Item(System.String)
  - System.Web.HttpRequest.LogonUserIdentity
  - System.Web.HttpRequest.MapImageCoordinates(System.String)
  - System.Web.HttpRequest.MapPath(System.String)
  - System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  - System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  - System.Web.HttpRequest.Params
  - System.Web.HttpRequest.Path
  - System.Web.HttpRequest.PathInfo
  - System.Web.HttpRequest.PhysicalApplicationPath
  - System.Web.HttpRequest.PhysicalPath
  - System.Web.HttpRequest.QueryString
  - System.Web.HttpRequest.RawUrl
  - System.Web.HttpRequest.ReadEntityBodyMode
  - System.Web.HttpRequest.RequestContext
  - System.Web.HttpRequest.RequestType
  - System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  - System.Web.HttpRequest.ServerVariables
  - System.Web.HttpRequest.TimedOutToken
  - System.Web.HttpRequest.TlsTokenBindingInfo
  - System.Web.HttpRequest.TotalBytes
  - System.Web.HttpRequest.Unvalidated
  - System.Web.HttpRequest.Url
  - System.Web.HttpRequest.UrlReferrer
  - System.Web.HttpRequest.UserAgent
  - System.Web.HttpRequest.UserHostAddress
  - System.Web.HttpRequest.UserHostName
  - System.Web.HttpRequest.UserLanguages
  - System.Web.HttpRequest.ValidateInput
  langs:
  - csharp
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
  type: Class
  summary: "Permite ao ler os valores HTTP enviados por um cliente durante um pedido Web ASP.NET."
  remarks: "Os métodos e propriedades da classe HttpRequest são expostas através de `Request` propriedades do <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, e <xref:System.Web.UI.UserControl>classes.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication>       Para aceder a dados das <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, ou <xref:System.Web.HttpRequest.ServerVariables%2A>coleções, pode escrever `Request[&quot;key&quot;]`, conforme mostrado no exemplo para o <xref:System.Web.HttpRequest.QueryString%2A>propriedade.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.ServerVariables%2A> </xref:System.Web.HttpRequest.Cookies%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A>      > [!NOTE] > Suporte de Unicode para membros de classe de HttpRequest requer o IIS versão 6.0 ou posterior."
  example:
  - "The following examples access the HttpRequest instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.  \n  \n You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections. You can write `Request[\"key\"]`.  \n  \n The first example shows how to retrieve a query string value when loading a page.  \n  \n```c#  \npublic partial class AddToCart : Page  \n{  \n    protected void Page_Load(object sender, EventArgs e)  \n    {  \n        string rawId = Request[\"ProductID\"];  \n        int productId;  \n        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  \n        {  \n            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  \n            {  \n                usersShoppingCart.AddToCart(productId);  \n            }  \n        }  \n        else  \n        {  \n            throw new Exception(\"Tried to call AddToCart.aspx without setting a ProductId.\");  \n        }  \n        Response.Redirect(\"ShoppingCart.aspx\");  \n    }  \n}  \n```  \n  \n```vb  \nPublic Class AddToCart  \n    Inherits Page  \n  \n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  \n        Dim rawId = Request(\"ProductID\")  \n        Dim productId As Integer  \n        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  \n            Using usersShoppingCart As New ShoppingCartActions()  \n                usersShoppingCart.AddToCart(productId)  \n            End Using  \n  \n        Else  \n            Throw New Exception(\"Tried to call AddToCart.aspx without setting a ProductId.\")  \n        End If  \n        Response.Redirect(\"ShoppingCart.aspx\")  \n    End Sub  \nEnd Class  \n```  \n  \n The next example shows how to check if the request is authenticated and retrieve the raw URL.  \n  \n```c#  \npublic partial class RestrictedPage : Page  \n{  \n    protected void Page_Load(object sender, EventArgs e)  \n    {  \n        if (!Request.IsAuthenticated)  \n        {  \n            var rawUrl = Request.RawUrl;  \n            Response.Redirect(\"/Account/Login?ru=\" + Server.HtmlEncode(rawUrl));  \n        }  \n    }  \n}  \n```  \n  \n```vb  \nPublic Class RestrictedPage  \n    Inherits Page  \n  \n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  \n        If Not Request.IsAuthenticated Then  \n            Dim rawUrl = Request.RawUrl  \n            Response.Redirect(\"/Account/Login?ru=\" + Server.HtmlEncode(rawUrl))  \n        End If  \n    End Sub  \nEnd Class  \n```  \n  \n A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).  \n  \n This example uses the <xref:System.IO.StreamWriter> class to write the values of several HttpRequest class properties to a file. For properties that are of type string, the values are HTML encoded as they are written to the file. Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: public sealed class HttpRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpRequest(String,String,String)
  nameWithType: HttpRequest.HttpRequest(String,String,String)
  fullName: System.Web.HttpRequest.HttpRequest(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objeto."
  remarks: "Não é necessário criar a sua própria instância de <xref:System.Web.HttpRequest>classe.</xref:System.Web.HttpRequest> Os métodos e propriedades do <xref:System.Web.HttpRequest>classe são expostos através de `Request` propriedade do <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, e <xref:System.Web.UI.UserControl>classes.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication> </xref:System.Web.HttpRequest>"
  syntax:
    content: public HttpRequest (string filename, string url, string queryString);
    parameters:
    - id: filename
      type: System.String
      description: "O nome do ficheiro associado ao pedido."
    - id: url
      type: System.String
      description: "As informações sobre o URL do pedido atual."
    - id: queryString
      type: System.String
      description: "A cadeia de consulta todo enviada com o pedido (tudo após o`&quot;?&quot;`)."
  overload: System.Web.HttpRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Abort
  id: Abort
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpRequest.Abort()
  fullName: System.Web.HttpRequest.Abort()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "A forçar a termina a ligação TCP subjacente, fazendo com que quaisquer e/s pendentes a falhar. Poderá utilizar este método em resposta a um ataque por um cliente malicioso de HTTP."
  remarks: "Este método é seguro para thread. Qualquer thread pode chamá-lo em qualquer altura.       Este método só pode ser utilizado no modo integrado. Se o invoke-lo no modo clássico, é emitida uma exceção. Para determinar o modo de pipeline, utilize <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Web.HttpRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AcceptTypes
  id: AcceptTypes
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
  fullName: System.Web.HttpRequest.AcceptTypes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma matriz de cadeia de MIME suportados pelo cliente aceitar tipos."
  remarks: ''
  example:
  - "The following code example captures the multiple values returned by the AcceptTypes property into an object variable and writes the number and name of each valueto a separate line of HTTP output.  \n  \n [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_0_1.vb)]\n [!code-cs[Classic HttpRequest.AcceptTypes Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_0_1.cs)]"
  syntax:
    content: public string[] AcceptTypes { get; }
    return:
      type: System.String[]
      description: "Uma matriz de cadeia de MIME suportados pelo cliente aceitar tipos."
  overload: System.Web.HttpRequest.AcceptTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AnonymousID
  id: AnonymousID
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
  fullName: System.Web.HttpRequest.AnonymousID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o identificador de anónimo para o utilizador, se estiver presente."
  remarks: "A propriedade AnonymousID atribui um identificador exclusivo de longa duração para um utilizador não autenticado, o que pode ser utilizado para controlar o utilizador ou atribuir propriedades de perfil para esse utilizador sem armazenar dados num `Session` objeto. Por predefinição, a propriedade AnonymousID é controlada utilizando um cookie, mas pode ser definido para utilizar o URI quando o <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>atributo na secção de configuração de identificação anónima está definido como o <xref:System.Web.HttpCookieMode>, <xref:System.Web.HttpCookieMode>, ou <xref:System.Web.HttpCookieMode>valor.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> Tem de limpar explicitamente o cookie se já não quiser disponíveis, por exemplo quando um utilizador anónimo está autenticado.       Anónima é utilizada quando for necessário para identificar as entidades que não estejam autenticadas e quando é necessária a autorização. Para obter mais informações, consulte [anonymousidentification esteja elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/2bd927ef-9057-4703-9c55-4cfb6d7d0929)"
  example:
  - "The following example shows how to use the AnonymousID property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file. This example has two parts:  \n  \n-   A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.  \n  \n-   A Web Forms page.  \n  \n The first part of the code example shows how to set the AnonymousID property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file. The method that is named `AnonymousIdentification_Creating` sets the AnonymousID property when an anonymous ID is created.  \n  \n [!code-cs[System.Web.HttpRequest_AnonymousID#2](~/add/codesnippet/csharp/p-system.web.httprequest_5_1.cs)]\n [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_5_1.vb)]  \n  \n The second part of the code example shows how to display the new AnonymousID that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.  \n  \n [!code-cs[System.Web.HttpRequest_AnonymousID#1](~/add/codesnippet/csharp/p-system.web.httprequest_5_2.aspx)]\n [!code-vb[System.Web.HttpRequest_AnonymousID#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_5_2.aspx)]"
  syntax:
    content: public string AnonymousID { get; }
    return:
      type: System.String
      description: "Uma cadeia que representa o identificador de utilizador anónimo actual."
  overload: System.Web.HttpRequest.AnonymousID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ApplicationPath
  id: ApplicationPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
  fullName: System.Web.HttpRequest.ApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o caminho da raiz da aplicação ASP.NET aplicações virtuais no servidor."
  remarks: "Utilize esta propriedade para construir um URL relativo à raiz da aplicação a partir de uma página ou controlo de utilizador da Web que não se encontra no diretório de raiz. Isto permite que as páginas e controlos partilhados que existam em diferentes níveis de uma estrutura de diretório para utilizar o mesmo código para ligar a recursos em localizações fixos na aplicação."
  example:
  - "The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the ApplicationPath property to a text file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class. It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_6_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_6_1.aspx)]  \n  \n The following example uses the ApplicationPath property to programmatically construct a path to a resource that is in a fixed location in the application. The page that references the resource does not have to be located in the same directory as the resource.  \n  \n [!code-cs[System.Web.HttpRequest.ApplicationPath#2](~/add/codesnippet/csharp/p-system.web.httprequest_6_2.aspx)]\n [!code-vb[System.Web.HttpRequest.ApplicationPath#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_6_2.aspx)]  \n  \n If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the ApplicationPath property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image."
  syntax:
    content: public string ApplicationPath { get; }
    return:
      type: System.String
      description: "O caminho virtual da aplicação atual."
  overload: System.Web.HttpRequest.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  id: AppRelativeCurrentExecutionFilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
  fullName: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o caminho virtual da raiz da aplicação e torna a mesma relativo utilizando a notação de til (~) para a raiz da aplicação (como no &quot;~ / page.aspx&quot;)."
  remarks: "Utilize esta propriedade para fornecer informações de URL que serão permaneça igual ao mesmo que a aplicação altere a localização. Isto permite que o mesmo código de mapeamento de URL para ser utilizada num ambiente de teste e no ambiente de implementação final ou para ser utilizado por cópias de aplicações Web em domínios diferentes."
  example:
  - "The following example uses the AppRelativeCurrentExecutionFilePath property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page. Run this page at different levels of a directory structure to see the resulting AppRelativeCurrentExecutionFilePath property values.  \n  \n [!code-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_31_1.aspx)]\n [!code-cs[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/add/codesnippet/csharp/p-system.web.httprequest_31_1.aspx)]  \n  \n The following example uses the AppRelativeCurrentExecutionFilePath property to programmatically set the path to a resource, based on the current path of the page.  \n  \n [!code-cs[System.Web.HttpRequest.ApplicationPath#1](~/add/codesnippet/csharp/p-system.web.httprequest_31_2.aspx)]\n [!code-vb[System.Web.HttpRequest.ApplicationPath#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_31_2.aspx)]"
  syntax:
    content: public string AppRelativeCurrentExecutionFilePath { get; }
    return:
      type: System.String
      description: "O caminho virtual da raiz da aplicação para o pedido atual."
  overload: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.BinaryRead(System.Int32)
  id: BinaryRead(System.Int32)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: BinaryRead(Int32)
  nameWithType: HttpRequest.BinaryRead(Int32)
  fullName: System.Web.HttpRequest.BinaryRead(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Efetua uma leitura binária de um número especificado de bytes do fluxo de entrada atual."
  remarks: "O método BinaryRead é fornecido para compatibilidade com ASP."
  syntax:
    content: public byte[] BinaryRead (int count);
    parameters:
    - id: count
      type: System.Int32
      description: "O número de bytes a ler."
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes."
  overload: System.Web.HttpRequest.BinaryRead*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>count</code> is 0.  \n  \n \\- or -  \n  \n <code>count</code> is greater than the number of bytes available."
  platform:
  - net462
- uid: System.Web.HttpRequest.Browser
  id: Browser
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Browser
  nameWithType: HttpRequest.Browser
  fullName: System.Web.HttpRequest.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define a informação sobre as capacidades do browser do cliente requerente."
  remarks: ''
  example:
  - "The following code example sends a list of the browser's capabilities back to the client in an HTML page.  \n  \n [!code-vb[Classic HttpRequest.Browser Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_14_1.vb)]\n [!code-cs[Classic HttpRequest.Browser Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_14_1.cs)]"
  syntax:
    content: public System.Web.HttpBrowserCapabilities Browser { get; set; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "Um <xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref> objeto lista as capacidades do browser do cliente."
  overload: System.Web.HttpRequest.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ClientCertificate
  id: ClientCertificate
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
  fullName: System.Web.HttpRequest.ClientCertificate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém atual certificado de segurança de cliente do pedido."
  remarks: ''
  example:
  - "The following code example sends the client's certificate settings back to the client in an HTML page.  \n  \n [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_12_1.vb)]\n [!code-cs[Classic HttpRequest.ClientCertificate Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_12_1.cs)]"
  syntax:
    content: public System.Web.HttpClientCertificate ClientCertificate { get; }
    return:
      type: System.Web.HttpClientCertificate
      description: "Um <xref href=&quot;System.Web.HttpClientCertificate&quot;> </xref> objeto que contém informações sobre as definições de certificado de segurança do cliente."
  overload: System.Web.HttpRequest.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentEncoding
  id: ContentEncoding
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
  fullName: System.Web.HttpRequest.ContentEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o conjunto de carateres de corpo de entidade."
  remarks: "Predefinição de codificação de conteúdo pode ser especificado o [globalização elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) de um ficheiro de configuração. Se a codificação de conteúdo também está especificado pelo cliente, as definições de configuração predefinidos são substituídas."
  example:
  - "The following code example assigns a value representing the description of the current HTTP encoding to a string variable.  \n  \n [!code-cs[Classic HttpRequest.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_18_1.cs)]\n [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_18_1.vb)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Um <xref:System.Text.Encoding>objeto que representa o conjunto de carateres do cliente.</xref:System.Text.Encoding>"
  overload: System.Web.HttpRequest.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentLength
  id: ContentLength
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
  fullName: System.Web.HttpRequest.ContentLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Especifica o comprimento, em bytes, do conteúdo enviado pelo cliente."
  remarks: ''
  example:
  - "The following code example assigns the value representing the content length of the incoming request to an integer variable.  \n  \n [!code-vb[Classic HttpRequest.ContentLength Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_17_1.vb)]\n [!code-cs[Classic HttpRequest.ContentLength Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_17_1.cs)]"
  syntax:
    content: public int ContentLength { get; }
    return:
      type: System.Int32
      description: "O comprimento, em bytes, de conteúdo enviado pelo cliente."
  overload: System.Web.HttpRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentType
  id: ContentType
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: System.Web.HttpRequest.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o tipo de conteúdo de MIME do pedido a receber."
  remarks: ''
  example:
  - "The following code example assigns the value representing the content type of the incoming request to a string variable.  \n  \n [!code-vb[Classic HttpRequest.ContentType Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_33_1.vb)]\n [!code-cs[Classic HttpRequest.ContentType Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_33_1.cs)]  \n  \n The following example shows output that might be produced by this code.  \n  \n `GET`  \n  \n `127.0.0.1`  \n  \n `127.0.0.1`  \n  \n `GET`"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o tipo de conteúdo de MIME do pedido a receber, por exemplo, &quot;text/html&quot;. Tipos de MIME adicionais comuns incluem &quot;audio.wav&quot;, &quot;imagem/gif&quot; e &quot;aplicação/pdf&quot;."
  overload: System.Web.HttpRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Cookies
  id: Cookies
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpRequest.Cookies
  fullName: System.Web.HttpRequest.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um conjunto de cookies enviada pelo cliente."
  remarks: "ASP.NET inclui duas coleções de cookie intrínseca. A coleção acedida através da coleção de Cookies de <xref:System.Web.HttpRequest>contém cookies transmitidos pelo cliente para o servidor a `Cookie` cabeçalho.</xref:System.Web.HttpRequest> A coleção acedida através de <xref:System.Web.HttpResponse.Cookies%2A>coleção de <xref:System.Web.HttpResponse>contém cookies nova criada no servidor e transmitidos para o cliente no `Set-Cookie` cabeçalho.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.Cookies%2A>      > [!NOTE] > Depois de adicionar um cookie utilizando o <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>coleção, o cookie é imediatamente disponibilizado na coleção de Cookies, mesmo que não foi enviada a resposta ao cliente.</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>"
  example:
  - "The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.  \n  \n [!code-cs[Classic HttpRequest.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_21_1.cs)]\n [!code-vb[Classic HttpRequest.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_21_1.vb)]"
  syntax:
    content: public System.Web.HttpCookieCollection Cookies { get; }
    return:
      type: System.Web.HttpCookieCollection
      description: "Um <xref href=&quot;System.Web.HttpCookieCollection&quot;> </xref> objeto que representa as variáveis de cookie do cliente."
  overload: System.Web.HttpRequest.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.CurrentExecutionFilePath
  id: CurrentExecutionFilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
  fullName: System.Web.HttpRequest.CurrentExecutionFilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o caminho virtual do pedido atual."
  remarks: "CurrentExecutionFilePath devolve o caminho do ficheiro para o processador de página atualmente em execução. Para cenários de redirecionamento utilizando <xref:System.Web.HttpServerUtility.Execute%2A>e <xref:System.Web.HttpServerUtility.Transfer%2A>métodos Isto significa que a propriedade CurrentExecutionFilePath devolve o caminho para a página redirecionada para (página subordinados).</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> No entanto, quando o cliente é redirecionado para outra página, o <xref:System.Web.HttpRequest.FilePath%2A>propriedade devolve o caminho para a página original.</xref:System.Web.HttpRequest.FilePath%2A>"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the CurrentExecutionFilePath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_3_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_3_1.aspx)]"
  syntax:
    content: public string CurrentExecutionFilePath { get; }
    return:
      type: System.String
      description: "O caminho virtual do pedido atual."
  overload: System.Web.HttpRequest.CurrentExecutionFilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  id: CurrentExecutionFilePathExtension
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
  fullName: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém a extensão do nome do ficheiro que é especificado o <xref:System.Web.HttpRequest.CurrentExecutionFilePath*>propriedade.</xref:System.Web.HttpRequest.CurrentExecutionFilePath*>"
  syntax:
    content: public string CurrentExecutionFilePathExtension { get; }
    return:
      type: System.String
      description: "A extensão do nome do ficheiro que é especificado o <xref:System.Web.HttpRequest.CurrentExecutionFilePath*>propriedade.</xref:System.Web.HttpRequest.CurrentExecutionFilePath*>"
  overload: System.Web.HttpRequest.CurrentExecutionFilePathExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.FilePath
  id: FilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: FilePath
  nameWithType: HttpRequest.FilePath
  fullName: System.Web.HttpRequest.FilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o caminho virtual do pedido atual."
  remarks: "A propriedade FilePath não inclui o <xref:System.Web.HttpRequest.PathInfo%2A>trailer.</xref:System.Web.HttpRequest.PathInfo%2A> Por exemplo, para URL http://www.contoso.com/virdir/page.html/tail, o valor de FilePath é /virdir/page.html."
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the FilePath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_27_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_27_1.aspx)]"
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "O caminho virtual do pedido atual."
  overload: System.Web.HttpRequest.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Files
  id: Files
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Files
  nameWithType: HttpRequest.Files
  fullName: System.Web.HttpRequest.Files
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém a coleção de ficheiros carregados pelo cliente, no formato MIME com várias partes."
  remarks: "A recolha de ficheiros for preenchida apenas quando o HTTP do pedido `Content-Type` valor é &quot;multipart/formulário-data&quot;."
  example:
  - "The following code example displays the names of all files in the Files collection.  \n  \n [!code-cs[Classic HttpRequest.Files Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_28_1.cs)]\n [!code-vb[Classic HttpRequest.Files Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_28_1.vb)]"
  syntax:
    content: public System.Web.HttpFileCollection Files { get; }
    return:
      type: System.Web.HttpFileCollection
      description: "Um <xref href=&quot;System.Web.HttpFileCollection&quot;> </xref> objeto que representa uma coleção de ficheiros carregados pelo cliente. Os itens do <xref href=&quot;System.Web.HttpFileCollection&quot;> </xref> objeto são do tipo <xref href=&quot;System.Web.HttpPostedFile&quot;> </xref>."
  overload: System.Web.HttpRequest.Files*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Filter
  id: Filter
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Filter
  nameWithType: HttpRequest.Filter
  fullName: System.Web.HttpRequest.Filter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o filtro para utilizar ao ler o fluxo de entrada atual."
  remarks: ''
  example:
  - "The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>. Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.  \n  \n [!code-vb[System.Web.HttpRequest.Filter#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_4_1.aspx)]\n [!code-cs[System.Web.HttpRequest.Filter#1](~/add/codesnippet/csharp/p-system.web.httprequest_4_1.aspx)]"
  syntax:
    content: public System.IO.Stream Filter { get; set; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objeto a ser utilizado como o filtro.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.Filter*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Especificado <xref:System.IO.Stream>é inválido.</xref:System.IO.Stream>"
  platform:
  - net462
- uid: System.Web.HttpRequest.Form
  id: Form
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Form
  nameWithType: HttpRequest.Form
  fullName: System.Web.HttpRequest.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma coleção de variáveis do formulário."
  remarks: "A propriedade do formulário é preenchida ao pedido de HTTP `Content-Type` valor é &quot;application/x-www-form-urlencoded&quot; ou &quot;multipart/formulário-data&quot;."
  example:
  - "The following example shows how to read the values in the form collection posted from a browser. Each name/value pair in the collection represents a control in the form and its value.  \n  \n [!code-vb[Classic HttpRequest.Form Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_32_1.vb)]\n [!code-cs[Classic HttpRequest.Form Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_32_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Form { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> que representa uma coleção de variáveis do formulário."
  overload: System.Web.HttpRequest.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferedInputStream
  id: GetBufferedInputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferedInputStream()
  nameWithType: HttpRequest.GetBufferedInputStream()
  fullName: System.Web.HttpRequest.GetBufferedInputStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um <xref:System.IO.Stream>objetos que podem ser utilizados para ler o corpo de entidade HTTP recebido.</xref:System.IO.Stream>"
  remarks: "Este método é idêntico ao <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>exceto que também copia os bytes que são lidos a armazenamento interno que é utilizado pelo ASP.NET para preencher o <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, e <xref:System.Web.HttpRequest.InputStream%2A>Propriedades.</xref:System.Web.HttpRequest.InputStream%2A> </xref:System.Web.HttpRequest.Files%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> Como estas informações são preservadas, código a jusante, tais como páginas de formulários Web ASP.NET (ficheiros. aspx) serão executados com êxito. Não é o caso do <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>método.</xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>"
  syntax:
    content: public System.IO.Stream GetBufferedInputStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objetos que podem ser utilizados para ler o corpo de entidade HTTP recebido.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferedInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Corpo de entidade do pedido já foi carregado e analisar. Os exemplos de propriedades que fazer com que o corpo de entidade ser carregado e analisá-la incluem o seguinte: - <> </> *> propriedade.      -O <> </> *> propriedade.      -O <> </> *> propriedade.      -O <> </> *> método.       Para evitar esta exceção, chame o <xref:System.Web.HttpRequest.ReadEntityBodyMode*>método primeiro.</xref:System.Web.HttpRequest.ReadEntityBodyMode*> Esta exceção é emitida também se o cliente desligar enquanto está a ser lido o corpo de entidade."
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferlessInputStream
  id: GetBufferlessInputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferlessInputStream()
  nameWithType: HttpRequest.GetBufferlessInputStream()
  fullName: System.Web.HttpRequest.GetBufferlessInputStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um <xref:System.IO.Stream>objetos que podem ser utilizados para ler o corpo de entidade HTTP recebido.</xref:System.IO.Stream>"
  remarks: "Este método proporciona uma alternativa à utilização de <xref:System.Web.HttpRequest.InputStream%2A>propriedade.</xref:System.Web.HttpRequest.InputStream%2A> O <xref:System.Web.HttpRequest.InputStream%2A>propriedade aguarda até que o pedido completo foi recebido antes que devolva uma <xref:System.IO.Stream>objeto.</xref:System.IO.Stream> </xref:System.Web.HttpRequest.InputStream%2A> Em contrapartida, o método de GetBufferlessInputStream devolve o <xref:System.IO.Stream>objeto imediatamente.</xref:System.IO.Stream> Pode utilizar o método para começar a processar o corpo de entidade antes do conteúdo completo do corpo foram recebido.       O corpo de entidade (ou como grande parte do mesmo conforme pedido e foi recebida) é devolvido apenas quando utilizar o objeto que é devolvido por este método para ler a transmissão, ao chamar os métodos, tais como o <xref:System.IO.Stream.Read%2A>método.</xref:System.IO.Stream.Read%2A> Utilizar parâmetros do <xref:System.IO.Stream.Read%2A>método para especificar a quantidade de corpo de entidade ler.</xref:System.IO.Stream.Read%2A>       O <xref:System.IO.Stream>objeto devolvido pelo ASP.NET deste método suporta operações síncronos e assíncronos métodos de leitura.</xref:System.IO.Stream> O <xref:System.IO.Stream>objeto implementa ambos o <xref:System.IO.Stream.BeginRead%2A>e <xref:System.IO.Stream.EndRead%2A>métodos.</xref:System.IO.Stream.EndRead%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> Os métodos assíncronos permitem-lhe ler assincronamente a entidade do pedido em segmentos, enquanto o ASP.NET liberta o thread actual entre cada iteração de um ciclo de leitura assíncrona.       Este método pode ser útil se o pedido está a carregar um ficheiro grande e pretende começar a aceder o conteúdo do ficheiro antes do carregamento estiver concluído. No entanto, só deve utilizar este método para cenários nos quais pretende assumir a todo o processamento do corpo de entidade. Isto significa que não é possível utilizar este método de uma página. aspx, porque o tempo de que execução de uma página. aspx, o corpo de entidade já foi lido."
  syntax:
    content: public System.IO.Stream GetBufferlessInputStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objetos que podem ser utilizados para ler o corpo de entidade HTTP recebido.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferlessInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Corpo de entidade do pedido já foi carregado e analisar. Os exemplos de propriedades que fazer com que o corpo de entidade ser carregado e analisá-la incluem o seguinte:- <> </> *>- <> </> *>- <> </> *>- <> </> *> para evitar esta exceção, chame o <xref:System.Web.HttpRequest.ReadEntityBodyMode*>método primeiro.</xref:System.Web.HttpRequest.ReadEntityBodyMode*> Esta exceção é emitida também se o cliente desligar enquanto está a ser lido o corpo de entidade."
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  id: GetBufferlessInputStream(System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferlessInputStream(Boolean)
  nameWithType: HttpRequest.GetBufferlessInputStream(Boolean)
  fullName: System.Web.HttpRequest.GetBufferlessInputStream(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um <xref:System.IO.Stream>objetos que podem ser utilizados para ler o corpo de entidade HTTP recebido, opcionalmente, desativar o limite de comprimento do pedido está definido no <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*>propriedade.</xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*> </xref:System.IO.Stream>"
  remarks: "Para obter mais informações sobre este método, consulte o <xref:System.Web.HttpRequest.GetBufferlessInputStream>de sobrecarga.</xref:System.Web.HttpRequest.GetBufferlessInputStream>"
  syntax:
    content: public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);
    parameters:
    - id: disableMaxRequestLength
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para desativar o limite de comprimento do pedido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objetos que podem ser utilizados para ler o corpo de entidade HTTP recebido.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferlessInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Corpo de entidade do pedido já foi carregado e analisar. Os exemplos de propriedades que fazer com que o corpo de entidade ser carregado e analisá-la incluem o seguinte: - <> </> *> propriedade.      -O <> </> *> propriedade.      -O <> </> *> propriedade.      -O <> </> *> método.       Para evitar esta exceção, chame o <xref:System.Web.HttpRequest.ReadEntityBodyMode*>método primeiro.</xref:System.Web.HttpRequest.ReadEntityBodyMode*> Esta exceção é emitida também se o cliente desligar enquanto está a ser lido o corpo de entidade."
  platform:
  - net462
- uid: System.Web.HttpRequest.Headers
  id: Headers
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: System.Web.HttpRequest.Headers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma coleção de cabeçalhos de HTTP."
  remarks: "Para obter uma listagem de todos os cabeçalhos possíveis, consulte [campos de cabeçalho de pedido](http://go.microsoft.com/fwlink/?LinkId=73147) no W3C Web site."
  example:
  - "The following code example displays the names and values of all headers in the HTTP request.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_24_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_24_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> dos cabeçalhos."
  overload: System.Web.HttpRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.HttpChannelBinding
  id: HttpChannelBinding
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
  fullName: System.Web.HttpRequest.HttpChannelBinding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>objeto do atual <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> instância.</xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>"
  syntax:
    content: public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }
    return:
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: "O <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>objeto do atual <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> instância.</xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>"
  overload: System.Web.HttpRequest.HttpChannelBinding*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Atual <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> o objeto não é um <xref uid=&quot;langword_csharp_System.Web.Hosting.IIS7WorkerRequest&quot; name=&quot;System.Web.Hosting.IIS7WorkerRequest&quot; href=&quot;&quot;> </xref> objeto ou um <xref uid=&quot;langword_csharp_System.Web.Hosting.ISAPIWorkerRequestInProc&quot; name=&quot;System.Web.Hosting.ISAPIWorkerRequestInProc&quot; href=&quot;&quot;> </xref> objeto."
  platform:
  - net462
- uid: System.Web.HttpRequest.HttpMethod
  id: HttpMethod
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
  fullName: System.Web.HttpRequest.HttpMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o método de transferência de dados HTTP (tais como <xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref>, ou <xref uid=&quot;langword_csharp_HEAD&quot; name=&quot;HEAD&quot; href=&quot;&quot;> </xref>) utilizada pelo cliente."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the HttpMethod property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_2_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_2_1.aspx)]  \n  \n The following example shows output that is produced by this code.  \n  \n `GET`  \n  \n `127.0.0.1`  \n  \n `127.0.0.1`  \n  \n `GET`"
  syntax:
    content: public string HttpMethod { get; }
    return:
      type: System.String
      description: "O HTTP transferência de dados método utilizado pelo cliente."
  overload: System.Web.HttpRequest.HttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.InputStream
  id: InputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpRequest.InputStream
  fullName: System.Web.HttpRequest.InputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o conteúdo do corpo de entidade HTTP recebido."
  remarks: ''
  example:
  - "The following code example copies the contents of an InputStream into a string.  \n  \n [!code-cs[Classic HttpRequest.InputStream Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_10_1.aspx)]\n [!code-vb[Classic HttpRequest.InputStream Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_10_1.vb)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>de objeto que representa o conteúdo de HTTP a receber conteúdo corpo.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.InsertEntityBody
  id: InsertEntityBody
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InsertEntityBody()
  nameWithType: HttpRequest.InsertEntityBody()
  fullName: System.Web.HttpRequest.InsertEntityBody()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornece ao IIS com uma cópia do corpo de entidade do pedido HTTP."
  remarks: "IIS não mantém uma cópia do pedido depois foi lida. Por conseguinte, é recomendado que só o processador para um pedido de HTTP deve ler a entidade do pedido.       A sobrecarga de método InsertEntityBody fornece ao IIS com uma cópia da entidade de pedido de se anteriormente foi lido pelo ASP.NET. Esta sobrecarga de método é útil nos casos em que o ASP.NET tem de ler o pedido de entidade e que pretende reutilizar os dados existentes do pedido."
  syntax:
    content: public void InsertEntityBody ();
    parameters: []
  overload: System.Web.HttpRequest.InsertEntityBody*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O método foi invocado numa versão do IIS anterior ao IIS 7.0."
  platform:
  - net462
- uid: System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  id: InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InsertEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornece ao IIS com uma cópia do corpo de entidade do pedido HTTP e com informações sobre o objeto de entidade do pedido."
  remarks: "IIS não mantém uma cópia do pedido depois foi lida. Por conseguinte, é recomendado que só o processador para um pedido de HTTP deve ler a entidade do pedido.       A sobrecarga de método InsertEntityBody é útil quando pretende efetuar o processamento personalizado, tais como a inserir um corpo de entidade diferente na memória."
  syntax:
    content: public void InsertEntityBody (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz que contém os dados de entidade do pedido."
    - id: offset
      type: System.Int32
      description: "A posição baseada em zero no `buffer` no qual pretende começar a armazenar os dados de entidade do pedido."
    - id: count
      type: System.Int32
      description: "O número de bytes a ler para o `buffer` matriz."
  overload: System.Web.HttpRequest.InsertEntityBody*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O método foi invocado numa versão do IIS anterior ao IIS 7.0."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é um valor negativo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O número de itens na <code> count </code> é maior do que o espaço disponível no <code> buffer </code>, determinado o <code> offset </code> valor."
  platform:
  - net462
- uid: System.Web.HttpRequest.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
  fullName: System.Web.HttpRequest.IsAuthenticated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se o pedido foi autenticado."
  remarks: ''
  example:
  - "The following code example uses the IsAuthenticated property to determine whether the current request has been authenticated. If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application. This is a common technique used in the default page for an application.  \n  \n [!code-vb[System.Web.HttpRequest_Sample3#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_15_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample3#1](~/add/codesnippet/csharp/p-system.web.httprequest_15_1.aspx)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o pedido é autenticado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpRequest.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.IsLocal
  id: IsLocal
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
  fullName: System.Web.HttpRequest.IsLocal
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se o pedido é do computador local."
  remarks: "Devolve de propriedade IsLocal `true` se o endereço IP do; o originador do pedido é 127.0.0.1 ou se o endereço IP do pedido é o mesmo endereço IP do servidor."
  syntax:
    content: public bool IsLocal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o pedido do computador local; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpRequest.IsLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.IsSecureConnection
  id: IsSecureConnection
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
  fullName: System.Web.HttpRequest.IsSecureConnection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se a ligação de HTTP utiliza seguras sockets (ou seja, HTTPS)."
  remarks: ''
  example:
  - "The following code example determines whether the IsSecureConnection property is set to false. If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprequest_13_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprequest_13_1.aspx)]"
  syntax:
    content: public bool IsSecureConnection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a ligação é uma ligação SSL; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpRequest.IsSecureConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Item(System.String)
  id: Item(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpRequest.Item(String)
  fullName: System.Web.HttpRequest.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o objeto especificado no <> </> *>, <> </> *>, <> </> *>, ou <> </> *> coleções."
  syntax:
    content: public string this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "O nome do membro da coleção a obter."
    return:
      type: System.String
      description: "O <> </> *>, <> </> *>, <> </> *>, ou <> </> *> membro da coleção especificado no <code> key </code> parâmetro. Se especificado <code> key </code> não for encontrado, em seguida, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é devolvido."
  overload: System.Web.HttpRequest.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.LogonUserIdentity
  id: LogonUserIdentity
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
  fullName: System.Web.HttpRequest.LogonUserIdentity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> tipo para o utilizador atual."
  remarks: "A propriedade LogonUserIdentity expõe as propriedades e métodos para a <xref:System.Security.Principal.WindowsIdentity>objeto para o utilizador atualmente ligado a serviços de informação de Internet do Microsoft (IIS).</xref:System.Security.Principal.WindowsIdentity> A instância do <xref:System.Security.Principal.WindowsIdentity>classe que é exposto pelo LogonUserIdentity controla o token de pedido do IIS e fornece o facilitar o acesso a este token para o pedido HTTP atual a ser processado no interior do ASP.NET.</xref:System.Security.Principal.WindowsIdentity> Uma instância do <xref:System.Security.Principal.WindowsIdentity>classe é criada automaticamente pelo que não necessita de ser construído para obterem acesso aos respetivos métodos e propriedades.</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following code example shows how to retrieve the LogonUserIdentity property for the current user and write out the values of each item in a text file. Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.  \n  \n [!code-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_35_1.aspx)]\n [!code-cs[System.Web.HttpRequest_LogonUserIdentity#1](~/add/codesnippet/csharp/p-system.web.httprequest_35_1.aspx)]"
  syntax:
    content: public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objeto para as definições de autenticação atual dos serviços de informação Internet (IIS) da Microsoft."
  overload: System.Web.HttpRequest.LogonUserIdentity*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A aplicação Web está em execução no modo integrado do IIS 7 e o <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> eventos ainda não foi gerado."
  platform:
  - net462
- uid: System.Web.HttpRequest.MapImageCoordinates(System.String)
  id: MapImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapImageCoordinates(String)
  nameWithType: HttpRequest.MapImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapImageCoordinates(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Parâmetro de formulário de Maps um campo de imagem recebido para valores coordenada x e y coordenada adequados."
  syntax:
    content: public int[] MapImageCoordinates (string imageFieldName);
    parameters:
    - id: imageFieldName
      type: System.String
      description: "O nome do mapa de imagem do formulário."
    return:
      type: System.Int32[]
      description: "Bidimensional de números inteiros."
  overload: System.Web.HttpRequest.MapImageCoordinates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpRequest.MapPath(String)
  fullName: System.Web.HttpRequest.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "O caminho virtual especificado é mapeado para um caminho físico."
  remarks: >-
    > [!CAUTION]

    >  The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following code example uses the MapPath method to convert a virtual path to a fully qualified physical path on the server. This example has two parts:  \n  \n-   An .aspx page maps the path, reads the file, and displays results of the read operation.  \n  \n-   A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.  \n  \n The first part of the example shows how to convert a virtual path to a fully qualified physical path using the MapPath method. This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file. The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page. The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.  \n  \n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/m-system.web.httprequest_0_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/m-system.web.httprequest_0_1.aspx)]  \n  \n The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase. Put this code in the `App_Code` folder for your application.  \n  \n [!code-cs[System.Web.HttpRequest_Samples2#2](~/add/codesnippet/csharp/m-system.web.httprequest_0_2.cs)]\n [!code-vb[System.Web.HttpRequest_Samples2#2](~/add/codesnippet/visualbasic/m-system.web.httprequest_0_2.vb)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual (absoluto ou relativo) para o pedido atual."
    return:
      type: System.String
      description: "O caminho físico no servidor especificado pelo <code> virtualPath </code>."
  overload: System.Web.HttpRequest.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Não <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto está definido para o pedido."
  platform:
  - net462
- uid: System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  id: MapPath(System.String,System.String,System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapPath(String,String,Boolean)
  nameWithType: HttpRequest.MapPath(String,String,Boolean)
  fullName: System.Web.HttpRequest.MapPath(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "O caminho virtual especificado é mapeado para um caminho físico."
  remarks: >-
    > [!CAUTION]

    >  The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.
  syntax:
    content: public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual (absoluto ou relativo) para o pedido atual."
    - id: baseVirtualDir
      type: System.String
      description: "O caminho do diretório virtual de base utilizado para a resolução relativa."
    - id: allowCrossAppMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que `virtualPath` poderão pertencer a outra aplicação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "O caminho físico no servidor."
  overload: System.Web.HttpRequest.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Não <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto está definido para o pedido."
  platform:
  - net462
- uid: System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  id: MapRawImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapRawImageCoordinates(String)
  nameWithType: HttpRequest.MapRawImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapRawImageCoordinates(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Mapeia um parâmetro de entrada formulário de campo de imagem adequado x e valores coordenada y."
  syntax:
    content: public double[] MapRawImageCoordinates (string imageFieldName);
    parameters:
    - id: imageFieldName
      type: System.String
      description: "O nome do campo de imagem."
    return:
      type: System.Double[]
      description: "Os x e y coordenam valores."
  overload: System.Web.HttpRequest.MapRawImageCoordinates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Params
  id: Params
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Params
  nameWithType: HttpRequest.Params
  fullName: System.Web.HttpRequest.Params
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um conjunto combinado de <> </> *>, <> </> *>, <> </> *>, e <> </> *> itens."
  remarks: "Pares nome-valor são adicionados à coleção pela seguinte ordem: 1.  Parâmetros de cadeia de consulta.      2.  Campos do formulário.      3.  Cookies.      4.  Variáveis de servidor."
  example:
  - "The following code example shows how to loop through the Params property for a page and how to display each key/value pair.  \n  \n [!code-cs[System.Web.HttpRequest.Params#1](~/add/codesnippet/csharp/p-system.web.httprequest_7_1.aspx)]\n [!code-vb[System.Web.HttpRequest.Params#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_7_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Params { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> object."
  overload: System.Web.HttpRequest.Params*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Path
  id: Path
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Path
  nameWithType: HttpRequest.Path
  fullName: System.Web.HttpRequest.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o caminho virtual do pedido atual."
  remarks: "O caminho é a concatenação o <xref:System.Web.HttpRequest.FilePath%2A>e <xref:System.Web.HttpRequest.PathInfo%2A>trailer.</xref:System.Web.HttpRequest.PathInfo%2A> </xref:System.Web.HttpRequest.FilePath%2A> Por exemplo, para URL http://www.contoso.com/virdir/page.html/tail, o caminho é /virdir/page.html/tail."
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the Path property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_29_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_29_1.aspx)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "O caminho virtual do pedido atual."
  overload: System.Web.HttpRequest.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PathInfo
  id: PathInfo
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
  fullName: System.Web.HttpRequest.PathInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém as informações adicionais de caminho para um recurso com uma extensão de URL."
  remarks: "Para URL Http://www.contoso.com/virdir/page.html/tail, o valor de PathInfo é /tail."
  example:
  - "The following code example determines whether the PathInfo property contains an empty string. If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file. If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the PathInfo property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#4](~/add/codesnippet/visualbasic/p-system.web.httprequest_19_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#4](~/add/codesnippet/csharp/p-system.web.httprequest_19_1.aspx)]"
  syntax:
    content: public string PathInfo { get; }
    return:
      type: System.String
      description: "As informações de caminho adicionais para um recurso."
  overload: System.Web.HttpRequest.PathInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PhysicalApplicationPath
  id: PhysicalApplicationPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
  fullName: System.Web.HttpRequest.PhysicalApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o caminho do sistema de ficheiros físico do diretório de raiz da aplicação de servidor atualmente em execução."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the PhysicalApplicationPath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_1_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_1_1.aspx)]"
  syntax:
    content: public string PhysicalApplicationPath { get; }
    return:
      type: System.String
      description: "O caminho do sistema de ficheiros do diretório de raiz da aplicação atual."
  overload: System.Web.HttpRequest.PhysicalApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PhysicalPath
  id: PhysicalPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
  fullName: System.Web.HttpRequest.PhysicalPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o caminho do sistema de ficheiros físico correspondente para o URL pedido."
  remarks: "Em cenários de redirecionamento a utilizar <xref:System.Web.HttpServerUtility.Execute%2A>e <xref:System.Web.HttpServerUtility.Transfer%2A>, a propriedade PhysicalPath devolve o caminho para a página original.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> Para localizar o caminho físico da utilização de página atualmente em execução a <xref:System.Web.HttpRequest.MapPath%2A>método com o argumento de entrada definido como o <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>propriedade.</xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> </xref:System.Web.HttpRequest.MapPath%2A>"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the PhysicalPath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_20_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_20_1.aspx)]"
  syntax:
    content: public string PhysicalPath { get; }
    return:
      type: System.String
      description: "O caminho do sistema de ficheiros do pedido atual."
  overload: System.Web.HttpRequest.PhysicalPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.QueryString
  id: QueryString
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: QueryString
  nameWithType: HttpRequest.QueryString
  fullName: System.Web.HttpRequest.QueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém a coleção de variáveis de cadeia de consulta HTTP."
  remarks: ''
  example:
  - "The following code example shows two ways to get the value of a query string variable named “fullname”. In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is \"Fadi Fakhouri\" because the `%20` is URL-decoded into a space character. If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.  \n  \n The first line of code looks for the key “fullname” only in the query string; the second line looks for the key “fullname” in all of the HTTP request collections. For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.  \n  \n```c#  \nstring fullname1 = Request.QueryString[\"fullname\"];  \nstring fullname2 = Request[\"fullname\"];  \n  \n```  \n  \n```vb  \nDim fullname1 As String = Request.QueryString(\"fullname\")  \nDim fullname2 As String = Request(\"fullname\")  \n```"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "As variáveis de cadeia de consulta enviadas pelo cliente. As chaves e valores são descodificar o URL."
  overload: System.Web.HttpRequest.QueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RawUrl
  id: RawUrl
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
  fullName: System.Web.HttpRequest.RawUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o URL não processado do pedido atual."
  remarks: "O URL não processado está definido como parte do URL seguindo as informações do domínio. O http://www.contoso.com/articles/recent.aspx cadeia URL, o URL não processado é /articles/recent.aspx. O URL não processado inclui a cadeia de consulta, se estiver presente."
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the RawUrl property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_22_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_22_1.aspx)]"
  syntax:
    content: public string RawUrl { get; }
    return:
      type: System.String
      description: "O URL não processado do pedido atual."
  overload: System.Web.HttpRequest.RawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ReadEntityBodyMode
  id: ReadEntityBodyMode
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
  fullName: System.Web.HttpRequest.ReadEntityBodyMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se o corpo de entidade do pedido foram lidos e, se assim for, a forma como foi lido."
  remarks: "Este método é utilizado para evitar a exceção é emitida se o corpo de entidade já foi lido e é efetuada uma tentativa de lê-lo ao utilizar um método incompatível. Métodos e propriedades ler o corpo de entidade incluem o seguinte: - <xref:System.Web.HttpRequest.Form%2A>propriedade.</xref:System.Web.HttpRequest.Form%2A>      -O <xref:System.Web.HttpRequest.Files%2A>propriedade.</xref:System.Web.HttpRequest.Files%2A>      -O <xref:System.Web.HttpRequest.InputStream%2A>propriedade.</xref:System.Web.HttpRequest.InputStream%2A>      -O <xref:System.Web.HttpRequest.GetBufferedInputStream%2A>método.</xref:System.Web.HttpRequest.GetBufferedInputStream%2A>      -O <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>método.</xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>"
  syntax:
    content: public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }
    return:
      type: System.Web.ReadEntityBodyMode
      description: "O valor que indica como o corpo de entidade do pedido era de leitura ou que não foram lidos."
  overload: System.Web.HttpRequest.ReadEntityBodyMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RequestContext
  id: RequestContext
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
  fullName: System.Web.HttpRequest.RequestContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref:System.Web.Routing.RequestContext>instância do pedido atual.</xref:System.Web.Routing.RequestContext>"
  remarks: "Esta propriedade fornece acesso a <xref:System.Web.Routing.RouteData>objeto para o pedido atual.</xref:System.Web.Routing.RouteData> Para obter mais informações sobre o encaminhamento de ASP.NET, consulte. [Encaminhamento de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.Routing.RequestContext RequestContext { get; set; }
    return:
      type: System.Web.Routing.RequestContext
      description: "O <xref:System.Web.Routing.RequestContext>instância do pedido atual.</xref:System.Web.Routing.RequestContext> Para pedidos não encaminhada, o <xref:System.Web.Routing.RequestContext>objeto é devolvido está vazio.</xref:System.Web.Routing.RequestContext>"
  overload: System.Web.HttpRequest.RequestContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RequestType
  id: RequestType
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RequestType
  nameWithType: HttpRequest.RequestType
  fullName: System.Web.HttpRequest.RequestType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o método de transferência de dados HTTP (<xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref>) utilizada pelo cliente."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the RequestType property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_25_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_25_1.aspx)]"
  syntax:
    content: public string RequestType { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o tipo de invocação de HTTP enviado pelo cliente."
  overload: System.Web.HttpRequest.RequestType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  id: SaveAs(System.String,System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: SaveAs(String,Boolean)
  nameWithType: HttpRequest.SaveAs(String,Boolean)
  fullName: System.Web.HttpRequest.SaveAs(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Guarda um pedido de HTTP para o disco."
  remarks: "Guardar o contexto do pedido para o disco pode ser útil de depuração."
  example:
  - "The following code example calls the SaveAs method when a page is loaded. The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.  \n  \n [!code-cs[System.Web.HttpRequest_Sample6#1](~/add/codesnippet/csharp/m-system.web.httprequest_1_1.aspx)]\n [!code-vb[System.Web.HttpRequest_Sample6#1](~/add/codesnippet/visualbasic/m-system.web.httprequest_1_1.aspx)]"
  syntax:
    content: public void SaveAs (string filename, bool includeHeaders);
    parameters:
    - id: filename
      type: System.String
      description: "O caminho de unidade física."
    - id: includeHeaders
      type: System.Boolean
      description: "Um valor booleano que especifica se um cabeçalho de HTTP deve ser guardado no disco."
  overload: System.Web.HttpRequest.SaveAs*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>propriedade o <xref href=&quot;System.Web.Configuration.HttpRuntimeSection&quot;> </xref> está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> mas <code> filename </code> não é um caminho absoluto.</xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>"
  platform:
  - net462
- uid: System.Web.HttpRequest.ServerVariables
  id: ServerVariables
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
  fullName: System.Web.HttpRequest.ServerVariables
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma coleção de variáveis de servidor Web."
  remarks: "Para obter uma lista de variáveis de servidor suportadas pelo IIS, consulte [variáveis de servidor IIS](http://go.microsoft.com/fwlink/?LinkId=52471)."
  example:
  - "The following code example displays the names and values of all named server variables.  \n  \n [!code-cs[Classic HttpRequest.ServerVariables Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_30_1.cs)]\n [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_30_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection ServerVariables { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> das variáveis de servidor."
  overload: System.Web.HttpRequest.ServerVariables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TimedOutToken
  id: TimedOutToken
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
  fullName: System.Web.HttpRequest.TimedOutToken
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um <xref:System.Threading.CancellationToken>objeto que é tripped quando um pedido exceder o tempo limite.</xref:System.Threading.CancellationToken>"
  remarks: "O período de tempo limite pode ser especificado no ficheiro Web. config (consulte <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=fullName>) ou através de programação (consulte <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>).</xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=fullName> O período de tempo limite é medido desde a hora que do pedido é apresentada no. Se o tempo limite predefinido de segundos 110 está em vigor, o token de cancelamento irá ser tripped não anterior ao 110 segundos após o início do processamento do pedido. Pode alterar o <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>valor da propriedade, e como o tempo durante o qual este token não tripped ainda, será respeitado o novo valor de tempo limite.</xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>       Atualmente o token fornece apenas 15 granularidade segundo, o que significa que, se o valor de tempo limite é de 110 segundos, o token irá ser tripped algum tempo entre 110 e 125 segundos após o início do processamento do pedido. A granularidade podem ser alterados no futuro.       Apesar desta propriedade é seguro para thread, existem restrições na sua utilização. Para obter mais informações, consulte <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName>       Esta propriedade é sem significado se o processamento de pedidos de WebSockets foi iniciado."
  syntax:
    content: public System.Threading.CancellationToken TimedOutToken { get; }
    return:
      type: System.Threading.CancellationToken
      description: "O token de cancelamento."
  overload: System.Web.HttpRequest.TimedOutToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TlsTokenBindingInfo
  id: TlsTokenBindingInfo
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
  fullName: System.Web.HttpRequest.TlsTokenBindingInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém as informações de enlace de token de TLS. A propriedade permite que as aplicações obter informações sobre o token de pedidos HTTP recebidos para a autenticação avançada."
  remarks: "Esta propriedade devolve `null` em plataformas não windows10."
  syntax:
    content: public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }
    return:
      type: System.Web.ITlsTokenBindingInfo
      description: "O token de enlace para a ligação atual."
  overload: System.Web.HttpRequest.TlsTokenBindingInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TotalBytes
  id: TotalBytes
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
  fullName: System.Web.HttpRequest.TotalBytes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o número de bytes no fluxo de entrada atual."
  remarks: ''
  example:
  - "The following code example determines whether the TotalBytes property value is greater than 1000 bytes and writes that information to a file.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#6](~/add/codesnippet/visualbasic/p-system.web.httprequest_23_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#6](~/add/codesnippet/csharp/p-system.web.httprequest_23_1.aspx)]"
  syntax:
    content: public int TotalBytes { get; }
    return:
      type: System.Int32
      description: "O número de bytes no fluxo de entrada."
  overload: System.Web.HttpRequest.TotalBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Unvalidated
  id: Unvalidated
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
  fullName: System.Web.HttpRequest.Unvalidated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém os valores de pedido HTTP sem acionar a validação do pedido."
  remarks: "Verificações de validação para o markup HTML e de script que pode indicar um ataque de script entre sites potencial o pedido. Por predefinição, todos os valores são verificados utilizando a validação de pedido e se contiverem quaisquer valores markup ou script, o ASP.NET emite um <xref:System.Web.HttpRequestValidationException>exceção.</xref:System.Web.HttpRequestValidationException> Utilize este método se prevê a que o pedido irá conter markup (por exemplo, permitir aos utilizadores publicar conteúdo que contém o markup) e pretende obter o valor em bruto de um pedido.      > [!IMPORTANT] > Se utilizar esta propriedade, tem de verificar manualmente os dados para potenciais ataques de scripts entre sites."
  syntax:
    content: public System.Web.UnvalidatedRequestValues Unvalidated { get; }
    return:
      type: System.Web.UnvalidatedRequestValues
      description: "Os valores de pedido HTTP que não tem sido verificados utilizando a validação do pedido."
  overload: System.Web.HttpRequest.Unvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Url
  id: Url
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Url
  nameWithType: HttpRequest.Url
  fullName: System.Web.HttpRequest.Url
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém informações sobre o URL do pedido atual."
  remarks: ''
  example:
  - "The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.  \n  \n [!code-cs[Classic HttpRequest.Url Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_34_1.cs)]\n [!code-vb[Classic HttpRequest.Url Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_34_1.vb)]"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>objeto que contém o URL do pedido atual.</xref:System.Uri>"
  overload: System.Web.HttpRequest.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UrlReferrer
  id: UrlReferrer
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
  fullName: System.Web.HttpRequest.UrlReferrer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém as informações sobre o URL do pedido anterior do cliente que ligada para o atual URL."
  remarks: ''
  example:
  - "The following code example displays the value of two properties of the URL that referred the client to the current application.  \n  \n [!code-cs[Classic HttpRequest.UrlReferrer Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_8_1.cs)]\n [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_8_1.vb)]"
  syntax:
    content: public Uri UrlReferrer { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>objeto.</xref:System.Uri>"
  overload: System.Web.HttpRequest.UrlReferrer*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O HTTP <xref uid=&quot;langword_csharp_Referer&quot; name=&quot;Referer&quot; href=&quot;&quot;> </xref> cabeçalho do pedido está incorreto e não é possível converter um <xref:System.Uri>objeto.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Web.HttpRequest.UserAgent
  id: UserAgent
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
  fullName: System.Web.HttpRequest.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém a cadeia de agente de utilizador não processados do browser cliente."
  remarks: ''
  example:
  - "The following code example assigns the type identification of the requesting browser to a string variable.  \n  \n [!code-cs[Classic HttpRequest.UserAgent Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_26_1.cs)]\n [!code-vb[Classic HttpRequest.UserAgent Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_26_1.vb)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "A cadeia de agente de utilizador não processados do browser cliente."
  overload: System.Web.HttpRequest.UserAgent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserHostAddress
  id: UserHostAddress
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
  fullName: System.Web.HttpRequest.UserHostAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o endereço IP do cliente remoto."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the UserHostAddress property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_9_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_9_1.aspx)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "O endereço IP do cliente remoto."
  overload: System.Web.HttpRequest.UserHostAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserHostName
  id: UserHostName
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
  fullName: System.Web.HttpRequest.UserHostName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o nome DNS do cliente remoto."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the UserHostName property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_11_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_11_1.aspx)]"
  syntax:
    content: public string UserHostName { get; }
    return:
      type: System.String
      description: "O nome DNS do cliente remoto."
  overload: System.Web.HttpRequest.UserHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserLanguages
  id: UserLanguages
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
  fullName: System.Web.HttpRequest.UserLanguages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma matriz de cadeia ordenado de preferências de idioma do cliente."
  remarks: ''
  example:
  - "The following code example captures the multiple values returned by the UserLanguages property into a string array and writes each language name to a separate line of HTTP output.  \n  \n The language names are provided by the browser, and there is no definitive list of all possible codes.  Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as \"en-us\" for U.S. English and \"fr-ca\" for Canadian French.  \n  \n [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_16_1.vb)]\n [!code-cs[Classic HttpRequest.UserLanguages Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_16_1.cs)]"
  syntax:
    content: public string[] UserLanguages { get; }
    return:
      type: System.String[]
      description: "Uma matriz de cadeia ordenado de preferências de idioma do cliente, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se estiver vazia."
  overload: System.Web.HttpRequest.UserLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ValidateInput
  id: ValidateInput
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ValidateInput()
  nameWithType: HttpRequest.ValidateInput()
  fullName: System.Web.HttpRequest.ValidateInput()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aciona a validação ocorrer para as coleções acedidas através de <> </> *>, <> </> *>, e <xref:System.Web.HttpRequest.QueryString*>Propriedades.</xref:System.Web.HttpRequest.QueryString*>"
  remarks: "O <xref:System.Web.HttpRequest>classe utiliza sinalizadores de entrada de validação para controlar se pretende efetuar a validação nas coleções pedido acedidas através de <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, e <xref:System.Web.HttpRequest.QueryString%2A>Propriedades.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.Cookies%2A> </xref:System.Web.HttpRequest> O método ValidateInput define estes sinalizadores, que, aos acessores de get para o <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, ou <xref:System.Web.HttpRequest.QueryString%2A>propriedade são invocados, a entrada de validação é efetuada.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.Cookies%2A> Validação funciona ao verificar todos os dados de entrada em relação a uma lista hard-coded dos dados potencialmente perigosos.       Se a funcionalidade de validação está ativada por diretiva de página ou a configuração, este método é denominado durante a página `ProcessRequest` fase do processamento. O método ValidateInput pode ser chamado pelo seu código se a funcionalidade de validação não está ativada."
  syntax:
    content: public void ValidateInput ();
    parameters: []
  overload: System.Web.HttpRequest.ValidateInput*
  exceptions:
  - type: System.Web.HttpRequestValidationException
    commentId: T:System.Web.HttpRequestValidationException
    description: "Dados potencialmente perigosos foi recebidos do cliente."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.Web.HttpRequestValidationException
  parent: System.Web
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
- uid: System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpRequest(String,String,String)
  nameWithType: HttpRequest.HttpRequest(String,String,String)
  fullName: System.Web.HttpRequest.HttpRequest(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequest.Abort
  parent: System.Web.HttpRequest
  isExternal: false
  name: Abort()
  nameWithType: HttpRequest.Abort()
  fullName: System.Web.HttpRequest.Abort()
- uid: System.Web.HttpRequest.AcceptTypes
  parent: System.Web.HttpRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
  fullName: System.Web.HttpRequest.AcceptTypes
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.AnonymousID
  parent: System.Web.HttpRequest
  isExternal: false
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
  fullName: System.Web.HttpRequest.AnonymousID
- uid: System.Web.HttpRequest.ApplicationPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
  fullName: System.Web.HttpRequest.ApplicationPath
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
  fullName: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
- uid: System.Web.HttpRequest.BinaryRead(System.Int32)
  parent: System.Web.HttpRequest
  isExternal: false
  name: BinaryRead(Int32)
  nameWithType: HttpRequest.BinaryRead(Int32)
  fullName: System.Web.HttpRequest.BinaryRead(Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpRequest.Browser
  parent: System.Web.HttpRequest
  isExternal: false
  name: Browser
  nameWithType: HttpRequest.Browser
  fullName: System.Web.HttpRequest.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.HttpRequest.ClientCertificate
  parent: System.Web.HttpRequest
  isExternal: false
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
  fullName: System.Web.HttpRequest.ClientCertificate
- uid: System.Web.HttpClientCertificate
  parent: System.Web
  isExternal: false
  name: HttpClientCertificate
  nameWithType: HttpClientCertificate
  fullName: System.Web.HttpClientCertificate
- uid: System.Web.HttpRequest.ContentEncoding
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
  fullName: System.Web.HttpRequest.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpRequest.ContentLength
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
  fullName: System.Web.HttpRequest.ContentLength
- uid: System.Web.HttpRequest.ContentType
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: System.Web.HttpRequest.ContentType
- uid: System.Web.HttpRequest.Cookies
  parent: System.Web.HttpRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpRequest.Cookies
  fullName: System.Web.HttpRequest.Cookies
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.Web.HttpRequest.CurrentExecutionFilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
  fullName: System.Web.HttpRequest.CurrentExecutionFilePath
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
  fullName: System.Web.HttpRequest.CurrentExecutionFilePathExtension
- uid: System.Web.HttpRequest.FilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: FilePath
  nameWithType: HttpRequest.FilePath
  fullName: System.Web.HttpRequest.FilePath
- uid: System.Web.HttpRequest.Files
  parent: System.Web.HttpRequest
  isExternal: false
  name: Files
  nameWithType: HttpRequest.Files
  fullName: System.Web.HttpRequest.Files
- uid: System.Web.HttpFileCollection
  parent: System.Web
  isExternal: false
  name: HttpFileCollection
  nameWithType: HttpFileCollection
  fullName: System.Web.HttpFileCollection
- uid: System.Web.HttpRequest.Filter
  parent: System.Web.HttpRequest
  isExternal: false
  name: Filter
  nameWithType: HttpRequest.Filter
  fullName: System.Web.HttpRequest.Filter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpRequest.Form
  parent: System.Web.HttpRequest
  isExternal: false
  name: Form
  nameWithType: HttpRequest.Form
  fullName: System.Web.HttpRequest.Form
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpRequest.GetBufferedInputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferedInputStream()
  nameWithType: HttpRequest.GetBufferedInputStream()
  fullName: System.Web.HttpRequest.GetBufferedInputStream()
- uid: System.Web.HttpRequest.GetBufferlessInputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream()
  nameWithType: HttpRequest.GetBufferlessInputStream()
  fullName: System.Web.HttpRequest.GetBufferlessInputStream()
- uid: System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream(Boolean)
  nameWithType: HttpRequest.GetBufferlessInputStream(Boolean)
  fullName: System.Web.HttpRequest.GetBufferlessInputStream(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpRequest.Headers
  parent: System.Web.HttpRequest
  isExternal: false
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: System.Web.HttpRequest.Headers
- uid: System.Web.HttpRequest.HttpChannelBinding
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
  fullName: System.Web.HttpRequest.HttpChannelBinding
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.Web.HttpRequest.HttpMethod
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
  fullName: System.Web.HttpRequest.HttpMethod
- uid: System.Web.HttpRequest.InputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpRequest.InputStream
  fullName: System.Web.HttpRequest.InputStream
- uid: System.Web.HttpRequest.InsertEntityBody
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody()
  nameWithType: HttpRequest.InsertEntityBody()
  fullName: System.Web.HttpRequest.InsertEntityBody()
- uid: System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
- uid: System.Web.HttpRequest.IsAuthenticated
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
  fullName: System.Web.HttpRequest.IsAuthenticated
- uid: System.Web.HttpRequest.IsLocal
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
  fullName: System.Web.HttpRequest.IsLocal
- uid: System.Web.HttpRequest.IsSecureConnection
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
  fullName: System.Web.HttpRequest.IsSecureConnection
- uid: System.Web.HttpRequest.Item(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: Item(String)
  nameWithType: HttpRequest.Item(String)
  fullName: System.Web.HttpRequest.Item(String)
- uid: System.Web.HttpRequest.LogonUserIdentity
  parent: System.Web.HttpRequest
  isExternal: false
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
  fullName: System.Web.HttpRequest.LogonUserIdentity
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.Web.HttpRequest.MapImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapImageCoordinates(String)
  nameWithType: HttpRequest.MapImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapImageCoordinates(String)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.MapPath(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpRequest.MapPath(String)
  fullName: System.Web.HttpRequest.MapPath(String)
- uid: System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath(String,String,Boolean)
  nameWithType: HttpRequest.MapPath(String,String,Boolean)
  fullName: System.Web.HttpRequest.MapPath(String,String,Boolean)
- uid: System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapRawImageCoordinates(String)
  nameWithType: HttpRequest.MapRawImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapRawImageCoordinates(String)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.Params
  parent: System.Web.HttpRequest
  isExternal: false
  name: Params
  nameWithType: HttpRequest.Params
  fullName: System.Web.HttpRequest.Params
- uid: System.Web.HttpRequest.Path
  parent: System.Web.HttpRequest
  isExternal: false
  name: Path
  nameWithType: HttpRequest.Path
  fullName: System.Web.HttpRequest.Path
- uid: System.Web.HttpRequest.PathInfo
  parent: System.Web.HttpRequest
  isExternal: false
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
  fullName: System.Web.HttpRequest.PathInfo
- uid: System.Web.HttpRequest.PhysicalApplicationPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
  fullName: System.Web.HttpRequest.PhysicalApplicationPath
- uid: System.Web.HttpRequest.PhysicalPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
  fullName: System.Web.HttpRequest.PhysicalPath
- uid: System.Web.HttpRequest.QueryString
  parent: System.Web.HttpRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpRequest.QueryString
  fullName: System.Web.HttpRequest.QueryString
- uid: System.Web.HttpRequest.RawUrl
  parent: System.Web.HttpRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
  fullName: System.Web.HttpRequest.RawUrl
- uid: System.Web.HttpRequest.ReadEntityBodyMode
  parent: System.Web.HttpRequest
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
  fullName: System.Web.HttpRequest.ReadEntityBodyMode
- uid: System.Web.ReadEntityBodyMode
  parent: System.Web
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: ReadEntityBodyMode
  fullName: System.Web.ReadEntityBodyMode
- uid: System.Web.HttpRequest.RequestContext
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
  fullName: System.Web.HttpRequest.RequestContext
- uid: System.Web.Routing.RequestContext
  parent: System.Web.Routing
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.Web.Routing.RequestContext
- uid: System.Web.HttpRequest.RequestType
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestType
  nameWithType: HttpRequest.RequestType
  fullName: System.Web.HttpRequest.RequestType
- uid: System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: SaveAs(String,Boolean)
  nameWithType: HttpRequest.SaveAs(String,Boolean)
  fullName: System.Web.HttpRequest.SaveAs(String,Boolean)
- uid: System.Web.HttpRequest.ServerVariables
  parent: System.Web.HttpRequest
  isExternal: false
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
  fullName: System.Web.HttpRequest.ServerVariables
- uid: System.Web.HttpRequest.TimedOutToken
  parent: System.Web.HttpRequest
  isExternal: false
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
  fullName: System.Web.HttpRequest.TimedOutToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.HttpRequest.TlsTokenBindingInfo
  parent: System.Web.HttpRequest
  isExternal: false
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
  fullName: System.Web.HttpRequest.TlsTokenBindingInfo
- uid: System.Web.ITlsTokenBindingInfo
  parent: System.Web
  isExternal: false
  name: ITlsTokenBindingInfo
  nameWithType: ITlsTokenBindingInfo
  fullName: System.Web.ITlsTokenBindingInfo
- uid: System.Web.HttpRequest.TotalBytes
  parent: System.Web.HttpRequest
  isExternal: false
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
  fullName: System.Web.HttpRequest.TotalBytes
- uid: System.Web.HttpRequest.Unvalidated
  parent: System.Web.HttpRequest
  isExternal: false
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
  fullName: System.Web.HttpRequest.Unvalidated
- uid: System.Web.UnvalidatedRequestValues
  parent: System.Web
  isExternal: false
  name: UnvalidatedRequestValues
  nameWithType: UnvalidatedRequestValues
  fullName: System.Web.UnvalidatedRequestValues
- uid: System.Web.HttpRequest.Url
  parent: System.Web.HttpRequest
  isExternal: false
  name: Url
  nameWithType: HttpRequest.Url
  fullName: System.Web.HttpRequest.Url
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.HttpRequest.UrlReferrer
  parent: System.Web.HttpRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
  fullName: System.Web.HttpRequest.UrlReferrer
- uid: System.Web.HttpRequest.UserAgent
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
  fullName: System.Web.HttpRequest.UserAgent
- uid: System.Web.HttpRequest.UserHostAddress
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
  fullName: System.Web.HttpRequest.UserHostAddress
- uid: System.Web.HttpRequest.UserHostName
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
  fullName: System.Web.HttpRequest.UserHostName
- uid: System.Web.HttpRequest.UserLanguages
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
  fullName: System.Web.HttpRequest.UserLanguages
- uid: System.Web.HttpRequest.ValidateInput
  parent: System.Web.HttpRequest
  isExternal: false
  name: ValidateInput()
  nameWithType: HttpRequest.ValidateInput()
  fullName: System.Web.HttpRequest.ValidateInput()
- uid: System.Web.HttpRequest.#ctor*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest.HttpRequest
- uid: System.Web.HttpRequest.Abort*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Abort
  nameWithType: HttpRequest.Abort
- uid: System.Web.HttpRequest.AcceptTypes*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
- uid: System.Web.HttpRequest.AnonymousID*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
- uid: System.Web.HttpRequest.ApplicationPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
- uid: System.Web.HttpRequest.BinaryRead*
  parent: System.Web.HttpRequest
  isExternal: false
  name: BinaryRead
  nameWithType: HttpRequest.BinaryRead
- uid: System.Web.HttpRequest.Browser*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Browser
  nameWithType: HttpRequest.Browser
- uid: System.Web.HttpRequest.ClientCertificate*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
- uid: System.Web.HttpRequest.ContentEncoding*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
- uid: System.Web.HttpRequest.ContentLength*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
- uid: System.Web.HttpRequest.ContentType*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpRequest.ContentType
- uid: System.Web.HttpRequest.Cookies*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpRequest.Cookies
- uid: System.Web.HttpRequest.CurrentExecutionFilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension*
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
- uid: System.Web.HttpRequest.FilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: FilePath
  nameWithType: HttpRequest.FilePath
- uid: System.Web.HttpRequest.Files*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Files
  nameWithType: HttpRequest.Files
- uid: System.Web.HttpRequest.Filter*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Filter
  nameWithType: HttpRequest.Filter
- uid: System.Web.HttpRequest.Form*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Form
  nameWithType: HttpRequest.Form
- uid: System.Web.HttpRequest.GetBufferedInputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferedInputStream
  nameWithType: HttpRequest.GetBufferedInputStream
- uid: System.Web.HttpRequest.GetBufferlessInputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream
  nameWithType: HttpRequest.GetBufferlessInputStream
- uid: System.Web.HttpRequest.Headers*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Headers
  nameWithType: HttpRequest.Headers
- uid: System.Web.HttpRequest.HttpChannelBinding*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
- uid: System.Web.HttpRequest.HttpMethod*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
- uid: System.Web.HttpRequest.InputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpRequest.InputStream
- uid: System.Web.HttpRequest.InsertEntityBody*
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody
  nameWithType: HttpRequest.InsertEntityBody
- uid: System.Web.HttpRequest.IsAuthenticated*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
- uid: System.Web.HttpRequest.IsLocal*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
- uid: System.Web.HttpRequest.IsSecureConnection*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
- uid: System.Web.HttpRequest.Item*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Item
  nameWithType: HttpRequest.Item
- uid: System.Web.HttpRequest.LogonUserIdentity*
  parent: System.Web.HttpRequest
  isExternal: false
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
- uid: System.Web.HttpRequest.MapImageCoordinates*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapImageCoordinates
  nameWithType: HttpRequest.MapImageCoordinates
- uid: System.Web.HttpRequest.MapPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath
  nameWithType: HttpRequest.MapPath
- uid: System.Web.HttpRequest.MapRawImageCoordinates*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapRawImageCoordinates
  nameWithType: HttpRequest.MapRawImageCoordinates
- uid: System.Web.HttpRequest.Params*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Params
  nameWithType: HttpRequest.Params
- uid: System.Web.HttpRequest.Path*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Path
  nameWithType: HttpRequest.Path
- uid: System.Web.HttpRequest.PathInfo*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
- uid: System.Web.HttpRequest.PhysicalApplicationPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
- uid: System.Web.HttpRequest.PhysicalPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
- uid: System.Web.HttpRequest.QueryString*
  parent: System.Web.HttpRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpRequest.QueryString
- uid: System.Web.HttpRequest.RawUrl*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
- uid: System.Web.HttpRequest.ReadEntityBodyMode*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
- uid: System.Web.HttpRequest.RequestContext*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
- uid: System.Web.HttpRequest.RequestType*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestType
  nameWithType: HttpRequest.RequestType
- uid: System.Web.HttpRequest.SaveAs*
  parent: System.Web.HttpRequest
  isExternal: false
  name: SaveAs
  nameWithType: HttpRequest.SaveAs
- uid: System.Web.HttpRequest.ServerVariables*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
- uid: System.Web.HttpRequest.TimedOutToken*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
- uid: System.Web.HttpRequest.TlsTokenBindingInfo*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
- uid: System.Web.HttpRequest.TotalBytes*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
- uid: System.Web.HttpRequest.Unvalidated*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
- uid: System.Web.HttpRequest.Url*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Url
  nameWithType: HttpRequest.Url
- uid: System.Web.HttpRequest.UrlReferrer*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
- uid: System.Web.HttpRequest.UserAgent*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
- uid: System.Web.HttpRequest.UserHostAddress*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
- uid: System.Web.HttpRequest.UserHostName*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
- uid: System.Web.HttpRequest.UserLanguages*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
- uid: System.Web.HttpRequest.ValidateInput*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ValidateInput
  nameWithType: HttpRequest.ValidateInput
