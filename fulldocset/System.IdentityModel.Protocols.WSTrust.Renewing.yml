### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.Renewing
  id: Renewing
  children:
  - System.IdentityModel.Protocols.WSTrust.Renewing.#ctor
  - System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)
  - System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal
  - System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration
  langs:
  - csharp
  name: Renewing
  nameWithType: Renewing
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing
  type: Class
  summary: "Represents the wst:Renewing element in a WS-Trust renew request."
  remarks: "This optional element indicates to the token issuer that the requested token can be renewed if the Allow attribute is true and that the token can be renewed after it expires if the OK attribute is true. These attributes are represented by the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> and the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> properties respectively.       For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario."
  syntax:
    content: public class Renewing
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  langs:
  - csharp
  name: Renewing()
  nameWithType: Renewing.Renewing()
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.Renewing()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Renewing&quot;></xref><xref href=&quot;System.IdentityModel.Protocols.WSTrust.Renewing&quot;></xref> class with default property values."
  remarks: "The following table shows the initial property values for the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance.      |Property|Value|   |--------------|-----------|   |<xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A>|`true`|   |<xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A>|`false`|"
  syntax:
    content: public Renewing ();
    parameters: []
  overload: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  langs:
  - csharp
  name: Renewing(Boolean,Boolean)
  nameWithType: Renewing.Renewing(Boolean,Boolean)
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.Renewing(Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Renewing&quot;></xref><xref href=&quot;System.IdentityModel.Protocols.WSTrust.Renewing&quot;></xref> class with the specified values."
  remarks: "The properties of the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance are set according to the value of the parameters."
  syntax:
    content: public Renewing (bool allowRenewal, bool okForRenewalAfterExpiration);
    parameters:
    - id: allowRenewal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if renewal is permitted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: okForRenewalAfterExpiration
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the requested token can be renewed after it has expired; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal
  id: AllowRenewal
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  langs:
  - csharp
  name: AllowRenewal
  nameWithType: Renewing.AllowRenewal
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets a value that indicates whether the token can be renewed."
  remarks: "Represents the contents of the Allow attribute. This optional attribute is used to request a renewable token. The default value is `true`."
  syntax:
    content: public bool AllowRenewal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if renewal is permitted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration
  id: OkForRenewalAfterExpiration
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  langs:
  - csharp
  name: OkForRenewalAfterExpiration
  nameWithType: Renewing.OkForRenewalAfterExpiration
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets a value that indicates whether the token can be renewed after it has expired."
  remarks: "Represents the contents of the OK attribute. This optional attribute is used to indicate that a renewable token is acceptable if the requested duration exceeds the limit of the issuance service. That is, if `true`, then the token can be renewed after its expiration. The default value is `false` for security reasons."
  syntax:
    content: public bool OkForRenewalAfterExpiration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the requested token can be renewed after it has expired; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  isExternal: false
  name: Renewing()
  nameWithType: Renewing.Renewing()
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.Renewing()
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  isExternal: false
  name: Renewing(Boolean,Boolean)
  nameWithType: Renewing.Renewing(Boolean,Boolean)
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.Renewing(Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  isExternal: false
  name: AllowRenewal
  nameWithType: Renewing.AllowRenewal
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  isExternal: false
  name: OkForRenewalAfterExpiration
  nameWithType: Renewing.OkForRenewalAfterExpiration
  fullName: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  isExternal: false
  name: Renewing
  nameWithType: Renewing.Renewing
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal*
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  isExternal: false
  name: AllowRenewal
  nameWithType: Renewing.AllowRenewal
- uid: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration*
  parent: System.IdentityModel.Protocols.WSTrust.Renewing
  isExternal: false
  name: OkForRenewalAfterExpiration
  nameWithType: Renewing.OkForRenewalAfterExpiration
