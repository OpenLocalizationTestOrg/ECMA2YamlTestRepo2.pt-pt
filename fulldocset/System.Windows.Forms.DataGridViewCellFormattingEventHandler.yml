### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellFormattingEventHandler
  id: DataGridViewCellFormattingEventHandler
  langs:
  - csharp
  name: DataGridViewCellFormattingEventHandler
  nameWithType: DataGridViewCellFormattingEventHandler
  fullName: System.Windows.Forms.DataGridViewCellFormattingEventHandler
  type: Delegate
  summary: "Represents the method that will handle the <xref href=&quot;System.Windows.Forms.DataGridView.CellFormatting&quot;></xref> event of a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "Handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event to customize the conversion of a cell value into a format suitable for display or to customize the appearance of a cell depending on its state or value.       The <xref:System.Windows.Forms.DataGridView.CellFormatting> event occurs every time each cell is painted, so you should avoid lengthy processing when handling this event. This event also occurs when the cell <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> is retrieved or its <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> method is called.       When you handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> property is initialized with the cell value. If you provide custom conversion from the cell value to the display value, set the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> property to the converted value, ensuring that the new value is of the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> property. To indicate that no further value formatting is necessary, set the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName> property to `true`.       When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is formatted using the <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style returned by the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=fullName> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.       Regardless of the value of the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName> property, the display properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=fullName> property are used to render the cell.       For more information about custom formatting using the <xref:System.Windows.Forms.DataGridView.CellFormatting> event, see [How to: Customize Data Formatting in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       To avoid performance penalties when handling this event, access the cell through the parameters of the event handler rather than accessing the cell directly.       To customize the conversion of a formatted, user-specified value into an actual cell value, handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       When you create a DataGridViewCellFormattingEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_124_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/add/codesnippet/cpp/t-system.windows.forms.d_124_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#1](~/add/codesnippet/csharp/t-system.windows.forms.d_124_1.cs)]"
  syntax:
    content: public delegate void DataGridViewCellFormattingEventHandler(object sender, DataGridViewCellFormattingEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
