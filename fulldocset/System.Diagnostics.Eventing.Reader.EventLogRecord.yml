### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord
  id: EventLogRecord
  children:
  - System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark
  - System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription
  - System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})
  - System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Id
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords
  - System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Level
  - System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName
  - System.Diagnostics.Eventing.Reader.EventLogRecord.LogName
  - System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName
  - System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode
  - System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName
  - System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Properties
  - System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId
  - System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers
  - System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId
  - System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Task
  - System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName
  - System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId
  - System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated
  - System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml
  - System.Diagnostics.Eventing.Reader.EventLogRecord.UserId
  - System.Diagnostics.Eventing.Reader.EventLogRecord.Version
  langs:
  - csharp
  name: EventLogRecord
  nameWithType: EventLogRecord
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord
  type: Class
  summary: "Contém as propriedades de uma instância de eventos para um evento recebidos de um <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> objeto. As propriedades de evento fornecem informações sobre o evento, como o nome do computador onde o evento foi registado e a hora em que o evento foi criado."
  syntax:
    content: 'public class EventLogRecord : System.Diagnostics.Eventing.Reader.EventRecord'
  inheritance:
  - System.Object
  - System.Diagnostics.Eventing.Reader.EventRecord
  implements: []
  inheritedMembers:
  - System.Diagnostics.Eventing.Reader.EventRecord.Dispose
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId
  id: ActivityId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: ActivityId
  nameWithType: EventLogRecord.ActivityId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o identificador exclusivo global (GUID) para a atividade no processo para o qual o evento está envolvido. Isto permite que os consumidores agrupar atividades relacionadas com."
  syntax:
    content: public override Nullable<Guid> ActivityId { get; }
    return:
      type: System.Nullable{System.Guid}
      description: "Devolve um valor GUID."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark
  id: Bookmark
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Bookmark
  nameWithType: EventLogRecord.Bookmark
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém um marcador de posição (marcadores) que corresponde a este evento. Isto pode ser utilizado como um marcador de posição numa transmissão em fluxo de eventos."
  syntax:
    content: public override System.Diagnostics.Eventing.Reader.EventBookmark Bookmark { get; }
    return:
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "Devolve um <xref href=&quot;System.Diagnostics.Eventing.Reader.EventBookmark&quot;> </xref> objeto."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog
  id: ContainerLog
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: ContainerLog
  nameWithType: EventLogRecord.ContainerLog
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nome do registo de eventos ou o ficheiro de registo de eventos no qual o evento é armazenado."
  syntax:
    content: public string ContainerLog { get; }
    return:
      type: System.String
      description: "Devolve uma cadeia que contém o nome do registo de eventos ou o ficheiro de registo de eventos no qual o evento é armazenado."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogRecord.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Liberta os recursos não geridos utilizados por este objeto e, opcionalmente liberta os recursos geridos."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription
  id: FormatDescription
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: FormatDescription()
  nameWithType: EventLogRecord.FormatDescription()
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém a mensagem de evento no idioma atual."
  syntax:
    content: public override string FormatDescription ();
    parameters: []
    return:
      type: System.String
      description: "Devolve uma cadeia que contém a mensagem de evento no idioma atual."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})
  id: FormatDescription(System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: FormatDescription(IEnumerable<Object>)
  nameWithType: EventLogRecord.FormatDescription(IEnumerable<Object>)
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(IEnumerable<Object>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém a mensagem de evento, substituindo variáveis na mensagem com os valores especificados."
  syntax:
    content: public override string FormatDescription (System.Collections.Generic.IEnumerable<object> values);
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "Os valores utilizados para substituir as variáveis na mensagem de evento. As variáveis são representadas por %n, em que n é um número."
    return:
      type: System.String
      description: "Devolve uma cadeia que contém a mensagem de evento no idioma atual."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)
  id: GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: GetPropertyValues(EventLogPropertySelector)
  nameWithType: EventLogRecord.GetPropertyValues(EventLogPropertySelector)
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(EventLogPropertySelector)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém a enumeração dos valores de propriedades de eventos fornecido pelo utilizador ou os resultados de dados com base em XPath se o evento tem representação XML."
  syntax:
    content: public System.Collections.Generic.IList<object> GetPropertyValues (System.Diagnostics.Eventing.Reader.EventLogPropertySelector propertySelector);
    parameters:
    - id: propertySelector
      type: System.Diagnostics.Eventing.Reader.EventLogPropertySelector
      description: "Seleciona os valores de propriedade para devolver."
    return:
      type: System.Collections.Generic.IList{System.Object}
      description: "Devolve uma lista de objetos."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Id
  id: Id
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Id
  nameWithType: EventLogRecord.Id
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Id
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o identificador para este evento. Todos os eventos com o valor deste identificador representam o mesmo tipo de evento."
  syntax:
    content: public override int Id { get; }
    return:
      type: System.Int32
      description: "Devolve um valor de número inteiro. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords
  id: Keywords
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Keywords
  nameWithType: EventLogRecord.Keywords
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém a máscara de palavra-chave do evento. Obter o valor do <xref:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames*>propriedade obter o nome de palavras-chave utilizados nesta máscara.</xref:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames*>"
  remarks: "As palavras-chave para um evento são utilizadas para agrupar os eventos com outros eventos semelhantes com base na utilização dos eventos. Cada palavra-chave um pouco está a ser uma máscara de 64 bits. Valores predefinidos bits e bits reservados ocupam as posições de topo 16 desta máscara, mantendo o manifesto para utilizar qualquer bits entre 0x0000000000000001 e 0x0000800000000000.       As palavras-chave de eventos standard estão definidas no <xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords>"
  syntax:
    content: public override Nullable<long> Keywords { get; }
    return:
      type: System.Nullable{System.Int64}
      description: "Devolve um valor extenso. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames
  id: KeywordsDisplayNames
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: KeywordsDisplayNames
  nameWithType: EventLogRecord.KeywordsDisplayNames
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém os nomes a apresentar de palavras-chave utilizadas na máscara de palavra-chave para este evento."
  remarks: "As palavras-chave de eventos standard estão definidas no <xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords>"
  syntax:
    content: public override System.Collections.Generic.IEnumerable<string> KeywordsDisplayNames { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Devolve uma coleção enumeráveis de cadeias que contêm os nomes a apresentar de palavras-chave utilizadas na máscara de palavra-chave para este evento."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Level
  id: Level
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Level
  nameWithType: EventLogRecord.Level
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Level
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nível do evento. O nível significa a gravidade do evento. Para o nome do nível, obter o valor do <xref:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName*>propriedade.</xref:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName*>"
  remarks: "Os níveis de eventos standard estão definidos no <xref:System.Diagnostics.Eventing.Reader.StandardEventLevel>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventLevel>"
  syntax:
    content: public override Nullable<byte> Level { get; }
    return:
      type: System.Nullable{System.Byte}
      description: "Devolve um valor de bytes. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName
  id: LevelDisplayName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: LevelDisplayName
  nameWithType: EventLogRecord.LevelDisplayName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nome a apresentar do nível de para este evento."
  remarks: "Os níveis de eventos standard estão definidos no <xref:System.Diagnostics.Eventing.Reader.StandardEventLevel>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventLevel>"
  syntax:
    content: public override string LevelDisplayName { get; }
    return:
      type: System.String
      description: "Devolve uma cadeia que contém o nome a apresentar do nível de para este evento."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.LogName
  id: LogName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: LogName
  nameWithType: EventLogRecord.LogName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.LogName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nome do registo de eventos em que este evento é registado."
  syntax:
    content: public override string LogName { get; }
    return:
      type: System.String
      description: "Devolve uma cadeia que contém um nome do registo de eventos que contém este evento."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.LogName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName
  id: MachineName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: MachineName
  nameWithType: EventLogRecord.MachineName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nome do computador no qual este evento foi registado."
  syntax:
    content: public override string MachineName { get; }
    return:
      type: System.String
      description: "Devolve uma cadeia que contém o nome do computador no qual este evento foi registado."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds
  id: MatchedQueryIds
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: MatchedQueryIds
  nameWithType: EventLogRecord.MatchedQueryIds
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém uma lista dos identificadores de consulta que corresponda a este evento. Este evento corresponder a uma consulta se a consulta deverá devolver este evento."
  syntax:
    content: public System.Collections.Generic.IEnumerable<int> MatchedQueryIds { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: "Devolve uma coleção enumeráveis de valores inteiros."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode
  id: Opcode
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Opcode
  nameWithType: EventLogRecord.Opcode
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o opcode do evento. O opcode define um valor numérico que identifica a atividade ou um ponto dentro de uma atividade que a aplicação aquando da gerado-o evento. Para o nome do opcode, obter o valor do <xref:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName*>propriedade.</xref:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName*>"
  remarks: "Os opcodes de eventos standard estão definidos no <xref:System.Diagnostics.Eventing.Reader.StandardEventOpcode>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventOpcode>"
  syntax:
    content: public override Nullable<short> Opcode { get; }
    return:
      type: System.Nullable{System.Int16}
      description: "Devolve um valor curto. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName
  id: OpcodeDisplayName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: OpcodeDisplayName
  nameWithType: EventLogRecord.OpcodeDisplayName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nome a apresentar o opcode para este evento."
  remarks: "Os opcodes de eventos standard estão definidos no <xref:System.Diagnostics.Eventing.Reader.StandardEventOpcode>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventOpcode>"
  syntax:
    content: public override string OpcodeDisplayName { get; }
    return:
      type: System.String
      description: "Devolve uma cadeia que contém o nome a apresentar do opcode para este evento."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId
  id: ProcessId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: ProcessId
  nameWithType: EventLogRecord.ProcessId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o identificador de processo para o fornecedor de eventos que registou este evento."
  syntax:
    content: public override Nullable<int> ProcessId { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "Devolve um valor de número inteiro. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Properties
  id: Properties
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Properties
  nameWithType: EventLogRecord.Properties
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Properties
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém as propriedades do evento fornecido pelo utilizador."
  syntax:
    content: public override System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventProperty> Properties { get; }
    return:
      type: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventProperty}
      description: "Devolve uma lista de <xref href=&quot;System.Diagnostics.Eventing.Reader.EventProperty&quot;> </xref> objetos."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId
  id: ProviderId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: ProviderId
  nameWithType: EventLogRecord.ProviderId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o identificador exclusivo global (GUID) do fornecedor de eventos publicados este evento."
  syntax:
    content: public override Nullable<Guid> ProviderId { get; }
    return:
      type: System.Nullable{System.Guid}
      description: "Devolve um valor GUID. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName
  id: ProviderName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: ProviderName
  nameWithType: EventLogRecord.ProviderName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nome do fornecedor de eventos publicados este evento."
  syntax:
    content: public override string ProviderName { get; }
    return:
      type: System.String
      description: "Devolve uma cadeia que contém o nome do fornecedor de eventos publicados este evento."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers
  id: Qualifiers
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Qualifiers
  nameWithType: EventLogRecord.Qualifiers
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém os números de qualificador que são utilizados para fins de identificação de evento."
  syntax:
    content: public override Nullable<int> Qualifiers { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "Devolve um valor de número inteiro. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId
  id: RecordId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: RecordId
  nameWithType: EventLogRecord.RecordId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o identificador de registo de eventos do evento no registo."
  syntax:
    content: public override Nullable<long> RecordId { get; }
    return:
      type: System.Nullable{System.Int64}
      description: "Devolve um valor extenso. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId
  id: RelatedActivityId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: RelatedActivityId
  nameWithType: EventLogRecord.RelatedActivityId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém um identificador exclusivo global (GUID) para uma atividade relacionada num processo para o qual um evento está envolvido."
  remarks: "Um fornecedor de eventos pode definir o valor do atributo ActivityID antes de publicar eventos. Todos os eventos que são publicados após este ID é definido irão ter o atributo de ActivityID definido para o valor especificado. Isto permite que os fornecedores especificar simples relações entre os eventos. Os eventos que são publicados fazem parte da mesma atividade. Quando um fornecedor tem de iniciar uma atividade de novo, mas relacionada, o fabricante pode publicar um evento de transferência e especifique o novo ID de atividade. Este novo ID de erro será apresentada como um atributo RelatedActivityID. Isto permite que os consumidores agrupar atividades relacionadas com."
  syntax:
    content: public override Nullable<Guid> RelatedActivityId { get; }
    return:
      type: System.Nullable{System.Guid}
      description: "Devolve um valor GUID. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Task
  id: Task
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Task
  nameWithType: EventLogRecord.Task
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Task
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém um identificador de tarefas para uma parte de uma aplicação ou um componente que publica um evento. Uma tarefa é um valor de 16 bits com 16 valores superiores reservado. Este tipo permite que qualquer valor entre 0x0000 e 0xffef a ser utilizado. Para o nome da tarefa, obter o valor do <xref:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName*>propriedade.</xref:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName*>"
  remarks: "As tarefas de eventos standard estão definidas no <xref:System.Diagnostics.Eventing.Reader.StandardEventTask>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventTask>"
  syntax:
    content: public override Nullable<int> Task { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "Devolve um valor de número inteiro. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Task*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName
  id: TaskDisplayName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: TaskDisplayName
  nameWithType: EventLogRecord.TaskDisplayName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o nome a apresentar da tarefa para o evento."
  remarks: "As tarefas de eventos standard estão definidas no <xref:System.Diagnostics.Eventing.Reader.StandardEventTask>enumeração.</xref:System.Diagnostics.Eventing.Reader.StandardEventTask>"
  syntax:
    content: public override string TaskDisplayName { get; }
    return:
      type: System.String
      description: "Devolve uma cadeia que contém o nome a apresentar da tarefa para o evento."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId
  id: ThreadId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: ThreadId
  nameWithType: EventLogRecord.ThreadId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o identificador de thread para o thread que o fornecedor de eventos está em execução no."
  syntax:
    content: public override Nullable<int> ThreadId { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "Devolve um valor de número inteiro. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated
  id: TimeCreated
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: TimeCreated
  nameWithType: EventLogRecord.TimeCreated
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o tempo, em <xref:System.DateTime>Formatar, se o evento foi criado.</xref:System.DateTime>"
  syntax:
    content: public override Nullable<DateTime> TimeCreated { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Devolve um <xref:System.DateTime>valor.</xref:System.DateTime> O valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml
  id: ToXml
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: ToXml()
  nameWithType: EventLogRecord.ToXml()
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém a representação XML do evento. Todas as propriedades de evento são representadas no XML do evento. O XML está em conformidade com a [esquema de eventos](http://go.microsoft.com/fwlink/?LinkId=81771)."
  syntax:
    content: public override string ToXml ();
    parameters: []
    return:
      type: System.String
      description: "Devolve uma cadeia que contém a representação XML do evento."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.UserId
  id: UserId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: UserId
  nameWithType: EventLogRecord.UserId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.UserId
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o descritor de segurança do utilizador cujo contexto é utilizado para publicar o evento."
  syntax:
    content: public override System.Security.Principal.SecurityIdentifier UserId { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "Devolve um <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> valor."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.UserId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Version
  id: Version
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  langs:
  - csharp
  name: Version
  nameWithType: EventLogRecord.Version
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Version
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Obtém o número de versão para o evento."
  syntax:
    content: public override Nullable<byte> Version { get; }
    return:
      type: System.Nullable{System.Byte}
      description: "Devolve um valor de bytes. Este valor pode ser nulo."
  overload: System.Diagnostics.Eventing.Reader.EventLogRecord.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Eventing.Reader.EventRecord
  isExternal: false
  name: System.Diagnostics.Eventing.Reader.EventRecord
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ActivityId
  nameWithType: EventLogRecord.ActivityId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId
- uid: System.Nullable{System.Guid}
  parent: System
  isExternal: true
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Guid>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Bookmark
  nameWithType: EventLogRecord.Bookmark
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark
- uid: System.Diagnostics.Eventing.Reader.EventBookmark
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventBookmark
  nameWithType: EventBookmark
  fullName: System.Diagnostics.Eventing.Reader.EventBookmark
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ContainerLog
  nameWithType: EventLogRecord.ContainerLog
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogRecord.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: FormatDescription()
  nameWithType: EventLogRecord.FormatDescription()
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription()
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: FormatDescription(IEnumerable<Object>)
  nameWithType: EventLogRecord.FormatDescription(IEnumerable<Object>)
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(IEnumerable<Object>)
- uid: System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: GetPropertyValues(EventLogPropertySelector)
  nameWithType: EventLogRecord.GetPropertyValues(EventLogPropertySelector)
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(EventLogPropertySelector)
- uid: System.Collections.Generic.IList{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Object>
  nameWithType: IList<Object>
  fullName: System.Collections.Generic.IList<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogPropertySelector
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogPropertySelector
  nameWithType: EventLogPropertySelector
  fullName: System.Diagnostics.Eventing.Reader.EventLogPropertySelector
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Id
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Id
  nameWithType: EventLogRecord.Id
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Id
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Keywords
  nameWithType: EventLogRecord.Keywords
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords
- uid: System.Nullable{System.Int64}
  parent: System
  isExternal: true
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int64>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: KeywordsDisplayNames
  nameWithType: EventLogRecord.KeywordsDisplayNames
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Level
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Level
  nameWithType: EventLogRecord.Level
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Level
- uid: System.Nullable{System.Byte}
  parent: System
  isExternal: true
  name: Nullable<Byte>
  nameWithType: Nullable<Byte>
  fullName: System.Nullable<System.Byte>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: LevelDisplayName
  nameWithType: EventLogRecord.LevelDisplayName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.LogName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: LogName
  nameWithType: EventLogRecord.LogName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.LogName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: MachineName
  nameWithType: EventLogRecord.MachineName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: MatchedQueryIds
  nameWithType: EventLogRecord.MatchedQueryIds
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Opcode
  nameWithType: EventLogRecord.Opcode
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode
- uid: System.Nullable{System.Int16}
  parent: System
  isExternal: true
  name: Nullable<Int16>
  nameWithType: Nullable<Int16>
  fullName: System.Nullable<System.Int16>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int16>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: Int16
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: OpcodeDisplayName
  nameWithType: EventLogRecord.OpcodeDisplayName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ProcessId
  nameWithType: EventLogRecord.ProcessId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Properties
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Properties
  nameWithType: EventLogRecord.Properties
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Properties
- uid: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventProperty}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<EventProperty>
  nameWithType: IList<EventProperty>
  fullName: System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventProperty>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Diagnostics.Eventing.Reader.EventProperty>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Eventing.Reader.EventProperty
    name: EventProperty
    nameWithType: EventProperty
    fullName: EventProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ProviderId
  nameWithType: EventLogRecord.ProviderId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ProviderName
  nameWithType: EventLogRecord.ProviderName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Qualifiers
  nameWithType: EventLogRecord.Qualifiers
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: RecordId
  nameWithType: EventLogRecord.RecordId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: RelatedActivityId
  nameWithType: EventLogRecord.RelatedActivityId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Task
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Task
  nameWithType: EventLogRecord.Task
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Task
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: TaskDisplayName
  nameWithType: EventLogRecord.TaskDisplayName
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ThreadId
  nameWithType: EventLogRecord.ThreadId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: TimeCreated
  nameWithType: EventLogRecord.TimeCreated
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ToXml()
  nameWithType: EventLogRecord.ToXml()
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml()
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.UserId
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: UserId
  nameWithType: EventLogRecord.UserId
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.UserId
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Version
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Version
  nameWithType: EventLogRecord.Version
  fullName: System.Diagnostics.Eventing.Reader.EventLogRecord.Version
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ActivityId
  nameWithType: EventLogRecord.ActivityId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Bookmark
  nameWithType: EventLogRecord.Bookmark
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ContainerLog
  nameWithType: EventLogRecord.ContainerLog
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Dispose
  nameWithType: EventLogRecord.Dispose
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: FormatDescription
  nameWithType: EventLogRecord.FormatDescription
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: GetPropertyValues
  nameWithType: EventLogRecord.GetPropertyValues
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Id*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Id
  nameWithType: EventLogRecord.Id
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Keywords
  nameWithType: EventLogRecord.Keywords
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: KeywordsDisplayNames
  nameWithType: EventLogRecord.KeywordsDisplayNames
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Level*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Level
  nameWithType: EventLogRecord.Level
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: LevelDisplayName
  nameWithType: EventLogRecord.LevelDisplayName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.LogName*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: LogName
  nameWithType: EventLogRecord.LogName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: MachineName
  nameWithType: EventLogRecord.MachineName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: MatchedQueryIds
  nameWithType: EventLogRecord.MatchedQueryIds
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Opcode
  nameWithType: EventLogRecord.Opcode
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: OpcodeDisplayName
  nameWithType: EventLogRecord.OpcodeDisplayName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ProcessId
  nameWithType: EventLogRecord.ProcessId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Properties*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Properties
  nameWithType: EventLogRecord.Properties
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ProviderId
  nameWithType: EventLogRecord.ProviderId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ProviderName
  nameWithType: EventLogRecord.ProviderName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Qualifiers
  nameWithType: EventLogRecord.Qualifiers
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: RecordId
  nameWithType: EventLogRecord.RecordId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: RelatedActivityId
  nameWithType: EventLogRecord.RelatedActivityId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Task*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Task
  nameWithType: EventLogRecord.Task
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: TaskDisplayName
  nameWithType: EventLogRecord.TaskDisplayName
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ThreadId
  nameWithType: EventLogRecord.ThreadId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: TimeCreated
  nameWithType: EventLogRecord.TimeCreated
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: ToXml
  nameWithType: EventLogRecord.ToXml
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.UserId*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: UserId
  nameWithType: EventLogRecord.UserId
- uid: System.Diagnostics.Eventing.Reader.EventLogRecord.Version*
  parent: System.Diagnostics.Eventing.Reader.EventLogRecord
  isExternal: false
  name: Version
  nameWithType: EventLogRecord.Version
