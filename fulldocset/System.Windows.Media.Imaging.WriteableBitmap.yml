### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Imaging.WriteableBitmap
  id: WriteableBitmap
  children:
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  - System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  - System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  - System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  - System.Windows.Media.Imaging.WriteableBitmap.Clone
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  - System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  - System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.Lock
  - System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  - System.Windows.Media.Imaging.WriteableBitmap.Unlock
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
  type: Class
  summary: "Fornece um <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> que podem ser escritos e atualizado."
  remarks: "Utilize a classe de WriteableBitmap para atualizar e compor um mapa de bits numa base por moldura. Isto é útil para gerar o conteúdo usam, tal como uma imagem de fractal e para visualização de dados, tais como um Visualizador de música.       A classe de WriteableBitmap utiliza dois memórias intermédias. O *memória intermédia de back-* é atribuído na memória de sistema e acumula conteúdo que não é atualmente apresentado. O *memória intermédia de front-* é atribuído na memória de sistema e contém o conteúdo que está atualmente apresentado. O sistema de composição copia a memória intermédia de front-a memória de vídeo para apresentação.       Dois threads utilizam estes memórias intermédias. O *thread de interface (IU) do utilizador* gera a IU, mas não a apresentar para o ecrã. O thread de IU responde a intervenção do utilizador, os temporizadores e outros eventos. Uma aplicação pode ter vários threads de IU. O *thread de composição* composes e apresenta-alteração a partir do thread da IU. Não há compor apenas um thread por aplicação.       O thread de IU escreve o conteúdo da memória intermédia de back. O thread de composição lê conteúdo da memória intermédia front e copia-o para a memória de vídeo. As alterações na memória intermédia de back-são registadas com regiões retangular foi alteradas.       Chamar uma do <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>sobrecargas para atualizar e apresentar conteúdo na memória intermédia de back-automaticamente.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>       Para maior controlo sobre atualizações e para o acesso de vários threads na memória intermédia de back-, utilize o seguinte fluxo de trabalho.      1.  Chamar o <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>método para a memória intermédia back para atualizações de reserva.</xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      2.  Obter um ponteiro para a memória intermédia de back-acedendo a <xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A>propriedade.</xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A>      3.  Escreva alterações para a memória intermédia back. Outros threads podem escrever alterações para a memória intermédia de back-quando o WriteableBitmap está bloqueado.      4.  Chamar o <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>método para indicar áreas que tenham sido alterados.</xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>      5.  Chamar o <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>método para a memória intermédia de fundo da versão e permitir a apresentação para o ecrã.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>       Quando as atualizações são enviadas para o thread de composição, o thread de composição copia os retângulos alterados da memória intermédia de back-na memória intermédia de front. O sistema de composição controla este exchange para evitar a impasses e redesenhar artefactos, tais como &quot;, é necessário remover&quot;."
  example:
  - "The following example demonstrates how a WriteableBitmap can be used as the source of an <xref:System.Windows.Controls.Image> to draw pixels when the mouse moves.  \n  \n [!code-cs[WriteableBitmap2#WriteableBitmapFullPage](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#writeablebitmapfullpage)]"
  syntax:
    content: 'public sealed class WriteableBitmap : System.Windows.Media.Imaging.BitmapSource'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.ImageSource
  - System.Windows.Media.Imaging.BitmapSource
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.ImageSource.PixelsToDIPs(System.Double,System.Int32)
  - System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.ImageSource.ToString
  - System.Windows.Media.ImageSource.ToString(System.IFormatProvider)
  - System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  - System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  - System.Windows.Media.Imaging.BitmapSource.DpiX
  - System.Windows.Media.Imaging.BitmapSource.DpiY
  - System.Windows.Media.Imaging.BitmapSource.Format
  - System.Windows.Media.Imaging.BitmapSource.Height
  - System.Windows.Media.Imaging.BitmapSource.IsDownloading
  - System.Windows.Media.Imaging.BitmapSource.Metadata
  - System.Windows.Media.Imaging.BitmapSource.Palette
  - System.Windows.Media.Imaging.BitmapSource.PixelHeight
  - System.Windows.Media.Imaging.BitmapSource.PixelWidth
  - System.Windows.Media.Imaging.BitmapSource.Width
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  id: '#ctor(System.Windows.Media.Imaging.BitmapSource)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WriteableBitmap(BitmapSource)
  nameWithType: WriteableBitmap.WriteableBitmap(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(BitmapSource)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> classe com o fornecido <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref>."
  remarks: "O <xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29>construtor é preferencial relativamente à utilização este construtor.</xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29>       Se `source` não utiliza um formato de mapa de bits nativamente suportados, o formato conversões são aplicadas para cada atualização de moldura, o que reduz o desempenho."
  syntax:
    content: public WriteableBitmap (System.Windows.Media.Imaging.BitmapSource source);
    parameters:
    - id: source
      type: System.Windows.Media.Imaging.BitmapSource
      description: "O <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> a utilizar para a inicialização."
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  id: '#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  nameWithType: WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> classe com os parâmetros especificados."
  remarks: "Os valores preferenciais para `pixelFormat` são <xref:System.Windows.Media.PixelFormats.Bgr32%2A>e <xref:System.Windows.Media.PixelFormats.Pbgra32%2A>.</xref:System.Windows.Media.PixelFormats.Pbgra32%2A> </xref:System.Windows.Media.PixelFormats.Bgr32%2A> Estes formatos são suportados nativamente e não necessitam de uma conversão de formato. Outros `pixelFormat` valores necessitam de uma conversão de formato para cada atualização de moldura, o que reduz o desempenho."
  syntax:
    content: public WriteableBitmap (int pixelWidth, int pixelHeight, double dpiX, double dpiY, System.Windows.Media.PixelFormat pixelFormat, System.Windows.Media.Imaging.BitmapPalette palette);
    parameters:
    - id: pixelWidth
      type: System.Int32
      description: "A largura pretendida do mapa de bits."
    - id: pixelHeight
      type: System.Int32
      description: "A altura pretendida do mapa de bits."
    - id: dpiX
      type: System.Double
      description: "O horizontal [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] do mapa de bits."
    - id: dpiY
      type: System.Double
      description: "Vertical [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] do mapa de bits."
    - id: pixelFormat
      type: System.Windows.Media.PixelFormat
      description: "O <xref href=&quot;System.Windows.Media.PixelFormat&quot;> </xref> do mapa de bits."
    - id: palette
      type: System.Windows.Media.Imaging.BitmapPalette
      description: "O <xref href=&quot;System.Windows.Media.Imaging.BitmapPalette&quot;> </xref> do mapa de bits."
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  id: AddDirtyRect(System.Windows.Int32Rect)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: AddDirtyRect(Int32Rect)
  nameWithType: WriteableBitmap.AddDirtyRect(Int32Rect)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(Int32Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Especifica a área do mapa de bits que foram alterados."
  remarks: "Chame o método AddDirtyRect para indicar as alterações de código tem a memória intermédia de back.       Quando chamar este método várias vezes, são acumuladas áreas de alteração numa representação suficiente, mas não necessariamente mínima. Para uma eficiência, a ser copiado reencaminhar para a memória intermédia de front-garantidas apenas as áreas que estão marcadas como desatualizados. No entanto, qualquer parte do mapa de bits pode ser copiado, pelo que tem de garantir que o back-a memória intermédia completa sempre é válida.       Chamar o método AddDirtyRect apenas entre chamadas para o <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>métodos, conforme descrito no <xref:System.Windows.Media.Imaging.WriteableBitmap>classe observações.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>"
  example:
  - "The following code example shows how to specify the area of the back buffer that changed by using the AddDirtyRect method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);
    parameters:
    - id: dirtyRect
      type: System.Windows.Int32Rect
      description: "Um <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> que representa a área que foram alterados. As dimensões são em pixéis."
  overload: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O mapa de bits não tiver sido bloqueado por uma chamada para o <> </> *> ou <> </> *> métodos."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>dirtyRect</code>está fora dos limites do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  id: BackBuffer
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Obtém um ponteiro para a memória intermédia back."
  remarks: "A memória intermédia de back-contém o conteúdo do mapa de bits no formato de pixel pedidas pelo utilizador.       Atualizar a memória intermédia de back-apenas entre chamadas para o <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>métodos.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A> Se não siga o fluxo de trabalho de bloquear/desbloquear descrito a <xref:System.Windows.Media.Imaging.WriteableBitmap>observações de classe, indefinidos comportamentos, como, é necessário remover, podem ocorrer.</xref:System.Windows.Media.Imaging.WriteableBitmap>       Não alterar o endereço da memória intermédia anterior.      ## Thread segurança pode passar o ponteiro BackBuffer para componentes externos e outros threads de processamento, mas se o fizer, é necessário fornecer coordenação de thread próprio. Em particular, tem de garantir que o thread de IU Especifica áreas alteradas ao chamar o <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>método e que o thread de IU desbloqueia a memória intermédia ao chamar o <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>método.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>"
  syntax:
    content: public IntPtr BackBuffer { get; }
    return:
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que aponta para o endereço base da memória intermédia back.</xref:System.IntPtr>"
  overload: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  id: BackBufferStride
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Obtém um valor que indica o número de bytes de uma única linha de dados de pixel."
  syntax:
    content: public int BackBufferStride { get; }
    return:
      type: System.Int32
      description: "Um número inteiro que indica o número de bytes de uma única linha de dados de pixel."
  overload: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone
  id: Clone
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Clone()
  nameWithType: WriteableBitmap.Clone()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>, efetuar cópias profundas de valores deste objeto. Quando copiar propriedades de dependência, este método copia enlaces de referências e os dados de recursos (mas já não poderão resolver), mas não animações ou os respetivos valores atuais."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada por uma implementação com tipo seguro.       Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Imaging.WriteableBitmap Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.WriteableBitmap
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Imaging.WriteableBitmap.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: WriteableBitmap.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "A adicionar."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: WriteableBitmap.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.Animation.ByteAnimationUsingKeyFrames&quot;> </xref> objeto, tornando profundas cópias dos valores atuais deste objeto. As referências de recurso, enlaces de dados e animações não são copiadas, mas são os seus valores atuais."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada por uma implementação com tipo seguro.       Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Imaging.WriteableBitmap CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.WriteableBitmap
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: WriteableBitmap.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "A adicionar."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: WriteableBitmap.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "A adicionar."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: WriteableBitmap.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "A adicionar."
  overload: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "A adicionar."
  overload: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock
  id: Lock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Lock()
  nameWithType: WriteableBitmap.Lock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Lock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Reserva-se a memória intermédia back para atualizações."
  remarks: "O método Lock incrementa a contagem de bloqueio. Quando um <xref:System.Windows.Media.Imaging.WriteableBitmap>está bloqueado, o sistema de composição não enviar atualizações até o <xref:System.Windows.Media.Imaging.WriteableBitmap>totalmente está desbloqueado por chamadas para o <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>método.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap>       Pode utilizar o método Lock para suportar implementações de vários threads. Nestes cenários, o thread de IU bloqueia o mapa de bits e expõe a memória intermédia back para outros threads. Quando o thread de trabalho foi concluído um intervalo, o thread de IU adiciona retângulos alterados e desbloqueia a memória intermédia.       O thread de IU pode bloquear quando o thread de composição adquire um bloqueio na memória intermédia back copia reencaminhar na memória intermédia de front. Se a latência deste bloco é demasiado longa, utilize o <xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A>método para aguardar por um curto período de tempo e, em seguida, desbloquear o thread de IU para efetuar outras tarefas enquanto a memória intermédia de back-está bloqueada.</xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A>"
  example:
  - "The following code example shows how to reserve the back buffer by using the Lock method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void Lock ();
    parameters: []
  overload: System.Windows.Media.Imaging.WriteableBitmap.Lock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  id: TryLock(System.Windows.Duration)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: TryLock(Duration)
  nameWithType: WriteableBitmap.TryLock(Duration)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.TryLock(Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "As tentativas para bloquear o mapa de bits, aguardar já não é que o período de tempo especificado."
  remarks: "Quando um bloqueio é obtido, o comportamento do método TryLock é igual a <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>método.</xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>"
  syntax:
    content: public bool TryLock (System.Windows.Duration timeout);
    parameters:
    - id: timeout
      type: System.Windows.Duration
      description: "A <xref href=&quot;System.Windows.Duration&quot;> </xref> que representa o período de tempo de espera. Um valor de 0 devolve imediatamente. Um valor de <xref:System.Windows.Duration.Forever*>Bloquear indefinidamente.</xref:System.Windows.Duration.Forever*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o bloqueio foi adquirido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Imaging.WriteableBitmap.TryLock*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>está definido como <xref:System.Windows.Duration.Automatic*>."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock
  id: Unlock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Unlock()
  nameWithType: WriteableBitmap.Unlock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Unlock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Versões a memória intermédia back para disponibilizá-lo para apresentação."
  remarks: "A é decrementada método de desbloqueio do bloqueio de contagem. Quando a contagem de bloqueio atinge 0, uma passagem de composição é pedida se o <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>método foi chamado.</xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>"
  example:
  - "The following code example shows how to release the back buffer by using the Unlock method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void Unlock ();
    parameters: []
  overload: System.Windows.Media.Imaging.WriteableBitmap.Unlock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O mapa de bits não tiver sido bloqueado por uma chamada para o <> </> *> ou <> </> *> métodos."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,Array,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Atualiza os pixels na região especificada do mapa de bits."
  remarks: "O <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>e <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>sobrecargas são preferenciais relativamente à utilização deste método.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>      > [!NOTE] > Em confiança parcial, utilize o <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>de sobrecarga.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  example:
  - "The following code example shows how to update a pixel in the back buffer by using the WritePixels method.  \n  \n [!code-cs[WriteableBitmap2#3](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#3)]"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, Array pixels, int stride, int offset);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "O retângulo do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> para atualizar."
    - id: pixels
      type: System.Array
      description: "A matriz de pixel utilizada para atualizar o mapa de bits."
    - id: stride
      type: System.Int32
      description: "Stride da região de atualização no `pixels`."
    - id: offset
      type: System.Int32
      description: "O desvio da memória intermédia de entrada."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais das seguintes condições são VERDADEIRO.       <code>sourceRect</code>está fora dos limites do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>stride</code> &lt; 1       <code>offset</code> &lt; 0"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pixels</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pixels</code>tem uma classificação diferente de 1 ou 2, ou o comprimento é inferior ou igual a 0."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Atualiza os pixels na região especificada do mapa de bits."
  remarks: "O <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>e <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>sobrecargas são preferenciais relativamente à utilização deste método.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>      > [!NOTE] > Em confiança parcial, utilize o <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>de sobrecarga.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, IntPtr buffer, int bufferSize, int stride);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "O retângulo do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> para atualizar."
    - id: buffer
      type: System.IntPtr
      description: "A memória intermédia de entrada utilizada para atualizar o mapa de bits."
    - id: bufferSize
      type: System.Int32
      description: "O tamanho da memória intermédia de entrada."
    - id: stride
      type: System.Int32
      description: "Stride da região de atualização no `buffer`."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais das seguintes condições são VERDADEIRO.       <code>sourceRect</code>está fora dos limites do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>bufferSize</code> &lt; 1       <code>stride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Atualiza os pixels na região especificada do mapa de bits."
  remarks: "Chamar o <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>método para atualizar o <xref:System.Windows.Media.Imaging.WriteableBitmap>automaticamente com o conteúdo do `sourceBuffer`.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A> Chamar este método é o equivalente a utilizar o <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>fluxo de trabalho descrito a <xref:System.Windows.Media.Imaging.WriteableBitmap>classe observações.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      > [!NOTE] > Utilizar esta sobrecarga em confiança parcial."
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, Array sourceBuffer, int sourceBufferStride, int destinationX, int destinationY);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "O retângulo em `sourceBuffer` para copiar."
    - id: sourceBuffer
      type: System.Array
      description: "A memória intermédia de entrada utilizada para atualizar o mapa de bits."
    - id: sourceBufferStride
      type: System.Int32
      description: "Stride da memória intermédia, em bytes."
    - id: destinationX
      type: System.Int32
      description: "O destino-coordenada x do pixel mais à esquerda na memória intermédia de fundo."
    - id: destinationY
      type: System.Int32
      description: "O destino-coordenada y do pixel mais alto na memória intermédia de fundo."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais das seguintes condições são VERDADEIRO.       <code>sourceRect</code>está fora dos limites do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>destinationX</code>ou <code> destinationY </code> está fora dos limites do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>sourceBufferStride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceBuffer</code>tem uma classificação diferente de 1 ou 2, ou o comprimento é inferior ou igual a 0."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Atualiza os pixels na região especificada do mapa de bits."
  remarks: "Chamar o método WritePixels para atualizar o <xref:System.Windows.Media.Imaging.WriteableBitmap>automaticamente com o conteúdo do `sourceBuffer`.</xref:System.Windows.Media.Imaging.WriteableBitmap> Chamar este método é o equivalente a utilizar o <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>fluxo de trabalho descrito a <xref:System.Windows.Media.Imaging.WriteableBitmap>classe observações.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      > [!NOTE] > Em confiança parcial, utilize o <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>de sobrecarga.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, IntPtr sourceBuffer, int sourceBufferSize, int sourceBufferStride, int destinationX, int destinationY);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "O retângulo em `sourceBuffer` para copiar."
    - id: sourceBuffer
      type: System.IntPtr
      description: "A memória intermédia de entrada utilizada para atualizar o mapa de bits."
    - id: sourceBufferSize
      type: System.Int32
      description: "O tamanho da memória intermédia de entrada."
    - id: sourceBufferStride
      type: System.Int32
      description: "Stride da memória intermédia, em bytes."
    - id: destinationX
      type: System.Int32
      description: "O destino-coordenada x do pixel mais à esquerda na memória intermédia de fundo."
    - id: destinationY
      type: System.Int32
      description: "O destino-coordenada y do pixel mais alto na memória intermédia de fundo."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais das seguintes condições são VERDADEIRO.       <code>sourceRect</code>está fora dos limites do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>destinationX</code>ou <code> destinationY </code> está fora dos limites do <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>sourceBufferSize</code> &lt; 1       <code>sourceBufferStride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: System.Windows.Media.Imaging.BitmapSource
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap(BitmapSource)
  nameWithType: WriteableBitmap.WriteableBitmap(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(BitmapSource)
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  nameWithType: WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.PixelFormat
  parent: System.Windows.Media
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Windows.Media.PixelFormat
- uid: System.Windows.Media.Imaging.BitmapPalette
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapPalette
  nameWithType: BitmapPalette
  fullName: System.Windows.Media.Imaging.BitmapPalette
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: AddDirtyRect(Int32Rect)
  nameWithType: WriteableBitmap.AddDirtyRect(Int32Rect)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(Int32Rect)
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Clone()
  nameWithType: WriteableBitmap.Clone()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Clone()
- uid: System.Windows.Media.Imaging.WriteableBitmap
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: WriteableBitmap.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: WriteableBitmap.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue()
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: WriteableBitmap.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: WriteableBitmap.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore()
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: WriteableBitmap.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Lock()
  nameWithType: WriteableBitmap.Lock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Lock()
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: TryLock(Duration)
  nameWithType: WriteableBitmap.TryLock(Duration)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.TryLock(Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Unlock()
  nameWithType: WriteableBitmap.Unlock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Unlock()
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,Array,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap
  nameWithType: WriteableBitmap.WriteableBitmap
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: AddDirtyRect
  nameWithType: WriteableBitmap.AddDirtyRect
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Clone
  nameWithType: WriteableBitmap.Clone
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCore
  nameWithType: WriteableBitmap.CloneCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValue
  nameWithType: WriteableBitmap.CloneCurrentValue
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: WriteableBitmap.CloneCurrentValueCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CreateInstanceCore
  nameWithType: WriteableBitmap.CreateInstanceCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: FreezeCore
  nameWithType: WriteableBitmap.FreezeCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: WriteableBitmap.GetAsFrozenCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Lock
  nameWithType: WriteableBitmap.Lock
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: TryLock
  nameWithType: WriteableBitmap.TryLock
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Unlock
  nameWithType: WriteableBitmap.Unlock
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels
  nameWithType: WriteableBitmap.WritePixels
