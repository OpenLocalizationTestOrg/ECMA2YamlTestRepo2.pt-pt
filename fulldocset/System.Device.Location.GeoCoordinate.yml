### YamlMime:ManagedReference
items:
- uid: System.Device.Location.GeoCoordinate
  id: GeoCoordinate
  children:
  - System.Device.Location.GeoCoordinate.#ctor
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.Altitude
  - System.Device.Location.GeoCoordinate.Course
  - System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.Equals(System.Object)
  - System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.GetHashCode
  - System.Device.Location.GeoCoordinate.HorizontalAccuracy
  - System.Device.Location.GeoCoordinate.IsUnknown
  - System.Device.Location.GeoCoordinate.Latitude
  - System.Device.Location.GeoCoordinate.Longitude
  - System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.Speed
  - System.Device.Location.GeoCoordinate.ToString
  - System.Device.Location.GeoCoordinate.Unknown
  - System.Device.Location.GeoCoordinate.VerticalAccuracy
  langs:
  - csharp
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: System.Device.Location.GeoCoordinate
  type: Class
  summary: "Representa uma localização geográfica, que é determinada pelo latitude e longitude coordenadas. Também pode incluir altitude, exatidão, velocidade e informações de decorrer."
  syntax:
    content: 'public class GeoCoordinate : IEquatable<System.Device.Location.GeoCoordinate>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Device.Location.GeoCoordinate>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor
  id: '#ctor'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate()
  nameWithType: GeoCoordinate.GeoCoordinate()
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> que não tem dados campos definido."
  remarks: "Todos os campos de dados estão definidos como <xref:System.Double.NaN>.</xref:System.Double.NaN>  A nova instância do <xref:System.Device.Location.GeoCoordinate>é equivalente ao <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinate>       Este construtor deve ser utilizado para a serialização."
  syntax:
    content: public GeoCoordinate ();
    parameters: []
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> classe a partir de dados de latitude e longitude."
  remarks: "Os valores de latitude e longitude tem de corresponder a uma localização no mundo real."
  syntax:
    content: public GeoCoordinate (double latitude, double longitude);
    parameters:
    - id: latitude
      type: System.Double
      description: "A latitude da localização. Podem variar entre-90.0 e 90.0."
    - id: longitude
      type: System.Double
      description: "A longitude da localização. Podem variar entre-180.0 e 180.0."
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A latitude ou longitude está fora do intervalo."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> classe a partir dos dados altitude, latitude e longitude."
  remarks: "Os valores de latitude e longitude tem de corresponder a uma localização no mundo real."
  syntax:
    content: public GeoCoordinate (double latitude, double longitude, double altitude);
    parameters:
    - id: latitude
      type: System.Double
      description: "Latitude. Podem variar entre-90.0 e 90.0."
    - id: longitude
      type: System.Double
      description: "Longitude. Podem variar entre-180.0 e 180.0"
    - id: altitude
      type: System.Double
      description: "Altitude em medidores. Pode ser negativo, 0, positivo, ou <xref:System.Double>, se desconhecido.</xref:System.Double>"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>latitude</code>, <code>longitude</code>, ou <code>altitude</code> está fora do intervalo."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> classe a partir de latitude, longitude, altitude, exatidão horizontal, exatidão vertical, velocidade e decorrer."
  syntax:
    content: public GeoCoordinate (double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy, double speed, double course);
    parameters:
    - id: latitude
      type: System.Double
      description: "A latitude da localização. Podem variar entre-90.0 e 90.0."
    - id: longitude
      type: System.Double
      description: "A longitude da localização. Podem variar entre-180.0 e 180.0."
    - id: altitude
      type: System.Double
      description: "Altitude em medidores. Pode ser negativo, 0, positivo, ou <xref:System.Double>, se desconhecido.</xref:System.Double>"
    - id: horizontalAccuracy
      type: System.Double
      description: "A precisão das coordenadas de latitude e longitude, na medidores. Tem de ser maior que ou igual a 0. Se for fornecido um valor de 0 a este construtor, a <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*>propriedade será definida para <xref:System.Double.NaN>.</xref:System.Double.NaN> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*>"
    - id: verticalAccuracy
      type: System.Double
      description: "A precisão do altitude, em medidores. Tem de ser maior que ou igual a 0. Se for fornecido um valor de 0 a este construtor, a <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*>propriedade será definida para <xref:System.Double.NaN>.</xref:System.Double.NaN> </xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*>"
    - id: speed
      type: System.Double
      description: "A velocidade da medida em medidores por segundo. Pode ser negativo, 0, positivo, ou <xref:System.Double>, se desconhecido.</xref:System.Double>  Uma velocidade negativa pode indicar mover no inversa."
    - id: course
      type: System.Double
      description: "A direção do levar, em vez de orientação. Este parâmetro é medido em graus relativo norte verdadeiro. Tem de estar no intervalo de 0 a 360.0 ou ser <xref:System.Double>.</xref:System.Double>"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Altitude
  id: Altitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
  fullName: System.Device.Location.GeoCoordinate.Altitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém o altitude do <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>, em medidores."
  remarks: "O altitude é dado em relação ao nível de sea."
  syntax:
    content: public double Altitude { get; set; }
    return:
      type: System.Double
      description: "O altitude em medidores."
  overload: System.Device.Location.GeoCoordinate.Altitude*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Course
  id: Course
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Course
  nameWithType: GeoCoordinate.Course
  fullName: System.Device.Location.GeoCoordinate.Course
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém ou define o cabeçalho em graus, relativo à norte verdadeiro."
  remarks: "O intervalo válido inclui valores entre 0,0 e 360.0, e `Double.NaN` não está definido no cabeçalho."
  example:
  - "The following example prints the Course and <xref:System.Device.Location.GeoCoordinate.Speed%2A> properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]"
  syntax:
    content: public double Course { get; set; }
    return:
      type: System.Double
      description: "O cabeçalho em graus, relativo à norte verdadeiro."
  overload: System.Device.Location.GeoCoordinate.Course*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Decorrer está definida fora do intervalo válido."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  id: Equals(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Equals(GeoCoordinate)
  nameWithType: GeoCoordinate.Equals(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Determina se o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> objeto é equivalente ao parâmetro, baseado unicamente em latitude e longitude."
  remarks: "Equivalente <xref:System.Device.Location.GeoCoordinate>objetos têm o mesmo <xref:System.Device.Location.GeoCoordinate.Latitude%2A>e <xref:System.Device.Location.GeoCoordinate.Longitude%2A>Propriedades.</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> O <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, e <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>Propriedades não são utilizadas para determinar equivalência.</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public bool Equals (System.Device.Location.GeoCoordinate other);
    parameters:
    - id: other
      type: System.Device.Location.GeoCoordinate
      description: "O <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> objeto comparar ao objeto de chamada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> objetos são igual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Device.Location.GeoCoordinate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: GeoCoordinate.Equals(Object)
  fullName: System.Device.Location.GeoCoordinate.Equals(Object)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Determina se uma determinada <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> é igual a atual <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>, com base exclusivamente com a latitude e longitude."
  remarks: "Equivalente <xref:System.Device.Location.GeoCoordinate>objetos têm o mesmo <xref:System.Device.Location.GeoCoordinate.Latitude%2A>e <xref:System.Device.Location.GeoCoordinate.Longitude%2A>Propriedades.</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> O <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, e <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>Propriedades não são utilizadas para determinar equivalência.</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto comparar o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> para."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> objetos são igual; caso contrário,<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>."
  overload: System.Device.Location.GeoCoordinate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  id: GetDistanceTo(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GetDistanceTo(GeoCoordinate)
  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Devolve a distância entre as coordenadas de latitude e longitude especificados por este <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> e outra especificado <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>."
  remarks: "A fórmula Haversine é utilizada para calcular a distância.  A fórmula Haversine contas para curvature terrestre, mas presume um earth spherical em vez de um ellipsoid. Para distâncias longas, a fórmula Haversine apresenta um erro de menor 0.1 por cento.       Altitude não é utilizado para calcular a distância."
  syntax:
    content: public double GetDistanceTo (System.Device.Location.GeoCoordinate other);
    parameters:
    - id: other
      type: System.Device.Location.GeoCoordinate
      description: "O <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> para a localização calcular a distância à."
    return:
      type: System.Double
      description: "A distância entre duas coordenadas, em medidores."
  overload: System.Device.Location.GeoCoordinate.GetDistanceTo*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.GetHashCode
  id: GetHashCode
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: GeoCoordinate.GetHashCode()
  fullName: System.Device.Location.GeoCoordinate.GetHashCode()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Funciona como uma função de hash para o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>."
  remarks: "<xref:System.Device.Location.GeoCoordinate>objetos equivalentes têm o mesmo código hash.</xref:System.Device.Location.GeoCoordinate> Equivalente <xref:System.Device.Location.GeoCoordinate>objetos têm o mesmo <xref:System.Device.Location.GeoCoordinate.Latitude%2A>e <xref:System.Device.Location.GeoCoordinate.Longitude%2A>Propriedades.</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> O <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, e <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>Propriedades não são utilizadas para determinar equivalência.</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o atual <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>."
  overload: System.Device.Location.GeoCoordinate.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  id: HorizontalAccuracy
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém ou define a precisão da latitude e longitude que é fornecido pelo <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>, em medidores."
  remarks: "A precisão pode ser considerada raio da certainty dos dados de latitude e longitude.  Uma área circular que está formada com a precisão como as coordenadas de radius e a latitude e longitude como o System center contém a localização real."
  syntax:
    content: public double HorizontalAccuracy { get; set; }
    return:
      type: System.Double
      description: "A precisão da latitude e longitude, em medidores."
  overload: System.Device.Location.GeoCoordinate.HorizontalAccuracy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "HorizontalAccuracy está definida fora do intervalo válido."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.IsUnknown
  id: IsUnknown
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
  fullName: System.Device.Location.GeoCoordinate.IsUnknown
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> não contém dados de latitude ou longitude."
  remarks: "Um <xref:System.Device.Location.GeoCoordinate>que não contém latitude ou dados de longitude são igual ao <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinate>"
  example:
  - "The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is <xref:System.Device.Location.GeoCoordinate.Unknown> before printing out its latitude and longitude.  \n  \n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> não contém dados de latitude ou longitude; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Device.Location.GeoCoordinate.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Latitude
  id: Latitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
  fullName: System.Device.Location.GeoCoordinate.Latitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém ou define a latitude do <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>."
  remarks: "A latitude pode variar entre-90.0 para 90.0. A latitude é medida em graus, Norte Sul de Equador ou o limite de tempo. Valores positivos são north of Equador e valores negativos são equidistantes do Equador."
  example:
  - "The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public double Latitude { get; set; }
    return:
      type: System.Double
      description: "Latitude da localização."
  overload: System.Device.Location.GeoCoordinate.Latitude*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A latitude está definida fora do intervalo válido."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Longitude
  id: Longitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
  fullName: System.Device.Location.GeoCoordinate.Longitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém ou define a longitude do <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>."
  remarks: "A longitude pode variar entre-180.0 para 180.0. A longitude é medida em graus Leste ou oeste do meridiano prime. Os valores negativos são oeste do meridiano prime e valores positivos são east of o meridiano prime."
  example:
  - "The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public double Longitude { get; set; }
    return:
      type: System.Double
      description: "A longitude."
  overload: System.Device.Location.GeoCoordinate.Longitude*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A longitude está definida fora do intervalo válido."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  id: op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: op_Equality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  type: Operator
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Determina se dois <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> Consulte objetos na mesma localização."
  remarks: "Equivalente <xref:System.Device.Location.GeoCoordinate>objetos têm o mesmo <xref:System.Device.Location.GeoCoordinate.Latitude%2A>e <xref:System.Device.Location.GeoCoordinate.Longitude%2A>Propriedades.</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> O <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, e <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>Propriedades não são utilizadas para determinar equivalência.</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public static bool op_Equality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);
    parameters:
    - id: left
      type: System.Device.Location.GeoCoordinate
      description: "O primeiro <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> para comparar."
    - id: right
      type: System.Device.Location.GeoCoordinate
      description: "O segundo <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> são determinados objetos como equivalentes; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Device.Location.GeoCoordinate.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  id: op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: op_Inequality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  type: Operator
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Determina se dois <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> objetos correspondem a localizações diferentes."
  remarks: "Equivalente <xref:System.Device.Location.GeoCoordinate>objetos têm o mesmo <xref:System.Device.Location.GeoCoordinate.Latitude%2A>e <xref:System.Device.Location.GeoCoordinate.Longitude%2A>Propriedades.</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> O <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, e <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>Propriedades não são utilizadas para determinar equivalência.</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public static bool op_Inequality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);
    parameters:
    - id: left
      type: System.Device.Location.GeoCoordinate
      description: "O primeiro <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> para comparar."
    - id: right
      type: System.Device.Location.GeoCoordinate
      description: "O segundo <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> objetos são determinados para ser diferente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Device.Location.GeoCoordinate.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Speed
  id: Speed
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Speed
  nameWithType: GeoCoordinate.Speed
  fullName: System.Device.Location.GeoCoordinate.Speed
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém ou define a velocidade em medidores por segundo."
  remarks: ''
  example:
  - "The following example prints the <xref:System.Device.Location.GeoCoordinate.Course%2A> and Speed properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]"
  syntax:
    content: public double Speed { get; set; }
    return:
      type: System.Double
      description: "A velocidade do medidores por segundo. A velocidade tem de ser maior que ou igual a zero ou <xref:System.Double>.</xref:System.Double>"
  overload: System.Device.Location.GeoCoordinate.Speed*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: System.ArgumentOutOfRangeException
    description: "Velocidade está definida fora do intervalo válido."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.ToString
  id: ToString
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: ToString()
  nameWithType: GeoCoordinate.ToString()
  fullName: System.Device.Location.GeoCoordinate.ToString()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Devolve uma cadeia que contém a latitude e longitude."
  remarks: "A representação de cadeia devolvida por este método destina-se apenas para utilização de depuração. Este método não devolveu qualquer região específica de formatação de latitude e longitude."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que contém a latitude e longitude, separados por vírgulas."
  overload: System.Device.Location.GeoCoordinate.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Unknown
  id: Unknown
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Unknown
  nameWithType: GeoCoordinate.Unknown
  fullName: System.Device.Location.GeoCoordinate.Unknown
  type: Field
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Representa um <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> objeto com desconhecido campos de latitude e longitude."
  remarks: "O <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A>propriedade pode ser utilizada para verificar se um <xref:System.Device.Location.GeoCoordinate>não contém dados.</xref:System.Device.Location.GeoCoordinate> </xref:System.Device.Location.GeoCoordinate.IsUnknown%2A>"
  example:
  - "The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is Unknown before printingout its latitude and longitude.  \n  \n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]"
  syntax:
    content: public static readonly System.Device.Location.GeoCoordinate Unknown;
    return:
      type: System.Device.Location.GeoCoordinate
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy
  id: VerticalAccuracy
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Obtém ou define a precisão do altitude fornecida o <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>, em medidores."
  syntax:
    content: public double VerticalAccuracy { get; set; }
    return:
      type: System.Double
      description: "A precisão do altitude, em medidores."
  overload: System.Device.Location.GeoCoordinate.VerticalAccuracy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "VerticalAccuracy está definida fora do intervalo válido."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Device.Location.GeoCoordinate.#ctor
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate()
  nameWithType: GeoCoordinate.GeoCoordinate()
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
- uid: System.Device.Location.GeoCoordinate.Altitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
  fullName: System.Device.Location.GeoCoordinate.Altitude
- uid: System.Device.Location.GeoCoordinate.Course
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Course
  nameWithType: GeoCoordinate.Course
  fullName: System.Device.Location.GeoCoordinate.Course
- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals(GeoCoordinate)
  nameWithType: GeoCoordinate.Equals(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Device.Location.GeoCoordinate
  parent: System.Device.Location
  isExternal: false
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: System.Device.Location.GeoCoordinate
- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals(Object)
  nameWithType: GeoCoordinate.Equals(Object)
  fullName: System.Device.Location.GeoCoordinate.Equals(Object)
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetDistanceTo(GeoCoordinate)
  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.GetHashCode
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetHashCode()
  nameWithType: GeoCoordinate.GetHashCode()
  fullName: System.Device.Location.GeoCoordinate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy
- uid: System.Device.Location.GeoCoordinate.IsUnknown
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
  fullName: System.Device.Location.GeoCoordinate.IsUnknown
- uid: System.Device.Location.GeoCoordinate.Latitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
  fullName: System.Device.Location.GeoCoordinate.Latitude
- uid: System.Device.Location.GeoCoordinate.Longitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
  fullName: System.Device.Location.GeoCoordinate.Longitude
- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Equality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Inequality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.Speed
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Speed
  nameWithType: GeoCoordinate.Speed
  fullName: System.Device.Location.GeoCoordinate.Speed
- uid: System.Device.Location.GeoCoordinate.ToString
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: ToString()
  nameWithType: GeoCoordinate.ToString()
  fullName: System.Device.Location.GeoCoordinate.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Device.Location.GeoCoordinate.Unknown
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Unknown
  nameWithType: GeoCoordinate.Unknown
  fullName: System.Device.Location.GeoCoordinate.Unknown
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy
- uid: System.Device.Location.GeoCoordinate.#ctor*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate
  nameWithType: GeoCoordinate.GeoCoordinate
- uid: System.Device.Location.GeoCoordinate.Altitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
- uid: System.Device.Location.GeoCoordinate.Course*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Course
  nameWithType: GeoCoordinate.Course
- uid: System.Device.Location.GeoCoordinate.Equals*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals
  nameWithType: GeoCoordinate.Equals
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetDistanceTo
  nameWithType: GeoCoordinate.GetDistanceTo
- uid: System.Device.Location.GeoCoordinate.GetHashCode*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetHashCode
  nameWithType: GeoCoordinate.GetHashCode
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
- uid: System.Device.Location.GeoCoordinate.IsUnknown*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
- uid: System.Device.Location.GeoCoordinate.Latitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
- uid: System.Device.Location.GeoCoordinate.Longitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
- uid: System.Device.Location.GeoCoordinate.op_Equality*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Equality
  nameWithType: GeoCoordinate.op_Equality
- uid: System.Device.Location.GeoCoordinate.op_Inequality*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Inequality
  nameWithType: GeoCoordinate.op_Inequality
- uid: System.Device.Location.GeoCoordinate.Speed*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Speed
  nameWithType: GeoCoordinate.Speed
- uid: System.Device.Location.GeoCoordinate.ToString*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: ToString
  nameWithType: GeoCoordinate.ToString
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
