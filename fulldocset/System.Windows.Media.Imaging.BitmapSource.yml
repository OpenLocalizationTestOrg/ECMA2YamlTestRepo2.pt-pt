### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Imaging.BitmapSource
  id: BitmapSource
  children:
  - System.Windows.Media.Imaging.BitmapSource.#ctor
  - System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin
  - System.Windows.Media.Imaging.BitmapSource.Clone
  - System.Windows.Media.Imaging.BitmapSource.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue
  - System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  - System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  - System.Windows.Media.Imaging.BitmapSource.DpiX
  - System.Windows.Media.Imaging.BitmapSource.DpiY
  - System.Windows.Media.Imaging.BitmapSource.Format
  - System.Windows.Media.Imaging.BitmapSource.FreezeCore(System.Boolean)
  - System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapSource.Height
  - System.Windows.Media.Imaging.BitmapSource.IsDownloading
  - System.Windows.Media.Imaging.BitmapSource.Metadata
  - System.Windows.Media.Imaging.BitmapSource.Palette
  - System.Windows.Media.Imaging.BitmapSource.PixelHeight
  - System.Windows.Media.Imaging.BitmapSource.PixelWidth
  - System.Windows.Media.Imaging.BitmapSource.Width
  langs:
  - csharp
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
  type: Class
  summary: "Represents a single, constant set of pixels at a certain size and resolution."
  remarks: "BitmapSource is the basic building block of the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] imaging pipeline, conceptually representing a single, constant set of pixels at a certain size and resolution. A BitmapSource could be a single frame in an image file that a decoder provides, or it could be the result of a transform that operates on a BitmapSource of its own. BitmapSource is not used to represent a multi-frame image or an animation.       [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] natively supports compression and decompression of [!INCLUDE[TLA#tla_bmp](~/add/includes/ajax-current-ext-md.md)], [!INCLUDE[TLA#tla_gif](~/add/includes/tlasharptla-gif-md.md)], [!INCLUDE[TLA#tla_jpegorg](~/add/includes/tlasharptla-jpegorg-md.md)], [!INCLUDE[TLA#tla_png](~/add/includes/tlasharptla-png-md.md)], and [!INCLUDE[TLA#tla_tiff](~/add/includes/tlasharptla-tiff-md.md)] images.       For bitmap decoding scenarios, BitmapSource uses automatic codec discovery, based on the installed codecs on the user&quot;s system.       The maximum height and width of an image is 2^16 pixels at 32 bits per channel * 4 channels. The maximum size of a BitmapSource is 2^32 bytes (64 gigabytes) and the maximum image size is four gigapixels. The minimum image size is 1x1."
  example:
  - "The following code example demonstrates how to create a BitmapSource and use it as the source of an <xref:System.Windows.Controls.Image> control.  \n  \n [!code-cs[imagingsnippetgallery_procedural_snip#BitmapSourceCreate](~/add/codesnippet/csharp/ImagingSnippetGallery_csharp/BitmapSourceExample.cs#bitmapsourcecreate)]\n [!code-vb[imagingsnippetgallery_procedural_snip#BitmapSourceCreate](~/add/codesnippet/visualbasic/ImagingSnippetGallery/BitmapSourceExample.vb#bitmapsourcecreate)]  \n  \n The following code example uses a BitmapSource derived class, <xref:System.Windows.Media.Imaging.BitmapImage>, to create a bitmap from an image file and use it as the source of an <xref:System.Windows.Controls.Image> control.  \n  \n [!code-cs[imageelementexample#SimpleCSharp1](~/add/codesnippet/csharp/ImageElementExample.ImageElementExample/SimpleImageExample.xaml.cs#simplecsharp1)]\n [!code-vb[imageelementexample#SimpleCSharp1](~/add/codesnippet/visualbasic/ImageElementExample.ImageElementExample/SimpleImageExample.xaml.vb#simplecsharp1)]"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public abstract class BitmapSource : System.Windows.Media.ImageSource
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.ImageSource
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.ImageSource.PixelsToDIPs(System.Double,System.Int32)
  - System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.ImageSource.ToString
  - System.Windows.Media.ImageSource.ToString(System.IFormatProvider)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: BitmapSource()
  nameWithType: BitmapSource.BitmapSource()
  fullName: System.Windows.Media.Imaging.BitmapSource.BitmapSource()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> class."
  syntax:
    content: protected BitmapSource ();
    parameters: []
  overload: System.Windows.Media.Imaging.BitmapSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin
  id: CheckIfSiteOfOrigin
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: CheckIfSiteOfOrigin()
  nameWithType: BitmapSource.CheckIfSiteOfOrigin()
  fullName: System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Checks whether the bitmap source content is from a known site of origin. This method is used to make sure that pixel copying operations are safe."
  remarks: "This method only succeeds if it is passed a <xref:System.Uri> that is from a site of origin or that is defined in a `pack:`. In all other conditions, this method will fail."
  syntax:
    content: protected void CheckIfSiteOfOrigin ();
    parameters: []
  overload: System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Clone
  id: Clone
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapSource.Clone()
  fullName: System.Windows.Media.Imaging.BitmapSource.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref>, making deep copies of this object&quot;s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Imaging.BitmapSource Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Imaging.BitmapSource.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: BitmapSource.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Makes this instance a deep copy of the specified <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values."
  remarks: "This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when you call the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "The <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> to clone.."
  overload: System.Windows.Media.Imaging.BitmapSource.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapSource.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> object, making deep copies of this object&quot;s current values. Resource references, data bindings, and animations are not copied, but their current values are."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Imaging.BitmapSource CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: BitmapSource.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Makes this instance a modifiable deep copy of the specified <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> using current property values. Resource references, data bindings, and animations are not copied, but their current values are."
  remarks: "This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when you call the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "The <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> to clone."
  overload: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)
  id: CopyPixels(System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: CopyPixels(Array,Int32,Int32)
  nameWithType: BitmapSource.CopyPixels(Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.CopyPixels(Array,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Copies the bitmap pixel data into an array of pixels with the specified stride, starting at the specified offset."
  syntax:
    content: public virtual void CopyPixels (Array pixels, int stride, int offset);
    parameters:
    - id: pixels
      type: System.Array
      description: "The destination array."
    - id: stride
      type: System.Int32
      description: "The stride of the bitmap."
    - id: offset
      type: System.Int32
      description: "The pixel location where copying starts."
  overload: System.Windows.Media.Imaging.BitmapSource.CopyPixels*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  id: CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: CopyPixels(Int32Rect,Array,Int32,Int32)
  nameWithType: BitmapSource.CopyPixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.CopyPixels(Int32Rect,Array,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Copies the bitmap pixel data within the specified rectangle into an array of pixels that has the specified stride starting at the specified offset."
  remarks: "An empty `sourceRect` value (specified as all zeros) copies the entire bitmap."
  syntax:
    content: public virtual void CopyPixels (System.Windows.Int32Rect sourceRect, Array pixels, int stride, int offset);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "The source rectangle to copy. An <xref:System.Windows.Int32Rect.Empty*> value specifies the entire bitmap."
    - id: pixels
      type: System.Array
      description: "The destination array."
    - id: stride
      type: System.Int32
      description: "The stride of the bitmap."
    - id: offset
      type: System.Int32
      description: "The pixel location where copying begins."
  overload: System.Windows.Media.Imaging.BitmapSource.CopyPixels*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  id: CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: CopyPixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: BitmapSource.CopyPixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.CopyPixels(Int32Rect,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Copies the bitmap pixel data within the specified rectangle"
  remarks: "An empty `sourceRect` value (specified as all zeros) copies the entire bitmap."
  syntax:
    content: public virtual void CopyPixels (System.Windows.Int32Rect sourceRect, IntPtr buffer, int bufferSize, int stride);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "The source rectangle to copy. An <xref:System.Windows.Int32Rect.Empty*> value specifies the entire bitmap."
    - id: buffer
      type: System.IntPtr
      description: "A pointer to the buffer."
    - id: bufferSize
      type: System.Int32
      description: "The size of the buffer."
    - id: stride
      type: System.Int32
      description: "The stride of the bitmap."
  overload: System.Windows.Media.Imaging.BitmapSource.CopyPixels*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  id: Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,Array,Int32)
  nameWithType: BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,Array,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Creates a new <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> from an array of pixels."
  remarks: ''
  example:
  - "The following example demonstrates how to use this method in order to create a new <xref:System.Windows.Media.Imaging.BitmapSource>.  \n  \n [!code-vb[bitmapframeexample#1](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#1)]\n [!code-cs[bitmapframeexample#1](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#1)]"
  syntax:
    content: public static System.Windows.Media.Imaging.BitmapSource Create (int pixelWidth, int pixelHeight, double dpiX, double dpiY, System.Windows.Media.PixelFormat pixelFormat, System.Windows.Media.Imaging.BitmapPalette palette, Array pixels, int stride);
    parameters:
    - id: pixelWidth
      type: System.Int32
      description: "The width of the bitmap."
    - id: pixelHeight
      type: System.Int32
      description: "The height of the bitmap."
    - id: dpiX
      type: System.Double
      description: "The horizontal [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] of the bitmap."
    - id: dpiY
      type: System.Double
      description: "The vertical [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] of the bitmap."
    - id: pixelFormat
      type: System.Windows.Media.PixelFormat
      description: "The pixel format of the bitmap."
    - id: palette
      type: System.Windows.Media.Imaging.BitmapPalette
      description: "The palette of the bitmap."
    - id: pixels
      type: System.Array
      description: "An array of bytes that represents the content of a bitmap image."
    - id: stride
      type: System.Int32
      description: "The stride of the bitmap."
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "The <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> that is created from the specified array of pixels."
  overload: System.Windows.Media.Imaging.BitmapSource.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  id: Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,IntPtr,Int32,Int32)
  nameWithType: BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Creates a new <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> from an array of pixels that are stored in unmanaged memory."
  syntax:
    content: public static System.Windows.Media.Imaging.BitmapSource Create (int pixelWidth, int pixelHeight, double dpiX, double dpiY, System.Windows.Media.PixelFormat pixelFormat, System.Windows.Media.Imaging.BitmapPalette palette, IntPtr buffer, int bufferSize, int stride);
    parameters:
    - id: pixelWidth
      type: System.Int32
      description: "The width of the bitmap."
    - id: pixelHeight
      type: System.Int32
      description: "The height of the bitmap."
    - id: dpiX
      type: System.Double
      description: "The horizontal [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] of the bitmap."
    - id: dpiY
      type: System.Double
      description: "The vertical [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] of the bitmap."
    - id: pixelFormat
      type: System.Windows.Media.PixelFormat
      description: "The pixel format of the bitmap."
    - id: palette
      type: System.Windows.Media.Imaging.BitmapPalette
      description: "The palette of the bitmap."
    - id: buffer
      type: System.IntPtr
      description: "A pointer to the buffer that contains the bitmap data in memory."
    - id: bufferSize
      type: System.Int32
      description: "The size of the buffer."
    - id: stride
      type: System.Int32
      description: "The stride of the bitmap."
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "A <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> that is created from the array of pixels in unmanaged memory."
  overload: System.Windows.Media.Imaging.BitmapSource.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  id: DecodeFailed
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: DecodeFailed
  nameWithType: BitmapSource.DecodeFailed
  fullName: System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Occurs when the image fails to load, due to a corrupt image header."
  remarks: "DecodeFailed is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \n  \n<a name=\"xamlTextUsage_DecodeFailed\"></a>   \n## XAML Text Usage  \n \\<*object* DecodeFailed=\"*EventHandler*\" .../>"
  syntax:
    content: public virtual event EventHandler<System.Windows.Media.ExceptionEventArgs> DecodeFailed;
    return:
      type: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  id: DownloadCompleted
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: DownloadCompleted
  nameWithType: BitmapSource.DownloadCompleted
  fullName: System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Occurs when the bitmap content has been completely downloaded."
  remarks: "This event may not be raised for all types of bitmap content."
  syntax:
    content: public virtual event EventHandler DownloadCompleted;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  id: DownloadFailed
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: DownloadFailed
  nameWithType: BitmapSource.DownloadFailed
  fullName: System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Occurs when the bitmap content failed to download."
  remarks: "This event may not be raised for all types of bitmap content.  \n  \n<a name=\"xamlTextUsage_DownloadFailed\"></a>   \n## XAML Text Usage  \n \\<*object* DownloadFailed=\"*EventHandler*\" .../>"
  syntax:
    content: public virtual event EventHandler<System.Windows.Media.ExceptionEventArgs> DownloadFailed;
    return:
      type: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  id: DownloadProgress
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: DownloadProgress
  nameWithType: BitmapSource.DownloadProgress
  fullName: System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Occurs when the download progress of the bitmap content has changed."
  remarks: "This event may not be raised for all types of bitmap content.  \n  \n<a name=\"xamlTextUsage_DownloadProgress\"></a>   \n## XAML Text Usage  \n \\<*object* DownloadProgress=\"*EventHandler*\" .../>"
  syntax:
    content: public virtual event EventHandler<System.Windows.Media.Imaging.DownloadProgressEventArgs> DownloadProgress;
    return:
      type: System.EventHandler{System.Windows.Media.Imaging.DownloadProgressEventArgs}
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.DpiX
  id: DpiX
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: DpiX
  nameWithType: BitmapSource.DpiX
  fullName: System.Windows.Media.Imaging.BitmapSource.DpiX
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the horizontal [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] of the image."
  syntax:
    content: public virtual double DpiX { get; }
    return:
      type: System.Double
      description: "The horizontal [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] of the image; that is, the [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] along the x-axis."
  overload: System.Windows.Media.Imaging.BitmapSource.DpiX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.DpiY
  id: DpiY
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: DpiY
  nameWithType: BitmapSource.DpiY
  fullName: System.Windows.Media.Imaging.BitmapSource.DpiY
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the vertical [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] of the image."
  syntax:
    content: public virtual double DpiY { get; }
    return:
      type: System.Double
      description: "The vertical [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] of the image; that is, the [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] along the y-axis."
  overload: System.Windows.Media.Imaging.BitmapSource.DpiY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Format
  id: Format
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Format
  nameWithType: BitmapSource.Format
  fullName: System.Windows.Media.Imaging.BitmapSource.Format
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the native <xref href=&quot;System.Windows.Media.PixelFormat&quot;></xref> of the bitmap data."
  remarks: "If the <xref:System.Windows.Media.Imaging.BitmapSource> is directly readable, this is the format that the pixels will be in when they are read."
  syntax:
    content: public virtual System.Windows.Media.PixelFormat Format { get; }
    return:
      type: System.Windows.Media.PixelFormat
      description: "The pixel format of the bitmap data."
  overload: System.Windows.Media.Imaging.BitmapSource.Format*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: BitmapSource.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.BitmapSource.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Makes an instance of <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> or a derived class immutable."
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this instance should actually freeze itself when this method is called; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "If <code>isChecking</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this <xref href=&quot;System.Windows.Media.Animation.Animatable&quot;></xref> can be made unmodifiable, or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if it cannot be made unmodifiable.       If <code>isChecking</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the if this <xref href=&quot;System.Windows.Media.Animation.Animatable&quot;></xref> is now unmodifiable, or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object."
  overload: System.Windows.Media.Imaging.BitmapSource.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: BitmapSource.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Makes this instance a clone of the specified <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> object."
  remarks: "When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "The <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> object to clone and freeze."
  overload: System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: BitmapSource.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Makes this instance a frozen clone of the specified <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref>. Resource references, data bindings, and animations are not copied, but their current values are."
  remarks: "This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.       For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "The <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> to copy and freeze."
  overload: System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Height
  id: Height
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Height
  nameWithType: BitmapSource.Height
  fullName: System.Windows.Media.Imaging.BitmapSource.Height
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the height of the source bitmap in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public override double Height { get; }
    return:
      type: System.Double
      description: "The height of the bitmap in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  overload: System.Windows.Media.Imaging.BitmapSource.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.IsDownloading
  id: IsDownloading
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: IsDownloading
  nameWithType: BitmapSource.IsDownloading
  fullName: System.Windows.Media.Imaging.BitmapSource.IsDownloading
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets a value that indicates whether the <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> content is currently downloading."
  syntax:
    content: public virtual bool IsDownloading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the bitmap source is currently downloading; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Imaging.BitmapSource.IsDownloading*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Metadata
  id: Metadata
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Metadata
  nameWithType: BitmapSource.Metadata
  fullName: System.Windows.Media.Imaging.BitmapSource.Metadata
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the metadata that is associated with this bitmap image."
  syntax:
    content: public override System.Windows.Media.ImageMetadata Metadata { get; }
    return:
      type: System.Windows.Media.ImageMetadata
      description: "The metadata that is associated with the bitmap image."
  overload: System.Windows.Media.Imaging.BitmapSource.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Palette
  id: Palette
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Palette
  nameWithType: BitmapSource.Palette
  fullName: System.Windows.Media.Imaging.BitmapSource.Palette
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the color palette of the bitmap, if one is specified."
  syntax:
    content: public virtual System.Windows.Media.Imaging.BitmapPalette Palette { get; }
    return:
      type: System.Windows.Media.Imaging.BitmapPalette
      description: "The color palette of the bitmap."
  overload: System.Windows.Media.Imaging.BitmapSource.Palette*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.PixelHeight
  id: PixelHeight
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: PixelHeight
  nameWithType: BitmapSource.PixelHeight
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelHeight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the height of the bitmap in pixels."
  syntax:
    content: public virtual int PixelHeight { get; }
    return:
      type: System.Int32
      description: "The height of the bitmap in pixels."
  overload: System.Windows.Media.Imaging.BitmapSource.PixelHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.PixelWidth
  id: PixelWidth
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: PixelWidth
  nameWithType: BitmapSource.PixelWidth
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelWidth
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the width of the bitmap in pixels."
  syntax:
    content: public virtual int PixelWidth { get; }
    return:
      type: System.Int32
      description: "The width of the bitmap in pixels."
  overload: System.Windows.Media.Imaging.BitmapSource.PixelWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapSource.Width
  id: Width
  parent: System.Windows.Media.Imaging.BitmapSource
  langs:
  - csharp
  name: Width
  nameWithType: BitmapSource.Width
  fullName: System.Windows.Media.Imaging.BitmapSource.Width
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Gets the width of the bitmap in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public override double Width { get; }
    return:
      type: System.Double
      description: "The width of the bitmap in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  overload: System.Windows.Media.Imaging.BitmapSource.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.ImageSource
  isExternal: false
  name: System.Windows.Media.ImageSource
- uid: System.Windows.Media.Imaging.BitmapSource.#ctor
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: BitmapSource()
  nameWithType: BitmapSource.BitmapSource()
  fullName: System.Windows.Media.Imaging.BitmapSource.BitmapSource()
- uid: System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CheckIfSiteOfOrigin()
  nameWithType: BitmapSource.CheckIfSiteOfOrigin()
  fullName: System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin()
- uid: System.Windows.Media.Imaging.BitmapSource.Clone
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Clone()
  nameWithType: BitmapSource.Clone()
  fullName: System.Windows.Media.Imaging.BitmapSource.Clone()
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: BitmapSource.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapSource.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue()
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: BitmapSource.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CopyPixels(Array,Int32,Int32)
  nameWithType: BitmapSource.CopyPixels(Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.CopyPixels(Array,Int32,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CopyPixels(Int32Rect,Array,Int32,Int32)
  nameWithType: BitmapSource.CopyPixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.CopyPixels(Int32Rect,Array,Int32,Int32)
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CopyPixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: BitmapSource.CopyPixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.CopyPixels(Int32Rect,IntPtr,Int32,Int32)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,Array,Int32)
  nameWithType: BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,Array,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,Array,Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.PixelFormat
  parent: System.Windows.Media
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Windows.Media.PixelFormat
- uid: System.Windows.Media.Imaging.BitmapPalette
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapPalette
  nameWithType: BitmapPalette
  fullName: System.Windows.Media.Imaging.BitmapPalette
- uid: System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,IntPtr,Int32,Int32)
  nameWithType: BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.BitmapSource.Create(Int32,Int32,Double,Double,PixelFormat,BitmapPalette,IntPtr,Int32,Int32)
- uid: System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DecodeFailed
  nameWithType: BitmapSource.DecodeFailed
  fullName: System.Windows.Media.Imaging.BitmapSource.DecodeFailed
- uid: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ExceptionEventArgs>
  nameWithType: EventHandler<ExceptionEventArgs>
  fullName: System.EventHandler<System.Windows.Media.ExceptionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Media.ExceptionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.ExceptionEventArgs
    name: ExceptionEventArgs
    nameWithType: ExceptionEventArgs
    fullName: ExceptionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DownloadCompleted
  nameWithType: BitmapSource.DownloadCompleted
  fullName: System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DownloadFailed
  nameWithType: BitmapSource.DownloadFailed
  fullName: System.Windows.Media.Imaging.BitmapSource.DownloadFailed
- uid: System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DownloadProgress
  nameWithType: BitmapSource.DownloadProgress
  fullName: System.Windows.Media.Imaging.BitmapSource.DownloadProgress
- uid: System.EventHandler{System.Windows.Media.Imaging.DownloadProgressEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadProgressEventArgs>
  nameWithType: EventHandler<DownloadProgressEventArgs>
  fullName: System.EventHandler<System.Windows.Media.Imaging.DownloadProgressEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Media.Imaging.DownloadProgressEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.Imaging.DownloadProgressEventArgs
    name: DownloadProgressEventArgs
    nameWithType: DownloadProgressEventArgs
    fullName: DownloadProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Imaging.BitmapSource.DpiX
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DpiX
  nameWithType: BitmapSource.DpiX
  fullName: System.Windows.Media.Imaging.BitmapSource.DpiX
- uid: System.Windows.Media.Imaging.BitmapSource.DpiY
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DpiY
  nameWithType: BitmapSource.DpiY
  fullName: System.Windows.Media.Imaging.BitmapSource.DpiY
- uid: System.Windows.Media.Imaging.BitmapSource.Format
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Format
  nameWithType: BitmapSource.Format
  fullName: System.Windows.Media.Imaging.BitmapSource.Format
- uid: System.Windows.Media.Imaging.BitmapSource.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: BitmapSource.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.BitmapSource.FreezeCore(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: BitmapSource.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: BitmapSource.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.BitmapSource.Height
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Height
  nameWithType: BitmapSource.Height
  fullName: System.Windows.Media.Imaging.BitmapSource.Height
- uid: System.Windows.Media.Imaging.BitmapSource.IsDownloading
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: IsDownloading
  nameWithType: BitmapSource.IsDownloading
  fullName: System.Windows.Media.Imaging.BitmapSource.IsDownloading
- uid: System.Windows.Media.Imaging.BitmapSource.Metadata
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Metadata
  nameWithType: BitmapSource.Metadata
  fullName: System.Windows.Media.Imaging.BitmapSource.Metadata
- uid: System.Windows.Media.ImageMetadata
  parent: System.Windows.Media
  isExternal: false
  name: ImageMetadata
  nameWithType: ImageMetadata
  fullName: System.Windows.Media.ImageMetadata
- uid: System.Windows.Media.Imaging.BitmapSource.Palette
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Palette
  nameWithType: BitmapSource.Palette
  fullName: System.Windows.Media.Imaging.BitmapSource.Palette
- uid: System.Windows.Media.Imaging.BitmapSource.PixelHeight
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: PixelHeight
  nameWithType: BitmapSource.PixelHeight
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelHeight
- uid: System.Windows.Media.Imaging.BitmapSource.PixelWidth
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: PixelWidth
  nameWithType: BitmapSource.PixelWidth
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelWidth
- uid: System.Windows.Media.Imaging.BitmapSource.Width
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Width
  nameWithType: BitmapSource.Width
  fullName: System.Windows.Media.Imaging.BitmapSource.Width
- uid: System.Windows.Media.Imaging.BitmapSource.#ctor*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource.BitmapSource
- uid: System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CheckIfSiteOfOrigin
  nameWithType: BitmapSource.CheckIfSiteOfOrigin
- uid: System.Windows.Media.Imaging.BitmapSource.Clone*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Clone
  nameWithType: BitmapSource.Clone
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCore*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CloneCore
  nameWithType: BitmapSource.CloneCore
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapSource.CloneCurrentValue
- uid: System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: BitmapSource.CloneCurrentValueCore
- uid: System.Windows.Media.Imaging.BitmapSource.CopyPixels*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: CopyPixels
  nameWithType: BitmapSource.CopyPixels
- uid: System.Windows.Media.Imaging.BitmapSource.Create*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Create
  nameWithType: BitmapSource.Create
- uid: System.Windows.Media.Imaging.BitmapSource.DpiX*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DpiX
  nameWithType: BitmapSource.DpiX
- uid: System.Windows.Media.Imaging.BitmapSource.DpiY*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: DpiY
  nameWithType: BitmapSource.DpiY
- uid: System.Windows.Media.Imaging.BitmapSource.Format*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Format
  nameWithType: BitmapSource.Format
- uid: System.Windows.Media.Imaging.BitmapSource.FreezeCore*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: FreezeCore
  nameWithType: BitmapSource.FreezeCore
- uid: System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: BitmapSource.GetAsFrozenCore
- uid: System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: BitmapSource.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Imaging.BitmapSource.Height*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Height
  nameWithType: BitmapSource.Height
- uid: System.Windows.Media.Imaging.BitmapSource.IsDownloading*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: IsDownloading
  nameWithType: BitmapSource.IsDownloading
- uid: System.Windows.Media.Imaging.BitmapSource.Metadata*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Metadata
  nameWithType: BitmapSource.Metadata
- uid: System.Windows.Media.Imaging.BitmapSource.Palette*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Palette
  nameWithType: BitmapSource.Palette
- uid: System.Windows.Media.Imaging.BitmapSource.PixelHeight*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: PixelHeight
  nameWithType: BitmapSource.PixelHeight
- uid: System.Windows.Media.Imaging.BitmapSource.PixelWidth*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: PixelWidth
  nameWithType: BitmapSource.PixelWidth
- uid: System.Windows.Media.Imaging.BitmapSource.Width*
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: Width
  nameWithType: BitmapSource.Width
