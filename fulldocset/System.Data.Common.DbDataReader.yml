### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbDataReader
  id: DbDataReader
  children:
  - System.Data.Common.DbDataReader.#ctor
  - System.Data.Common.DbDataReader.Close
  - System.Data.Common.DbDataReader.Depth
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.FieldCount
  - System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  - System.Data.Common.DbDataReader.GetByte(System.Int32)
  - System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetChar(System.Int32)
  - System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  - System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  - System.Data.Common.DbDataReader.GetDouble(System.Int32)
  - System.Data.Common.DbDataReader.GetEnumerator
  - System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetFloat(System.Int32)
  - System.Data.Common.DbDataReader.GetGuid(System.Int32)
  - System.Data.Common.DbDataReader.GetInt16(System.Int32)
  - System.Data.Common.DbDataReader.GetInt32(System.Int32)
  - System.Data.Common.DbDataReader.GetInt64(System.Int32)
  - System.Data.Common.DbDataReader.GetName(System.Int32)
  - System.Data.Common.DbDataReader.GetOrdinal(System.String)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetSchemaTable
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetString(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.GetValue(System.Int32)
  - System.Data.Common.DbDataReader.GetValues(System.Object[])
  - System.Data.Common.DbDataReader.HasRows
  - System.Data.Common.DbDataReader.IsClosed
  - System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Item(System.Int32)
  - System.Data.Common.DbDataReader.Item(System.String)
  - System.Data.Common.DbDataReader.NextResult
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Read
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.RecordsAffected
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
  type: Class
  summary: "Lê um fluxo apenas de reencaminhamento de linhas de uma origem de dados."
  syntax:
    content: 'public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.IEnumerable
  - System.Data.IDataReader
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> classe."
  syntax:
    content: protected DbDataReader ();
    parameters: []
  overload: System.Data.Common.DbDataReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Close
  id: Close
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Fecha o <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> objeto."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Depth
  id: Depth
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém um valor que indica a profundidade de aninhamento para a linha atual."
  remarks: "A tabela mais exterior tem uma profundidade de zero."
  syntax:
    content: public abstract int Depth { get; }
    return:
      type: System.Int32
      description: "A profundidade de aninhamento para a linha atual."
  overload: System.Data.Common.DbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose
  id: Dispose
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Versões de todos os recursos utilizados pela instância atual do <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> classe."
  remarks: "Chamar `Dispose` quando tiver terminado de utilizando <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> O `Dispose` método mantém o <xref:System.Data.Common.DbDataReader>num Estado não utilizável.</xref:System.Data.Common.DbDataReader> Após a chamada `Dispose`, tem de libertar todas as referências ao <xref:System.Data.Common.DbDataReader>para que o recoletor de lixo pode reclame a memória que a <xref:System.Data.Common.DbDataReader>foi occupying.</xref:System.Data.Common.DbDataReader> </xref:System.Data.Common.DbDataReader>       Para obter mais informações, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md) e [implementar um método eliminar](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada `Dispose` antes de libertar a última referência <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.Data.Common.DbDataReader>do objeto `Finalize` método.</xref:System.Data.Common.DbDataReader>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Liberta os recursos geridos utilizados pelo <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> e opcionalmente liberta os recursos não geridos."
  remarks: "Este método chama <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o número de colunas na linha atual."
  remarks: "Inclui campos ocultos. Utilize <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>para excluir os campos ocultos.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>"
  syntax:
    content: public abstract int FieldCount { get; }
    return:
      type: System.Int32
      description: "O número de colunas na linha atual."
  overload: System.Data.Common.DbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há nenhuma ligação atual para uma instância do SQL Server."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um valor booleano."
  syntax:
    content: public abstract bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Boolean
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um byte."
  syntax:
    content: public abstract byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Byte
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lê um fluxo de bytes a partir da coluna especificada, começando localização indicada pelo <code> dataOffset </code>, para a memória intermédia, a partir da localização indicado pelo <code> bufferOffset </code>."
  syntax:
    content: public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    - id: dataOffset
      type: System.Int64
      description: "O índice na linha a partir do qual iniciar a operação de leitura."
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia para a qual pretende copiar os dados."
    - id: bufferOffset
      type: System.Int32
      description: "O índice com a memória intermédia para a qual os dados serão copiados."
    - id: length
      type: System.Int32
      description: "O número máximo de carateres a ler."
    return:
      type: System.Int64
      description: "O número real de bytes lidos."
  overload: System.Data.Common.DbDataReader.GetBytes*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um único caráter."
  syntax:
    content: public abstract char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Char
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lê uma sequência de carateres a partir da coluna especificada, começando localização indicada pelo <code> dataOffset </code>, para a memória intermédia, a partir da localização indicado pelo <code> bufferOffset </code>."
  syntax:
    content: public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    - id: dataOffset
      type: System.Int64
      description: "O índice na linha a partir do qual iniciar a operação de leitura."
    - id: buffer
      type: System.Char[]
      description: "A memória intermédia para a qual pretende copiar os dados."
    - id: bufferOffset
      type: System.Int32
      description: "O índice com a memória intermédia para a qual os dados serão copiados."
    - id: length
      type: System.Int32
      description: "O número máximo de carateres a ler."
    return:
      type: System.Int64
      description: "O número real de carateres de leitura."
  overload: System.Data.Common.DbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Devolve um <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> objeto para o ordinal de coluna pedida."
  syntax:
    content: public System.Data.Common.DbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o nome do tipo de dados da coluna especificada."
  remarks: "```  \nprivate static void GetDataTypes(String connectiongString) {       \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";  \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();               \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            for (Int32 i = 0; i < reader.FieldCount; i++) {  \n               Console.WriteLine(\"ColumnName:{0,-15}DataType:{1,-15}\",reader.GetName(i),reader.GetDataTypeName(i));  \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.String
      description: "Uma cadeia que representa o nome do tipo de dados."
  overload: System.Data.Common.DbDataReader.GetDataTypeName*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como uma <xref:System.DateTime>objeto.</xref:System.DateTime>"
  syntax:
    content: public abstract DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.DateTime
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Devolve um <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> objeto para a coluna pedida ordinal que pode ser substituída por uma implementação específica do fornecedor."
  syntax:
    content: protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como uma <xref:System.Decimal>objeto.</xref:System.Decimal>"
  syntax:
    content: public abstract decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Decimal
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um número de ponto flutuante de dupla precisão."
  syntax:
    content: public abstract double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Double
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Devolve um <xref:System.Collections.IEnumerator>que podem ser utilizados para iterar através de linhas no leitor de dados.</xref:System.Collections.IEnumerator>"
  remarks: "Apesar de poder utilizar este método para obter um construtor explícito, idiomas que suportam explícita **foreach** construção, é mais simples utilizar a construção de ciclo diretamente para iterar através de linhas no leitor de dados.       Se implementar este método, deverá devolver uma nova instância do <xref:System.Data.Common.DbEnumerator>ou certifique-se de que o enumerador devolve <xref:System.Data.IDataRecord>objetos.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbEnumerator>"
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que podem ser utilizados para iterar através de linhas no leitor de dados.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Common.DbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o tipo de dados da coluna especificada."
  syntax:
    content: public abstract Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Type
      description: "O tipo de dados da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetFieldType*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual T GetFieldValue<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Data.Common.DbDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  id: GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A adicionar."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "A adicionar."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A adicionar."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A adicionar."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "A adicionar."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples."
  syntax:
    content: public abstract float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Single
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um identificador exclusivo global (GUID)."
  syntax:
    content: public abstract Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Guid
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um número inteiro com sinal de 16 bits."
  syntax:
    content: public abstract short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Int16
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um número inteiro com sinal de 32 bits."
  remarks: "```  \nprivate static void GetCredits(String connectiongString) {  \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";   \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();   \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            while (reader.Read()) {  \n               // Credits column is the integer column, and you can use the GetInt32 method                        \n               // to return a a 32-bit signed integer.                       \n               Console.WriteLine(\"Course:{0,-15} Credits:{1}\",reader[1],reader.GetInt32(2));   \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Int32
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como um número inteiro com sinal de 64 bits."
  syntax:
    content: public abstract long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Int64
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o nome da coluna, fornecidos a coluna baseado em zero ordinal."
  syntax:
    content: public abstract string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.String
      description: "O nome da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém a coluna ordinal fornecido o nome da coluna."
  syntax:
    content: public abstract int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
  overload: System.Data.Common.DbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O nome especificado não é um nome de coluna válido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Devolve o tipo de campo específica do fornecedor da coluna especificada."
  syntax:
    content: public virtual Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Type
      description: "O <xref:System.Type>objeto que descreve o tipo de dados da coluna especificada.</xref:System.Type>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como uma instância do <xref:System.Object>.</xref:System.Object>"
  remarks: "Para determinar o tipo específico do objeto devolvido, utilize <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>"
  syntax:
    content: public virtual object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém todas as colunas de atributo específico do fornecedor na coleção para a linha atual."
  syntax:
    content: public virtual int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de <xref:System.Object>na qual copiar as colunas de atributo.</xref:System.Object>"
    return:
      type: System.Int32
      description: "O número de instâncias de <xref:System.Object>na matriz.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Devolve um <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna do <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public virtual System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna."
  overload: System.Data.Common.DbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> está fechado."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém dados como um <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Invocar GetStream só suporta a obtenção de valores que pode ser convertido para matrizes de bytes.       Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.Stream GetStream (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Obtém dados como um <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    return:
      type: System.IO.Stream
      description: "O objeto devolvido."
  overload: System.Data.Common.DbDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentou ler uma coluna de leitura anteriormente no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo devolvido não era um dos tipos abaixo: udt - binário - imagem - varbinary -"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como uma instância do <xref:System.String>.</xref:System.String>"
  syntax:
    content: public abstract string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.String
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém dados como um <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: "Invocar GetTextReader só suporta a obtenção de valores que pode ser convertido para matrizes de caráter (cadeias).       Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.TextReader GetTextReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Obtém dados como um <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
    return:
      type: System.IO.TextReader
      description: "O objeto devolvido."
  overload: System.Data.Common.DbDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentou ler uma coluna de leitura anteriormente no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo devolvido não era um dos tipos abaixo: - char - nchar - ntext - nvarchar - texto - varchar"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como uma instância do <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public abstract object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Preenche uma matriz de objetos com os valores da coluna da linha actual."
  syntax:
    content: public abstract int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de <xref:System.Object>na qual copiar as colunas de atributo.</xref:System.Object>"
    return:
      type: System.Int32
      description: "O número de instâncias de <xref:System.Object>na matriz.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.HasRows
  id: HasRows
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém um valor que indica se esta <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> contém uma ou mais linhas."
  syntax:
    content: public abstract bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> contém uma ou mais linhas; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> está fechado."
  syntax:
    content: public abstract bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> é fechada, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsClosed*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> está fechado."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém um valor que indica se a coluna contém valores em falta ou não existente."
  remarks: "Chamar este método para verificar para métodos de introdução de valores da coluna nulo antes de chamar o escrito (por exemplo, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, e assim sucessivamente) para evitar que gera um erro.</xref:System.Data.Common.DbDataReader.GetChar%2A> </xref:System.Data.Common.DbDataReader.GetByte%2A>"
  syntax:
    content: public abstract bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coluna especificada é equivalente ao <xref href=&quot;System.DBNull&quot;> </xref>; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  id: IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Uma versão assíncrona de <xref:System.Data.Common.DbDataReader.IsDBNull*>, que obtém um valor que indica se a coluna contém valores inexistente ou está em falta.</xref:System.Data.Common.DbDataReader.IsDBNull*>"
  remarks: "Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna baseado em zero a recuperar."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de coluna especificada é equivalente ao <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentativa de leitura de uma coluna anteriormente leitura no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Uma versão assíncrona de <xref:System.Data.Common.DbDataReader.IsDBNull*>, que obtém um valor que indica se a coluna contém valores inexistente ou está em falta.</xref:System.Data.Common.DbDataReader.IsDBNull*> Opcionalmente, envia uma notificação que operações devem ser canceladas."
  remarks: "Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna baseado em zero a recuperar."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento, propaga uma notificação que operações deverá ser canceladas. Isto garante o cancelamento. Uma definição de <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;> </xref> torna este método equivalente ao <xref:System.Data.Common.DbDataReader.IsDBNullAsync*>.</xref:System.Data.Common.DbDataReader.IsDBNullAsync*> A tarefa devolvida tem de ser marcada como cancelada."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de coluna especificada é equivalente ao <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentativa de leitura de uma coluna anteriormente leitura no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como uma instância do <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public abstract object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O índice transmitido estava fora do intervalo de 0 a <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o valor da coluna especificada como uma instância do <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public abstract object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Não foi encontrada nenhuma coluna com o nome especificado."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResult
  id: NextResult
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Avança o leitor para o resultado seguinte ao ler os resultados de um lote de instruções."
  remarks: "Este método permite-lhe processar vários conjuntos de resultados devolvidos quando um lote foi submetido para o fornecedor de dados."
  syntax:
    content: public abstract bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não existirem mais conjuntos de resultados; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync
  id: NextResultAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Uma versão assíncrona de <> </> *>, que avança leitor para o resultado seguinte ao ler os resultados de um lote de instruções.       Invoca <> </> *> com CancellationToken.None."
  remarks: "Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> NextResultAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Ocorreu um erro ao executar o texto do comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Esta é a versão assíncrona de <> </> *>. Fornecedores devem substituir com uma implementação adequada. O <code> cancellationToken </code> , opcionalmente, podem ser ignoradas.       A implementação predefinida invoca o síncrona <> </> *> método e devolve uma tarefa concluída, o thread que efectua a bloquear. A implementação predefinida irá devolver uma tarefa cancelada se passado um já cancelada <code> cancellationToken </code>. Exceções acionadas por <xref:System.Data.Common.DbDataReader.NextResult*>serão comunicadas através da propriedade de exceção da tarefa devolveu.</xref:System.Data.Common.DbDataReader.NextResult*>       Não devem ser invocadas outros métodos e propriedades do objeto DbDataReader enquanto a tarefa devolvida ainda não foi concluída."
  remarks: "Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Ocorreu um erro ao executar o texto do comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Read
  id: Read
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Avança o leitor para o seguinte registo num conjunto de resultados."
  remarks: "A posição de predefinido de um leitor de dados é antes do primeiro registo. Por conseguinte, tem de chamar leitura para começar a aceder aos dados."
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não existirem mais linhas; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync
  id: ReadAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Uma versão assíncrona de <> </> *>, leitor que avança para o seguinte registo num conjunto de resultados. Este método invoca <> </> *> com CancellationToken.None."
  remarks: "Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> ReadAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Ocorreu um erro ao executar o texto do comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Esta é a versão assíncrona de <> </> *>.  Fornecedores devem substituir com uma implementação adequada. O cancellationToken, opcionalmente, pode ser ignorada.       A implementação predefinida invoca o síncrona <> </> *> método e devolve uma tarefa concluída, o thread que efectua a bloquear. A implementação predefinida irá devolver uma tarefa cancelada se passado um cancellationToken já cancelada.  Exceções acionadas por leitura serão comunicadas através da propriedade devolvida de exceção da tarefa.       Não invoque outros métodos e propriedades do <xref uid=&quot;langword_csharp_DbDataReader&quot; name=&quot;DbDataReader&quot; href=&quot;&quot;> </xref> objeto até que a tarefa devolvida esteja concluída."
  remarks: "Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Ocorreu um erro ao executar o texto do comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o número de linhas alterada, inseridas ou eliminadas pela execução da instrução SQL."
  remarks: "O `RecordsAffected` propriedade não está definida até que todas as linhas são lidas e fechar o `DataReader`."
  syntax:
    content: public abstract int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "O número de linhas alterado, inserir ou eliminado. -1 para instruções SELECT; 0 se não existem linhas foram afetadas ou a instrução falhou."
  overload: System.Data.Common.DbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Para obter uma descrição deste membro, consulte &lt;xref:System.Data.IDataRecord.GetData%2A?displayProperty=fullName&gt;."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.Common.DbDataReader>instância é convertida para um <xref:System.Data.IDataRecord>interface.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbDataReader>"
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.IDataReader
      description: "Uma instância de <xref href=&quot;System.Data.IDataReader&quot;> </xref> a ser utilizado quando o campo aponta para dados estruturados mais remotos."
  overload: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém o número de campos no <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> que não estão ocultas."
  remarks: "Este valor é utilizado para determinar o número de campos no <xref:System.Data.Common.DbDataReader>estão visíveis.</xref:System.Data.Common.DbDataReader> Por exemplo, um SELECIONE numa chave primária parcial devolve as restantes partes da chave como campos ocultos. Os campos ocultos são sempre acrescentados atrás os campos visível."
  syntax:
    content: public virtual int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "O número de campos que não estão ocultas."
  overload: System.Data.Common.DbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.Data.Common.DbDataReader.#ctor
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
- uid: System.Data.Common.DbDataReader.Close
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
- uid: System.Data.Common.DbDataReader.Depth
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbDataReader.Dispose
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbDataReader.FieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Common.DbDataReader.GetEnumerator
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
- uid: System.Data.Common.DbDataReader.HasRows
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
- uid: System.Data.Common.DbDataReader.Item(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
- uid: System.Data.Common.DbDataReader.NextResult
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
- uid: System.Data.Common.DbDataReader.NextResultAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.Read
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
- uid: System.Data.Common.DbDataReader.ReadAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.RecordsAffected
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
- uid: System.Data.Common.DbDataReader.#ctor*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader.DbDataReader
- uid: System.Data.Common.DbDataReader.Close*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close
  nameWithType: DbDataReader.Close
- uid: System.Data.Common.DbDataReader.Depth*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
- uid: System.Data.Common.DbDataReader.Dispose*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose
  nameWithType: DbDataReader.Dispose
- uid: System.Data.Common.DbDataReader.FieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: DbDataReader.GetBoolean
- uid: System.Data.Common.DbDataReader.GetByte*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte
  nameWithType: DbDataReader.GetByte
- uid: System.Data.Common.DbDataReader.GetBytes*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: DbDataReader.GetBytes
- uid: System.Data.Common.DbDataReader.GetChar*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar
  nameWithType: DbDataReader.GetChar
- uid: System.Data.Common.DbDataReader.GetChars*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars
  nameWithType: DbDataReader.GetChars
- uid: System.Data.Common.DbDataReader.GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData
  nameWithType: DbDataReader.GetData
- uid: System.Data.Common.DbDataReader.GetDataTypeName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DbDataReader.GetDataTypeName
- uid: System.Data.Common.DbDataReader.GetDateTime*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: DbDataReader.GetDateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: DbDataReader.GetDbDataReader
- uid: System.Data.Common.DbDataReader.GetDecimal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: DbDataReader.GetDecimal
- uid: System.Data.Common.DbDataReader.GetDouble*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: DbDataReader.GetDouble
- uid: System.Data.Common.DbDataReader.GetEnumerator*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DbDataReader.GetEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: DbDataReader.GetFieldType
- uid: System.Data.Common.DbDataReader.GetFieldValue<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: DbDataReader.GetFieldValue<T>
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: DbDataReader.GetFieldValueAsync<T>
- uid: System.Data.Common.DbDataReader.GetFloat*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: DbDataReader.GetFloat
- uid: System.Data.Common.DbDataReader.GetGuid*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: DbDataReader.GetGuid
- uid: System.Data.Common.DbDataReader.GetInt16*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: DbDataReader.GetInt16
- uid: System.Data.Common.DbDataReader.GetInt32*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: DbDataReader.GetInt32
- uid: System.Data.Common.DbDataReader.GetInt64*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: DbDataReader.GetInt64
- uid: System.Data.Common.DbDataReader.GetName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName
  nameWithType: DbDataReader.GetName
- uid: System.Data.Common.DbDataReader.GetOrdinal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DbDataReader.GetOrdinal
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DbDataReader.GetProviderSpecificFieldType
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DbDataReader.GetProviderSpecificValue
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DbDataReader.GetProviderSpecificValues
- uid: System.Data.Common.DbDataReader.GetSchemaTable*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbDataReader.GetSchemaTable
- uid: System.Data.Common.DbDataReader.GetStream*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream
  nameWithType: DbDataReader.GetStream
- uid: System.Data.Common.DbDataReader.GetString*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString
  nameWithType: DbDataReader.GetString
- uid: System.Data.Common.DbDataReader.GetTextReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: DbDataReader.GetTextReader
- uid: System.Data.Common.DbDataReader.GetValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue
  nameWithType: DbDataReader.GetValue
- uid: System.Data.Common.DbDataReader.GetValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues
  nameWithType: DbDataReader.GetValues
- uid: System.Data.Common.DbDataReader.HasRows*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: DbDataReader.IsDBNull
- uid: System.Data.Common.DbDataReader.IsDBNullAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: DbDataReader.IsDBNullAsync
- uid: System.Data.Common.DbDataReader.Item*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item
  nameWithType: DbDataReader.Item
- uid: System.Data.Common.DbDataReader.NextResult*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult
  nameWithType: DbDataReader.NextResult
- uid: System.Data.Common.DbDataReader.NextResultAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: DbDataReader.NextResultAsync
- uid: System.Data.Common.DbDataReader.Read*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read
  nameWithType: DbDataReader.Read
- uid: System.Data.Common.DbDataReader.ReadAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: DbDataReader.ReadAsync
- uid: System.Data.Common.DbDataReader.RecordsAffected*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.Common.DbDataReader.VisibleFieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
