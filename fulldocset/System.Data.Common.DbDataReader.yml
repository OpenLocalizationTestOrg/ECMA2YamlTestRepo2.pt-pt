### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbDataReader
  id: DbDataReader
  children:
  - System.Data.Common.DbDataReader.#ctor
  - System.Data.Common.DbDataReader.Close
  - System.Data.Common.DbDataReader.Depth
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.FieldCount
  - System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  - System.Data.Common.DbDataReader.GetByte(System.Int32)
  - System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetChar(System.Int32)
  - System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  - System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  - System.Data.Common.DbDataReader.GetDouble(System.Int32)
  - System.Data.Common.DbDataReader.GetEnumerator
  - System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetFloat(System.Int32)
  - System.Data.Common.DbDataReader.GetGuid(System.Int32)
  - System.Data.Common.DbDataReader.GetInt16(System.Int32)
  - System.Data.Common.DbDataReader.GetInt32(System.Int32)
  - System.Data.Common.DbDataReader.GetInt64(System.Int32)
  - System.Data.Common.DbDataReader.GetName(System.Int32)
  - System.Data.Common.DbDataReader.GetOrdinal(System.String)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetSchemaTable
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetString(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.GetValue(System.Int32)
  - System.Data.Common.DbDataReader.GetValues(System.Object[])
  - System.Data.Common.DbDataReader.HasRows
  - System.Data.Common.DbDataReader.IsClosed
  - System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Item(System.Int32)
  - System.Data.Common.DbDataReader.Item(System.String)
  - System.Data.Common.DbDataReader.NextResult
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Read
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.RecordsAffected
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
  type: Class
  summary: "Reads a forward-only stream of rows from a data source."
  syntax:
    content: 'public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.IEnumerable
  - System.Data.IDataReader
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> class."
  syntax:
    content: protected DbDataReader ();
    parameters: []
  overload: System.Data.Common.DbDataReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Close
  id: Close
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Closes the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Depth
  id: Depth
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets a value indicating the depth of nesting for the current row."
  remarks: "The outermost table has a depth of zero."
  syntax:
    content: public abstract int Depth { get; }
    return:
      type: System.Int32
      description: "The depth of nesting for the current row."
  overload: System.Data.Common.DbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose
  id: Dispose
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Releases all resources used by the current instance of the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> class."
  remarks: "Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>. The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object&quot;s `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Releases the managed resources used by the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> and optionally releases the unmanaged resources."
  remarks: "This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the number of columns in the current row."
  remarks: "Includes hidden fields. Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields."
  syntax:
    content: public abstract int FieldCount { get; }
    return:
      type: System.Int32
      description: "The number of columns in the current row."
  overload: System.Data.Common.DbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "There is no current connection to an instance of SQL Server."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a Boolean."
  syntax:
    content: public abstract bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Boolean
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a byte."
  syntax:
    content: public abstract byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Byte
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Reads a stream of bytes from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>."
  syntax:
    content: public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    - id: dataOffset
      type: System.Int64
      description: "The index within the row from which to begin the read operation."
    - id: buffer
      type: System.Byte[]
      description: "The buffer into which to copy the data."
    - id: bufferOffset
      type: System.Int32
      description: "The index with the buffer to which the data will be copied."
    - id: length
      type: System.Int32
      description: "The maximum number of characters to read."
    return:
      type: System.Int64
      description: "The actual number of bytes read."
  overload: System.Data.Common.DbDataReader.GetBytes*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a single character."
  syntax:
    content: public abstract char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Char
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Reads a stream of characters from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>."
  syntax:
    content: public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    - id: dataOffset
      type: System.Int64
      description: "The index within the row from which to begin the read operation."
    - id: buffer
      type: System.Char[]
      description: "The buffer into which to copy the data."
    - id: bufferOffset
      type: System.Int32
      description: "The index with the buffer to which the data will be copied."
    - id: length
      type: System.Int32
      description: "The maximum number of characters to read."
    return:
      type: System.Int64
      description: "The actual number of characters read."
  overload: System.Data.Common.DbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Returns a <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object for the requested column ordinal."
  syntax:
    content: public System.Data.Common.DbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets name of the data type of the specified column."
  remarks: "```  \nprivate static void GetDataTypes(String connectiongString) {       \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";  \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();               \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            for (Int32 i = 0; i < reader.FieldCount; i++) {  \n               Console.WriteLine(\"ColumnName:{0,-15}DataType:{1,-15}\",reader.GetName(i),reader.GetDataTypeName(i));  \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.String
      description: "A string representing the name of the data type."
  overload: System.Data.Common.DbDataReader.GetDataTypeName*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a <xref:System.DateTime> object."
  syntax:
    content: public abstract DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.DateTime
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Returns a <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object for the requested column ordinal that can be overridden with a provider-specific implementation."
  syntax:
    content: protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a <xref:System.Decimal> object."
  syntax:
    content: public abstract decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Decimal
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a double-precision floating point number."
  syntax:
    content: public abstract double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Double
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader."
  remarks: "Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.       If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects."
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader."
  overload: System.Data.Common.DbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the data type of the specified column."
  syntax:
    content: public abstract Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Type
      description: "The data type of the specified column."
  overload: System.Data.Common.DbDataReader.GetFieldType*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual T GetFieldValue<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Data.Common.DbDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  id: GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "To be added."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "To be added."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "To be added."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "To be added."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "To be added."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a single-precision floating point number."
  syntax:
    content: public abstract float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Single
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a globally-unique identifier (GUID)."
  syntax:
    content: public abstract Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Guid
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a 16-bit signed integer."
  syntax:
    content: public abstract short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Int16
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a 32-bit signed integer."
  remarks: "```  \nprivate static void GetCredits(String connectiongString) {  \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";   \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();   \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            while (reader.Read()) {  \n               // Credits column is the integer column, and you can use the GetInt32 method                        \n               // to return a a 32-bit signed integer.                       \n               Console.WriteLine(\"Course:{0,-15} Credits:{1}\",reader[1],reader.GetInt32(2));   \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Int32
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as a 64-bit signed integer."
  syntax:
    content: public abstract long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Int64
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the name of the column, given the zero-based column ordinal."
  syntax:
    content: public abstract string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.String
      description: "The name of the specified column."
  overload: System.Data.Common.DbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the column ordinal given the name of the column."
  syntax:
    content: public abstract int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the column."
    return:
      type: System.Int32
      description: "The zero-based column ordinal."
  overload: System.Data.Common.DbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "The name specified is not a valid column name."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Returns the provider-specific field type of the specified column."
  syntax:
    content: public virtual Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Type
      description: "The <xref:System.Type> object that describes the data type of the specified column."
  overload: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as an instance of <xref:System.Object>."
  remarks: "To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>."
  syntax:
    content: public virtual object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Object
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets all provider-specific attribute columns in the collection for the current row."
  syntax:
    content: public virtual int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "An array of <xref:System.Object> into which to copy the attribute columns."
    return:
      type: System.Int32
      description: "The number of instances of <xref:System.Object> in the array."
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Returns a <xref href=&quot;System.Data.DataTable&quot;></xref> that describes the column metadata of the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref>."
  syntax:
    content: public virtual System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> that describes the column metadata."
  overload: System.Data.Common.DbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> is closed."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retrieves data as a <xref:System.IO.Stream>."
  remarks: "GetStream only supports the retrieval of values that can be converted to byte arrays.       For more information, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.Stream GetStream (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Retrieves data as a <xref:System.IO.Stream>."
    return:
      type: System.IO.Stream
      description: "The returned object."
  overload: System.Data.Common.DbDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The connection drops or is closed during the data retrieval.       The <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> is closed during the data retrieval.       There is no data ready to be read (for example, the first <xref:System.Data.Common.DbDataReader.Read*> hasn&quot;t been called, or returned false).       Tried to read a previously-read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Trying to read a column that does not exist."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The returned type was not one of the types below:      -   binary      -   image      -   varbinary      -   udt"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as an instance of <xref:System.String>."
  syntax:
    content: public abstract string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.String
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retrieves data as a <xref:System.IO.TextReader>."
  remarks: "GetTextReader only supports the retrieval of values that can be converted to character arrays (strings).       For more information, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.TextReader GetTextReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Retrieves data as a <xref:System.IO.TextReader>."
    return:
      type: System.IO.TextReader
      description: "The returned object."
  overload: System.Data.Common.DbDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The connection drops or is closed during the data retrieval.       The <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> is closed during the data retrieval.       There is no data ready to be read (for example, the first <xref:System.Data.Common.DbDataReader.Read*> hasn&quot;t been called, or returned false).       Tried to read a previously-read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Trying to read a column that does not exist."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The returned type was not one of the types below:      -   char      -   nchar      -   ntext      -   nvarchar      -   text      -   varchar"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as an instance of <xref:System.Object>."
  syntax:
    content: public abstract object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Object
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Populates an array of objects with the column values of the current row."
  syntax:
    content: public abstract int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "An array of <xref:System.Object> into which to copy the attribute columns."
    return:
      type: System.Int32
      description: "The number of instances of <xref:System.Object> in the array."
  overload: System.Data.Common.DbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.HasRows
  id: HasRows
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets a value that indicates whether this <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> contains one or more rows."
  syntax:
    content: public abstract bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> contains one or more rows; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets a value indicating whether the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> is closed."
  syntax:
    content: public abstract bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> is closed; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbDataReader.IsClosed*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> is closed."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets a value that indicates whether the column contains nonexistent or missing values."
  remarks: "Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error."
  syntax:
    content: public abstract bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified column is equivalent to <xref href=&quot;System.DBNull&quot;></xref>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  id: IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbDataReader.IsDBNull*>, which gets a value that indicates whether the column contains non-existent or missing values."
  remarks: "For more information, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column to be retrieved."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified column value is equivalent to <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;></xref> otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The connection drops or is closed during the data retrieval.       The <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> is closed during the data retrieval.       There is no data ready to be read (for example, the first <xref:System.Data.Common.DbDataReader.Read*> hasn&quot;t been called, or returned false).       Trying to read a previously read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Trying to read a column that does not exist."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbDataReader.IsDBNull*>, which gets a value that indicates whether the column contains non-existent or missing values. Optionally, sends a notification that operations should be cancelled."
  remarks: "For more information, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column to be retrieved."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;></xref> makes this method equivalent to <xref:System.Data.Common.DbDataReader.IsDBNullAsync*>. The returned task must be marked as cancelled."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified column value is equivalent to <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;></xref> otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The connection drops or is closed during the data retrieval.       The <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> is closed during the data retrieval.       There is no data ready to be read (for example, the first <xref:System.Data.Common.DbDataReader.Read*> hasn&quot;t been called, or returned false).       Trying to read a previously read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Trying to read a column that does not exist."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as an instance of <xref:System.Object>."
  syntax:
    content: public abstract object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Object
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "The index passed was outside the range of 0 through <xref:System.Data.IDataRecord.FieldCount*>."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the value of the specified column as an instance of <xref:System.Object>."
  syntax:
    content: public abstract object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "The name of the column."
    return:
      type: System.Object
      description: "The value of the specified column."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "No column with the specified name was found."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResult
  id: NextResult
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Advances the reader to the next result when reading the results of a batch of statements."
  remarks: "This method allows you to process multiple result sets returned when a batch is submitted to the data provider."
  syntax:
    content: public abstract bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there are more result sets; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync
  id: NextResultAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbDataReader.NextResult*>, which advances the reader to the next result when reading the results of a batch of statements.       Invokes <xref:System.Data.Common.DbDataReader.NextResultAsync*> with CancellationToken.None."
  remarks: "For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> NextResultAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "A task representing the asynchronous operation."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "An error occurred while executing the command text."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "This is the asynchronous version of <xref:System.Data.Common.DbDataReader.NextResult*>. Providers should override with an appropriate implementation. The <code>cancellationToken</code> may optionally be ignored.       The default implementation invokes the synchronous <xref:System.Data.Common.DbDataReader.NextResult*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled <code>cancellationToken</code>. Exceptions thrown by <xref:System.Data.Common.DbDataReader.NextResult*> will be communicated via the returned Task Exception property.       Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed."
  remarks: "For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "The cancellation instruction."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "A task representing the asynchronous operation."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "An error occurred while executing the command text."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Read
  id: Read
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Advances the reader to the next record in a result set."
  remarks: "The default position of a data reader is before the first record. Therefore, you must call Read to begin accessing data."
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there are more rows; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync
  id: ReadAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbDataReader.Read*>, which advances the reader to the next record in a result set. This method invokes <xref:System.Data.Common.DbDataReader.ReadAsync*> with CancellationToken.None."
  remarks: "For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> ReadAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "A task representing the asynchronous operation."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "An error occurred while executing the command text."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "This is the asynchronous version of <xref:System.Data.Common.DbDataReader.Read*>.  Providers should override with an appropriate implementation. The cancellationToken may optionally be ignored.       The default implementation invokes the synchronous <xref:System.Data.Common.DbDataReader.Read*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellationToken.  Exceptions thrown by Read will be communicated via the returned Task Exception property.       Do not invoke other methods and properties of the <xref uid=&quot;langword_csharp_DbDataReader&quot; name=&quot;DbDataReader&quot; href=&quot;&quot;></xref> object until the returned Task is complete."
  remarks: "For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "The cancellation instruction."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "A task representing the asynchronous operation."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "An error occurred while executing the command text."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the number of rows changed, inserted, or deleted by execution of the SQL statement."
  remarks: "The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`."
  syntax:
    content: public abstract int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed."
  overload: System.Data.Common.DbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "For a description of this member, see &lt;xref:System.Data.IDataRecord.GetData%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface."
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.IDataReader
      description: "An instance of <xref href=&quot;System.Data.IDataReader&quot;></xref> to be used when the field points to more remote structured data."
  overload: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the number of fields in the <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> that are not hidden."
  remarks: "This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields."
  syntax:
    content: public virtual int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "The number of fields that are not hidden."
  overload: System.Data.Common.DbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.Data.Common.DbDataReader.#ctor
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
- uid: System.Data.Common.DbDataReader.Close
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
- uid: System.Data.Common.DbDataReader.Depth
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbDataReader.Dispose
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbDataReader.FieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Common.DbDataReader.GetEnumerator
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
- uid: System.Data.Common.DbDataReader.HasRows
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
- uid: System.Data.Common.DbDataReader.Item(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
- uid: System.Data.Common.DbDataReader.NextResult
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
- uid: System.Data.Common.DbDataReader.NextResultAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.Read
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
- uid: System.Data.Common.DbDataReader.ReadAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.RecordsAffected
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
- uid: System.Data.Common.DbDataReader.#ctor*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader.DbDataReader
- uid: System.Data.Common.DbDataReader.Close*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close
  nameWithType: DbDataReader.Close
- uid: System.Data.Common.DbDataReader.Depth*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
- uid: System.Data.Common.DbDataReader.Dispose*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose
  nameWithType: DbDataReader.Dispose
- uid: System.Data.Common.DbDataReader.FieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: DbDataReader.GetBoolean
- uid: System.Data.Common.DbDataReader.GetByte*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte
  nameWithType: DbDataReader.GetByte
- uid: System.Data.Common.DbDataReader.GetBytes*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: DbDataReader.GetBytes
- uid: System.Data.Common.DbDataReader.GetChar*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar
  nameWithType: DbDataReader.GetChar
- uid: System.Data.Common.DbDataReader.GetChars*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars
  nameWithType: DbDataReader.GetChars
- uid: System.Data.Common.DbDataReader.GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData
  nameWithType: DbDataReader.GetData
- uid: System.Data.Common.DbDataReader.GetDataTypeName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DbDataReader.GetDataTypeName
- uid: System.Data.Common.DbDataReader.GetDateTime*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: DbDataReader.GetDateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: DbDataReader.GetDbDataReader
- uid: System.Data.Common.DbDataReader.GetDecimal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: DbDataReader.GetDecimal
- uid: System.Data.Common.DbDataReader.GetDouble*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: DbDataReader.GetDouble
- uid: System.Data.Common.DbDataReader.GetEnumerator*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DbDataReader.GetEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: DbDataReader.GetFieldType
- uid: System.Data.Common.DbDataReader.GetFieldValue<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: DbDataReader.GetFieldValue<T>
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: DbDataReader.GetFieldValueAsync<T>
- uid: System.Data.Common.DbDataReader.GetFloat*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: DbDataReader.GetFloat
- uid: System.Data.Common.DbDataReader.GetGuid*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: DbDataReader.GetGuid
- uid: System.Data.Common.DbDataReader.GetInt16*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: DbDataReader.GetInt16
- uid: System.Data.Common.DbDataReader.GetInt32*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: DbDataReader.GetInt32
- uid: System.Data.Common.DbDataReader.GetInt64*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: DbDataReader.GetInt64
- uid: System.Data.Common.DbDataReader.GetName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName
  nameWithType: DbDataReader.GetName
- uid: System.Data.Common.DbDataReader.GetOrdinal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DbDataReader.GetOrdinal
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DbDataReader.GetProviderSpecificFieldType
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DbDataReader.GetProviderSpecificValue
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DbDataReader.GetProviderSpecificValues
- uid: System.Data.Common.DbDataReader.GetSchemaTable*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbDataReader.GetSchemaTable
- uid: System.Data.Common.DbDataReader.GetStream*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream
  nameWithType: DbDataReader.GetStream
- uid: System.Data.Common.DbDataReader.GetString*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString
  nameWithType: DbDataReader.GetString
- uid: System.Data.Common.DbDataReader.GetTextReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: DbDataReader.GetTextReader
- uid: System.Data.Common.DbDataReader.GetValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue
  nameWithType: DbDataReader.GetValue
- uid: System.Data.Common.DbDataReader.GetValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues
  nameWithType: DbDataReader.GetValues
- uid: System.Data.Common.DbDataReader.HasRows*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: DbDataReader.IsDBNull
- uid: System.Data.Common.DbDataReader.IsDBNullAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: DbDataReader.IsDBNullAsync
- uid: System.Data.Common.DbDataReader.Item*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item
  nameWithType: DbDataReader.Item
- uid: System.Data.Common.DbDataReader.NextResult*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult
  nameWithType: DbDataReader.NextResult
- uid: System.Data.Common.DbDataReader.NextResultAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: DbDataReader.NextResultAsync
- uid: System.Data.Common.DbDataReader.Read*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read
  nameWithType: DbDataReader.Read
- uid: System.Data.Common.DbDataReader.ReadAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: DbDataReader.ReadAsync
- uid: System.Data.Common.DbDataReader.RecordsAffected*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.Common.DbDataReader.VisibleFieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
