### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  id: KerberosSecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  langs:
  - csharp
  name: KerberosSecurityTokenProvider
  nameWithType: KerberosSecurityTokenProvider
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  type: Class
  summary: "Representa um fornecedor de tokens de segurança que fornece <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> tokens de segurança para um SOAP remetente da mensagem."
  remarks: "Na maioria das instâncias a KerberosSecurityTokenProvider classe não tem de ser chamado diretamente, como se chama quando um cliente envia uma mensagem SOAP requer um <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>token de segurança.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> Especificamente, o cliente especifica o tipo de segurança token necessários utilizando o <xref:System.ServiceModel.Description.ClientCredentials>classe e o <xref:System.ServiceModel.Description.ClientCredentials>classe chamadas a <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>método para obter um token de segurança.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> </xref:System.ServiceModel.Description.ClientCredentials> </xref:System.ServiceModel.Description.ClientCredentials> Quando o token de segurança necessário é um <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>token de segurança, o <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>chamadas de método de <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29>método.</xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> </xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>"
  syntax:
    content: 'public class KerberosSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenProvider
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref> classe com o nome principal de serviço especificado."
  remarks: "Este construtor define o nível de representação é permitido por um cliente para <xref:System.Security.Principal.TokenImpersonationLevel> `Identification`.</xref:System.Security.Principal.TokenImpersonationLevel> O contexto actual do thread de chamada (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) é utilizado como uma identidade do cliente.</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>"
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "O nome do principal de serviço para obter um <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança para."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref> classe com o nome principal de serviço especificado e se um cliente permite que um destinatário do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança para representar as credenciais do cliente."
  remarks: "O contexto actual do thread de chamada (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) é utilizado como uma identidade do cliente.</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>"
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "O nome do principal de serviço para obter um <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança para."
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A <xref:System.Security.Principal.TokenImpersonationLevel>que especifica o grau em que um destinatário do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança pode agir em nome do cliente.</xref:System.Security.Principal.TokenImpersonationLevel>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Identification&quot; name=&quot;Identification&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref> classe com o nome do principal do serviço especificado, a identidade do cliente, e se um cliente permite que um destinatário do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança para representar as credenciais do cliente."
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "O nome do principal de serviço para obter um <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança para."
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A <xref:System.Security.Principal.TokenImpersonationLevel>que especifica o grau em que um destinatário do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança pode agir em nome do processo de cliente.</xref:System.Security.Principal.TokenImpersonationLevel>"
    - id: networkCredential
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential>que representa a identidade do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>.</xref:System.Net.NetworkCredential>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Identification&quot; name=&quot;Identification&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança."
  remarks: "O <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>método é denominado pelo <xref:System.ServiceModel.Description.ClientCredentials>classe quando um cliente envia uma mensagem SOAP e um <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>token de segurança é necessária.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> </xref:System.ServiceModel.Description.ClientCredentials> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>       O <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>método chama o método de GetTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>"
  syntax:
    content: protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>que especifica o valor de tempo limite para a mensagem que obtém o token de segurança.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token de segurança a obter."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  id: NetworkCredential
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém a identidade do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança."
  remarks: "Quando o valor da propriedade NetworkCredential é `null` e <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>método é denominado, o contexto actual do thread de chamada (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) é utilizado como uma identidade do cliente.</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> </xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>"
  syntax:
    content: public System.Net.NetworkCredential NetworkCredential { get; }
    return:
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential>que representa a identidade do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>.</xref:System.Net.NetworkCredential>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  id: ServicePrincipalName
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém o nome principal de serviço do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança para obter."
  syntax:
    content: public string ServicePrincipalName { get; }
    return:
      type: System.String
      description: "O nome principal de serviço do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança para obter."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  id: TokenImpersonationLevel
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um valor que especifica o grau em que um destinatário do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança pode agir em nome do cliente."
  remarks: "A propriedade TokenImpersonationLevel deve ser `Identification` ou `Impersonation`."
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel { get; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A <xref:System.Security.Principal.TokenImpersonationLevel>que especifica o grau em que um destinatário do <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> token de segurança pode agir em nome do cliente.</xref:System.Security.Principal.TokenImpersonationLevel>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
