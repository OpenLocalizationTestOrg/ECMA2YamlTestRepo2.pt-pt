### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueue
  id: MessageQueue
  children:
  - System.Messaging.MessageQueue.#ctor
  - System.Messaging.MessageQueue.#ctor(System.String)
  - System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)
  - System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)
  - System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)
  - System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)
  - System.Messaging.MessageQueue.AccessMode
  - System.Messaging.MessageQueue.Authenticate
  - System.Messaging.MessageQueue.BasePriority
  - System.Messaging.MessageQueue.BeginPeek
  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)
  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)
  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)
  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)
  - System.Messaging.MessageQueue.BeginReceive
  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)
  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)
  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)
  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)
  - System.Messaging.MessageQueue.CanRead
  - System.Messaging.MessageQueue.CanWrite
  - System.Messaging.MessageQueue.Category
  - System.Messaging.MessageQueue.ClearConnectionCache
  - System.Messaging.MessageQueue.Close
  - System.Messaging.MessageQueue.Create(System.String)
  - System.Messaging.MessageQueue.Create(System.String,System.Boolean)
  - System.Messaging.MessageQueue.CreateCursor
  - System.Messaging.MessageQueue.CreateTime
  - System.Messaging.MessageQueue.DefaultPropertiesToSend
  - System.Messaging.MessageQueue.Delete(System.String)
  - System.Messaging.MessageQueue.DenySharedReceive
  - System.Messaging.MessageQueue.Dispose(System.Boolean)
  - System.Messaging.MessageQueue.EnableConnectionCache
  - System.Messaging.MessageQueue.EncryptionRequired
  - System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)
  - System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)
  - System.Messaging.MessageQueue.Exists(System.String)
  - System.Messaging.MessageQueue.FormatName
  - System.Messaging.MessageQueue.Formatter
  - System.Messaging.MessageQueue.GetAllMessages
  - System.Messaging.MessageQueue.GetEnumerator
  - System.Messaging.MessageQueue.GetMachineId(System.String)
  - System.Messaging.MessageQueue.GetMessageEnumerator
  - System.Messaging.MessageQueue.GetMessageEnumerator2
  - System.Messaging.MessageQueue.GetMessageQueueEnumerator
  - System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)
  - System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)
  - System.Messaging.MessageQueue.GetPublicQueues
  - System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)
  - System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)
  - System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)
  - System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)
  - System.Messaging.MessageQueue.GetSecurityContext
  - System.Messaging.MessageQueue.Id
  - System.Messaging.MessageQueue.InfiniteQueueSize
  - System.Messaging.MessageQueue.InfiniteTimeout
  - System.Messaging.MessageQueue.Label
  - System.Messaging.MessageQueue.LastModifyTime
  - System.Messaging.MessageQueue.MachineName
  - System.Messaging.MessageQueue.MaximumJournalSize
  - System.Messaging.MessageQueue.MaximumQueueSize
  - System.Messaging.MessageQueue.MessageReadPropertyFilter
  - System.Messaging.MessageQueue.MulticastAddress
  - System.Messaging.MessageQueue.Path
  - System.Messaging.MessageQueue.Peek
  - System.Messaging.MessageQueue.Peek(System.TimeSpan)
  - System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)
  - System.Messaging.MessageQueue.PeekByCorrelationId(System.String)
  - System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)
  - System.Messaging.MessageQueue.PeekById(System.String)
  - System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)
  - System.Messaging.MessageQueue.PeekByLookupId(System.Int64)
  - System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)
  - System.Messaging.MessageQueue.PeekCompleted
  - System.Messaging.MessageQueue.Purge
  - System.Messaging.MessageQueue.QueueName
  - System.Messaging.MessageQueue.ReadHandle
  - System.Messaging.MessageQueue.Receive
  - System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.Receive(System.TimeSpan)
  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)
  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)
  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)
  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.ReceiveById(System.String)
  - System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)
  - System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)
  - System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.ReceiveCompleted
  - System.Messaging.MessageQueue.Refresh
  - System.Messaging.MessageQueue.ResetPermissions
  - System.Messaging.MessageQueue.Send(System.Object)
  - System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.Send(System.Object,System.String)
  - System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)
  - System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)
  - System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)
  - System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.MessageQueue.SynchronizingObject
  - System.Messaging.MessageQueue.Transactional
  - System.Messaging.MessageQueue.UseJournalQueue
  - System.Messaging.MessageQueue.WriteHandle
  langs:
  - csharp
  name: MessageQueue
  nameWithType: MessageQueue
  fullName: System.Messaging.MessageQueue
  type: Class
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("ReceiveCompleted")]

      [System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.InstallerType(typeof(System.Messaging.MessageQueueInstaller))]

      [System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageQueueConverter))]

      [System.Messaging.MessagingDescription("MessageQueueDesc")]

      public class MessageQueue : System.ComponentModel.Component, System.Collections.IEnumerable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Messaging.MessageQueue.#ctor
  id: '#ctor'
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MessageQueue()
  nameWithType: MessageQueue.MessageQueue()
  fullName: System.Messaging.MessageQueue.MessageQueue()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public MessageQueue ();
    parameters: []
  overload: System.Messaging.MessageQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MessageQueue(String)
  nameWithType: MessageQueue.MessageQueue(String)
  fullName: System.Messaging.MessageQueue.MessageQueue(String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public MessageQueue (string path);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MessageQueue(String,Boolean)
  nameWithType: MessageQueue.MessageQueue(String,Boolean)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public MessageQueue (string path, bool sharedModeDenyReceive);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
    - id: sharedModeDenyReceive
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)
  id: '#ctor(System.String,System.Messaging.QueueAccessMode)'
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MessageQueue(String,QueueAccessMode)
  nameWithType: MessageQueue.MessageQueue(String,QueueAccessMode)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,QueueAccessMode)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public MessageQueue (string path, System.Messaging.QueueAccessMode accessMode);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
    - id: accessMode
      type: System.Messaging.QueueAccessMode
      description: "To be added."
  overload: System.Messaging.MessageQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.Boolean,System.Boolean)'
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MessageQueue(String,Boolean,Boolean)
  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
    - id: sharedModeDenyReceive
      type: System.Boolean
      description: "To be added."
    - id: enableCache
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)
  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)'
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MessageQueue(String,Boolean,Boolean,QueueAccessMode)
  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache, System.Messaging.QueueAccessMode accessMode);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
    - id: sharedModeDenyReceive
      type: System.Boolean
      description: "To be added."
    - id: enableCache
      type: System.Boolean
      description: "To be added."
    - id: accessMode
      type: System.Messaging.QueueAccessMode
      description: "To be added."
  overload: System.Messaging.MessageQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.AccessMode
  id: AccessMode
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: AccessMode
  nameWithType: MessageQueue.AccessMode
  fullName: System.Messaging.MessageQueue.AccessMode
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.QueueAccessMode AccessMode { get; }
    return:
      type: System.Messaging.QueueAccessMode
      description: "To be added."
  overload: System.Messaging.MessageQueue.AccessMode*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Authenticate
  id: Authenticate
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Authenticate
  nameWithType: MessageQueue.Authenticate
  fullName: System.Messaging.MessageQueue.Authenticate
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public bool Authenticate { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BasePriority
  id: BasePriority
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BasePriority
  nameWithType: MessageQueue.BasePriority
  fullName: System.Messaging.MessageQueue.BasePriority
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public short BasePriority { get; set; }
    return:
      type: System.Int16
      description: "To be added."
  overload: System.Messaging.MessageQueue.BasePriority*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginPeek
  id: BeginPeek
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginPeek()
  nameWithType: MessageQueue.BeginPeek()
  fullName: System.Messaging.MessageQueue.BeginPeek()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginPeek ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginPeek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)
  id: BeginPeek(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginPeek(TimeSpan)
  nameWithType: MessageQueue.BeginPeek(TimeSpan)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginPeek (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginPeek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)
  id: BeginPeek(System.TimeSpan,System.Object)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginPeek(TimeSpan,Object)
  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: stateObject
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginPeek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)
  id: BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginPeek(TimeSpan,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject, AsyncCallback callback);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: stateObject
      type: System.Object
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginPeek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)
  id: BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginPeek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action, object state, AsyncCallback callback);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: cursor
      type: System.Messaging.Cursor
      description: "To be added."
    - id: action
      type: System.Messaging.PeekAction
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginPeek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginReceive
  id: BeginReceive
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginReceive()
  nameWithType: MessageQueue.BeginReceive()
  fullName: System.Messaging.MessageQueue.BeginReceive()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginReceive ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginReceive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)
  id: BeginReceive(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginReceive(TimeSpan)
  nameWithType: MessageQueue.BeginReceive(TimeSpan)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginReceive (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginReceive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)
  id: BeginReceive(System.TimeSpan,System.Object)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginReceive(TimeSpan,Object)
  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: stateObject
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginReceive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)
  id: BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginReceive(TimeSpan,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject, AsyncCallback callback);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: stateObject
      type: System.Object
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginReceive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)
  id: BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IAsyncResult BeginReceive (TimeSpan timeout, System.Messaging.Cursor cursor, object state, AsyncCallback callback);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: cursor
      type: System.Messaging.Cursor
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Messaging.MessageQueue.BeginReceive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.CanRead
  id: CanRead
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: CanRead
  nameWithType: MessageQueue.CanRead
  fullName: System.Messaging.MessageQueue.CanRead
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.CanWrite
  id: CanWrite
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: CanWrite
  nameWithType: MessageQueue.CanWrite
  fullName: System.Messaging.MessageQueue.CanWrite
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Category
  id: Category
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Category
  nameWithType: MessageQueue.Category
  fullName: System.Messaging.MessageQueue.Category
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public Guid Category { get; set; }
    return:
      type: System.Guid
      description: "To be added."
  overload: System.Messaging.MessageQueue.Category*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ClearConnectionCache
  id: ClearConnectionCache
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ClearConnectionCache()
  nameWithType: MessageQueue.ClearConnectionCache()
  fullName: System.Messaging.MessageQueue.ClearConnectionCache()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static void ClearConnectionCache ();
    parameters: []
  overload: System.Messaging.MessageQueue.ClearConnectionCache*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Close
  id: Close
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Close()
  nameWithType: MessageQueue.Close()
  fullName: System.Messaging.MessageQueue.Close()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Messaging.MessageQueue.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Create(System.String)
  id: Create(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Create(String)
  nameWithType: MessageQueue.Create(String)
  fullName: System.Messaging.MessageQueue.Create(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue Create (string path);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.MessageQueue
      description: "To be added."
  overload: System.Messaging.MessageQueue.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Create(System.String,System.Boolean)
  id: Create(System.String,System.Boolean)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Create(String,Boolean)
  nameWithType: MessageQueue.Create(String,Boolean)
  fullName: System.Messaging.MessageQueue.Create(String,Boolean)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue Create (string path, bool transactional);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
    - id: transactional
      type: System.Boolean
      description: "To be added."
    return:
      type: System.Messaging.MessageQueue
      description: "To be added."
  overload: System.Messaging.MessageQueue.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.CreateCursor
  id: CreateCursor
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: CreateCursor()
  nameWithType: MessageQueue.CreateCursor()
  fullName: System.Messaging.MessageQueue.CreateCursor()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Cursor CreateCursor ();
    parameters: []
    return:
      type: System.Messaging.Cursor
      description: "To be added."
  overload: System.Messaging.MessageQueue.CreateCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.CreateTime
  id: CreateTime
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: CreateTime
  nameWithType: MessageQueue.CreateTime
  fullName: System.Messaging.MessageQueue.CreateTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public DateTime CreateTime { get; }
    return:
      type: System.DateTime
      description: "To be added."
  overload: System.Messaging.MessageQueue.CreateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.DefaultPropertiesToSend
  id: DefaultPropertiesToSend
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: DefaultPropertiesToSend
  nameWithType: MessageQueue.DefaultPropertiesToSend
  fullName: System.Messaging.MessageQueue.DefaultPropertiesToSend
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend { get; set; }
    return:
      type: System.Messaging.DefaultPropertiesToSend
      description: "To be added."
  overload: System.Messaging.MessageQueue.DefaultPropertiesToSend*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Delete(System.String)
  id: Delete(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Delete(String)
  nameWithType: MessageQueue.Delete(String)
  fullName: System.Messaging.MessageQueue.Delete(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static void Delete (string path);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.DenySharedReceive
  id: DenySharedReceive
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: DenySharedReceive
  nameWithType: MessageQueue.DenySharedReceive
  fullName: System.Messaging.MessageQueue.DenySharedReceive
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public bool DenySharedReceive { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.DenySharedReceive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MessageQueue.Dispose(Boolean)
  fullName: System.Messaging.MessageQueue.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.EnableConnectionCache
  id: EnableConnectionCache
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: EnableConnectionCache
  nameWithType: MessageQueue.EnableConnectionCache
  fullName: System.Messaging.MessageQueue.EnableConnectionCache
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static bool EnableConnectionCache { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.EnableConnectionCache*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.EncryptionRequired
  id: EncryptionRequired
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: EncryptionRequired
  nameWithType: MessageQueue.EncryptionRequired
  fullName: System.Messaging.MessageQueue.EncryptionRequired
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }
    return:
      type: System.Messaging.EncryptionRequired
      description: "To be added."
  overload: System.Messaging.MessageQueue.EncryptionRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)
  id: EndPeek(System.IAsyncResult)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: EndPeek(IAsyncResult)
  nameWithType: MessageQueue.EndPeek(IAsyncResult)
  fullName: System.Messaging.MessageQueue.EndPeek(IAsyncResult)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message EndPeek (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.EndPeek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)
  id: EndReceive(System.IAsyncResult)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: EndReceive(IAsyncResult)
  nameWithType: MessageQueue.EndReceive(IAsyncResult)
  fullName: System.Messaging.MessageQueue.EndReceive(IAsyncResult)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message EndReceive (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.EndReceive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Exists(System.String)
  id: Exists(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Exists(String)
  nameWithType: MessageQueue.Exists(String)
  fullName: System.Messaging.MessageQueue.Exists(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.FormatName
  id: FormatName
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: FormatName
  nameWithType: MessageQueue.FormatName
  fullName: System.Messaging.MessageQueue.FormatName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public string FormatName { get; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.FormatName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Formatter
  id: Formatter
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Formatter
  nameWithType: MessageQueue.Formatter
  fullName: System.Messaging.MessageQueue.Formatter
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.IMessageFormatter Formatter { get; set; }
    return:
      type: System.Messaging.IMessageFormatter
      description: "To be added."
  overload: System.Messaging.MessageQueue.Formatter*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetAllMessages
  id: GetAllMessages
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetAllMessages()
  nameWithType: MessageQueue.GetAllMessages()
  fullName: System.Messaging.MessageQueue.GetAllMessages()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message[] GetAllMessages ();
    parameters: []
    return:
      type: System.Messaging.Message[]
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetAllMessages*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetEnumerator
  id: GetEnumerator
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MessageQueue.GetEnumerator()
  fullName: System.Messaging.MessageQueue.GetEnumerator()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetMachineId(System.String)
  id: GetMachineId(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetMachineId(String)
  nameWithType: MessageQueue.GetMachineId(String)
  fullName: System.Messaging.MessageQueue.GetMachineId(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static Guid GetMachineId (string machineName);
    parameters:
    - id: machineName
      type: System.String
      description: "To be added."
    return:
      type: System.Guid
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetMachineId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetMessageEnumerator
  id: GetMessageEnumerator
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetMessageEnumerator()
  nameWithType: MessageQueue.GetMessageEnumerator()
  fullName: System.Messaging.MessageQueue.GetMessageEnumerator()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.MessageEnumerator GetMessageEnumerator ();
    parameters: []
    return:
      type: System.Messaging.MessageEnumerator
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetMessageEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetMessageEnumerator2
  id: GetMessageEnumerator2
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetMessageEnumerator2()
  nameWithType: MessageQueue.GetMessageEnumerator2()
  fullName: System.Messaging.MessageQueue.GetMessageEnumerator2()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.MessageEnumerator GetMessageEnumerator2 ();
    parameters: []
    return:
      type: System.Messaging.MessageEnumerator
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetMessageEnumerator2*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator
  id: GetMessageQueueEnumerator
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetMessageQueueEnumerator()
  nameWithType: MessageQueue.GetMessageQueueEnumerator()
  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator ();
    parameters: []
    return:
      type: System.Messaging.MessageQueueEnumerator
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetMessageQueueEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)
  id: GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetMessageQueueEnumerator(MessageQueueCriteria)
  nameWithType: MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)
  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator (System.Messaging.MessageQueueCriteria criteria);
    parameters:
    - id: criteria
      type: System.Messaging.MessageQueueCriteria
      description: "To be added."
    return:
      type: System.Messaging.MessageQueueEnumerator
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetMessageQueueEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)
  id: GetPrivateQueuesByMachine(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetPrivateQueuesByMachine(String)
  nameWithType: MessageQueue.GetPrivateQueuesByMachine(String)
  fullName: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue[] GetPrivateQueuesByMachine (string machineName);
    parameters:
    - id: machineName
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.MessageQueue[]
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetPrivateQueuesByMachine*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetPublicQueues
  id: GetPublicQueues
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetPublicQueues()
  nameWithType: MessageQueue.GetPublicQueues()
  fullName: System.Messaging.MessageQueue.GetPublicQueues()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue[] GetPublicQueues ();
    parameters: []
    return:
      type: System.Messaging.MessageQueue[]
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetPublicQueues*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)
  id: GetPublicQueues(System.Messaging.MessageQueueCriteria)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetPublicQueues(MessageQueueCriteria)
  nameWithType: MessageQueue.GetPublicQueues(MessageQueueCriteria)
  fullName: System.Messaging.MessageQueue.GetPublicQueues(MessageQueueCriteria)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue[] GetPublicQueues (System.Messaging.MessageQueueCriteria criteria);
    parameters:
    - id: criteria
      type: System.Messaging.MessageQueueCriteria
      description: "To be added."
    return:
      type: System.Messaging.MessageQueue[]
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetPublicQueues*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)
  id: GetPublicQueuesByCategory(System.Guid)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetPublicQueuesByCategory(Guid)
  nameWithType: MessageQueue.GetPublicQueuesByCategory(Guid)
  fullName: System.Messaging.MessageQueue.GetPublicQueuesByCategory(Guid)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue[] GetPublicQueuesByCategory (Guid category);
    parameters:
    - id: category
      type: System.Guid
      description: "To be added."
    return:
      type: System.Messaging.MessageQueue[]
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetPublicQueuesByCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)
  id: GetPublicQueuesByLabel(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetPublicQueuesByLabel(String)
  nameWithType: MessageQueue.GetPublicQueuesByLabel(String)
  fullName: System.Messaging.MessageQueue.GetPublicQueuesByLabel(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue[] GetPublicQueuesByLabel (string label);
    parameters:
    - id: label
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.MessageQueue[]
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetPublicQueuesByLabel*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)
  id: GetPublicQueuesByMachine(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetPublicQueuesByMachine(String)
  nameWithType: MessageQueue.GetPublicQueuesByMachine(String)
  fullName: System.Messaging.MessageQueue.GetPublicQueuesByMachine(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.MessageQueue[] GetPublicQueuesByMachine (string machineName);
    parameters:
    - id: machineName
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.MessageQueue[]
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetPublicQueuesByMachine*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.GetSecurityContext
  id: GetSecurityContext
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: GetSecurityContext()
  nameWithType: MessageQueue.GetSecurityContext()
  fullName: System.Messaging.MessageQueue.GetSecurityContext()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static System.Messaging.SecurityContext GetSecurityContext ();
    parameters: []
    return:
      type: System.Messaging.SecurityContext
      description: "To be added."
  overload: System.Messaging.MessageQueue.GetSecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Id
  id: Id
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Id
  nameWithType: MessageQueue.Id
  fullName: System.Messaging.MessageQueue.Id
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public Guid Id { get; }
    return:
      type: System.Guid
      description: "To be added."
  overload: System.Messaging.MessageQueue.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.InfiniteQueueSize
  id: InfiniteQueueSize
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: InfiniteQueueSize
  nameWithType: MessageQueue.InfiniteQueueSize
  fullName: System.Messaging.MessageQueue.InfiniteQueueSize
  type: Field
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static readonly long InfiniteQueueSize;
    return:
      type: System.Int64
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.InfiniteTimeout
  id: InfiniteTimeout
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: InfiniteTimeout
  nameWithType: MessageQueue.InfiniteTimeout
  fullName: System.Messaging.MessageQueue.InfiniteTimeout
  type: Field
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public static readonly TimeSpan InfiniteTimeout;
    return:
      type: System.TimeSpan
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Label
  id: Label
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Label
  nameWithType: MessageQueue.Label
  fullName: System.Messaging.MessageQueue.Label
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.LastModifyTime
  id: LastModifyTime
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: LastModifyTime
  nameWithType: MessageQueue.LastModifyTime
  fullName: System.Messaging.MessageQueue.LastModifyTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public DateTime LastModifyTime { get; }
    return:
      type: System.DateTime
      description: "To be added."
  overload: System.Messaging.MessageQueue.LastModifyTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.MachineName
  id: MachineName
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MachineName
  nameWithType: MessageQueue.MachineName
  fullName: System.Messaging.MessageQueue.MachineName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public string MachineName { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.MaximumJournalSize
  id: MaximumJournalSize
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MaximumJournalSize
  nameWithType: MessageQueue.MaximumJournalSize
  fullName: System.Messaging.MessageQueue.MaximumJournalSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public long MaximumJournalSize { get; set; }
    return:
      type: System.Int64
      description: "To be added."
  overload: System.Messaging.MessageQueue.MaximumJournalSize*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.MaximumQueueSize
  id: MaximumQueueSize
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MaximumQueueSize
  nameWithType: MessageQueue.MaximumQueueSize
  fullName: System.Messaging.MessageQueue.MaximumQueueSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public long MaximumQueueSize { get; set; }
    return:
      type: System.Int64
      description: "To be added."
  overload: System.Messaging.MessageQueue.MaximumQueueSize*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.MessageReadPropertyFilter
  id: MessageReadPropertyFilter
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MessageReadPropertyFilter
  nameWithType: MessageQueue.MessageReadPropertyFilter
  fullName: System.Messaging.MessageQueue.MessageReadPropertyFilter
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.MessagePropertyFilter MessageReadPropertyFilter { get; set; }
    return:
      type: System.Messaging.MessagePropertyFilter
      description: "To be added."
  overload: System.Messaging.MessageQueue.MessageReadPropertyFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.MulticastAddress
  id: MulticastAddress
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: MulticastAddress
  nameWithType: MessageQueue.MulticastAddress
  fullName: System.Messaging.MessageQueue.MulticastAddress
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public string MulticastAddress { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.MulticastAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Path
  id: Path
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Path
  nameWithType: MessageQueue.Path
  fullName: System.Messaging.MessageQueue.Path
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Peek
  id: Peek
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Peek()
  nameWithType: MessageQueue.Peek()
  fullName: System.Messaging.MessageQueue.Peek()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Peek ();
    parameters: []
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Peek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan)
  id: Peek(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Peek(TimeSpan)
  nameWithType: MessageQueue.Peek(TimeSpan)
  fullName: System.Messaging.MessageQueue.Peek(TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Peek (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Peek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)
  id: Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Peek(TimeSpan,Cursor,PeekAction)
  nameWithType: MessageQueue.Peek(TimeSpan,Cursor,PeekAction)
  fullName: System.Messaging.MessageQueue.Peek(TimeSpan,Cursor,PeekAction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Peek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: cursor
      type: System.Messaging.Cursor
      description: "To be added."
    - id: action
      type: System.Messaging.PeekAction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Peek*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String)
  id: PeekByCorrelationId(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: PeekByCorrelationId(String)
  nameWithType: MessageQueue.PeekByCorrelationId(String)
  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message PeekByCorrelationId (string correlationId);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.PeekByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)
  id: PeekByCorrelationId(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: PeekByCorrelationId(String,TimeSpan)
  nameWithType: MessageQueue.PeekByCorrelationId(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String,TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message PeekByCorrelationId (string correlationId, TimeSpan timeout);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.PeekByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.PeekById(System.String)
  id: PeekById(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: PeekById(String)
  nameWithType: MessageQueue.PeekById(String)
  fullName: System.Messaging.MessageQueue.PeekById(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message PeekById (string id);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.PeekById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)
  id: PeekById(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: PeekById(String,TimeSpan)
  nameWithType: MessageQueue.PeekById(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.PeekById(String,TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message PeekById (string id, TimeSpan timeout);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.PeekById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Int64)
  id: PeekByLookupId(System.Int64)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: PeekByLookupId(Int64)
  nameWithType: MessageQueue.PeekByLookupId(Int64)
  fullName: System.Messaging.MessageQueue.PeekByLookupId(Int64)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message PeekByLookupId (long lookupId);
    parameters:
    - id: lookupId
      type: System.Int64
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.PeekByLookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)
  id: PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: PeekByLookupId(MessageLookupAction,Int64)
  nameWithType: MessageQueue.PeekByLookupId(MessageLookupAction,Int64)
  fullName: System.Messaging.MessageQueue.PeekByLookupId(MessageLookupAction,Int64)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message PeekByLookupId (System.Messaging.MessageLookupAction action, long lookupId);
    parameters:
    - id: action
      type: System.Messaging.MessageLookupAction
      description: "To be added."
    - id: lookupId
      type: System.Int64
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.PeekByLookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.PeekCompleted
  id: PeekCompleted
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: PeekCompleted
  nameWithType: MessageQueue.PeekCompleted
  fullName: System.Messaging.MessageQueue.PeekCompleted
  type: Event
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public event System.Messaging.PeekCompletedEventHandler PeekCompleted;
    return:
      type: System.Messaging.PeekCompletedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Purge
  id: Purge
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Purge()
  nameWithType: MessageQueue.Purge()
  fullName: System.Messaging.MessageQueue.Purge()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Purge ();
    parameters: []
  overload: System.Messaging.MessageQueue.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.QueueName
  id: QueueName
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: QueueName
  nameWithType: MessageQueue.QueueName
  fullName: System.Messaging.MessageQueue.QueueName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public string QueueName { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReadHandle
  id: ReadHandle
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReadHandle
  nameWithType: MessageQueue.ReadHandle
  fullName: System.Messaging.MessageQueue.ReadHandle
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IntPtr ReadHandle { get; }
    return:
      type: System.IntPtr
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReadHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive
  id: Receive
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive()
  nameWithType: MessageQueue.Receive()
  fullName: System.Messaging.MessageQueue.Receive()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive ();
    parameters: []
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)
  id: Receive(System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(MessageQueueTransaction)
  nameWithType: MessageQueue.Receive(MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)
  id: Receive(System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(MessageQueueTransactionType)
  nameWithType: MessageQueue.Receive(MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan)
  id: Receive(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(TimeSpan)
  nameWithType: MessageQueue.Receive(TimeSpan)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)
  id: Receive(System.TimeSpan,System.Messaging.Cursor)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(TimeSpan,Cursor)
  nameWithType: MessageQueue.Receive(TimeSpan,Cursor)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: cursor
      type: System.Messaging.Cursor
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  id: Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(TimeSpan,MessageQueueTransaction)
  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  id: Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)
  id: Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(TimeSpan,Cursor,MessageQueueTransaction)
  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: cursor
      type: System.Messaging.Cursor
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)
  id: Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Receive(TimeSpan,Cursor,MessageQueueTransactionType)
  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: cursor
      type: System.Messaging.Cursor
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.Receive*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)
  id: ReceiveByCorrelationId(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByCorrelationId(String)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)
  id: ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByCorrelationId(String,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)
  id: ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByCorrelationId(String,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)
  id: ReceiveByCorrelationId(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByCorrelationId(String,TimeSpan)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  id: ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  id: ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: correlationId
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveById(System.String)
  id: ReceiveById(System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveById(String)
  nameWithType: MessageQueue.ReceiveById(String)
  fullName: System.Messaging.MessageQueue.ReceiveById(String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveById (string id);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)
  id: ReceiveById(System.String,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveById(String,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)
  id: ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveById(String,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)
  id: ReceiveById(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveById(String,TimeSpan)
  nameWithType: MessageQueue.ReceiveById(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveById (string id, TimeSpan timeout);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  id: ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveById(String,TimeSpan,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  id: ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveById(String,TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: id
      type: System.String
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveById*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)
  id: ReceiveByLookupId(System.Int64)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByLookupId(Int64)
  nameWithType: MessageQueue.ReceiveByLookupId(Int64)
  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(Int64)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByLookupId (long lookupId);
    parameters:
    - id: lookupId
      type: System.Int64
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByLookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)
  id: ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: action
      type: System.Messaging.MessageLookupAction
      description: "To be added."
    - id: lookupId
      type: System.Int64
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByLookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)
  id: ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: action
      type: System.Messaging.MessageLookupAction
      description: "To be added."
    - id: lookupId
      type: System.Int64
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
    return:
      type: System.Messaging.Message
      description: "To be added."
  overload: System.Messaging.MessageQueue.ReceiveByLookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ReceiveCompleted
  id: ReceiveCompleted
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ReceiveCompleted
  nameWithType: MessageQueue.ReceiveCompleted
  fullName: System.Messaging.MessageQueue.ReceiveCompleted
  type: Event
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public event System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted;
    return:
      type: System.Messaging.ReceiveCompletedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Refresh
  id: Refresh
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Refresh()
  nameWithType: MessageQueue.Refresh()
  fullName: System.Messaging.MessageQueue.Refresh()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Messaging.MessageQueue.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.ResetPermissions
  id: ResetPermissions
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: ResetPermissions()
  nameWithType: MessageQueue.ResetPermissions()
  fullName: System.Messaging.MessageQueue.ResetPermissions()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void ResetPermissions ();
    parameters: []
  overload: System.Messaging.MessageQueue.ResetPermissions*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Send(System.Object)
  id: Send(System.Object)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Send(Object)
  nameWithType: MessageQueue.Send(Object)
  fullName: System.Messaging.MessageQueue.Send(Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Send (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
  overload: System.Messaging.MessageQueue.Send*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)
  id: Send(System.Object,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Send(Object,MessageQueueTransaction)
  nameWithType: MessageQueue.Send(Object,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Send (object obj, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
  overload: System.Messaging.MessageQueue.Send*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)
  id: Send(System.Object,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Send(Object,MessageQueueTransactionType)
  nameWithType: MessageQueue.Send(Object,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Send (object obj, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
  overload: System.Messaging.MessageQueue.Send*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Send(System.Object,System.String)
  id: Send(System.Object,System.String)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Send(Object,String)
  nameWithType: MessageQueue.Send(Object,String)
  fullName: System.Messaging.MessageQueue.Send(Object,String)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Send (object obj, string label);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
    - id: label
      type: System.String
      description: "To be added."
  overload: System.Messaging.MessageQueue.Send*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)
  id: Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Send(Object,String,MessageQueueTransaction)
  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Send (object obj, string label, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
    - id: label
      type: System.String
      description: "To be added."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "To be added."
  overload: System.Messaging.MessageQueue.Send*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)
  id: Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Send(Object,String,MessageQueueTransactionType)
  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void Send (object obj, string label, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
    - id: label
      type: System.String
      description: "To be added."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "To be added."
  overload: System.Messaging.MessageQueue.Send*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)
  id: SetPermissions(System.Messaging.AccessControlList)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: SetPermissions(AccessControlList)
  nameWithType: MessageQueue.SetPermissions(AccessControlList)
  fullName: System.Messaging.MessageQueue.SetPermissions(AccessControlList)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void SetPermissions (System.Messaging.AccessControlList dacl);
    parameters:
    - id: dacl
      type: System.Messaging.AccessControlList
      description: "To be added."
  overload: System.Messaging.MessageQueue.SetPermissions*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)
  id: SetPermissions(System.Messaging.MessageQueueAccessControlEntry)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: SetPermissions(MessageQueueAccessControlEntry)
  nameWithType: MessageQueue.SetPermissions(MessageQueueAccessControlEntry)
  fullName: System.Messaging.MessageQueue.SetPermissions(MessageQueueAccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void SetPermissions (System.Messaging.MessageQueueAccessControlEntry ace);
    parameters:
    - id: ace
      type: System.Messaging.MessageQueueAccessControlEntry
      description: "To be added."
  overload: System.Messaging.MessageQueue.SetPermissions*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)
  id: SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: SetPermissions(String,MessageQueueAccessRights)
  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights);
    parameters:
    - id: user
      type: System.String
      description: "To be added."
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "To be added."
  overload: System.Messaging.MessageQueue.SetPermissions*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  id: SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: user
      type: System.String
      description: "To be added."
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "To be added."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "To be added."
  overload: System.Messaging.MessageQueue.SetPermissions*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.SynchronizingObject
  id: SynchronizingObject
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: MessageQueue.SynchronizingObject
  fullName: System.Messaging.MessageQueue.SynchronizingObject
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "To be added."
  overload: System.Messaging.MessageQueue.SynchronizingObject*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.Transactional
  id: Transactional
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: Transactional
  nameWithType: MessageQueue.Transactional
  fullName: System.Messaging.MessageQueue.Transactional
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public bool Transactional { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.Transactional*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.UseJournalQueue
  id: UseJournalQueue
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: UseJournalQueue
  nameWithType: MessageQueue.UseJournalQueue
  fullName: System.Messaging.MessageQueue.UseJournalQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public bool UseJournalQueue { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Messaging.MessageQueue.UseJournalQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueue.WriteHandle
  id: WriteHandle
  parent: System.Messaging.MessageQueue
  langs:
  - csharp
  name: WriteHandle
  nameWithType: MessageQueue.WriteHandle
  fullName: System.Messaging.MessageQueue.WriteHandle
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  syntax:
    content: public IntPtr WriteHandle { get; }
    return:
      type: System.IntPtr
      description: "To be added."
  overload: System.Messaging.MessageQueue.WriteHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Messaging.MessageQueue.#ctor
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageQueue()
  nameWithType: MessageQueue.MessageQueue()
  fullName: System.Messaging.MessageQueue.MessageQueue()
- uid: System.Messaging.MessageQueue.#ctor(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageQueue(String)
  nameWithType: MessageQueue.MessageQueue(String)
  fullName: System.Messaging.MessageQueue.MessageQueue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageQueue(String,Boolean)
  nameWithType: MessageQueue.MessageQueue(String,Boolean)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageQueue(String,QueueAccessMode)
  nameWithType: MessageQueue.MessageQueue(String,QueueAccessMode)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,QueueAccessMode)
- uid: System.Messaging.QueueAccessMode
  parent: System.Messaging
  isExternal: false
  name: QueueAccessMode
  nameWithType: QueueAccessMode
  fullName: System.Messaging.QueueAccessMode
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageQueue(String,Boolean,Boolean)
  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean)
- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageQueue(String,Boolean,Boolean,QueueAccessMode)
  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)
  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)
- uid: System.Messaging.MessageQueue.AccessMode
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: AccessMode
  nameWithType: MessageQueue.AccessMode
  fullName: System.Messaging.MessageQueue.AccessMode
- uid: System.Messaging.MessageQueue.Authenticate
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Authenticate
  nameWithType: MessageQueue.Authenticate
  fullName: System.Messaging.MessageQueue.Authenticate
- uid: System.Messaging.MessageQueue.BasePriority
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BasePriority
  nameWithType: MessageQueue.BasePriority
  fullName: System.Messaging.MessageQueue.BasePriority
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Messaging.MessageQueue.BeginPeek
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginPeek()
  nameWithType: MessageQueue.BeginPeek()
  fullName: System.Messaging.MessageQueue.BeginPeek()
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginPeek(TimeSpan)
  nameWithType: MessageQueue.BeginPeek(TimeSpan)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginPeek(TimeSpan,Object)
  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginPeek(TimeSpan,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)
- uid: System.Messaging.Cursor
  parent: System.Messaging
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Messaging.Cursor
- uid: System.Messaging.PeekAction
  parent: System.Messaging
  isExternal: false
  name: PeekAction
  nameWithType: PeekAction
  fullName: System.Messaging.PeekAction
- uid: System.Messaging.MessageQueue.BeginReceive
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginReceive()
  nameWithType: MessageQueue.BeginReceive()
  fullName: System.Messaging.MessageQueue.BeginReceive()
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginReceive(TimeSpan)
  nameWithType: MessageQueue.BeginReceive(TimeSpan)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan)
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginReceive(TimeSpan,Object)
  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object)
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginReceive(TimeSpan,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)
- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)
  nameWithType: MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)
  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)
- uid: System.Messaging.MessageQueue.CanRead
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CanRead
  nameWithType: MessageQueue.CanRead
  fullName: System.Messaging.MessageQueue.CanRead
- uid: System.Messaging.MessageQueue.CanWrite
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CanWrite
  nameWithType: MessageQueue.CanWrite
  fullName: System.Messaging.MessageQueue.CanWrite
- uid: System.Messaging.MessageQueue.Category
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Category
  nameWithType: MessageQueue.Category
  fullName: System.Messaging.MessageQueue.Category
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Messaging.MessageQueue.ClearConnectionCache
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ClearConnectionCache()
  nameWithType: MessageQueue.ClearConnectionCache()
  fullName: System.Messaging.MessageQueue.ClearConnectionCache()
- uid: System.Messaging.MessageQueue.Close
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Close()
  nameWithType: MessageQueue.Close()
  fullName: System.Messaging.MessageQueue.Close()
- uid: System.Messaging.MessageQueue.Create(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Create(String)
  nameWithType: MessageQueue.Create(String)
  fullName: System.Messaging.MessageQueue.Create(String)
- uid: System.Messaging.MessageQueue
  parent: System.Messaging
  isExternal: false
  name: MessageQueue
  nameWithType: MessageQueue
  fullName: System.Messaging.MessageQueue
- uid: System.Messaging.MessageQueue.Create(System.String,System.Boolean)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Create(String,Boolean)
  nameWithType: MessageQueue.Create(String,Boolean)
  fullName: System.Messaging.MessageQueue.Create(String,Boolean)
- uid: System.Messaging.MessageQueue.CreateCursor
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CreateCursor()
  nameWithType: MessageQueue.CreateCursor()
  fullName: System.Messaging.MessageQueue.CreateCursor()
- uid: System.Messaging.MessageQueue.CreateTime
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CreateTime
  nameWithType: MessageQueue.CreateTime
  fullName: System.Messaging.MessageQueue.CreateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Messaging.MessageQueue.DefaultPropertiesToSend
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: DefaultPropertiesToSend
  nameWithType: MessageQueue.DefaultPropertiesToSend
  fullName: System.Messaging.MessageQueue.DefaultPropertiesToSend
- uid: System.Messaging.DefaultPropertiesToSend
  parent: System.Messaging
  isExternal: false
  name: DefaultPropertiesToSend
  nameWithType: DefaultPropertiesToSend
  fullName: System.Messaging.DefaultPropertiesToSend
- uid: System.Messaging.MessageQueue.Delete(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Delete(String)
  nameWithType: MessageQueue.Delete(String)
  fullName: System.Messaging.MessageQueue.Delete(String)
- uid: System.Messaging.MessageQueue.DenySharedReceive
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: DenySharedReceive
  nameWithType: MessageQueue.DenySharedReceive
  fullName: System.Messaging.MessageQueue.DenySharedReceive
- uid: System.Messaging.MessageQueue.Dispose(System.Boolean)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MessageQueue.Dispose(Boolean)
  fullName: System.Messaging.MessageQueue.Dispose(Boolean)
- uid: System.Messaging.MessageQueue.EnableConnectionCache
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EnableConnectionCache
  nameWithType: MessageQueue.EnableConnectionCache
  fullName: System.Messaging.MessageQueue.EnableConnectionCache
- uid: System.Messaging.MessageQueue.EncryptionRequired
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EncryptionRequired
  nameWithType: MessageQueue.EncryptionRequired
  fullName: System.Messaging.MessageQueue.EncryptionRequired
- uid: System.Messaging.EncryptionRequired
  parent: System.Messaging
  isExternal: false
  name: EncryptionRequired
  nameWithType: EncryptionRequired
  fullName: System.Messaging.EncryptionRequired
- uid: System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EndPeek(IAsyncResult)
  nameWithType: MessageQueue.EndPeek(IAsyncResult)
  fullName: System.Messaging.MessageQueue.EndPeek(IAsyncResult)
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EndReceive(IAsyncResult)
  nameWithType: MessageQueue.EndReceive(IAsyncResult)
  fullName: System.Messaging.MessageQueue.EndReceive(IAsyncResult)
- uid: System.Messaging.MessageQueue.Exists(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Exists(String)
  nameWithType: MessageQueue.Exists(String)
  fullName: System.Messaging.MessageQueue.Exists(String)
- uid: System.Messaging.MessageQueue.FormatName
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: FormatName
  nameWithType: MessageQueue.FormatName
  fullName: System.Messaging.MessageQueue.FormatName
- uid: System.Messaging.MessageQueue.Formatter
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Formatter
  nameWithType: MessageQueue.Formatter
  fullName: System.Messaging.MessageQueue.Formatter
- uid: System.Messaging.IMessageFormatter
  parent: System.Messaging
  isExternal: false
  name: IMessageFormatter
  nameWithType: IMessageFormatter
  fullName: System.Messaging.IMessageFormatter
- uid: System.Messaging.MessageQueue.GetAllMessages
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetAllMessages()
  nameWithType: MessageQueue.GetAllMessages()
  fullName: System.Messaging.MessageQueue.GetAllMessages()
- uid: System.Messaging.Message[]
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message[]
  spec.csharp:
  - uid: System.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: Message[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.MessageQueue.GetEnumerator
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetEnumerator()
  nameWithType: MessageQueue.GetEnumerator()
  fullName: System.Messaging.MessageQueue.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Messaging.MessageQueue.GetMachineId(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMachineId(String)
  nameWithType: MessageQueue.GetMachineId(String)
  fullName: System.Messaging.MessageQueue.GetMachineId(String)
- uid: System.Messaging.MessageQueue.GetMessageEnumerator
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMessageEnumerator()
  nameWithType: MessageQueue.GetMessageEnumerator()
  fullName: System.Messaging.MessageQueue.GetMessageEnumerator()
- uid: System.Messaging.MessageEnumerator
  parent: System.Messaging
  isExternal: false
  name: MessageEnumerator
  nameWithType: MessageEnumerator
  fullName: System.Messaging.MessageEnumerator
- uid: System.Messaging.MessageQueue.GetMessageEnumerator2
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMessageEnumerator2()
  nameWithType: MessageQueue.GetMessageEnumerator2()
  fullName: System.Messaging.MessageQueue.GetMessageEnumerator2()
- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMessageQueueEnumerator()
  nameWithType: MessageQueue.GetMessageQueueEnumerator()
  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator()
- uid: System.Messaging.MessageQueueEnumerator
  parent: System.Messaging
  isExternal: false
  name: MessageQueueEnumerator
  nameWithType: MessageQueueEnumerator
  fullName: System.Messaging.MessageQueueEnumerator
- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMessageQueueEnumerator(MessageQueueCriteria)
  nameWithType: MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)
  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)
- uid: System.Messaging.MessageQueueCriteria
  parent: System.Messaging
  isExternal: false
  name: MessageQueueCriteria
  nameWithType: MessageQueueCriteria
  fullName: System.Messaging.MessageQueueCriteria
- uid: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPrivateQueuesByMachine(String)
  nameWithType: MessageQueue.GetPrivateQueuesByMachine(String)
  fullName: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(String)
- uid: System.Messaging.MessageQueue[]
  parent: System.Messaging
  isExternal: false
  name: MessageQueue
  nameWithType: MessageQueue
  fullName: System.Messaging.MessageQueue[]
  spec.csharp:
  - uid: System.Messaging.MessageQueue
    name: MessageQueue
    nameWithType: MessageQueue
    fullName: MessageQueue[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.MessageQueue.GetPublicQueues
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueues()
  nameWithType: MessageQueue.GetPublicQueues()
  fullName: System.Messaging.MessageQueue.GetPublicQueues()
- uid: System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueues(MessageQueueCriteria)
  nameWithType: MessageQueue.GetPublicQueues(MessageQueueCriteria)
  fullName: System.Messaging.MessageQueue.GetPublicQueues(MessageQueueCriteria)
- uid: System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueuesByCategory(Guid)
  nameWithType: MessageQueue.GetPublicQueuesByCategory(Guid)
  fullName: System.Messaging.MessageQueue.GetPublicQueuesByCategory(Guid)
- uid: System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueuesByLabel(String)
  nameWithType: MessageQueue.GetPublicQueuesByLabel(String)
  fullName: System.Messaging.MessageQueue.GetPublicQueuesByLabel(String)
- uid: System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueuesByMachine(String)
  nameWithType: MessageQueue.GetPublicQueuesByMachine(String)
  fullName: System.Messaging.MessageQueue.GetPublicQueuesByMachine(String)
- uid: System.Messaging.MessageQueue.GetSecurityContext
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetSecurityContext()
  nameWithType: MessageQueue.GetSecurityContext()
  fullName: System.Messaging.MessageQueue.GetSecurityContext()
- uid: System.Messaging.SecurityContext
  parent: System.Messaging
  isExternal: false
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Messaging.SecurityContext
- uid: System.Messaging.MessageQueue.Id
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Id
  nameWithType: MessageQueue.Id
  fullName: System.Messaging.MessageQueue.Id
- uid: System.Messaging.MessageQueue.InfiniteQueueSize
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: InfiniteQueueSize
  nameWithType: MessageQueue.InfiniteQueueSize
  fullName: System.Messaging.MessageQueue.InfiniteQueueSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Messaging.MessageQueue.InfiniteTimeout
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: InfiniteTimeout
  nameWithType: MessageQueue.InfiniteTimeout
  fullName: System.Messaging.MessageQueue.InfiniteTimeout
- uid: System.Messaging.MessageQueue.Label
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Label
  nameWithType: MessageQueue.Label
  fullName: System.Messaging.MessageQueue.Label
- uid: System.Messaging.MessageQueue.LastModifyTime
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: LastModifyTime
  nameWithType: MessageQueue.LastModifyTime
  fullName: System.Messaging.MessageQueue.LastModifyTime
- uid: System.Messaging.MessageQueue.MachineName
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MachineName
  nameWithType: MessageQueue.MachineName
  fullName: System.Messaging.MessageQueue.MachineName
- uid: System.Messaging.MessageQueue.MaximumJournalSize
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MaximumJournalSize
  nameWithType: MessageQueue.MaximumJournalSize
  fullName: System.Messaging.MessageQueue.MaximumJournalSize
- uid: System.Messaging.MessageQueue.MaximumQueueSize
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MaximumQueueSize
  nameWithType: MessageQueue.MaximumQueueSize
  fullName: System.Messaging.MessageQueue.MaximumQueueSize
- uid: System.Messaging.MessageQueue.MessageReadPropertyFilter
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageReadPropertyFilter
  nameWithType: MessageQueue.MessageReadPropertyFilter
  fullName: System.Messaging.MessageQueue.MessageReadPropertyFilter
- uid: System.Messaging.MessagePropertyFilter
  parent: System.Messaging
  isExternal: false
  name: MessagePropertyFilter
  nameWithType: MessagePropertyFilter
  fullName: System.Messaging.MessagePropertyFilter
- uid: System.Messaging.MessageQueue.MulticastAddress
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MulticastAddress
  nameWithType: MessageQueue.MulticastAddress
  fullName: System.Messaging.MessageQueue.MulticastAddress
- uid: System.Messaging.MessageQueue.Path
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Path
  nameWithType: MessageQueue.Path
  fullName: System.Messaging.MessageQueue.Path
- uid: System.Messaging.MessageQueue.Peek
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Peek()
  nameWithType: MessageQueue.Peek()
  fullName: System.Messaging.MessageQueue.Peek()
- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Peek(TimeSpan)
  nameWithType: MessageQueue.Peek(TimeSpan)
  fullName: System.Messaging.MessageQueue.Peek(TimeSpan)
- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Peek(TimeSpan,Cursor,PeekAction)
  nameWithType: MessageQueue.Peek(TimeSpan,Cursor,PeekAction)
  fullName: System.Messaging.MessageQueue.Peek(TimeSpan,Cursor,PeekAction)
- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekByCorrelationId(String)
  nameWithType: MessageQueue.PeekByCorrelationId(String)
  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String)
- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekByCorrelationId(String,TimeSpan)
  nameWithType: MessageQueue.PeekByCorrelationId(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String,TimeSpan)
- uid: System.Messaging.MessageQueue.PeekById(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekById(String)
  nameWithType: MessageQueue.PeekById(String)
  fullName: System.Messaging.MessageQueue.PeekById(String)
- uid: System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekById(String,TimeSpan)
  nameWithType: MessageQueue.PeekById(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.PeekById(String,TimeSpan)
- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Int64)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekByLookupId(Int64)
  nameWithType: MessageQueue.PeekByLookupId(Int64)
  fullName: System.Messaging.MessageQueue.PeekByLookupId(Int64)
- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekByLookupId(MessageLookupAction,Int64)
  nameWithType: MessageQueue.PeekByLookupId(MessageLookupAction,Int64)
  fullName: System.Messaging.MessageQueue.PeekByLookupId(MessageLookupAction,Int64)
- uid: System.Messaging.MessageLookupAction
  parent: System.Messaging
  isExternal: false
  name: MessageLookupAction
  nameWithType: MessageLookupAction
  fullName: System.Messaging.MessageLookupAction
- uid: System.Messaging.MessageQueue.PeekCompleted
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekCompleted
  nameWithType: MessageQueue.PeekCompleted
  fullName: System.Messaging.MessageQueue.PeekCompleted
- uid: System.Messaging.PeekCompletedEventHandler
  parent: System.Messaging
  isExternal: false
  name: PeekCompletedEventHandler
  nameWithType: PeekCompletedEventHandler
  fullName: System.Messaging.PeekCompletedEventHandler
- uid: System.Messaging.MessageQueue.Purge
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Purge()
  nameWithType: MessageQueue.Purge()
  fullName: System.Messaging.MessageQueue.Purge()
- uid: System.Messaging.MessageQueue.QueueName
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: QueueName
  nameWithType: MessageQueue.QueueName
  fullName: System.Messaging.MessageQueue.QueueName
- uid: System.Messaging.MessageQueue.ReadHandle
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReadHandle
  nameWithType: MessageQueue.ReadHandle
  fullName: System.Messaging.MessageQueue.ReadHandle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Messaging.MessageQueue.Receive
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive()
  nameWithType: MessageQueue.Receive()
  fullName: System.Messaging.MessageQueue.Receive()
- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(MessageQueueTransaction)
  nameWithType: MessageQueue.Receive(MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransaction)
- uid: System.Messaging.MessageQueueTransaction
  parent: System.Messaging
  isExternal: false
  name: MessageQueueTransaction
  nameWithType: MessageQueueTransaction
  fullName: System.Messaging.MessageQueueTransaction
- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(MessageQueueTransactionType)
  nameWithType: MessageQueue.Receive(MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransactionType)
- uid: System.Messaging.MessageQueueTransactionType
  parent: System.Messaging
  isExternal: false
  name: MessageQueueTransactionType
  nameWithType: MessageQueueTransactionType
  fullName: System.Messaging.MessageQueueTransactionType
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(TimeSpan)
  nameWithType: MessageQueue.Receive(TimeSpan)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan)
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(TimeSpan,Cursor)
  nameWithType: MessageQueue.Receive(TimeSpan,Cursor)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor)
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(TimeSpan,MessageQueueTransaction)
  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(TimeSpan,Cursor,MessageQueueTransaction)
  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive(TimeSpan,Cursor,MessageQueueTransactionType)
  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByCorrelationId(String)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String)
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByCorrelationId(String,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByCorrelationId(String,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByCorrelationId(String,TimeSpan)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan)
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.ReceiveById(System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveById(String)
  nameWithType: MessageQueue.ReceiveById(String)
  fullName: System.Messaging.MessageQueue.ReceiveById(String)
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveById(String,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveById(String,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveById(String,TimeSpan)
  nameWithType: MessageQueue.ReceiveById(String,TimeSpan)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan)
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveById(String,TimeSpan,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveById(String,TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByLookupId(Int64)
  nameWithType: MessageQueue.ReceiveByLookupId(Int64)
  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(Int64)
- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)
  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)
  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.ReceiveCompleted
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveCompleted
  nameWithType: MessageQueue.ReceiveCompleted
  fullName: System.Messaging.MessageQueue.ReceiveCompleted
- uid: System.Messaging.ReceiveCompletedEventHandler
  parent: System.Messaging
  isExternal: false
  name: ReceiveCompletedEventHandler
  nameWithType: ReceiveCompletedEventHandler
  fullName: System.Messaging.ReceiveCompletedEventHandler
- uid: System.Messaging.MessageQueue.Refresh
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Refresh()
  nameWithType: MessageQueue.Refresh()
  fullName: System.Messaging.MessageQueue.Refresh()
- uid: System.Messaging.MessageQueue.ResetPermissions
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ResetPermissions()
  nameWithType: MessageQueue.ResetPermissions()
  fullName: System.Messaging.MessageQueue.ResetPermissions()
- uid: System.Messaging.MessageQueue.Send(System.Object)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Send(Object)
  nameWithType: MessageQueue.Send(Object)
  fullName: System.Messaging.MessageQueue.Send(Object)
- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Send(Object,MessageQueueTransaction)
  nameWithType: MessageQueue.Send(Object,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Send(Object,MessageQueueTransactionType)
  nameWithType: MessageQueue.Send(Object,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.Send(System.Object,System.String)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Send(Object,String)
  nameWithType: MessageQueue.Send(Object,String)
  fullName: System.Messaging.MessageQueue.Send(Object,String)
- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Send(Object,String,MessageQueueTransaction)
  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransaction)
  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransaction)
- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Send(Object,String,MessageQueueTransactionType)
  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransactionType)
  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransactionType)
- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: SetPermissions(AccessControlList)
  nameWithType: MessageQueue.SetPermissions(AccessControlList)
  fullName: System.Messaging.MessageQueue.SetPermissions(AccessControlList)
- uid: System.Messaging.AccessControlList
  parent: System.Messaging
  isExternal: false
  name: AccessControlList
  nameWithType: AccessControlList
  fullName: System.Messaging.AccessControlList
- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: SetPermissions(MessageQueueAccessControlEntry)
  nameWithType: MessageQueue.SetPermissions(MessageQueueAccessControlEntry)
  fullName: System.Messaging.MessageQueue.SetPermissions(MessageQueueAccessControlEntry)
- uid: System.Messaging.MessageQueueAccessControlEntry
  parent: System.Messaging
  isExternal: false
  name: MessageQueueAccessControlEntry
  nameWithType: MessageQueueAccessControlEntry
  fullName: System.Messaging.MessageQueueAccessControlEntry
- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: SetPermissions(String,MessageQueueAccessRights)
  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights)
- uid: System.Messaging.MessageQueueAccessRights
  parent: System.Messaging
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessRights
- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.MessageQueue.SynchronizingObject
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: SynchronizingObject
  nameWithType: MessageQueue.SynchronizingObject
  fullName: System.Messaging.MessageQueue.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Messaging.MessageQueue.Transactional
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Transactional
  nameWithType: MessageQueue.Transactional
  fullName: System.Messaging.MessageQueue.Transactional
- uid: System.Messaging.MessageQueue.UseJournalQueue
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessageQueue.UseJournalQueue
  fullName: System.Messaging.MessageQueue.UseJournalQueue
- uid: System.Messaging.MessageQueue.WriteHandle
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: WriteHandle
  nameWithType: MessageQueue.WriteHandle
  fullName: System.Messaging.MessageQueue.WriteHandle
- uid: System.Messaging.MessageQueue.#ctor*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageQueue
  nameWithType: MessageQueue.MessageQueue
- uid: System.Messaging.MessageQueue.AccessMode*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: AccessMode
  nameWithType: MessageQueue.AccessMode
- uid: System.Messaging.MessageQueue.Authenticate*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Authenticate
  nameWithType: MessageQueue.Authenticate
- uid: System.Messaging.MessageQueue.BasePriority*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BasePriority
  nameWithType: MessageQueue.BasePriority
- uid: System.Messaging.MessageQueue.BeginPeek*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginPeek
  nameWithType: MessageQueue.BeginPeek
- uid: System.Messaging.MessageQueue.BeginReceive*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: BeginReceive
  nameWithType: MessageQueue.BeginReceive
- uid: System.Messaging.MessageQueue.CanRead*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CanRead
  nameWithType: MessageQueue.CanRead
- uid: System.Messaging.MessageQueue.CanWrite*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CanWrite
  nameWithType: MessageQueue.CanWrite
- uid: System.Messaging.MessageQueue.Category*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Category
  nameWithType: MessageQueue.Category
- uid: System.Messaging.MessageQueue.ClearConnectionCache*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ClearConnectionCache
  nameWithType: MessageQueue.ClearConnectionCache
- uid: System.Messaging.MessageQueue.Close*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Close
  nameWithType: MessageQueue.Close
- uid: System.Messaging.MessageQueue.Create*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Create
  nameWithType: MessageQueue.Create
- uid: System.Messaging.MessageQueue.CreateCursor*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CreateCursor
  nameWithType: MessageQueue.CreateCursor
- uid: System.Messaging.MessageQueue.CreateTime*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: CreateTime
  nameWithType: MessageQueue.CreateTime
- uid: System.Messaging.MessageQueue.DefaultPropertiesToSend*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: DefaultPropertiesToSend
  nameWithType: MessageQueue.DefaultPropertiesToSend
- uid: System.Messaging.MessageQueue.Delete*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Delete
  nameWithType: MessageQueue.Delete
- uid: System.Messaging.MessageQueue.DenySharedReceive*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: DenySharedReceive
  nameWithType: MessageQueue.DenySharedReceive
- uid: System.Messaging.MessageQueue.Dispose*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Dispose
  nameWithType: MessageQueue.Dispose
- uid: System.Messaging.MessageQueue.EnableConnectionCache*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EnableConnectionCache
  nameWithType: MessageQueue.EnableConnectionCache
- uid: System.Messaging.MessageQueue.EncryptionRequired*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EncryptionRequired
  nameWithType: MessageQueue.EncryptionRequired
- uid: System.Messaging.MessageQueue.EndPeek*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EndPeek
  nameWithType: MessageQueue.EndPeek
- uid: System.Messaging.MessageQueue.EndReceive*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: EndReceive
  nameWithType: MessageQueue.EndReceive
- uid: System.Messaging.MessageQueue.Exists*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Exists
  nameWithType: MessageQueue.Exists
- uid: System.Messaging.MessageQueue.FormatName*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: FormatName
  nameWithType: MessageQueue.FormatName
- uid: System.Messaging.MessageQueue.Formatter*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Formatter
  nameWithType: MessageQueue.Formatter
- uid: System.Messaging.MessageQueue.GetAllMessages*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetAllMessages
  nameWithType: MessageQueue.GetAllMessages
- uid: System.Messaging.MessageQueue.GetEnumerator*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetEnumerator
  nameWithType: MessageQueue.GetEnumerator
- uid: System.Messaging.MessageQueue.GetMachineId*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMachineId
  nameWithType: MessageQueue.GetMachineId
- uid: System.Messaging.MessageQueue.GetMessageEnumerator*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMessageEnumerator
  nameWithType: MessageQueue.GetMessageEnumerator
- uid: System.Messaging.MessageQueue.GetMessageEnumerator2*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMessageEnumerator2
  nameWithType: MessageQueue.GetMessageEnumerator2
- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetMessageQueueEnumerator
  nameWithType: MessageQueue.GetMessageQueueEnumerator
- uid: System.Messaging.MessageQueue.GetPrivateQueuesByMachine*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPrivateQueuesByMachine
  nameWithType: MessageQueue.GetPrivateQueuesByMachine
- uid: System.Messaging.MessageQueue.GetPublicQueues*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueues
  nameWithType: MessageQueue.GetPublicQueues
- uid: System.Messaging.MessageQueue.GetPublicQueuesByCategory*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueuesByCategory
  nameWithType: MessageQueue.GetPublicQueuesByCategory
- uid: System.Messaging.MessageQueue.GetPublicQueuesByLabel*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueuesByLabel
  nameWithType: MessageQueue.GetPublicQueuesByLabel
- uid: System.Messaging.MessageQueue.GetPublicQueuesByMachine*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetPublicQueuesByMachine
  nameWithType: MessageQueue.GetPublicQueuesByMachine
- uid: System.Messaging.MessageQueue.GetSecurityContext*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: GetSecurityContext
  nameWithType: MessageQueue.GetSecurityContext
- uid: System.Messaging.MessageQueue.Id*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Id
  nameWithType: MessageQueue.Id
- uid: System.Messaging.MessageQueue.Label*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Label
  nameWithType: MessageQueue.Label
- uid: System.Messaging.MessageQueue.LastModifyTime*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: LastModifyTime
  nameWithType: MessageQueue.LastModifyTime
- uid: System.Messaging.MessageQueue.MachineName*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MachineName
  nameWithType: MessageQueue.MachineName
- uid: System.Messaging.MessageQueue.MaximumJournalSize*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MaximumJournalSize
  nameWithType: MessageQueue.MaximumJournalSize
- uid: System.Messaging.MessageQueue.MaximumQueueSize*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MaximumQueueSize
  nameWithType: MessageQueue.MaximumQueueSize
- uid: System.Messaging.MessageQueue.MessageReadPropertyFilter*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MessageReadPropertyFilter
  nameWithType: MessageQueue.MessageReadPropertyFilter
- uid: System.Messaging.MessageQueue.MulticastAddress*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: MulticastAddress
  nameWithType: MessageQueue.MulticastAddress
- uid: System.Messaging.MessageQueue.Path*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Path
  nameWithType: MessageQueue.Path
- uid: System.Messaging.MessageQueue.Peek*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Peek
  nameWithType: MessageQueue.Peek
- uid: System.Messaging.MessageQueue.PeekByCorrelationId*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekByCorrelationId
  nameWithType: MessageQueue.PeekByCorrelationId
- uid: System.Messaging.MessageQueue.PeekById*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekById
  nameWithType: MessageQueue.PeekById
- uid: System.Messaging.MessageQueue.PeekByLookupId*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: PeekByLookupId
  nameWithType: MessageQueue.PeekByLookupId
- uid: System.Messaging.MessageQueue.Purge*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Purge
  nameWithType: MessageQueue.Purge
- uid: System.Messaging.MessageQueue.QueueName*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: QueueName
  nameWithType: MessageQueue.QueueName
- uid: System.Messaging.MessageQueue.ReadHandle*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReadHandle
  nameWithType: MessageQueue.ReadHandle
- uid: System.Messaging.MessageQueue.Receive*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Receive
  nameWithType: MessageQueue.Receive
- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByCorrelationId
  nameWithType: MessageQueue.ReceiveByCorrelationId
- uid: System.Messaging.MessageQueue.ReceiveById*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveById
  nameWithType: MessageQueue.ReceiveById
- uid: System.Messaging.MessageQueue.ReceiveByLookupId*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ReceiveByLookupId
  nameWithType: MessageQueue.ReceiveByLookupId
- uid: System.Messaging.MessageQueue.Refresh*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Refresh
  nameWithType: MessageQueue.Refresh
- uid: System.Messaging.MessageQueue.ResetPermissions*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: ResetPermissions
  nameWithType: MessageQueue.ResetPermissions
- uid: System.Messaging.MessageQueue.Send*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Send
  nameWithType: MessageQueue.Send
- uid: System.Messaging.MessageQueue.SetPermissions*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: SetPermissions
  nameWithType: MessageQueue.SetPermissions
- uid: System.Messaging.MessageQueue.SynchronizingObject*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: SynchronizingObject
  nameWithType: MessageQueue.SynchronizingObject
- uid: System.Messaging.MessageQueue.Transactional*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: Transactional
  nameWithType: MessageQueue.Transactional
- uid: System.Messaging.MessageQueue.UseJournalQueue*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessageQueue.UseJournalQueue
- uid: System.Messaging.MessageQueue.WriteHandle*
  parent: System.Messaging.MessageQueue
  isExternal: false
  name: WriteHandle
  nameWithType: MessageQueue.WriteHandle
