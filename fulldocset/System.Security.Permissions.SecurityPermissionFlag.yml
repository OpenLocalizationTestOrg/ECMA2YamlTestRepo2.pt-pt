### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SecurityPermissionFlag
  id: SecurityPermissionFlag
  children:
  - System.Security.Permissions.SecurityPermissionFlag.AllFlags
  - System.Security.Permissions.SecurityPermissionFlag.Assertion
  - System.Security.Permissions.SecurityPermissionFlag.BindingRedirects
  - System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain
  - System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy
  - System.Security.Permissions.SecurityPermissionFlag.ControlEvidence
  - System.Security.Permissions.SecurityPermissionFlag.ControlPolicy
  - System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal
  - System.Security.Permissions.SecurityPermissionFlag.ControlThread
  - System.Security.Permissions.SecurityPermissionFlag.Execution
  - System.Security.Permissions.SecurityPermissionFlag.Infrastructure
  - System.Security.Permissions.SecurityPermissionFlag.NoFlags
  - System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration
  - System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter
  - System.Security.Permissions.SecurityPermissionFlag.SkipVerification
  - System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode
  langs:
  - csharp
  name: SecurityPermissionFlag
  nameWithType: SecurityPermissionFlag
  fullName: System.Security.Permissions.SecurityPermissionFlag
  type: Enum
  summary: "Specifies access flags for the security permission object."
  remarks: "This enumeration has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.       This enumeration is used by <xref:System.Security.Permissions.SecurityPermission>.      > [!CAUTION] >  Many of these flags are powerful and should only be granted to highly trusted code."
  example:
  - "The following code example shows the use of the SecurityPermissionFlag enumeration to deny and demand security permissions.  \n  \n [!code-cs[System.Security.Permissions.SecurityPermissionAttribute#1](~/add/codesnippet/csharp/t-system.security.permis_24_1.cs)]\n [!code-cpp[System.Security.Permissions.SecurityPermissionAttribute#1](~/add/codesnippet/cpp/t-system.security.permis_24_1.cpp)]\n [!code-vb[System.Security.Permissions.SecurityPermissionAttribute#1](~/add/codesnippet/visualbasic/t-system.security.permis_24_1.vb)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum SecurityPermissionFlag
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.AllFlags
  id: AllFlags
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: AllFlags
  nameWithType: SecurityPermissionFlag.AllFlags
  fullName: System.Security.Permissions.SecurityPermissionFlag.AllFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "The unrestricted state of the permission."
  syntax:
    content: AllFlags
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.Assertion
  id: Assertion
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: Assertion
  nameWithType: SecurityPermissionFlag.Assertion
  fullName: System.Security.Permissions.SecurityPermissionFlag.Assertion
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to assert that all this code&quot;s callers have the requisite permission for the operation."
  syntax:
    content: Assertion
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.BindingRedirects
  id: BindingRedirects
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: BindingRedirects
  nameWithType: SecurityPermissionFlag.BindingRedirects
  fullName: System.Security.Permissions.SecurityPermissionFlag.BindingRedirects
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Permission to perform explicit binding redirection in the application configuration file. This includes redirection of .NET Framework assemblies that have been unified as well as other assemblies found outside the .NET Framework."
  syntax:
    content: BindingRedirects
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain
  id: ControlAppDomain
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: ControlAppDomain
  nameWithType: SecurityPermissionFlag.ControlAppDomain
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to create and manipulate an <xref href=&quot;System.AppDomain&quot;></xref>."
  syntax:
    content: ControlAppDomain
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy
  id: ControlDomainPolicy
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionFlag.ControlDomainPolicy
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to specify domain policy."
  syntax:
    content: ControlDomainPolicy
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlEvidence
  id: ControlEvidence
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: ControlEvidence
  nameWithType: SecurityPermissionFlag.ControlEvidence
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlEvidence
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to provide evidence, including the ability to alter the evidence provided by the common language runtime."
  remarks: "This is a powerful permission that should only be granted to highly trusted code."
  syntax:
    content: ControlEvidence
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlPolicy
  id: ControlPolicy
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: ControlPolicy
  nameWithType: SecurityPermissionFlag.ControlPolicy
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlPolicy
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to view and modify policy."
  remarks: "This is a powerful permission that should only be granted to highly trusted code."
  syntax:
    content: ControlPolicy
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal
  id: ControlPrincipal
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: ControlPrincipal
  nameWithType: SecurityPermissionFlag.ControlPrincipal
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to manipulate the principal object."
  syntax:
    content: ControlPrincipal
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlThread
  id: ControlThread
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: ControlThread
  nameWithType: SecurityPermissionFlag.ControlThread
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlThread
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to use certain advanced operations on threads."
  syntax:
    content: ControlThread
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.Execution
  id: Execution
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: Execution
  nameWithType: SecurityPermissionFlag.Execution
  fullName: System.Security.Permissions.SecurityPermissionFlag.Execution
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Permission for the code to run. Without this permission, managed code will not be executed."
  remarks: "This flag has no effect when used dynamically with stack modifiers such as <xref:System.Security.CodeAccessPermission.Deny%2A>, <xref:System.Security.CodeAccessPermission.Assert%2A>, and <xref:System.Security.CodeAccessPermission.PermitOnly%2A>."
  syntax:
    content: Execution
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.Infrastructure
  id: Infrastructure
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: Infrastructure
  nameWithType: SecurityPermissionFlag.Infrastructure
  fullName: System.Security.Permissions.SecurityPermissionFlag.Infrastructure
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Permission to plug code into the common language runtime infrastructure, such as adding Remoting Context Sinks, Envoy Sinks and Dynamic Sinks."
  syntax:
    content: Infrastructure
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.NoFlags
  id: NoFlags
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: NoFlags
  nameWithType: SecurityPermissionFlag.NoFlags
  fullName: System.Security.Permissions.SecurityPermissionFlag.NoFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "No security access."
  syntax:
    content: NoFlags
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration
  id: RemotingConfiguration
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: RemotingConfiguration
  nameWithType: SecurityPermissionFlag.RemotingConfiguration
  fullName: System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Permission to configure Remoting types and channels."
  syntax:
    content: RemotingConfiguration
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter
  id: SerializationFormatter
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: SerializationFormatter
  nameWithType: SecurityPermissionFlag.SerializationFormatter
  fullName: System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to provide serialization services. Used by serialization formatters."
  syntax:
    content: SerializationFormatter
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.SkipVerification
  id: SkipVerification
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: SkipVerification
  nameWithType: SecurityPermissionFlag.SkipVerification
  fullName: System.Security.Permissions.SecurityPermissionFlag.SkipVerification
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to skip verification of code in this assembly. Code that is unverifiable can be run if this permission is granted."
  remarks: "This is a powerful permission that should be granted only to highly trusted code.       This flag has no effect when used dynamically with stack modifiers such as <xref:System.Security.CodeAccessPermission.Deny%2A>, <xref:System.Security.CodeAccessPermission.Assert%2A>, and <xref:System.Security.CodeAccessPermission.PermitOnly%2A>."
  syntax:
    content: SkipVerification
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode
  id: UnmanagedCode
  parent: System.Security.Permissions.SecurityPermissionFlag
  langs:
  - csharp
  name: UnmanagedCode
  nameWithType: SecurityPermissionFlag.UnmanagedCode
  fullName: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ability to call unmanaged code."
  remarks: "Since unmanaged code potentially allows other permissions to be bypassed, this is a dangerous permission that should only be granted to highly trusted code. It is used for such applications as calling native code using PInvoke or using COM interop."
  syntax:
    content: UnmanagedCode
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.SecurityPermissionFlag.AllFlags
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: AllFlags
  nameWithType: SecurityPermissionFlag.AllFlags
  fullName: System.Security.Permissions.SecurityPermissionFlag.AllFlags
- uid: System.Security.Permissions.SecurityPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityPermissionFlag
  nameWithType: SecurityPermissionFlag
  fullName: System.Security.Permissions.SecurityPermissionFlag
- uid: System.Security.Permissions.SecurityPermissionFlag.Assertion
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: Assertion
  nameWithType: SecurityPermissionFlag.Assertion
  fullName: System.Security.Permissions.SecurityPermissionFlag.Assertion
- uid: System.Security.Permissions.SecurityPermissionFlag.BindingRedirects
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: BindingRedirects
  nameWithType: SecurityPermissionFlag.BindingRedirects
  fullName: System.Security.Permissions.SecurityPermissionFlag.BindingRedirects
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: ControlAppDomain
  nameWithType: SecurityPermissionFlag.ControlAppDomain
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionFlag.ControlDomainPolicy
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlEvidence
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: ControlEvidence
  nameWithType: SecurityPermissionFlag.ControlEvidence
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlEvidence
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlPolicy
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: ControlPolicy
  nameWithType: SecurityPermissionFlag.ControlPolicy
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlPolicy
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: ControlPrincipal
  nameWithType: SecurityPermissionFlag.ControlPrincipal
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal
- uid: System.Security.Permissions.SecurityPermissionFlag.ControlThread
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: ControlThread
  nameWithType: SecurityPermissionFlag.ControlThread
  fullName: System.Security.Permissions.SecurityPermissionFlag.ControlThread
- uid: System.Security.Permissions.SecurityPermissionFlag.Execution
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: Execution
  nameWithType: SecurityPermissionFlag.Execution
  fullName: System.Security.Permissions.SecurityPermissionFlag.Execution
- uid: System.Security.Permissions.SecurityPermissionFlag.Infrastructure
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: Infrastructure
  nameWithType: SecurityPermissionFlag.Infrastructure
  fullName: System.Security.Permissions.SecurityPermissionFlag.Infrastructure
- uid: System.Security.Permissions.SecurityPermissionFlag.NoFlags
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: NoFlags
  nameWithType: SecurityPermissionFlag.NoFlags
  fullName: System.Security.Permissions.SecurityPermissionFlag.NoFlags
- uid: System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: RemotingConfiguration
  nameWithType: SecurityPermissionFlag.RemotingConfiguration
  fullName: System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration
- uid: System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: SerializationFormatter
  nameWithType: SecurityPermissionFlag.SerializationFormatter
  fullName: System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter
- uid: System.Security.Permissions.SecurityPermissionFlag.SkipVerification
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: SkipVerification
  nameWithType: SecurityPermissionFlag.SkipVerification
  fullName: System.Security.Permissions.SecurityPermissionFlag.SkipVerification
- uid: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode
  parent: System.Security.Permissions.SecurityPermissionFlag
  isExternal: false
  name: UnmanagedCode
  nameWithType: SecurityPermissionFlag.UnmanagedCode
  fullName: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode
