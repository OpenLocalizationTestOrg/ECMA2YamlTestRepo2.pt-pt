### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.IsolatedStorageFilePermission
  id: IsolatedStorageFilePermission
  children:
  - System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.IsolatedStorageFilePermission.Copy
  - System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.IsolatedStorageFilePermission.ToXml
  - System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: IsolatedStorageFilePermission
  nameWithType: IsolatedStorageFilePermission
  fullName: System.Security.Permissions.IsolatedStorageFilePermission
  type: Class
  summary: "Specifies the allowed usage of a private virtual file system. This class cannot be inherited."
  remarks: "The common language runtime (CLR) uses this class to control access to isolated storage.       Isolated storage creates a unique storage area for use by an application or component. It provides true isolation in that the identity of an application uniquely determines the root of a virtual file system, which only that application can access. Thus, each application has its own file area automatically assigned to it. This file area is fully isolated from other applications, making it private to that application.      > [!NOTE] >  There is no effect if you use <xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.PermitOnly%2A>, or <xref:System.Security.CodeAccessPermission.Deny%2A> to add stack modifiers for usage or quota.  Usage and quota are determined from evidence and a stack walk is not performed for demands, making the above operations ineffective."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class IsolatedStorageFilePermission : System.Security.Permissions.IsolatedStoragePermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Security.Permissions.IsolatedStoragePermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  - System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted
  - System.Security.Permissions.IsolatedStoragePermission.UsageAllowed
  - System.Security.Permissions.IsolatedStoragePermission.UserQuota
  platform:
  - net462
- uid: System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  langs:
  - csharp
  name: IsolatedStorageFilePermission(PermissionState)
  nameWithType: IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Permissions.IsolatedStorageFilePermission&quot;></xref> class with either fully restricted or unrestricted permission as specified."
  remarks: "Constructs either fully restricted (`None`) or `Unrestricted` access to isolated storage files."
  syntax:
    content: public IsolatedStorageFilePermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "One of the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> values."
  overload: System.Security.Permissions.IsolatedStorageFilePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>state</code> parameter is not a valid value of <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Copy
  id: Copy
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  langs:
  - csharp
  name: Copy()
  nameWithType: IsolatedStorageFilePermission.Copy()
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns an identical copy of the current permission."
  remarks: "A copy of a permission represents the same access to resources as the original permission."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A copy of the current permission."
  overload: System.Security.Permissions.IsolatedStorageFilePermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: IsolatedStorageFilePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns a permission that is the intersection of the current permission and the specified permission."
  remarks: "The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to intersect with the current permission object. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the intersection is empty."
  overload: System.Security.Permissions.IsolatedStorageFilePermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
- uid: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: IsolatedStorageFilePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determines whether the current permission is a subset of the specified permission."
  remarks: "The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
- uid: System.Security.Permissions.IsolatedStorageFilePermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: IsolatedStorageFilePermission.ToXml()
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates an XML encoding of the permission and its current state."
  remarks: "The ToXml method enables the <xref:System.Security.Permissions.IsolatedStorageFilePermission> to be XML-encoded for security purposes."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "An XML encoding of the permission, including any state information."
  overload: System.Security.Permissions.IsolatedStorageFilePermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: IsolatedStorageFilePermission.Union(IPermission)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates a permission that is the union of the current permission and the specified permission."
  remarks: "The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to combine with the current permission. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "A new permission that represents the union of the current permission and the specified permission."
  overload: System.Security.Permissions.IsolatedStorageFilePermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
references:
- uid: System.Security.Permissions.IsolatedStoragePermission
  isExternal: false
  name: System.Security.Permissions.IsolatedStoragePermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: IsolatedStorageFilePermission(PermissionState)
  nameWithType: IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Copy
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: Copy()
  nameWithType: IsolatedStorageFilePermission.Copy()
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: IsolatedStorageFilePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(IPermission)
- uid: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: IsolatedStorageFilePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.IsolatedStorageFilePermission.ToXml
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: ToXml()
  nameWithType: IsolatedStorageFilePermission.ToXml()
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.ToXml()
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: IsolatedStorageFilePermission.Union(IPermission)
  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Union(IPermission)
- uid: System.Security.Permissions.IsolatedStorageFilePermission.#ctor*
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: IsolatedStorageFilePermission
  nameWithType: IsolatedStorageFilePermission.IsolatedStorageFilePermission
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Copy*
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: Copy
  nameWithType: IsolatedStorageFilePermission.Copy
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Intersect*
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: Intersect
  nameWithType: IsolatedStorageFilePermission.Intersect
- uid: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf*
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: IsolatedStorageFilePermission.IsSubsetOf
- uid: System.Security.Permissions.IsolatedStorageFilePermission.ToXml*
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: ToXml
  nameWithType: IsolatedStorageFilePermission.ToXml
- uid: System.Security.Permissions.IsolatedStorageFilePermission.Union*
  parent: System.Security.Permissions.IsolatedStorageFilePermission
  isExternal: false
  name: Union
  nameWithType: IsolatedStorageFilePermission.Union
