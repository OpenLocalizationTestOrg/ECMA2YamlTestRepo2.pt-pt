### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  id: SecurityTokenManager
  children:
  - System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  langs:
  - csharp
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager
  fullName: System.IdentityModel.Selectors.SecurityTokenManager
  type: Class
  summary: "Representa um Gestor de tokens de segurança que especifica como tokens de segurança são fornecidos, autenticados e serializados."
  remarks: "Utilize a classe de SecurityTokenManager quando necessita de um token de segurança personalizada, o autenticador de tokens de segurança ou o fornecedor de tokens de segurança. Utilize um token de segurança personalizadas para processar as credenciais que [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] não suporta. Utilize um autenticador de tokens de segurança personalizada quando os métodos de autenticação [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] fornece não são suficientes. Uma classe de SecurityTokenManager devolve um autenticador de tokens de segurança no <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29> Um fornecedor de tokens de segurança disponibiliza tokens de segurança para enviar mensagens SOAP. Uma classe de SecurityTokenManager devolve um fornecedor de tokens de segurança no <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]utilizar autenticadores de token de segurança personalizada e fornecedores de tokens de segurança, consulte [credenciais personalizadas e validação de credenciais](~/add/includes/ajax-current-ext-md.md). [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]criar um token de segurança personalizada, consulte [como: criar um Token personalizado](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public abstract class SecurityTokenManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref> classe."
  syntax:
    content: protected SecurityTokenManager ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um autenticador de tokens de segurança que cumpra os requisitos de token de segurança especificados."
  remarks: "A <xref:System.IdentityModel.Selectors.SecurityTokenManager>classe fornece tipos que podem fornecer tokens de segurança para envio de mensagens SOAP e autenticar os tokens de segurança na receber mensagens SOAP.</xref:System.IdentityModel.Selectors.SecurityTokenManager> O método de CreateSecurityTokenAuthenticator devolve uma classe que pode autenticar os tokens de segurança que correspondem aos critérios especificados no `tokenRequirement` parâmetro."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> que especifica os requisitos de token de segurança."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que satisfaça os requisitos de token de segurança especificados."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> que efetua a autenticação de tokens de segurança nas mensagens SOAP a receber que cumprem os requisitos especificados."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um fornecedor de tokens de segurança que cumpra os requisitos de token de segurança especificados."
  remarks: "A <xref:System.IdentityModel.Selectors.SecurityTokenManager>classe fornece tipos que podem fornecer tokens de segurança para envio de mensagens SOAP e autenticar os tokens de segurança na receber mensagens SOAP.</xref:System.IdentityModel.Selectors.SecurityTokenManager> O método de CreateSecurityTokenProvider devolve uma classe que pode autenticar os tokens de segurança que podem fornecer os tokens de segurança que correspondem aos critérios especificados no `tokenRequirement` parâmetro."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> que especifica os requisitos de token de segurança."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> que disponibiliza tokens de segurança que cumprem os requisitos especificados para enviar mensagens SOAP."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um serializador XML que pode serializar tokens de segurança na versão especificada do WS-* especificações."
  remarks: "Para adicionar suporte de serialização para um token personalizado, uma classe a partir de derivar <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>e devolver uma instância de classe para o método CreateSecurityTokenSerializer.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer> O <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>classe que deriva de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe, é capaz de serializar e anular a serialização dos tokens de segurança que são enviados juntamente com [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)].</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> </xref:System.ServiceModel.Security.WSSecurityTokenSerializer> Assim, para adicionar suporte para obter um token de personalizado o serializador, substitua os métodos virtuais no <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>classe, adicione o código que verifica se o token de segurança pretendido é o token personalizado e, se não, chame o método de classe base.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer>"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenVersion&quot;> </xref> que especifica o WS-* versões de especificação que cumprem os tokens de segurança."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> para serializar os tokens de segurança."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager.SecurityTokenManager
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer
