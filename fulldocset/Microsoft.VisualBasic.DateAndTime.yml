### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.DateAndTime
  id: DateAndTime
  children:
  - Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.DateString
  - Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  - Microsoft.VisualBasic.DateAndTime.Now
  - Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.TimeOfDay
  - Microsoft.VisualBasic.DateAndTime.Timer
  - Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.TimeString
  - Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Today
  - Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  langs:
  - csharp
  name: DateAndTime
  nameWithType: DateAndTime
  fullName: Microsoft.VisualBasic.DateAndTime
  type: Class
  summary: "O <xref uid=&quot;langword_csharp_DateAndTime&quot; name=&quot;DateAndTime&quot; href=&quot;&quot;> </xref> módulo contém os procedimentos e as propriedades utilizadas em operações de data e hora."
  remarks: "Este módulo suporta as palavras-chave de linguagem do Visual Basic e membros de biblioteca de tempo de execução que obtenham a data atual ou o tempo, efetuar cálculos de data, devolverem uma data ou hora, defina a data ou hora ou a duração de um processo de tempo."
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n```  \nDim thisDate As Date  \nthisDate = Today   \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class DateAndTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  id: DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo um valor de data e hora ao qual foi adicionado um intervalo de tempo especificado."
  remarks: "Pode utilizar o `DateAdd` função para adicionar ou subtrair a partir de uma data, o intervalo de tempo especificado. Por exemplo, pode calcular uma data de 30 dias a partir de hoje em dia ou uma hora 45 minutos antes do agora.       Para adicionar dias para `DateValue`, pode utilizar `DateInterval.Day`, `DateInterval.DayOfYear`, ou `DateInterval.Weekday`. Estes são tratadas como equivalentes porque `DayOfYear` e `Weekday` não são intervalos de tempo significativo.       O `DateAdd` função nunca devolve uma data inválida. Se necessário, a parte do dia da data resultante é ajustada rapidez para o último dia do mês no ano resultante resultante. O exemplo seguinte adiciona um mês para 31 de Janeiro a: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` neste exemplo, `DateAdd` devolve `#2/28/1995#`, não `#2/31/1995#`. Se `DateValue` é `#1/31/1996#`, devolve `#2/29/1996#` porque 1996 é um ano bissexto.      > [!NOTE]  >   `DateAdd` utiliza a definição de calendário atual do <xref:System.Globalization.CultureInfo.CurrentCulture%2A>propriedade o <xref:System.Globalization.CultureInfo>classe no <xref:System.Globalization>espaço de nomes.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> A predefinição <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valores são determinados pelo **painel de controlo** definições.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime>estrutura, os seus métodos dão-lhe opções adicionais na adição de intervalos de tempo.</xref:System.DateTime> Por exemplo, pode adicionar um fracional número de dias, arredondado para o mais próximo milissegundo, para um `Date` variável da seguinte forma: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` o `Interval` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Cadeia | Unidade de intervalo de tempo para adicionar |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Dia; truncada de acordo com o valor inteiro |   | `DateInterval.DayOfYear`|y| Dia; truncada de acordo com o valor inteiro |   | `DateInterval.Hour`|h| Hora; arredondado para milissegundo mais próximo |   | `DateInterval.Minute`|n| Minuto; arredondado para milissegundo mais próximo |   | `DateInterval.Month`|m| Mês; truncada de acordo com o valor inteiro |   | `DateInterval.Quarter`|q| Trimestre; truncada de acordo com o valor inteiro |   | `DateInterval.Second`|s| Segundo; arredondado para milissegundo mais próximo |   | `DateInterval.Weekday`|w| Dia; truncada de acordo com o valor inteiro |   | `DateInterval.WeekOfYear`|ww| Semana; truncada de acordo com o valor inteiro |   | `DateInterval.Year`|yyyy| Ano; truncada de acordo com o valor inteiro |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/1a306149-706d-46fd-9b1a-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Necessário. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valor de enumeração ou <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão que representa o intervalo de tempo que pretende adicionar."
    - id: Number
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Expressão de vírgula flutuante representa o número de intervalos que pretende adicionar. `Number`pode ser positivo (para obter valores de data/hora no futuro) ou negativo (para obter valores de data/hora no passado). Pode conter um fracional parte quando `Interval` Especifica horas, minutos ou segundos. Para outros valores de `Interval`, qualquer fracional fazem parte da `Number` é ignorada."
    - id: DateValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Uma expressão que representa a data e hora a que o intervalo está a ser adicionado. `DateValue`propriamente dito não é alterado no programa de chamada."
    return:
      type: System.DateTime
      description: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo um valor de data e hora ao qual foi adicionado um intervalo de tempo especificado."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>Não é coercível relativamente ao <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>Não é válido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Data calculada é antes de 00:00:00 em 1 de Janeiro do ano 1 ou posterior à 23:59:59 no 31 de Dezembro de 9999."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  id: DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo um valor de data e hora ao qual foi adicionado um intervalo de tempo especificado."
  remarks: "Pode utilizar o `DateAdd` função para adicionar ou subtrair a partir de uma data, o intervalo de tempo especificado. Por exemplo, pode calcular uma data de 30 dias a partir de hoje em dia ou uma hora 45 minutos antes do agora.       Para adicionar dias para `DateValue`, pode utilizar `DateInterval.Day`, `DateInterval.DayOfYear`, ou `DateInterval.Weekday`. Estes são tratadas como equivalentes porque `DayOfYear` e `Weekday` não são intervalos de tempo significativo.       O `DateAdd` função nunca devolve uma data inválida. Se necessário, a parte do dia da data resultante é ajustada rapidez para o último dia do mês no ano resultante resultante. O exemplo seguinte adiciona um mês para 31 de Janeiro a: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` neste exemplo, `DateAdd` devolve `#2/28/1995#`, não `#2/31/1995#`. Se `DateValue` é `#1/31/1996#`, devolve `#2/29/1996#` porque 1996 é um ano bissexto.      > [!NOTE]  >   `DateAdd` utiliza a definição de calendário atual do <xref:System.Globalization.CultureInfo.CurrentCulture%2A>propriedade o <xref:System.Globalization.CultureInfo>classe no <xref:System.Globalization>espaço de nomes.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> A predefinição <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valores são determinados pelo **painel de controlo** definições.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime>estrutura, os seus métodos dão-lhe opções adicionais na adição de intervalos de tempo.</xref:System.DateTime> Por exemplo, pode adicionar um fracional número de dias, arredondado para o mais próximo milissegundo, para um `Date` variável da seguinte forma: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` o `Interval` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Cadeia | Unidade de intervalo de tempo para adicionar |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Dia; truncada de acordo com o valor inteiro |   | `DateInterval.DayOfYear`|y| Dia; truncada de acordo com o valor inteiro |   | `DateInterval.Hour`|h| Hora; arredondado para milissegundo mais próximo |   | `DateInterval.Minute`|n| Minuto; arredondado para milissegundo mais próximo |   | `DateInterval.Month`|m| Mês; truncada de acordo com o valor inteiro |   | `DateInterval.Quarter`|q| Trimestre; truncada de acordo com o valor inteiro |   | `DateInterval.Second`|s| Segundo; arredondado para milissegundo mais próximo |   | `DateInterval.Weekday`|w| Dia; truncada de acordo com o valor inteiro |   | `DateInterval.WeekOfYear`|ww| Semana; truncada de acordo com o valor inteiro |   | `DateInterval.Year`|yyyy| Ano; truncada de acordo com o valor inteiro |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/8ee426fa-d573-45a5-a0f5-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (string Interval, double Number, object DateValue);
    parameters:
    - id: Interval
      type: System.String
      description: "Necessário. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valor de enumeração ou <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão que representa o intervalo de tempo que pretende adicionar."
    - id: Number
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Expressão de vírgula flutuante representa o número de intervalos que pretende adicionar. `Number`pode ser positivo (para obter valores de data/hora no futuro) ou negativo (para obter valores de data/hora no passado). Pode conter um fracional parte quando `Interval` Especifica horas, minutos ou segundos. Para outros valores de `Interval`, qualquer fracional fazem parte da `Number` é ignorada."
    - id: DateValue
      type: System.Object
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Uma expressão que representa a data e hora a que o intervalo está a ser adicionado. `DateValue`propriamente dito não é alterado no programa de chamada."
    return:
      type: System.DateTime
      description: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo um valor de data e hora ao qual foi adicionado um intervalo de tempo especificado."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>Não é coercível relativamente ao <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>Não é válido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Data calculada é antes de 00:00:00 em 1 de Janeiro do ano 1 ou posterior à 23:59:59 no 31 de Dezembro de 9999."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valor Especifica o número de intervalos de tempo entre dois <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valores."
  remarks: "Pode utilizar o `DateDiff` função para determinar quantos intervalos de tempo especificados existam entre dois valores de data/hora. Por exemplo, poderá utilizar `DateDiff` para calcular o número de dias entre duas datas ou o número de semanas entre hoje e o fim do ano.      ## Comportamento - **tratamento de parâmetros.** `DateDiff`subtrai o valor de `Date1` do valor `Date2` para produzir a diferença. Nenhum dos valores é alterado no programa de chamada.      - **Valores de retorno.** Porque `Date1` e `Date2` do `Date` tipo de dados, que contenham valores de data e hora exatas para os batimentos de 100 nanossegundos no temporizador de sistema. No entanto, `DateDiff` sempre devolve o número de intervalos de tempo, como um `Long` valor.           Se `Date1` representa uma data e hora que posterior `Date2`, `DateDiff` devolve um número negativo.      - **Intervalos de dias.** Se `Interval` está definido como `DateInterval.DayOfYear`, esta é tratada igual `DateInterval.Day`porque `DayOfYear` não é uma unidade com significado para um intervalo de tempo.      - **Intervalos de semana.** Se `Interval` está definido como `DateInterval.WeekOfYear`, o valor de retorno representa o número de semanas entre o primeiro dia da semana que contém `Date1` e o primeiro dia da semana que contém `Date2`. O exemplo seguinte mostra como isto produz resultados diferentes de `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_1.vb) ] no exemplo anterior, `DateDiff` devolve 0 para `wD` porque a diferença entre as duas datas é menor que, sete dias, mas devolve 1 para `wY` porque não existe uma diferença de sete dias entre os primeiros dias, semanas a respetiva calendário.      - **Intervalos superiores.** Se `Interval` está definido como `DateInterval.Year`, o valor de retorno é calculado puramente as partes de ano do `Date1` e `Date2`. Da mesma forma, o valor de retorno para `DateInterval.Month` é calculado puramente das partes do ano e mês dos argumentos e para `DateInterval.Quarter` de trimestres que contém as duas datas.           Por exemplo, ao comparar a 31 de Dezembro para 1 de Janeiro do ano seguinte, `DateDiff` devolve 1 para `DateInterval.Year`, `DateInterval.Quarter`, ou `DateInterval.Month`, mesmo que decorreu no máximo apenas um dia.           Para culturas como japonês que tenham vários eras, o `DateDiff` método devolve uma diferença nos anos se a diferença abranger eras dois ou mais. Em vez disso, pode calcular a diferença nos valores obtidos pelo <xref:System.DateTime.Year%2A>propriedade, conforme mostrado no exemplo seguinte: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Outros intervalos.** Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime>estrutura, os seus métodos dão-lhe opções adicionais no Localizar intervalos de tempo.</xref:System.DateTime> Por exemplo, pode utilizar o `Subtract` método dos seus formulários sobrecarregados: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtrai um <xref:System.TimeSpan>de um `Date` variável para devolver outro `Date` valor, e <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtrai um `Date` valor para devolver um <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Pode de tempo que um processo para determinar quantos milissegundos, que demora, tal como mostra o exemplo seguinte.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_2.vb) ] o `Interval` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor da cadeia | Unidade de diferença de tempo |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Dia |   | `DateInterval.DayOfYear`|&quot; y &quot;| Dia |   | `DateInterval.Hour`|&quot; h &quot;| Hora |   | `DateInterval.Minute`|&quot; n &quot;| Minuto |   | `DateInterval.Month`|&quot; m &quot;| Mês |   | `DateInterval.Quarter`|&quot; q &quot;| Trimestre |   | `DateInterval.Second`|&quot; s &quot;| Segundo |   | `DateInterval.Weekday`|&quot; w &quot;| Semana |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| Semana do calendário |   | `DateInterval.Year`|&quot; aaaa &quot;| Ano |       O `DayOfWeek` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primeiro dia da semana especificado nas definições de sistema |   | `FirstDayOfWeek.Sunday`|1| Domingo (predefinição) |   | `FirstDayOfWeek.Monday`|2| Segunda (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Terça-feira |   | `FirstDayOfWeek.Wednesday`|4| Quarta-feira |   | `FirstDayOfWeek.Thursday`|5| Quinta-feira |   | `FirstDayOfWeek.Friday`|6| Sexta-feira |   | `FirstDayOfWeek.Saturday`|7| Sábado |       O `WeekOfYear` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Primeira semana do ano especificado nas definições de sistema |   | `FirstWeekOfYear.Jan1`|1| Semana em que 1 de Janeiro ocorre (predefinição) |   | `FirstWeekOfYear.FirstFourDays`|2| Semana que tenha, pelo menos, quatro dias no ano novo (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Primeira semana completa no ano novo |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_3.vb)]"
  syntax:
    content: public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Necessário. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valor de enumeração ou <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão que representa o intervalo de tempo que pretende utilizar como a unidade de diferença entre `Date1` e `Date2`."
    - id: Date1
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. O primeiro valor de data/hora que pretende utilizar no cálculo."
    - id: Date2
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. O segundo valor de data/hora em que pretende utilizar no cálculo."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumeração que especifica o primeiro dia da semana. Se não for especificado, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> é utilizado."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumeração que especifica a primeira semana do ano. Se não for especificado, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> é utilizado."
    return:
      type: System.Int64
      description: "Devolve um <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valor Especifica o número de intervalos de tempo entre dois <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valores."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, ou <code>DayofWeek</code> está fora do intervalo."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>ou <code>Date2</code> é de um tipo inválido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valor Especifica o número de intervalos de tempo entre dois <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valores."
  remarks: "Pode utilizar o `DateDiff` função para determinar quantos intervalos de tempo especificados existam entre dois valores de data/hora. Por exemplo, poderá utilizar `DateDiff` para calcular o número de dias entre duas datas ou o número de semanas entre hoje e o fim do ano.      ## Comportamento - **tratamento de parâmetros.** `DateDiff`subtrai o valor de `Date1` do valor `Date2` para produzir a diferença. Nenhum dos valores é alterado no programa de chamada.      - **Valores de retorno.** Porque `Date1` e `Date2` do `Date` tipo de dados, que contenham valores de data e hora exatas para os batimentos de 100 nanossegundos no temporizador de sistema. No entanto, `DateDiff` sempre devolve o número de intervalos de tempo, como um `Long` valor.           Se `Date1` representa uma data e hora que posterior `Date2`, `DateDiff` devolve um número negativo.      - **Intervalos de dias.** Se `Interval` está definido como `DateInterval.DayOfYear`, esta é tratada igual `DateInterval.Day`porque `DayOfYear` não é uma unidade com significado para um intervalo de tempo.      - **Intervalos de semana.** Se `Interval` está definido como `DateInterval.WeekOfYear`, o valor de retorno representa o número de semanas entre o primeiro dia da semana que contém `Date1` e o primeiro dia da semana que contém `Date2`. O exemplo seguinte mostra como isto produz resultados diferentes de `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_1.vb) ] no exemplo anterior, `DateDiff` devolve 0 para `wD` porque a diferença entre as duas datas é menor que, sete dias, mas devolve 1 para `wY` porque não existe uma diferença de sete dias entre os primeiros dias, semanas a respetiva calendário.      - **Intervalos superiores.** Se `Interval` está definido como `DateInterval.Year`, o valor de retorno é calculado puramente as partes de ano do `Date1` e `Date2`. Da mesma forma, o valor de retorno para `DateInterval.Month` é calculado puramente das partes do ano e mês dos argumentos e para `DateInterval.Quarter` de trimestres que contém as duas datas.           Por exemplo, ao comparar a 31 de Dezembro para 1 de Janeiro do ano seguinte, `DateDiff` devolve 1 para `DateInterval.Year`, `DateInterval.Quarter`, ou `DateInterval.Month`, mesmo que decorreu no máximo apenas um dia.           Para culturas como japonês que tenham vários eras, o `DateDiff` método devolve uma diferença nos anos se a diferença abranger eras dois ou mais. Em vez disso, pode calcular a diferença nos valores obtidos pelo <xref:System.DateTime.Year%2A>propriedade, conforme mostrado no exemplo seguinte: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Outros intervalos.** Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime>estrutura, os seus métodos dão-lhe opções adicionais no Localizar intervalos de tempo.</xref:System.DateTime> Por exemplo, pode utilizar o `Subtract` método dos seus formulários sobrecarregados: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtrai um <xref:System.TimeSpan>de um `Date` variável para devolver outro `Date` valor, e <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtrai um `Date` valor para devolver um <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Pode de tempo que um processo para determinar quantos milissegundos, que demora, tal como mostra o exemplo seguinte.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_2.vb) ] o `Interval` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor da cadeia | Unidade de diferença de tempo |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Dia |   | `DateInterval.DayOfYear`|&quot; y &quot;| Dia |   | `DateInterval.Hour`|&quot; h &quot;| Hora |   | `DateInterval.Minute`|&quot; n &quot;| Minuto |   | `DateInterval.Month`|&quot; m &quot;| Mês |   | `DateInterval.Quarter`|&quot; q &quot;| Trimestre |   | `DateInterval.Second`|&quot; s &quot;| Segundo |   | `DateInterval.Weekday`|&quot; w &quot;| Semana |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| Semana do calendário |   | `DateInterval.Year`|&quot; aaaa &quot;| Ano |       O `DayOfWeek` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primeiro dia da semana especificado nas definições de sistema |   | `FirstDayOfWeek.Sunday`|1| Domingo (predefinição) |   | `FirstDayOfWeek.Monday`|2| Segunda (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Terça-feira |   | `FirstDayOfWeek.Wednesday`|4| Quarta-feira |   | `FirstDayOfWeek.Thursday`|5| Quinta-feira |   | `FirstDayOfWeek.Friday`|6| Sexta-feira |   | `FirstDayOfWeek.Saturday`|7| Sábado |       O `WeekOfYear` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Primeira semana do ano especificado nas definições de sistema |   | `FirstWeekOfYear.Jan1`|1| Semana em que 1 de Janeiro ocorre (predefinição) |   | `FirstWeekOfYear.FirstFourDays`|2| Semana que tenha, pelo menos, quatro dias no ano novo (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Primeira semana completa no ano novo |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_3.vb)]"
  syntax:
    content: public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Necessário. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valor de enumeração ou <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão que representa o intervalo de tempo que pretende utilizar como a unidade de diferença entre `Date1` e `Date2`."
    - id: Date1
      type: System.Object
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. O primeiro valor de data/hora que pretende utilizar no cálculo."
    - id: Date2
      type: System.Object
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. O segundo valor de data/hora em que pretende utilizar no cálculo."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumeração que especifica o primeiro dia da semana. Se não for especificado, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> é utilizado."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumeração que especifica a primeira semana do ano. Se não for especificado, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> é utilizado."
    return:
      type: System.Int64
      description: "Devolve um <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valor Especifica o número de intervalos de tempo entre dois <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valores."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, ou <code>DayofWeek</code> está fora do intervalo."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>ou <code>Date2</code> é de um tipo inválido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor contendo o componente especificado de uma determinada <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor."
  remarks: "Pode utilizar o `DatePart` função para avaliar um valor de data/hora e devolver um componente específico. Por exemplo, poderá utilizar `DatePart` para calcular o dia da semana ou a hora atual.       Se optar por `DateInterval.Weekday` para o `Interval` argumento, o valor devolvido é consistente com os valores do `FirstDayOfWeek` enumeração. Se optar por `DateInterval.WeekOfYear`, `DatePart` utiliza o <xref:System.Globalization.Calendar>e <xref:System.Globalization.CultureInfo>classes do <xref:System.Globalization>espaço de nomes para determinar as definições atuais.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       O `FirstDayOfWeekValue` argumento afeta cálculos que utilizam o `DateInterval.Weekday` e `DateInterval.WeekOfYear` `Interval` definições. O `FirstWeekOfYearValue` argumento afeta cálculos que especifiquem `DateInterval.WeekOfYear` para `Interval`.       Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime>estrutura, os seus métodos dão-lhe opções adicionais ao obter partes de data/hora.</xref:System.DateTime> Por exemplo, pode obter o valor de data completo de um `Date` variável, com o valor de tempo definidas como meia-noite, da seguinte forma: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` o `Interval` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Cadeia | Parte do valor de data/hora para devolver |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Dia do mês (1 e 31) |   | `DateInterval.DayOfYear`|y| Dia do ano (1 e 366) |   | `DateInterval.Hour`|h| Hora |   | `DateInterval.Minute`|n| Minuto |   | `DateInterval.Month`|m| Mês |   | `DateInterval.Quarter`|q| Trimestre |   | `DateInterval.Second`|s| Segundo |   | `DateInterval.Weekday`|w| Dia da semana (1 a 7) |   | `DateInterval.WeekOfYear`|ww| Semana do ano (1 a 53) |   | `DateInterval.Year`|yyyy| Ano |       O `FirstDayOfWeekValue` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primeiro dia da semana especificado nas definições de sistema |   | `FirstDayOfWeek.Sunday`|1| Domingo (predefinição) |   | `FirstDayOfWeek.Monday`|2| Segunda (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Terça-feira |   | `FirstDayOfWeek.Wednesday`|4| Quarta-feira |   | `FirstDayOfWeek.Thursday`|5| Quinta-feira |   | `FirstDayOfWeek.Friday`|6| Sexta-feira |   | `FirstDayOfWeek.Saturday`|7| Sábado |       O `FirstWeekOfYearValue` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Primeira semana do ano especificado nas definições de sistema |   | `FirstWeekOfYear.Jan1`|1| Semana em que 1 de Janeiro ocorre (predefinição) |   | `FirstWeekOfYear.FirstFourDays`|2| Semana que tenha, pelo menos, quatro dias no ano novo (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Primeira semana completa no ano novo |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/982d49dd-7819-40e1-9b19-_1.vb)]"
  syntax:
    content: public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Necessário. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valor de enumeração ou <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão que representa a parte do valor de data/hora que pretende devolver."
    - id: DateValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor que pretende avaliar."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumeração que especifica o primeiro dia da semana. Se não for especificado, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> é utilizado."
    - id: FirstWeekOfYearValue
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumeração que especifica a primeira semana do ano. Se não for especificado, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> é utilizado."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor contendo o componente especificado de uma determinada <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>Não é válido."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>Não é coercível relativamente ao <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor contendo o componente especificado de uma determinada <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor."
  remarks: "Pode utilizar o `DatePart` função para avaliar um valor de data/hora e devolver um componente específico. Por exemplo, poderá utilizar `DatePart` para calcular o dia da semana ou a hora atual.       Se optar por `DateInterval.Weekday` para o `Interval` argumento, o valor devolvido é consistente com os valores do `FirstDayOfWeek` enumeração. Se optar por `DateInterval.WeekOfYear`, `DatePart` utiliza o <xref:System.Globalization.Calendar>e <xref:System.Globalization.CultureInfo>classes do <xref:System.Globalization>espaço de nomes para determinar as definições atuais.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       O `FirstDayOfWeekValue` argumento afeta cálculos que utilizam o `DateInterval.Weekday` e `DateInterval.WeekOfYear` `Interval` definições. O `FirstWeekOfYearValue` argumento afeta cálculos que especifiquem `DateInterval.WeekOfYear` para `Interval`.       Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime>estrutura, os seus métodos dão-lhe opções adicionais ao obter partes de data/hora.</xref:System.DateTime> Por exemplo, pode obter o valor de data completo de um `Date` variável, com o valor de tempo definidas como meia-noite, da seguinte forma: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` o `Interval` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Cadeia | Parte do valor de data/hora para devolver |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Dia do mês (1 e 31) |   | `DateInterval.DayOfYear`|y| Dia do ano (1 e 366) |   | `DateInterval.Hour`|h| Hora |   | `DateInterval.Minute`|n| Minuto |   | `DateInterval.Month`|m| Mês |   | `DateInterval.Quarter`|q| Trimestre |   | `DateInterval.Second`|s| Segundo |   | `DateInterval.Weekday`|w| Dia da semana (1 a 7) |   | `DateInterval.WeekOfYear`|ww| Semana do ano (1 a 53) |   | `DateInterval.Year`|yyyy| Ano |       O `FirstDayOfWeekValue` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primeiro dia da semana especificado nas definições de sistema |   | `FirstDayOfWeek.Sunday`|1| Domingo (predefinição) |   | `FirstDayOfWeek.Monday`|2| Segunda (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Terça-feira |   | `FirstDayOfWeek.Wednesday`|4| Quarta-feira |   | `FirstDayOfWeek.Thursday`|5| Quinta-feira |   | `FirstDayOfWeek.Friday`|6| Sexta-feira |   | `FirstDayOfWeek.Saturday`|7| Sábado |       O `FirstWeekOfYearValue` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Primeira semana do ano especificado nas definições de sistema |   | `FirstWeekOfYear.Jan1`|1| Semana em que 1 de Janeiro ocorre (predefinição) |   | `FirstWeekOfYear.FirstFourDays`|2| Semana que tenha, pelo menos, quatro dias no ano novo (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Primeira semana completa no ano novo |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/682455c0-1619-4c4c-8238-_1.vb)]"
  syntax:
    content: public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Necessário. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valor de enumeração ou <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão que representa a parte do valor de data/hora que pretende devolver."
    - id: DateValue
      type: System.Object
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor que pretende avaliar."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumeração que especifica o primeiro dia da semana. Se não for especificado, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> é utilizado."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumeração que especifica a primeira semana do ano. Se não for especificado, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> é utilizado."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor contendo o componente especificado de uma determinada <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>Não é válido."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>Não é coercível relativamente ao <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  id: DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> representando um especificado ano, mês e dia, com as informações de tempo definidas como meia-noite (00:&00;:00)."
  remarks: "Em Windows 98 ou Windows 2000, anos com dois dígitos para o `Year` argumento são interpretados com base nas definições de computador definido pelo utilizador. As predefinições são que os valores entre 0 e 29 são interpretados como dos anos 2000 – 2029, e valores entre 30 e 99 são interpretados como dos anos 1930 – 1999. Para todos os outros `Year` argumentos, utilize um com quatro dígitos ano; por exemplo, 1924.       Versões anteriores do Windows interpretar anos com dois dígitos com base nas predefinições do descrito anteriormente. Para garantir que a função devolve o valor adequado, utilize um com quatro dígitos `Year`.       O exemplo seguinte demonstra negativo, igual a zero e valores de argumento positivo. Aqui, o `DateSerial` função devolve um `Date` que representa o dia antes do primeiro dia do Março no ano de 10 anos antes do ano atual; por outras palavras, o último dia do Fevereiro há a dez anos.      ```vb#   Dim EndFeb As Date = DateSerial(-10, 3, 0)   ```Se qualquer um dos `Month` ou `Day` excede o intervalo normal, é aplicada à unidade maior seguinte, conforme apropriado. Por exemplo, se especificar 32 dias, esta é avaliada como um mês e a partir de um para quatro dias, dependendo do valor de `Month`. Se `Year` é superior a 9999, ou se qualquer argumento está fora do intervalo-2,147,483,648 através de 2 147 483 647, um <xref:System.ArgumentException>erro ocorrer.</xref:System.ArgumentException> Se a data especificada por três argumentos é anterior ao 00:00:00 em 1 de Janeiro do ano 1 ou posterior à 23:59:59 no 31 de Dezembro de 9999, um <xref:System.ArgumentOutOfRangeException>erro ocorrer.</xref:System.ArgumentOutOfRangeException>       O `Date` tipo de dados inclui os componentes de tempo. `DateSerial`Define todos estes como 0, pelo que o valor devolvido representa o início do dia calculado.       Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime>estrutura, os seus métodos dão-lhe opções adicionais no reuni um `Date` valor.</xref:System.DateTime> Por exemplo, pode utilizar um do sobrecarregado <xref:System.DateTime.%23ctor%2A>construtores para preencher um `Date` variável utilizando a combinação pretendida de componentes.</xref:System.DateTime.%23ctor%2A> Os seguintes conjuntos de exemplo `NewDateTime` para 6 de Maio de 1978 num tenth de um segundo antes de 8:30 da manhã:```vb#   Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "This example uses the `DateSerial` function to return the date for the specified year, month, and day.  \n  \n [!code-vb[VbVbalrFunctions#28](~/add/codesnippet/visualbasic/2c6c2f83-8b90-492d-bf33-_1.vb)]"
  syntax:
    content: public static DateTime DateSerial (int Year, int Month, int Day);
    parameters:
    - id: Year
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>expressão entre 1 e 9999. No entanto, os valores abaixo este intervalo também são aceites. Se `Year` é de 0 a 99, ela é interpretada como a ser entre 1930 e 2029, conforme explicado na secção &quot;Comentários&quot; abaixo. Se `Year` é menor que 1 é subtraído do ano atual."
    - id: Month
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>expressão entre 1 e 12. No entanto, os valores fora deste intervalo também são aceites. O valor de `Month` é 1 de deslocamento e aplicadas a Janeiro do ano calculado. Por outras palavras, (`Month` - 1) é adicionado à Janeiro. O ano é recalculado se necessário. Os seguintes resultados ilustram este efeito: se `Month` é 1, o resultado é Janeiro do ano calculado.       Se `Month` for 0, o resultado é Dezembro do ano anterior.       Se `Month` é de -1, o resultado é Novembro do ano anterior.       Se `Month` 13, o resultado é Janeiro do ano seguinte."
    - id: Day
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>expressão entre 1 e 31. No entanto, os valores fora deste intervalo também são aceites. O valor de `Day` é 1 de deslocamento e aplicada para o primeiro dia do mês calculado. Por outras palavras, (`Day` - 1) é adicionada para o primeiro dia do mês. O mês e ano são recalculadas se necessário. Os seguintes resultados ilustram este efeito: se `Day` é 1, o resultado é o primeiro dia do mês calculado.       Se `Day` for 0, o resultado é o último dia do mês anterior.       Se `Day` é de -1, o resultado é penultimate dia do mês anterior.       Se `Day` é passado o fim do mês atual, o resultado é o dia do mês seguinte adequado. Por exemplo, se `Month` é 4 e `Day` 31, o resultado é 1 de Maio."
    return:
      type: System.DateTime
      description: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> representando um especificado ano, mês e dia, com as informações de tempo definidas como meia-noite (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateSerial*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  id: DateString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve ou define um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valor que representa a data atual de acordo com o sistema."
  remarks: "`DateString`Devolve a data do sistema no formato MM-dd-yyyy, que utiliza o nome abreviado do mês. Os formatos aceites para a data são M-d-yyyy, M-d-y, m/aaaa e m/y. Isto é verdadeiro para todas as regiões de sistema, exceto as que utilizam um conjunto de carateres de byte duplo (DBCS). Se a região do sistema utiliza um conjunto de carateres de byte duplo, `DateString` devolve a data do sistema no formato AAAA-MM-dd. A região do sistema é definida utilizando o **relógio, o idioma e região** item em **painel de controlo**.       **Tenha em atenção** o `DateString` propriedade devolve a data de system apenas no formato AAAA-MM-dd para o `zh` (chinês simplificado), `ko` (coreano), e `ja` regiões de sistema (japonês) se estiver a executar o Visual Basic dentro do Silverlight.       Para obter ou definir a hora do sistema atual como um `String`, utilize o <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Para obter o actual sistema data ou hora no formato de sua região, ou está num formato personalizado, forneça o <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>propriedade para o <xref:Microsoft.VisualBasic.Strings.Format%2A>função, especificando um formato de data/hora predefinido ou definido pelo utilizador.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> O exemplo seguinte demonstra esta.      ```   MsgBox(&quot;The formatted date is &quot; & Format(Now, &quot;dddd, d MMM yyyy&quot;))   ```Para aceder a data do sistema atual como um `Date`, utilize o <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > A definição de sistema data ou hora requer permissões de código não gerido, que podem afetar a respetiva execução em situações de fidedignidade parcial. Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission>e [permissões de acesso de código](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example uses the `DateString` property to display the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#1](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#1)]"
  syntax:
    content: public static string DateString { get; set; }
    return:
      type: System.String
      description: "Devolve ou define um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valor que representa a data atual de acordo com o sistema."
  overload: Microsoft.VisualBasic.DateAndTime.DateString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Formato inválido utilizado para definir o valor da <xref uid=&quot;langword_csharp_DateString&quot; name=&quot;DateString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  id: DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo as informações de data representadas por uma cadeia, com as informações de tempo definidas como meia-noite (00:&00;:00)."
  remarks: "Se `StringDate` inclui apenas os números entre 1 e 12, separados por separadores de datas válido, `DateValue` reconhece a ordem de mês, dia e ano, de acordo com o formato de data abreviada especificado para o seu sistema. `DateValue`utiliza a definição de calendário atual do <xref:System.Globalization.CultureInfo.CurrentCulture%2A>propriedade o <xref:System.Globalization.CultureInfo>classe no <xref:System.Globalization>espaço de nomes.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> A predefinição <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valores são determinados pelo **painel de controlo** definições.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> Pode substituir o formato de data abreviada, definindo o <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>propriedade o <xref:System.Globalization.DateTimeFormatInfo>classe no <xref:System.Globalization>espaço de nomes.</xref:System.Globalization> </xref:System.Globalization.DateTimeFormatInfo> </xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>       `DateValue`reconhece os nomes de mês no formato longo, abreviado e um valor numérico. Por exemplo, para além de reconhecer 30/12/1991 e 30/12/91, `DateValue` também reconhece 30 de Dezembro de 1991 e 30 de Dec de 1991.       Se o ano parte `StringDate` for omitido, `DateValue` utiliza o ano atual a partir da data do sistema do seu computador.       Se o `StringDate` argumento inclui informações de tempo, `DateValue` não incluí-la no valor devolvido. No entanto, se `StringDate` inclui informações de tempo inválido, tais como &quot;89:98&quot;, uma <xref:System.InvalidCastException>erro ocorrer.</xref:System.InvalidCastException>"
  example:
  - "This example uses the `DateValue` function to convert a string to a date. You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.  \n  \n [!code-vb[VbVbalrFunctions#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._84_1.vb)]"
  syntax:
    content: public static DateTime DateValue (string StringDate);
    parameters:
    - id: StringDate
      type: System.String
      description: "Necessário. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>expressão que representa um valor de data/hora de 00:00:00 em 1 de Janeiro do ano 1 a 23:59:59 no 31 de Dezembro de 9999."
    return:
      type: System.DateTime
      description: "<xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor que contém as informações de data representadas por uma cadeia, com as informações de tempo definidas como meia-noite (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringDate</code>inclui informações de tempo inválido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  id: Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 1 e 31 que representa o dia do mês."
  remarks: "Se utilizar o `Day` função, poderá ter de qualifique-com o `Microsoft.VisualBasic` espaço de nomes, porque o <xref:System.Windows.Forms>define o espaço de nomes <xref:System.Windows.Forms.Day>como uma enumeração.</xref:System.Windows.Forms.Day> </xref:System.Windows.Forms> O seguinte exemplo mostra como nenhuns `Day` resolve esta ambiguidade: ```vb#   Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)   ``` também pode obter o dia do mês chamando `DatePart` e especificando `DateInterval.Day` para o *intervalo* argumento."
  example:
  - "The following example uses the `Day` function to obtain the day of the month from a specified date. In the development environment, the date literal is displayed in standard short format (such as \"02/12/1969\") using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#30](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._126_1.vb)]  \n  \n `Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=fullName> enumeration."
  syntax:
    content: public static int Day (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor a partir do qual pretende extrair o dia."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 1 e 31 que representa o dia do mês."
  overload: Microsoft.VisualBasic.DateAndTime.Day*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  id: Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 0 e 23 que representa a hora do dia."
  remarks: "Também pode obter a hora do dia chamando `DatePart` e especificando `DateInterval.Hour` para o `Interval` argumento."
  example:
  - "This example uses the `Hour` function to obtain the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#32](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._192_1.vb)]"
  syntax:
    content: public static int Hour (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor a partir do qual pretende extrair a hora."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 0 e 23 que representa a hora do dia."
  overload: Microsoft.VisualBasic.DateAndTime.Hour*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  id: Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 0 e 59 que representa o minuto da hora."
  remarks: "Também pode obter o minuto da hora chamando `DatePart` e especificando `DateInterval.Minute` para o `Interval` argumento."
  example:
  - "This example uses the `Minute` function to obtain the minute of the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#42](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._195_1.vb)]"
  syntax:
    content: public static int Minute (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor a partir do qual pretende extrair o minuto."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 0 e 59 que representa o minuto da hora."
  overload: Microsoft.VisualBasic.DateAndTime.Minute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  id: Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 1 e 12 que representa o mês do ano."
  remarks: "Também pode obter o mês do ano chamando `DatePart` e especificando `DateInterval.Month` para o `Interval` argumento."
  example:
  - "This example uses the `Month` function to obtain the month from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#43](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._213_1.vb)]"
  syntax:
    content: public static int Month (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor a partir do qual pretende extrair o mês."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 1 e 12 que representa o mês do ano."
  overload: Microsoft.VisualBasic.DateAndTime.Month*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  id: MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valor contendo o nome do mês especificado."
  remarks: "A cadeia devolvida pela `MonthName` depende não apenas nos argumentos de entrada, mas também o **opções regionais** definições especificadas nas janelas **painel de controlo**.      > [!NOTE]  >   `MonthName` utiliza a definição de calendário atual do <xref:System.Globalization.CultureInfo.CurrentCulture%2A>propriedade o <xref:System.Globalization.CultureInfo>classe no <xref:System.Globalization>espaço de nomes.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> A predefinição <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valores são determinados pelo **painel de controlo** definições.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>"
  example:
  - "This example uses the `MonthName` function to determine the name of the month, by the integer given. The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.  \n  \n [!code-vb[VbVbalrFunctions#44](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._194_1.vb)]"
  syntax:
    content: public static string MonthName (int Month, bool Abbreviate = false);
    parameters:
    - id: Month
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. A designação numérico do mês, entre 1 e 13; 1 indica Janeiro e 12 indica Dezembro. Pode utilizar o valor 13 com num calendário de 13 meses. Se o sistema está a utilizar num calendário de 12 meses e `Month` é 13, <xref uid=&quot;langword_csharp_MonthName&quot; name=&quot;MonthName&quot; href=&quot;&quot;> </xref> devolve uma cadeia vazia."
    - id: Abbreviate
      type: System.Boolean
      description: "Opcional. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>valor que indica se o nome do mês deve ser abreviado. Se for omitido, a predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, que significa que o nome do mês não é abreviado."
    return:
      type: System.String
      description: "Devolve um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valor contendo o nome do mês especificado."
  overload: Microsoft.VisualBasic.DateAndTime.MonthName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Month</code>é menor que 1 ou superior a 13."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Now
  id: Now
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo a data e hora atuais, de acordo com o sistema."
  remarks: "Para definir a data do sistema, utilize o <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A> Para definir a hora do sistema, utilize o <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>"
  example:
  - "The following example uses the `Now` property to return the current system date and time.  \n  \n [!code-vb[VbVbalrDateProperties#4](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#4)]"
  syntax:
    content: public static DateTime Now { get; }
    return:
      type: System.DateTime
      description: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo a data e hora atuais, de acordo com o sistema."
  overload: Microsoft.VisualBasic.DateAndTime.Now*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  id: Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 0 e 59 que representa o segundo do minuto."
  remarks: "Também pode obter o segundo do minuto chamando `DatePart` e especificando `DateInterval.Second` para o `Interval` argumento."
  example:
  - "The following example uses the `Second` function to obtain the second of the minute from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#46](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public static int Second (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor a partir do qual pretende extrair o segundo."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 0 e 59 que representa o segundo do minuto."
  overload: Microsoft.VisualBasic.DateAndTime.Second*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  id: TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve ou define um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo a hora atual do dia de acordo com o sistema."
  remarks: "O `Date` tipo de dados inclui os componentes de data. Quando devolver a hora do sistema, `TimeOfDay` define estes all para 1, pelo que o valor devolvido representa o primeiro dia do ano 1. Ao definir a hora do sistema, `TimeOfDay` ignora os componentes de data.       Para aceder a hora do sistema atual como um `String`, utilize o <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Para obter ou definir a data do sistema atual, utilize o <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > A definição de sistema data ou hora requer permissões de código não gerido, que podem afetar a respetiva execução em situações de fidedignidade parcial. Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission>e [permissões de acesso de código](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeOfDay` property to return the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#3](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#3)]"
  syntax:
    content: public static DateTime TimeOfDay { get; set; }
    return:
      type: System.DateTime
      description: "Devolve ou define um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo a hora atual do dia de acordo com o sistema."
  overload: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  id: Timer
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> valor representa o número de segundos decorridos desde a meia-noite."
  remarks: "O `Timer` propriedade devolve os segundos e os milissegundos desde a meia-noite mais recente. Os segundos são na parte integrante do valor de retorno e os milissegundos estão na parte fracional."
  example:
  - "This example uses the `Timer` property to pause the application. It can perform other processing during the pause.  \n  \n [!code-vb[VbVbalrTimerProperty#1](~/add/codesnippet/visualbasic/VbVbalrTimerProperty/Form1.vb#1)]  \n  \n Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=fullName> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=fullName>, <xref:System.Timers?displayProperty=fullName>, and <xref:System.Windows.Forms?displayProperty=fullName> namespaces."
  syntax:
    content: public static double Timer { get; }
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> valor representa o número de segundos decorridos desde a meia-noite."
  overload: Microsoft.VisualBasic.DateAndTime.Timer*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  id: TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> representando uma hora especificada, minuto e segundo, com as informações de data definidas relativas a 1 de Janeiro do ano 1."
  remarks: "O exemplo seguinte demonstra negativo, igual a zero e valores de argumento positivo. O `TimeSerial` função devolve um período de tempo que representa a 15 minutos antes de três horas antes de ao meio-dia ou 8 45:00 da Manhã.      ```vb#   Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)   ```Se qualquer um dos `Minute` ou `Second` excede o intervalo normal, é aplicada à unidade maior seguinte, conforme apropriado. Por exemplo, se especificar 75 minutos, é avaliada como uma hora e 15 minutos.       `TimeSerial`reduz o total de segundos módulo 86,400, que é o número de segundos num dia. Por conseguinte, o tempo devolvido é sempre entre 00:00:00 e 23:59:59.       O `Date` tipo de dados inclui os componentes de data. `TimeSerial`Define todos estes para 1, pelo que o valor devolvido representa o primeiro dia do ano 1. No entanto, se os valores dos argumentos causam calculado momento exceder 24 horas, o dia é incrementado conforme necessário. No exemplo seguinte, os valores de `Hour` e `Minute` resultar num tempo combinado de mais de 24 horas.      ```vb#   MsgBox(TimeSerial(23, 75, 0))    &quot; The preceding statement displays &quot;1/2/0001 12:15:00 AM&quot;.   ```Se os valores dos argumentos resultarem num tempo calculado negativo, as informações de data estão definidas como 1/1/0001 e e as informações de tempo são ajustadas entre 00:00:00 e 23:59:59. No entanto, se o tempo calculado é inferior a negativa 24 horas, um <xref:System.ArgumentOutOfRangeException>erro ocorrer.</xref:System.ArgumentOutOfRangeException>       Uma vez que cada `Date` valor é suportado por um <xref:System.DateTime?displayProperty=fullName>estrutura, os seus métodos dão-lhe opções adicionais no reuni um `Date` valor.</xref:System.DateTime?displayProperty=fullName> Por exemplo, pode utilizar um do sobrecarregado <xref:System.DateTime.%23ctor%2A>construtores para preencher um `Date` variável utilizando a combinação pretendida de componentes.</xref:System.DateTime.%23ctor%2A> Os seguintes conjuntos de exemplo `newDateTime` para 6 de Maio de 1978 num tenth de um segundo antes de 8:30 da manhã:```vb#   Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.  \n  \n [!code-vb[VbVbalrFunctions#50](~/add/codesnippet/visualbasic/4788d161-48a1-4476-aa26-_1.vb)]"
  syntax:
    content: public static DateTime TimeSerial (int Hour, int Minute, int Second);
    parameters:
    - id: Hour
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>expressão de 0 a 23. No entanto, os valores fora deste intervalo também são aceites."
    - id: Minute
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>expressão entre 0 e 59. No entanto, os valores fora deste intervalo também são aceites. O valor de `Minute` é adicionado à hora calculada, pelo que um valor negativo Especifica minutos antes dessa hora."
    - id: Second
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>expressão entre 0 e 59. No entanto, os valores fora deste intervalo também são aceites. O valor de `Second` é adicionado à minuto calculado, pelo que um valor negativo Especifica segundos antes desse minuto."
    return:
      type: System.DateTime
      description: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> representando uma hora especificada, minuto e segundo, com as informações de data definidas relativas a 1 de Janeiro do ano 1."
  overload: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um argumento está fora do intervalo-2,147,483,648 através de 2 147 483 647"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Tempo calculado é inferior a negativos 24 horas."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  id: TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve ou define um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> representando a hora atual do dia de acordo com o sistema."
  remarks: "`TimeString`devolve sempre a hora do sistema como hh: mm &quot;:&quot;, que é um formato de 24 horas. Este formato é cultura-invariante, o que significa que não se altera, mesmo que se alterar o **opções regionais** no **painel de controlo**.       Para obter ou definir a data do sistema atual como um `String`, utilize o <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Para obter o actual sistema data ou hora no formato de sua região, ou está num formato personalizado, forneça o <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>propriedade para o <xref:Microsoft.VisualBasic.Strings.Format%2A>função, especificando um formato de data/hora predefinido ou definido pelo utilizador.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> O exemplo seguinte demonstra esta.      ```   MsgBox(&quot;The formatted time is &quot; & Format(Now, &quot;hh.mm.ss.fff tt&quot;))   ```Para aceder a hora do sistema atual como um `Date`, utilize o <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > A definição de sistema data ou hora requer permissões de código não gerido, que podem afetar a respetiva execução em situações de fidedignidade parcial. Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission>e [permissões de acesso de código](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeString` property to display the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#2](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#2)]"
  syntax:
    content: public static string TimeString { get; set; }
    return:
      type: System.String
      description: "Devolve ou define um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> representando a hora atual do dia de acordo com o sistema."
  overload: Microsoft.VisualBasic.DateAndTime.TimeString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Formato inválido utilizado para definir o valor da <xref uid=&quot;langword_csharp_TimeString&quot; name=&quot;TimeString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  id: TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo as informações de tempo representadas por uma cadeia, com as informações de data definidas como 1 de Janeiro do ano 1."
  remarks: "Pode introduzir vezes válidos com um relógio hora 12 ou 24 horas. Por exemplo, `&quot;2:24 P.M.&quot;` e `&quot;14:24&quot;` são ambos válidos `StringTime` argumentos.       Se o `StringTime` argumento inclui informações de data, `TimeValue` não incluí-la no valor devolvido. No entanto, se `StringTime` inclui informações de data inválido, por exemplo &quot;Janeiro de 32,&quot; um <xref:System.InvalidCastException>erro ocorrer.</xref:System.InvalidCastException>"
  example:
  - "The following example uses the `TimeValue` function to convert a string to a time. You can also use date literals to directly assign a time to a `Date` variable.  \n  \n [!code-vb[VbVbalrFunctions#51](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._232_1.vb)]"
  syntax:
    content: public static DateTime TimeValue (string StringTime);
    parameters:
    - id: StringTime
      type: System.String
      description: "Necessário. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>expressão que representa um valor de data/hora de 00:00:00 em 1 de Janeiro do ano 1 a 23:59:59 no 31 de Dezembro de 9999."
    return:
      type: System.DateTime
      description: "Devolve um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo as informações de tempo representadas por uma cadeia, com as informações de data definidas como 1 de Janeiro do ano 1."
  overload: Microsoft.VisualBasic.DateAndTime.TimeValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringTime</code>inclui informações de data inválida."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Today
  id: Today
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve ou define um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo a data atual de acordo com o sistema."
  remarks: "O `Date` tipo de dados inclui os componentes de tempo. Quando a data do sistema, a devolver `Today` define todos estes como 0, pelo que o valor devolvido representa meia-noite (00: 00:00). Quando definir a data de system `Today` ignora os componentes de tempo.       Para aceder a data do sistema atual como um `String`, utilize o <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Para obter ou definir a hora do sistema atual, utilize o <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>propriedade.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > A definição de sistema data ou hora requer permissões de código não gerido, que podem afetar a respetiva execução em situações de fidedignidade parcial. Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission>e [permissões de acesso de código](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#5](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#5)]"
  syntax:
    content: public static DateTime Today { get; set; }
    return:
      type: System.DateTime
      description: "Devolve ou define um <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valor contendo a data atual de acordo com o sistema."
  overload: Microsoft.VisualBasic.DateAndTime.Today*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  id: Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor contendo um número que representa o dia da semana."
  remarks: "O valor devolvido pelo `Weekday` corresponde à função para os valores do `FirstDayOfWeek` enumeração; ou seja, 1 indica Domingo e Sábado de indica 7.      > [!NOTE]  >   `Weekday` utiliza a definição de calendário atual do <xref:System.Globalization.CultureInfo.CurrentCulture%2A>propriedade o <xref:System.Globalization.CultureInfo>classe no <xref:System.Globalization>espaço de nomes.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> A predefinição <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valores são determinados pelo **painel de controlo** definições.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       O `DayOfWeek` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primeiro dia da semana especificado nas definições de sistema |   | `FirstDayOfWeek.Sunday`|1| Domingo (predefinição) |   | `FirstDayOfWeek.Monday`|2| Segunda (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Terça-feira |   | `FirstDayOfWeek.Wednesday`|4| Quarta-feira |   | `FirstDayOfWeek.Thursday`|5| Quinta-feira |   | `FirstDayOfWeek.Friday`|6| Sexta-feira |   | `FirstDayOfWeek.Saturday`|7| Sábado |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date.  \n  \n [!code-vb[VbVbalrFunctions#57](~/add/codesnippet/visualbasic/369e7ed8-1790-4eb8-9e17-_1.vb)]"
  syntax:
    content: public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor para o qual pretende determinar o dia da semana."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumeração que especifica o primeiro dia da semana. Se não for especificado, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> é utilizado."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor contendo um número que representa o dia da semana."
  overload: Microsoft.VisualBasic.DateAndTime.Weekday*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>DayOfWeek</code>é menor que 0 ou mais de 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  id: WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valor contendo o nome do dia da semana especificado."
  remarks: "A cadeia devolvida pela `WeekdayName` depende não apenas nos argumentos de entrada, mas também o **opções regionais** definições especificadas nas janelas **painel de controlo**.      > [!NOTE]  >   `WeekdayName` utiliza a definição de calendário atual do <xref:System.Globalization.CultureInfo.CurrentCulture%2A>propriedade o <xref:System.Globalization.CultureInfo>classe no <xref:System.Globalization>espaço de nomes.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> A predefinição <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valores são determinados pelo **painel de controlo** definições.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       O `FirstDayOfWeekValue` argumento pode ter uma das seguintes definições.      | Valor de enumeração | Valor | Descrição |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primeiro dia da semana especificado no sistema definições (predefinição) |   | `FirstDayOfWeek.Sunday`|1| Domingo |   | `FirstDayOfWeek.Monday`|2| Segunda (está em conformidade com ISO 8601 padrão, secção 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Terça-feira |   | `FirstDayOfWeek.Wednesday`|4| Quarta-feira |   | `FirstDayOfWeek.Thursday`|5| Quinta-feira |   | `FirstDayOfWeek.Friday`|6| Sexta-feira |   | `FirstDayOfWeek.Saturday`|7| Sábado |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.  \n  \n [!code-vb[VbVbalrFunctions#58](~/add/codesnippet/visualbasic/3ef2fbeb-749b-412a-a8c7-_1.vb)]"
  syntax:
    content: public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);
    parameters:
    - id: Weekday
      type: System.Int32
      description: "Necessário. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. A designação numérica para o dia da semana, entre 1 e 7; 1 indica o primeiro dia da semana e 7 indica o último dia da semana. As identidades dos dias primeiro e últimos dependem da definição de `FirstDayOfWeekValue`."
    - id: Abbreviate
      type: System.Boolean
      description: "Opcional. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>valor que indica se o nome de dia da semana deve ser abreviado. Se for omitido, a predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, que significa que o nome de dia da semana não é abreviado."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcional. Um valor escolhido do <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumeração que especifica o primeiro dia da semana. Se não for especificado, <xref uid=&quot;langword_csharp_FirstDayOfWeek.System&quot; name=&quot;FirstDayOfWeek.System&quot; href=&quot;&quot;> </xref> é utilizado."
    return:
      type: System.String
      description: "Devolve um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valor contendo o nome do dia da semana especificado."
  overload: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Weekday</code>é menor que 1 ou superior a 7, ou <code>FirstDayOfWeekValue</code> é inferior a 0 ou superior a 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  id: Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 1 e 9999 representando o ano."
  remarks: "Também pode obter o ano chamando `DatePart` e especificando `DateInterval.Year` para o `Interval` argumento."
  example:
  - "The following example uses the `Year` function to obtain the year from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#59](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._223_1.vb)]"
  syntax:
    content: public static int Year (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Necessário. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valor a partir do qual pretende extrair o ano."
    return:
      type: System.Int32
      description: "Devolve um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valor entre 1 e 9999 representando o ano."
  overload: Microsoft.VisualBasic.DateAndTime.Year*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateInterval
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateInterval
  nameWithType: DateInterval
  fullName: Microsoft.VisualBasic.DateInterval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FirstDayOfWeek
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstDayOfWeek
  nameWithType: FirstDayOfWeek
  fullName: Microsoft.VisualBasic.FirstDayOfWeek
- uid: Microsoft.VisualBasic.FirstWeekOfYear
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstWeekOfYear
  nameWithType: FirstWeekOfYear
  fullName: Microsoft.VisualBasic.FirstWeekOfYear
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.DateAndTime.Now
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Today
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd
  nameWithType: DateAndTime.DateAdd
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff
  nameWithType: DateAndTime.DateDiff
- uid: Microsoft.VisualBasic.DateAndTime.DatePart*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart
  nameWithType: DateAndTime.DatePart
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial
  nameWithType: DateAndTime.DateSerial
- uid: Microsoft.VisualBasic.DateAndTime.DateString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue
  nameWithType: DateAndTime.DateValue
- uid: Microsoft.VisualBasic.DateAndTime.Day*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day
  nameWithType: DateAndTime.Day
- uid: Microsoft.VisualBasic.DateAndTime.Hour*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour
  nameWithType: DateAndTime.Hour
- uid: Microsoft.VisualBasic.DateAndTime.Minute*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute
  nameWithType: DateAndTime.Minute
- uid: Microsoft.VisualBasic.DateAndTime.Month*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month
  nameWithType: DateAndTime.Month
- uid: Microsoft.VisualBasic.DateAndTime.MonthName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName
  nameWithType: DateAndTime.MonthName
- uid: Microsoft.VisualBasic.DateAndTime.Now*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second
  nameWithType: DateAndTime.Second
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial
  nameWithType: DateAndTime.TimeSerial
- uid: Microsoft.VisualBasic.DateAndTime.TimeString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue
  nameWithType: DateAndTime.TimeValue
- uid: Microsoft.VisualBasic.DateAndTime.Today*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday
  nameWithType: DateAndTime.Weekday
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName
  nameWithType: DateAndTime.WeekdayName
- uid: Microsoft.VisualBasic.DateAndTime.Year*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year
  nameWithType: DateAndTime.Year
