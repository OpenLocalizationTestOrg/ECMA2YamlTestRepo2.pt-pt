### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeSnippetStatement
  id: CodeSnippetStatement
  children:
  - System.CodeDom.CodeSnippetStatement.#ctor
  - System.CodeDom.CodeSnippetStatement.#ctor(System.String)
  - System.CodeDom.CodeSnippetStatement.Value
  langs:
  - csharp
  name: CodeSnippetStatement
  nameWithType: CodeSnippetStatement
  fullName: System.CodeDom.CodeSnippetStatement
  type: Class
  summary: "Represents a statement using a literal code fragment."
  remarks: "CodeSnippetStatement can represent a statement using a literal code fragment that will be included directly in the source without modification.       A CodeSnippetStatement stores a section of code exactly in its original format as a string. The CodeDOM does not translate literal code fragments. Literal code fragments are stored and output in their original format. CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.       The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement."
  example:
  - "The following example creates an instance of the CodeSnippetStatement class using a literal code fragment. This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.  \n  \n [!code-vb[System.CodeDom.CodeDirectives#16](~/add/codesnippet/visualbasic/t-system.codedom.codesni_2_1.vb)]\n [!code-cs[System.CodeDom.CodeDirectives#16](~/add/codesnippet/csharp/t-system.codedom.codesni_2_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeSnippetStatement : System.CodeDom.CodeStatement
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeStatement
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeStatement.EndDirectives
  - System.CodeDom.CodeStatement.LinePragma
  - System.CodeDom.CodeStatement.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetStatement.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeSnippetStatement
  langs:
  - csharp
  name: CodeSnippetStatement()
  nameWithType: CodeSnippetStatement.CodeSnippetStatement()
  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeSnippetStatement&quot;></xref> class."
  syntax:
    content: public CodeSnippetStatement ();
    parameters: []
  overload: System.CodeDom.CodeSnippetStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetStatement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeSnippetStatement
  langs:
  - csharp
  name: CodeSnippetStatement(String)
  nameWithType: CodeSnippetStatement.CodeSnippetStatement(String)
  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeSnippetStatement&quot;></xref> class using the specified code fragment."
  remarks: ''
  example:
  - "The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment. This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.  \n  \n [!code-vb[System.CodeDom.CodeDirectives#16](~/add/codesnippet/visualbasic/m-system.codedom.codesni_3_1.vb)]\n [!code-cs[System.CodeDom.CodeDirectives#16](~/add/codesnippet/csharp/m-system.codedom.codesni_3_1.cs)]"
  syntax:
    content: public CodeSnippetStatement (string value);
    parameters:
    - id: value
      type: System.String
      description: "The literal code fragment of the statement to represent."
  overload: System.CodeDom.CodeSnippetStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetStatement.Value
  id: Value
  parent: System.CodeDom.CodeSnippetStatement
  langs:
  - csharp
  name: Value
  nameWithType: CodeSnippetStatement.Value
  fullName: System.CodeDom.CodeSnippetStatement.Value
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets the literal code fragment statement."
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "The literal code fragment statement."
  overload: System.CodeDom.CodeSnippetStatement.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeStatement
  isExternal: false
  name: System.CodeDom.CodeStatement
- uid: System.CodeDom.CodeSnippetStatement.#ctor
  parent: System.CodeDom.CodeSnippetStatement
  isExternal: false
  name: CodeSnippetStatement()
  nameWithType: CodeSnippetStatement.CodeSnippetStatement()
  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement()
- uid: System.CodeDom.CodeSnippetStatement.#ctor(System.String)
  parent: System.CodeDom.CodeSnippetStatement
  isExternal: false
  name: CodeSnippetStatement(String)
  nameWithType: CodeSnippetStatement.CodeSnippetStatement(String)
  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeSnippetStatement.Value
  parent: System.CodeDom.CodeSnippetStatement
  isExternal: false
  name: Value
  nameWithType: CodeSnippetStatement.Value
  fullName: System.CodeDom.CodeSnippetStatement.Value
- uid: System.CodeDom.CodeSnippetStatement.#ctor*
  parent: System.CodeDom.CodeSnippetStatement
  isExternal: false
  name: CodeSnippetStatement
  nameWithType: CodeSnippetStatement.CodeSnippetStatement
- uid: System.CodeDom.CodeSnippetStatement.Value*
  parent: System.CodeDom.CodeSnippetStatement
  isExternal: false
  name: Value
  nameWithType: CodeSnippetStatement.Value
