### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslCompiledTransform
  id: XslCompiledTransform
  children:
  - System.Xml.Xsl.XslCompiledTransform.#ctor
  - System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  - System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  - System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.OutputSettings
  - System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  langs:
  - csharp
  name: XslCompiledTransform
  nameWithType: XslCompiledTransform
  fullName: System.Xml.Xsl.XslCompiledTransform
  type: Class
  summary: "Transforms XML data using an XSLT style sheet."
  remarks: "The XslCompiledTransform class is an XSLT processor that supports the XSLT 1.0 syntax. It is a new implementation and includes performance gains when compared to the obsolete <xref:System.Xml.Xsl.XslTransform> class. The structure of the XslCompiledTransform class is very similar to the <xref:System.Xml.Xsl.XslTransform> class. The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads and compiles the style sheet, while the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method executes the XSLT transform.       Support for the XSLT `document()` function and embedded script blocks are disabled by default. These features can be enabled by creating an <xref:System.Xml.Xsl.XsltSettings> object and passing it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.       For more information, see [Using the XslCompiledTransform Class](~/add/includes/ajax-current-ext-md.md) and [Migrating From the XslTransform Class](~/add/includes/ajax-current-ext-md.md).      ## Security Considerations    When creating an application that uses the XslCompiledTransform class, you should be aware of the following items and their implications:      -   XSLT scripting is disabled by default. XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.      -   The XSLT `document()` function is disabled by default. If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.      -   Extension objects are enabled by default. If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, they are utilized.      -   XSLT style sheets can include references to other files and embedded script blocks. A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.      -   XSLT applications that run in a mixed trust environment can result in style sheet spoofing. For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method and executes the transformation.       These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting XslCompiledTransform objects, XSLT style sheets, or XML source data from an untrusted source."
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xslcomp_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/t-system.xml.xsl.xslcomp_1.cs)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/t-system.xml.xsl.xslcomp_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/t-system.xml.xsl.xslcomp_3.xsl)]"
  syntax:
    content: public sealed class XslCompiledTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: XslCompiledTransform()
  nameWithType: XslCompiledTransform.XslCompiledTransform()
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Xsl.XslCompiledTransform&quot;></xref> class."
  syntax:
    content: public XslCompiledTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslCompiledTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: XslCompiledTransform(Boolean)
  nameWithType: XslCompiledTransform.XslCompiledTransform(Boolean)
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform(Boolean)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Xsl.XslCompiledTransform&quot;></xref> class with the specified debug setting."
  remarks: "The following conditions must be met in order to step into the code and debug the style sheet:      -   The `enableDebug` parameter is set to `true`.      -   The style sheet is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method either as a URI, or an implementation of the <xref:System.Xml.XmlReader> class that implements the <xref:System.Xml.IXmlLineInfo> interface. The <xref:System.Xml.IXmlLineInfo> interface is implemented on all text-parsing <xref:System.Xml.XmlReader> objects.           In other words, if the style sheet is loaded using an <xref:System.Xml.XPath.IXPathNavigable> object, such as an <xref:System.Xml.XmlDocument> or <xref:System.Xml.XPath.XPathDocument>, or an <xref:System.Xml.XmlReader> implementation that does not implement the <xref:System.Xml.IXmlLineInfo> interface, you cannot debug the style sheet.      -   The <xref:System.Xml.XmlResolver> used to load the style sheet is a file-based <xref:System.Xml.XmlResolver>, such as the <xref:System.Xml.XmlUrlResolver> (this is the default <xref:System.Xml.XmlResolver> used by the <xref:System.Xml.Xsl.XslCompiledTransform> class).      -   The style sheet is located on the local machine or on the intranet."
  example:
  - "The following example shows how to enable XSLT debugging.  \n  \n [!code-vb[XslCompiledTransform.Load#10](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_1_1.vb)]\n [!code-cs[XslCompiledTransform.Load#10](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_1_1.cs)]"
  syntax:
    content: public XslCompiledTransform (bool enableDebug);
    parameters:
    - id: enableDebug
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to generate debug information; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. Setting this to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> enables you to debug the style sheet with the Microsoft Visual Studio Debugger."
  overload: System.Xml.Xsl.XslCompiledTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  id: CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  nameWithType: XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Compiles an XSLT style sheet to a specified type."
  remarks: "The `xsltc.exe` tool is a wrapper around the CompileToType method. Compiling style sheets with the `xsltc.exe` will meet the demands of most applications that leverage the use of compiled style sheets. The CompileToType method should be used when building custom compilation tools."
  syntax:
    content: public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the beginning of the style sheet to be compiled."
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "The <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref> to be applied to the style sheet. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the <xref:System.Xml.Xsl.XsltSettings.Default*> will be applied."
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> use to resolve style sheet modules referenced in <xref uid=&quot;langword_csharp_xsl:import&quot; name=&quot;xsl:import&quot; href=&quot;&quot;></xref> and <xref uid=&quot;langword_csharp_xsl:include&quot; name=&quot;xsl:include&quot; href=&quot;&quot;></xref> elements. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, external resources will not be resolved."
    - id: debug
      type: System.Boolean
      description: "Setting this to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> enables debugging the style sheet with a debugger."
    - id: typeBuilder
      type: System.Reflection.Emit.TypeBuilder
      description: "The <xref:System.Reflection.Emit.TypeBuilder> used for the style sheet compilation. The provided TypeBuilder is used to generate the resulting type."
    - id: scriptAssemblyPath
      type: System.String
      description: "The base path for the assemblies generated for <xref uid=&quot;langword_csharp_msxsl:script&quot; name=&quot;msxsl:script&quot; href=&quot;&quot;></xref> elements. If only one script assembly is generated, this parameter specifies the path for that assembly. In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names."
    return:
      type: System.CodeDom.Compiler.CompilerErrorCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.CompilerErrorCollection&quot;></xref> object containing compiler errors and warnings that indicate the results of the compilation."
  overload: System.Xml.Xsl.XslCompiledTransform.CompileToType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslCompiledTransform.Load(String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Loads and compiles the style sheet located at the specified URI."
  remarks: "The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax. The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.       This method has the following behavior:      -   An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the style sheet URI, and process any `xsl:import` or `xsl:include` elements.      -   An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet. DTD processing is disabled on the <xref:System.Xml.XmlReader>. If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.      -   The `document()` function is disabled.      -   Embedded scripts are not supported.       You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings."
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_2_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_2_1.cs)]"
  syntax:
    content: public void Load (string stylesheetUri);
    parameters:
    - id: stylesheetUri
      type: System.String
      description: "The URI of the style sheet."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheetUri</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "The style sheet contains an error."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "The style sheet cannot be found."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The <code>stylesheetUri</code> value includes a filename or directory that cannot be found."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The <code>stylesheetUri</code> value cannot be resolved.       -or-       An error occurred while processing the request."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>stylesheetUri</code> is not a valid URI."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "There was a parsing error loading the style sheet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  id: Load(System.Type)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(Type)
  nameWithType: XslCompiledTransform.Load(Type)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Loads the compiled style sheet that was created using the [XSLT Compiler (xsltc.exe)](~/add/includes/ajax-current-ext-md.md)."
  remarks: "The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets. The Load method loads the compiled style sheet from the assembly.      > [!NOTE] >  You must also include the XSLT assembly as a reference in your application."
  example:
  - "The following example shows how to load a compiled style sheet from an XSLT assembly. The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.  \n  \n> [!NOTE]\n>  You have to reference the XSLT assembly when compiling the code. For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.  \n  \n```  \n// Load the type of the class.  \nXslCompiledTransform xslt = new XslCompiledTransform();  \nxslt.Load(typeof(bookOrders));  \n```"
  syntax:
    content: public void Load (Type compiledStylesheet);
    parameters:
    - id: compiledStylesheet
      type: System.Type
      description: "The name of the class that contains the compiled style sheet.       This is usually the name of the style sheet. Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslCompiledTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Compiles the style sheet contained in the <xref:System.Xml.XmlReader>."
  remarks: "The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax. The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.       The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children. This enables you to use a portion of a document as the style sheet. After the Load method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet. If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).       This method has the following behavior:      -   An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.      -   The `document()` function is disabled.      -   Embedded scripts are not supported.       You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings."
  example:
  - "The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.  \n  \n [!code-vb[XslCompiledTransform.Load#5](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_4_1.vb)]\n [!code-cs[XslCompiledTransform.Load#5](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_4_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> containing the style sheet."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "The style sheet contains an error."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Compiles the style sheet contained in the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> object."
  remarks: "The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax. The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.       This method has the following behavior:      -   An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.      -   The `document()` function is disabled.      -   Embedded scripts are not supported.       You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings."
  example:
  - "The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.  \n  \n [!code-vb[XslCompiledTransform.Load#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_3_1.vb)]\n [!code-cs[XslCompiledTransform.Load#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_3_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "An object implementing the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> interface. In the Microsoft .NET Framework, this can be either an <xref href=&quot;System.Xml.XmlNode&quot;></xref> (typically an <xref href=&quot;System.Xml.XmlDocument&quot;></xref>), or an <xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref> containing the style sheet."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "The style sheet contains an error."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  id: Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(MethodInfo,Byte[],Type[])
  nameWithType: XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Loads a method from a style sheet compiled using the <xref uid=&quot;langword_csharp_XSLTC.exe&quot; name=&quot;XSLTC.exe&quot; href=&quot;&quot;></xref> utility."
  remarks: "This method accepts a compiled style sheet in the form of a <xref:System.Reflection.MethodInfo> object, a byte array, and a type array. <xref:System.Reflection.Emit.DynamicMethod> objects may be used to allow compiled style sheet methods to be discarded when the <xref:System.Xml.Xsl.XslCompiledTransform> object is reclaimed."
  example:
  - "The code example below uses the Load to load a compiled style sheet. The transformation reduces the value of the `Price` element by ten percent.  \n  \n [!code-cs[XsltDynamicMethodLoad#1](~/add/codesnippet/csharp/3f995c36-b532-490b-a825-_1.cs)]\n [!code-vb[XsltDynamicMethodLoad#1](~/add/codesnippet/visualbasic/3f995c36-b532-490b-a825-_1.vb)]  \n  \n> [!NOTE]\n>  The \"Transform\" assembly used in this example was built using the xsltc.exe utility. For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The code example above uses the following transformation:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  \n  xmlns:msxsl=\"urn:schemas-microsoft-com:xslt\"  \n  xmlns:user=\"urn:my-scripts\">  \n  <msxsl:script language=\"C#\" implements-prefix=\"user\">  \n    <![CDATA[  \n  public double modifyPrice(double price){  \n    price*=0.9;  \n    return price;  \n  }  \n  ]]>  \n  </msxsl:script>  \n  <xsl:template match=\"Root\">  \n    <Root xmlns=\"\">  \n      <Price><xsl:value-of select=\"user:modifyPrice(Price)\"/></Price>  \n    </Root>  \n  </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);
    parameters:
    - id: executeMethod
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object representing the compiler-generated `execute` method of the compiled style sheet."
    - id: queryData
      type: System.Byte[]
      description: "A byte array of serialized data structures in the `staticData` field of the compiled style sheet as generated by the <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType*> method."
    - id: earlyBoundTypes
      type: System.Type[]
      description: "An array of types stored in the compiler-generated `ebTypes` field of the compiled style sheet."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(String,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Loads and compiles the XSLT style sheet specified by the URI. The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> resolves any XSLT `import` or `include` elements and the XSLT settings determine the permissions for the style sheet."
  remarks: "The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax. The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.       An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet. DTD processing is disabled on the <xref:System.Xml.XmlReader>. If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method."
  example:
  - "The following example loads a style sheet that is stored on a network resource. An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.  \n  \n [!code-vb[XslCompiledTransform.Load#2](~/add/codesnippet/visualbasic/7ddc7420-1fde-47dd-8fb0-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#2](~/add/codesnippet/csharp/7ddc7420-1fde-47dd-8fb0-_1.cs)]"
  syntax:
    content: public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheetUri
      type: System.String
      description: "The URI of the style sheet."
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "The <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref> to apply to the style sheet. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the <xref:System.Xml.Xsl.XsltSettings.Default*> setting is applied."
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> used to resolve the style sheet URI and any style sheets referenced in XSLT `import` and `include` elements."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheetUri</code> or <code>stylesheetResolver</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "The style sheet contains an error."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "The style sheet cannot be found."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The <code>stylesheetUri</code> value includes a filename or directory that cannot be found."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The <code>stylesheetUri</code> value cannot be resolved.       -or-       An error occurred while processing the request."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>stylesheetUri</code> is not a valid URI."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "There was a parsing error loading the style sheet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(XmlReader,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Compiles the XSLT style sheet contained in the <xref:System.Xml.XmlReader>. The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> resolves any XSLT `import` or `include` elements and the XSLT settings determine the permissions for the style sheet."
  remarks: "The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax. The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.       The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children. This enables you to use a portion of a document as the style sheet. After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet. If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF)."
  example:
  - "The following example loads a style sheet and enables support for XSLT scripting.  \n  \n [!code-vb[XslCompiledTransform.Load#3](~/add/codesnippet/visualbasic/ec76ab0a-8bf0-415f-87c6-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#3](~/add/codesnippet/csharp/ec76ab0a-8bf0-415f-87c6-_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "The <xref:System.Xml.XmlReader> containing the style sheet."
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "The <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref> to apply to the style sheet. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the <xref:System.Xml.Xsl.XsltSettings.Default*> setting is applied."
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> used to resolve any style sheets referenced in XSLT `import` and `include` elements. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, external resources are not resolved."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "The style sheet contains an error."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Compiles the XSLT style sheet contained in the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref>. The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> resolves any XSLT `import` or `include` elements and the XSLT settings determine the permissions for the style sheet."
  remarks: "The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax. The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace."
  example:
  - "The following example loads a style sheet. The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.  \n  \n [!code-vb[XslCompiledTransform.Load#4](~/add/codesnippet/visualbasic/8f1118cc-2b51-4727-9f95-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#4](~/add/codesnippet/csharp/8f1118cc-2b51-4727-9f95-_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "An object implementing the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> interface. In the Microsoft .NET Framework, this can be either an <xref href=&quot;System.Xml.XmlNode&quot;></xref> (typically an <xref href=&quot;System.Xml.XmlDocument&quot;></xref>), or an <xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref> containing the style sheet."
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "The <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref> to apply to the style sheet. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the <xref:System.Xml.Xsl.XsltSettings.Default*> setting is applied."
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> used to resolve any style sheets referenced in XSLT `import` and `include` elements. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, external resources are not resolved."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "The style sheet contains an error."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  id: OutputSettings
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
  fullName: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Gets an <xref:System.Xml.XmlWriterSettings> object that contains the output information derived from the `xsl:output` element of the style sheet."
  remarks: "This property is populated after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method. It contains information derived from the `xsl:output` element of a compiled style sheet. This <xref:System.Xml.XmlWriterSettings> object can be passed to the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method to create the <xref:System.Xml.XmlWriter> object to which you want to output."
  example:
  - "The following example shows how to use the OutputSettings property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.  \n  \n [!code-vb[XslCompiledTransform.OutputSettings#1](~/add/codesnippet/visualbasic/p-system.xml.xsl.xslcomp_1_1.vb)]\n [!code-cs[XslCompiledTransform.OutputSettings#1](~/add/codesnippet/csharp/p-system.xml.xsl.xslcomp_1_1.cs)]  \n  \n The example uses the `books.xml` and `outputConsole.xsl` files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslCompiledTransform.OutputSettings#2](~/add/codesnippet/xml/p-system.xml.xsl.xslcomp_1_2.xml)]  \n  \n `outputConsole.xsl`  \n  \n [!code-xml[XslCompiledTransform.OutputSettings#3](~/add/codesnippet/xml/p-system.xml.xsl.xslcomp_1_3.xsl)]"
  syntax:
    content: public System.Xml.XmlWriterSettings OutputSettings { get; }
    return:
      type: System.Xml.XmlWriterSettings
      description: "A read-only <xref:System.Xml.XmlWriterSettings> object that contains the output information derived from the `xsl:output` element of the style sheet. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Xsl.XslCompiledTransform.OutputSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  id: TemporaryFiles
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
  fullName: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Gets the <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;></xref> that contains the temporary files generated on disk after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load*> method."
  remarks: "This property identifies the files that were generated during XSLT processing. The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed."
  example:
  - "The following example writes the names of temporary files to the console.  \n  \n> [!NOTE]\n>  Temporary files are created only when loading style sheets with \\<msxsl:script> blocks.  \n  \n [!code-vb[XslCompiledTransform.Transform#8](~/add/codesnippet/visualbasic/p-system.xml.xsl.xslcomp_0_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#8](~/add/codesnippet/csharp/p-system.xml.xsl.xslcomp_0_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "The <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;></xref> that contains the temporary files generated on disk. This value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the <xref:System.Xml.Xsl.XslCompiledTransform.Load*> method has not been successfully called, or if debugging has not been enabled."
  overload: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslCompiledTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the URI and outputs the results to a file."
  remarks: "This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input and output documents. If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       An <xref:System.Xml.XmlReader> with default settings is used to load the input document. DTD processing is disabled on the <xref:System.Xml.XmlReader>. If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method."
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_0_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_0_1.cs)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xslcomp_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xslcomp_0_3.xsl)]"
  syntax:
    content: public void Transform (string inputUri, string resultsFile);
    parameters:
    - id: inputUri
      type: System.String
      description: "The URI of the input document."
    - id: resultsFile
      type: System.String
      description: "The URI of the output file."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>resultsFile</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "The input document cannot be found."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The <code>inputUri</code> or <code>resultsFile</code> value includes a filename or directory cannot be found."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The <code>inputUri</code> or <code>resultsFile</code> value cannot be resolved.       -or-       An error occurred while processing the request"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code> or <code>resultsFile</code> is not a valid URI."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "There was a parsing error loading the input document."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  id: Transform(System.String,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the URI and outputs the results to an <xref:System.Xml.XmlWriter>."
  remarks: "This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet. If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       An <xref:System.Xml.XmlReader> with default settings is used to load the input document. DTD processing is disabled on the <xref:System.Xml.XmlReader>. If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.       This method does not support the `xsl:strip-space` element. If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument."
  example:
  - "The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.  \n  \n [!code-vb[XslCompiledTransform.Transform#2](~/add/codesnippet/visualbasic/1a837310-9fde-4a29-a77e-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#2](~/add/codesnippet/csharp/1a837310-9fde-4a29-a77e-_1.cs)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.XmlWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "The URI of the input document."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an `xsl:output` element, you should create the <xref:System.Xml.XmlWriter> using the <xref:System.Xml.XmlWriterSettings> object returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The <code>inputUri</code> value includes a filename or directory cannot be found."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The <code>inputUri</code> value cannot be resolved.       -or-       An error occurred while processing the request."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code> is not a valid URI."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "There was a parsing error loading the input document."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref:System.Xml.XmlReader> object and outputs the results to an <xref:System.Xml.XmlWriter>."
  remarks: "If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials."
  example:
  - "The following example transforms the first book in the books.xml file.  \n  \n [!code-vb[XslCompiledTransform.Transform#7](~/add/codesnippet/visualbasic/e9e9dd2b-fa70-4f3f-9037-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#7](~/add/codesnippet/csharp/e9e9dd2b-fa70-4f3f-9037-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "The <xref:System.Xml.XmlReader> containing the input document."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an `xsl:output` element, you should create the <xref:System.Xml.XmlWriter> using the <xref:System.Xml.XmlWriterSettings> object returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> object and outputs the results to an <xref:System.Xml.XmlWriter>."
  remarks: "If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       This method does not support the `xsl:strip-space` element. If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.       The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes. These classes represent an in-memory cache of XML data.      -   The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.      -   The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model. <xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing. It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.       Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the Transform method. For more information, see [How to: Transform a Node Fragment](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.  \n  \n [!code-vb[XslCompiledTransform.Transform#5](~/add/codesnippet/visualbasic/58ce38a1-de5d-405a-b8cb-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#5](~/add/codesnippet/csharp/58ce38a1-de5d-405a-b8cb-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "An object implementing the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> interface. In the Microsoft .NET Framework, this can be either an <xref href=&quot;System.Xml.XmlNode&quot;></xref> (typically an <xref href=&quot;System.Xml.XmlDocument&quot;></xref>), or an <xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref> containing the data to be transformed."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an `xsl:output` element, you should create the <xref:System.Xml.XmlWriter> using the <xref:System.Xml.XmlWriterSettings> object returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the URI and outputs the results to stream. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments."
  remarks: "This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet. If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       An <xref:System.Xml.XmlReader> with default settings is used to load the input document. DTD processing is disabled on the <xref:System.Xml.XmlReader>. If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method."
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: inputUri
      type: System.String
      description: "The URI of the input document."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.IO.Stream
      description: "The stream to which you want to output."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The <code>inputUri</code> value includes a filename or directory cannot be found."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The <code>inputUri</code> value cannot be resolved.       -or-       An error occurred while processing the request"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code> is not a valid URI."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "There was a parsing error loading the input document."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the URI and outputs the results to a <xref:System.IO.TextWriter>."
  remarks: "This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet. If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       An <xref:System.Xml.XmlReader> with default settings is used to load the input document. DTD processing is disabled on the <xref:System.Xml.XmlReader>. If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method."
  example:
  - "The following example executes an XSLT transformation and outputs a string.  \n  \n [!code-vb[XslCompiledTransform.Transform#3](~/add/codesnippet/visualbasic/50b87a05-12d4-4637-9d7e-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#3](~/add/codesnippet/csharp/50b87a05-12d4-4637-9d7e-_1.cs)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "The URI of the input document."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.IO.TextWriter
      description: "The <xref:System.IO.TextWriter> to which you want to output."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The <code>inputUri</code> value includes a filename or directory cannot be found."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The <code>inputUri</code> value cannot be resolved.       -or-       An error occurred while processing the request"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code> is not a valid URI."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "There was a parsing error loading the input document."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the URI and outputs the results to an <xref:System.Xml.XmlWriter>. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments."
  remarks: "This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet. If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       An <xref:System.Xml.XmlReader> with default settings is used to load the input document. DTD processing is disabled on the <xref:System.Xml.XmlReader>. If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method."
  example:
  - "The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.  \n  \n [!code-vb[XsltArgumentList.AddParam#1](~/add/codesnippet/visualbasic/614c84d5-4852-4d05-913d-_1.vb)]\n [!code-cs[XsltArgumentList.AddParam#1](~/add/codesnippet/csharp/614c84d5-4852-4d05-913d-_1.cs)]  \n  \n The example uses the following two data files as input.  \n  \n order.xml  \n  \n [!code-xml[XsltArgumentList.AddParam#2](~/add/codesnippet/xml/614c84d5-4852-4d05-913d-_2.xml)]  \n  \n order.xsl  \n  \n [!code-xml[XsltArgumentList.AddParam#3](~/add/codesnippet/xml/614c84d5-4852-4d05-913d-_3.xsl)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "The URI of the input document."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an `xsl:output` element, you should create the <xref:System.Xml.XmlWriter> using the <xref:System.Xml.XmlWriterSettings> object returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The <code>inputtUri</code> value includes a filename or directory cannot be found."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The <code>inputUri</code> value cannot be resolved.       -or-       An error occurred while processing the request."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code> is not a valid URI."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "There was a parsing error loading the input document."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref:System.Xml.XmlReader> object and outputs the results to a stream. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments."
  remarks: "If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials."
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> containing the input document."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.IO.Stream
      description: "The stream to which you want to output."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref:System.Xml.XmlReader> object and outputs the results to a <xref:System.IO.TextWriter>. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments."
  remarks: "If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials."
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> containing the input document."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.IO.TextWriter
      description: "The <xref:System.IO.TextWriter> to which you want to output."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref:System.Xml.XmlReader> object and outputs the results to an <xref:System.Xml.XmlWriter>. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments."
  remarks: "If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials."
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> containing the input document."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an `xsl:output` element, you should create the <xref:System.Xml.XmlWriter> using the <xref:System.Xml.XmlWriterSettings> object returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> object and outputs the results to a stream. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional runtime arguments."
  remarks: "If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       This method does not support the `xsl:strip-space` element. If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.       The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes. These classes represent an in-memory cache of XML data.      -   The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.      -   The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model. <xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing. It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.       Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the Transform method. For more information, see [How to: Transform a Node Fragment](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.  \n  \n [!code-vb[XslCompiledTransform.Transform#6](~/add/codesnippet/visualbasic/83a14379-9d60-4f40-a273-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#6](~/add/codesnippet/csharp/83a14379-9d60-4f40-a273-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "An object implementing the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> interface. In the Microsoft .NET Framework, this can be either an <xref href=&quot;System.Xml.XmlNode&quot;></xref> (typically an <xref href=&quot;System.Xml.XmlDocument&quot;></xref>), or an <xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref> containing the data to be transformed."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.IO.Stream
      description: "The stream to which you want to output."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> object and outputs the results to an <xref:System.IO.TextWriter>. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments."
  remarks: "If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       This method does not support the `xsl:strip-space` element. If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.       The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes. These classes represent an in-memory cache of XML data.      -   The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.      -   The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model. <xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing. It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.       Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the Transform method. For more information, see [How to: Transform a Node Fragment](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "An object implementing the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> interface. In the Microsoft .NET Framework, this can be either an <xref href=&quot;System.Xml.XmlNode&quot;></xref> (typically an <xref href=&quot;System.Xml.XmlDocument&quot;></xref>), or an <xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref> containing the data to be transformed."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.IO.TextWriter
      description: "The <xref:System.IO.TextWriter> to which you want to output."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> object and outputs the results to an <xref:System.Xml.XmlWriter>. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments."
  remarks: "If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials. If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.       This method does not support the `xsl:strip-space` element. If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.       The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes. These classes represent an in-memory cache of XML data.      -   The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.      -   The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model. <xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing. It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.       Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the Transform method. For more information, see [How to: Transform a Node Fragment](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "An object implementing the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> interface. In the Microsoft .NET Framework, this can be either an <xref href=&quot;System.Xml.XmlNode&quot;></xref> (typically an <xref href=&quot;System.Xml.XmlDocument&quot;></xref>), or an <xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref> containing the data to be transformed."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an `xsl:output` element, you should create the <xref:System.Xml.XmlWriter> using the <xref:System.Xml.XmlWriterSettings> object returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform using the input document specified by the <xref:System.Xml.XmlReader> object and outputs the results to an <xref:System.Xml.XmlWriter>. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments and the XmlResolver resolves the XSLT `document()` function."
  remarks: ''
  example:
  - "The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.  \n  \n [!code-vb[XslCompiledTransform.Transform#4](~/add/codesnippet/visualbasic/c36dd9c6-36bd-4274-9e59-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#4](~/add/codesnippet/csharp/c36dd9c6-36bd-4274-9e59-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> containing the input document."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "An <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> containing the namespace-qualified arguments used as input to the transform. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an `xsl:output` element, you should create the <xref:System.Xml.XmlWriter> using the <xref:System.Xml.XmlWriterSettings> object returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
    - id: documentResolver
      type: System.Xml.XmlResolver
      description: "The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> used to resolve the XSLT `document()` function. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the `document()` function is not resolved."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "There was an error executing the XSLT transform."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Executes the transform by using the input document that is specified by the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> object and outputs the results to an <xref:System.Xml.XmlWriter>. The <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> provides additional run-time arguments and the <xref href=&quot;System.Xml.XmlResolver&quot;></xref> resolves the XSLT <xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;></xref> function."
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "The document to transform that is specified by the <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref> object."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "Argument list as <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>."
    - id: results
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to which you want to output.       If the style sheet contains an <xref uid=&quot;langword_csharp_xsl:output&quot; name=&quot;xsl:output&quot; href=&quot;&quot;></xref> element, you should create the <xref:System.Xml.XmlWriter> by using the <xref:System.Xml.XmlWriterSettings> object that is returned from the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> property. This ensures that the <xref:System.Xml.XmlWriter> has the correct output settings."
    - id: documentResolver
      type: System.Xml.XmlResolver
      description: "The <xref href=&quot;System.Xml.XmlResolver&quot;></xref> used to resolve the XSLT <xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;></xref> function. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the <xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;></xref> function is not resolved."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Xsl.XsltException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltException
  nameWithType: XsltException
  fullName: System.Xml.Xsl.XsltException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform()
  nameWithType: XslCompiledTransform.XslCompiledTransform()
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform()
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform(Boolean)
  nameWithType: XslCompiledTransform.XslCompiledTransform(Boolean)
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  nameWithType: XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
- uid: System.CodeDom.Compiler.CompilerErrorCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerErrorCollection
  nameWithType: CompilerErrorCollection
  fullName: System.CodeDom.Compiler.CompilerErrorCollection
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XsltSettings
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltSettings
  nameWithType: XsltSettings
  fullName: System.Xml.Xsl.XsltSettings
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: true
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslCompiledTransform.Load(String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(Type)
  nameWithType: XslCompiledTransform.Load(Type)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslCompiledTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(MethodInfo,Byte[],Type[])
  nameWithType: XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(String,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(XmlReader,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(IXPathNavigable,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
  fullName: System.Xml.Xsl.XslCompiledTransform.OutputSettings
- uid: System.Xml.XmlWriterSettings
  parent: System.Xml
  isExternal: true
  name: XmlWriterSettings
  nameWithType: XmlWriterSettings
  fullName: System.Xml.XmlWriterSettings
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
  fullName: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslCompiledTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform
  nameWithType: XslCompiledTransform.XslCompiledTransform
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: CompileToType
  nameWithType: XslCompiledTransform.CompileToType
- uid: System.Xml.Xsl.XslCompiledTransform.Load*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load
  nameWithType: XslCompiledTransform.Load
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
- uid: System.Xml.Xsl.XslCompiledTransform.Transform*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform
  nameWithType: XslCompiledTransform.Transform
