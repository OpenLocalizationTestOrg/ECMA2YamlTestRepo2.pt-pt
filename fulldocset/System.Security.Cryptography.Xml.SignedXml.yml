### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.SignedXml
  id: SignedXml
  children:
  - System.Security.Cryptography.Xml.SignedXml.#ctor
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  - System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  - System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  - System.Security.Cryptography.Xml.SignedXml.GetXml
  - System.Security.Cryptography.Xml.SignedXml.KeyInfo
  - System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.m_signature
  - System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.Resolver
  - System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  - System.Security.Cryptography.Xml.SignedXml.Signature
  - System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  - System.Security.Cryptography.Xml.SignedXml.SignatureLength
  - System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  - System.Security.Cryptography.Xml.SignedXml.SignatureValue
  - System.Security.Cryptography.Xml.SignedXml.SignedInfo
  - System.Security.Cryptography.Xml.SignedXml.SigningKey
  - System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  langs:
  - csharp
  name: SignedXml
  nameWithType: SignedXml
  fullName: System.Security.Cryptography.Xml.SignedXml
  type: Class
  summary: "Fornece um wrapper num objeto de assinatura XML core para facilitar a criação de XML de assinaturas."
  remarks: "A classe de SignedXml é a implementação do .NET Framework de Consortium a World Wide Web (W3C) [sintaxe de assinatura de XML e a especificação de processamento](http://www.w3.org/TR/xmldsig-core/), também conhecido como XMLDSIG (Assinatura Digital de XML).  XMLDSIG é uma forma baseada em normas, interoperável para iniciar sessão e certifique-se de que a totalidade ou parte de um documento XML ou outros dados que seja acessível a partir de um Uniform Resource Identifier (URI).       Utilize a classe de SignedXml sempre que precisar de partilhar dados XML entre aplicações ou organizações de assinados de forma padrão.  Quaisquer dados assinados utilizando esta classe podem ser verificados por qualquer implementação conforming a especificação de W3C para XMLDSIG.       A classe de SignedXml permite-lhe criar os seguintes três tipos de assinaturas digitais de XML: | Tipo de assinatura | Descrição |   |--------------------|-----------------|   | Assinatura com envelope | A assinatura é contida no elemento XML que está a ser assinado. |   | Assinatura enveloping | O XML assinado está contido no `Signature`> elemento. |   | Assinatura desligada interna | A assinatura e XML assinado estão no mesmo documento, mas nenhum dos elemento contém outros. |       Também é uma quarto do tipo de assinatura denominada uma assinatura desligada externa que é quando a assinatura e os dados são separados documentos de XML. Assinaturas desligadas externas não são suportadas pela classe SignedXml.      ## A estrutura de um XMLDSIG de assinatura XML cria um `Signature`> elemento, que contém uma assinatura digital de um documento XML ou outros dados que seja acessível a partir de um URI.  O `Signature`> elemento, opcionalmente, pode conter informações sobre onde encontrar uma chave que irá verificar a assinatura e o algoritmo criptográfico foi utilizado para assinatura. A estrutura básica é o seguinte: ```xml      <Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;>       <SignedInfo>         <CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;/>         <SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;/>         <Reference URI=&quot;&quot;>           <Transforms>             <Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/>           </Transforms>           <DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;/>           <DigestValue>Base64EncodedValue==</DigestValue>         </Reference>       </SignedInfo>       <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>     </Signature>      ``` são as principais partes desta estrutura: O `CanonicalizationMethod`> elemento Especifica as regras para a conversão de `Signature` elemento a partir do texto/XML em bytes para validação da assinatura. O valor predefinido no .NET Framework é http://www.w3.org/TR/2001/REC-xml-c14n-20010315, que identifica um algoritmo fidedigno. Este elemento é representado pelo <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>propriedade.</xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>       O `SignatureMethod`> elemento Especifica o algoritmo utilizado para gerar assinaturas e validação, o que foi aplicada à `Signature`> elemento para produzir o valor no `SignatureValue`>. No exemplo acima, o valor http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifica uma assinatura de RSA PKCS1 SHA-1. Este elemento é representado pelo <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>       O `SignatureValue`> elemento Especifica a assinatura criptográfica para o `Signature`> elemento. Se esta assinatura não verificar, em seguida, alguma parte a `Signature`> ter sido adulterado blocos e o documento é considerado inválido. Desde que o `CanonicalizationMethod`> valor é fidedigno, este valor é altamente resistente a adulteração. Este elemento é representado pelo <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>       O `URI` atributo o `Reference`> elemento Especifica um objeto de dados utilizando uma referência URI. Este atributo é representado pelo <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>propriedade.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>      -Não especificar o `URI` atributo, ou seja, a definição de <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>propriedade `null`, significa que a aplicação recetora é esperada que conheçam a identidade do objeto.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> Na maioria dos casos, um `null` URI causará uma exceção que está a ser emitida. Não utilize um `null` URI, a menos que a aplicação é interoperar com um protocolo que requê-lo.      -Definir a `URI` atributo como uma cadeia vazia indica que o elemento de raiz do documento está a ser assinado, um formulário de assinatura com envelope.      -Se o valor de `URI` atributo começa com n. º, em seguida, o valor tem de resolver para um elemento no documento atual. Este formulário pode ser utilizado com qualquer um dos tipos suportados assinatura (assinatura com envelope, enveloping assinatura ou a assinatura desligada interna).      -Há mais alguma coisa é considerada um recurso externo anular a exposição de assinatura e não é suportado pela classe SignedXml.       O `Transforms`> elemento contém uma lista ordenada de `Transform`> elementos que descrevem a forma como o signatário obtido o objeto de dados de que foi digested. Um algoritmo de transformação é semelhante para o método de colocação em forma canónica, mas em vez de conversão de `Signature`> elemento,-reescreve o conteúdo identificado pelo `URI` atributo do `Reference`> elemento. O `Transforms`> elemento um representado pela <xref:System.Security.Cryptography.Xml.TransformChain>classe.</xref:System.Security.Cryptography.Xml.TransformChain>      -Cada algoritmo de transformação é definido como tendo XML (um XPath conjunto de nós) ou bytes como entrada. Se o formato dos dados atuais difere de acordo com os requisitos de entrada de transformação, regras de conversão são aplicadas.      -Cada algoritmo de transformação é definido como produzir XML ou bytes como resultado.      -Se a saída do último algoritmo de transformação não está definida em bytes (ou não as transformações especificadas), a colocação em forma canónica método http://www.w3.org/TR/2001/REC-xml-c14n-20010315, em seguida, é utilizado como uma transformação implícita (mesmo que foi especificado um algoritmo diferente no `CanonicalizationMethod`> elemento).      -Um valor de http://www.w3.org/2000/09/xmldsig#enveloped-signature para o algoritmo de transformação codifica uma regra que é interpretada como remover o `Signature`> elemento do documento. Caso contrário, um verificador de uma assinatura com envelope será resumida o documento, incluindo a assinatura, mas o signatário seria ter digested o documento antes da assinatura foi aplicada, originando respostas diferentes.       O `DigestMethod`> elemento identifica o método de resumo (hash criptográfico) para aplicar no conteúdo transformado identificado pelo `URI` atributo o `Reference`> elemento. Isto é representado pelo <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>propriedade.</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>      ## Escolher um método de colocação em forma canónica, a menos que interage com uma especificação que requer a utilização de um valor diferente, recomendamos que utilize o método de colocação em forma canónica predefinido no .NET Framework que é o algoritmo de XML C14N 1.0, cujo valor é http://www.w3.org/TR/2001/REC-xml-c14n-20010315. O algoritmo de XML C14N 1.0 tem de ser suportado por todas as implementações de XMLDSIG, especialmente porque é uma transformação final implícita a aplicar.       Existem versões dos algoritmos de colocação em forma canónica que suportam a preservação de comentários. Preservação de comentário métodos de colocação em forma canónica não são recomendados porque estes violam o princípio de &quot;iniciar sessão que está a ser visto&quot;. Ou seja, os comentários num `Signature`> elemento altera a lógica de processamento para a forma como a assinatura é efetuada, apenas que a assinatura valor. Quando combinada com um algoritmo de assinatura fraca, permitindo que os comentários para ser incluída fornecem liberdade desnecessários um atacante forçar uma colisão de hash, tornando um documento adulterado aparecer legítima.  O .NET Framework, são suportadas apenas incorporadas canonicalizers por predefinição. Para suportar canonicalizers personalizados ou adicionais, consulte o <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> Se o documento utiliza um método de colocação em forma canónica não se encontra na coleção representada pelo <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>propriedade, o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método irá devolver `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      > [!NOTE] > Uma aplicação extremamente defesas pode remover quaisquer valores não espera signers para utilizar o <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>coleção.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      ## Os valores de referência estão seguros contra adulteração?    Sim, o `Reference`> valores estão seguros contra adulteração.  O .NET framework verifica o `SignatureValue`> cálculo antes do processamento de qualquer um do `Reference`> valores e os respetivos associado transforma e irá abortar numa fase inicial, para evitar as instruções de processamento potencialmente malicioso.      ## Escolher os elementos para iniciar sessão, recomendamos que utilize o valor de &quot;&quot; para o `URI` atributo (ou defina o <xref:System.Security.Cryptography.Xml.Reference.Uri%2A>propriedade como uma cadeia vazia), se possível.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A> Isto significa que todo o documento é considerado para o cálculo de texto implícita, que significa que todo o documento está protegido contra adulteração.       É muito comum para ver `URI` valores sob a forma de âncoras como #foo, que faça referência a um elemento, atributo cujo ID é &quot;foo&quot;. Infelizmente, é mais fácil para esta opção para adulterado porque isto inclui apenas o conteúdo do elemento de destino, não o contexto do utilizador. Abusing este distinção é conhecido como XML assinatura encapsulamento de aplicações (XSW).       Se a aplicação considera semântica de comentários (que é não comum quando lidar com XML), em seguida, deve utilizar &quot;#xpointer(/)&quot; em vez de &quot;&quot; e &quot;#xpointer(id(&quot;foo&quot;))&quot; em vez de &quot;#foo&quot;. As versões de #xpointer são interpretadas como incluindo comentários, enquanto os formulários shortname são excluindo os seus comentários.       Se pretender aceitar documentos que estão protegidos apenas parcialmente e pretender certificar-se de que estão a ler o conteúdo mesmo que a assinatura protegido, utilize o <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>método.</xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>      ## Considerações de segurança sobre o elemento KeyInfo os dados a opcional `KeyInfo`> elemento (ou seja, o <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>propriedade), que contém a chave para validar a assinatura não devem ser considerados fidedignos.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>       Em particular, quando o <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>valor representa uma chave pública bare RSA, DSA ou ECDSA, o documento foi tiver sido adulterado, apesar do <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método relatórios que a assinatura é válida.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>  Isto pode acontecer porque a entidade de fazer a adulteração apenas tem de gerar uma nova chave e voltar a assinar o documento adulterado com essa nova chave. Por isso, a menos que a aplicação verifica se a chave pública é um valor esperado, o documento ser tratado como se foram adulterado. Isto requer que a aplicação examinar a chave pública incorporada no documento e certifique-se de em relação a uma lista de valores conhecidos para o contexto de documento. Por exemplo, se o documento foi ser compreendido ao ser emitido por um utilizador conhecido, iria verificar a chave de uma lista de chaves conhecidas utilizados por esse utilizador.       Também pode verificar a chave após o processamento de documentos utilizando o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A>método, em vez de utilizar o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> No entanto, para garantir a segurança ideal, deve verificar a chave de previamente.       Em alternativa, considere a tentativa do utilizador registado as chaves públicas, em vez de ler o que está a ser o `KeyInfo`> elemento.      ## Considerações de segurança sobre o elemento de X509Data o opcional `X509Data`> elemento é um elemento subordinado do `KeyInfo`> elemento e contém um ou mais X509 certificados ou identificadores para X509 certificados. Os dados a `X509Data`> elemento também não deve ser intrinsecamente fidedigno.       Ao verificar um documento com o embedded `X509Data`> elemento, o .NET Framework verifica apenas se os dados é resolvido para um X509 certificado cuja chave pública pode ser utilizado com êxito para validar a assinatura do documento. Ao contrário de chamar o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método com o `verifySignatureOnly` parâmetro definido como `false`, não é efetuada nenhuma verificação de revogação, nenhuma confiança de cadeia está marcada e, sem expiração é verificada.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Mesmo que a aplicação extrai o certificado propriamente dito e passa-o para o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método com o `verifySignatureOnly` parâmetro definido como `false`, que é ainda validação não é suficiente para impedir a adulteração de documento.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> O certificado ainda tem de ser validado como adequada para o documento que está a ser iniciado.       Utilizar um certificado de assinatura incorporado pode fornecer estratégias de rotação da chave útil se no `X509Data`> secção ou o conteúdo do documento. Quando utilizar esta abordagem uma aplicação deve extrair o certificado manualmente e efetuar a validação semelhante a: - o certificado foi emitido diretamente ou através de uma cadeia por uma autoridade de certificação (CA) cujo certificado público é incorporado na aplicação.           Utilizando a lista de fidedignidade de SO fornecidos sem verificações adicionais, tais como um nome de requerente conhecido, não é suficiente para impedir a adulteração no SignedXml.      -O certificado é verificado para não ter sido expirado no momento da assinatura de documentos (ou &quot;agora&quot; para perto de processamento de documentos em tempo real).      -Para os certificados emitidos por uma AC que suporte a revogação, certifique-se de que o certificado não foi revogado.      -O requerente do certificado é validado como adequados ao documento actual.      ## Escolher o algoritmo de transformação se são interage com uma especificação que tem determinados valores específicos (tais como XrML), em seguida, tem de seguir a especificação.  Se tiver uma assinatura com envelope (como quando todo o documento de assinatura), em seguida, tem de utilizar http://www.w3.org/2000/09/xmldsig#enveloped-signature (representado pelo <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>classe).</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Pode especificar a transformação de XML C14N implícita, mas não é necessário.  Para uma assinatura enveloping ou desligada, não as transformações são necessárias. A transformação XML C14N implícita encarrega-se tudo.       Com a segurança atualizada que foi introduzida pelo [boletim de segurança da Microsoft MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), o .NET Framework tem restrito que transformações podem ser utilizado na verificação do documento, por predefinição, com as transformações não fidedignas, fazendo com que <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>sempre devolver `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Em particular, transformações que requerem inserção de dados adicional (especificada como elementos subordinados de XML) já não são permitidas devido ao respetiva possibilidade de ocorrência de abuso por utilizadores mal intencionados. O W3C aconselha evitando transformações XPath e XSLT, que são as dois transformações principais afetadas por estas restrições.      ## O problema com referências externas se uma aplicação não Certifique-se de que as referências externas parecem adequadas para o contexto atual, pode ser abused de formas que fornecem várias vulnerabilidades de segurança (incluindo Denial of Service, reflexão Denial of Service distribuídos, divulgação de informações, ignorar a assinatura e execução remota de código). Mesmo se uma aplicação validar a URI de referência externa, seria permanecem um problema do recurso que está a ser carregado duas vezes: uma vez quando a aplicação lê-lo e, depois quando SignedXml lê-lo. Uma vez que não existe nenhuma garantia de que a aplicação leia e documento verifique passos tem os mesmos conteúdos, a assinatura não fornece fidedignidade.       Tendo em conta os riscos de referências externas, SignedXml irá gerar uma exceção quando é encontrada uma referência externa.  Para obter mais informações sobre este problema, consulte [artigo BDC 3148821](https://support.microsoft.com/en-us/kb/3148821)."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/t-system.security.crypto_96_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/t-system.security.crypto_96_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_1.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/t-system.security.crypto_96_2.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/t-system.security.crypto_96_2.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_2.vb)]"
  syntax:
    content: public class SignedXml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_88_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_88_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_88_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_88_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_88_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_88_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_3.vb)]"
  syntax:
    content: public SignedXml ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe a partir de um documento XML especificado."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_111_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_111_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_111_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_111_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_111_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_111_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_3.vb)]"
  syntax:
    content: public SignedXml (System.Xml.XmlDocument document);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "O <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto a utilizar para iniciar a nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>document</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code> document </code> parâmetro contém um valor nulo <xref:System.Xml.XmlDocument.DocumentElement*>propriedade.</xref:System.Xml.XmlDocument.DocumentElement*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  id: '#ctor(System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe a partir de especificado <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto."
  syntax:
    content: public SignedXml (System.Xml.XmlElement elem);
    parameters:
    - id: elem
      type: System.Xml.XmlElement
      description: "O <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto a utilizar para iniciar a nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>elem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adiciona um <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto à lista de objetos sejam assinadas."
  remarks: "O método AddObject adiciona um `Object`> elemento que representa um objeto assinado para o `Signature`> elemento de uma assinatura digital de XML.       O método de AddObject chama internamente o <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>método do <xref:System.Security.Cryptography.Xml.Signature>objeto encapsulado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>  Também pode adicionar um <xref:System.Security.Cryptography.Xml.DataObject>objeto chamando diretamente o <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>método o <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> </xref:System.Security.Cryptography.Xml.DataObject>       Para mais informações sobre assinaturas digitais de XML, consulte a especificação de XMLDSIG disponível em www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example computes and XML signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/csharp/cc2302c9-707b-486f-888b-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/cpp/cc2302c9-707b-486f-888b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/visualbasic/cc2302c9-707b-486f-888b-_1.vb)]"
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> o objeto a adicionar à lista de objetos sejam assinadas."
  overload: System.Security.Cryptography.Xml.SignedXml.AddObject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  id: AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adiciona um <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> de objeto para o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto que descrevem um método resumido, o valor de texto implícita e a transformação a utilizar para criar uma assinatura digital de XML."
  remarks: "O método AddReference adiciona um `Reference`> elemento para que o <xref:System.Security.Cryptography.Xml.SignedXml>objeto que descrevem um método resumido, o valor de texto implícita e a transformação a utilizar para criar uma assinatura digital de XML.</xref:System.Security.Cryptography.Xml.SignedXml>  O `Reference`> elemento é um subelemento do `SignedInfo`> elemento.       O método de AddReference chama internamente o <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>método do <xref:System.Security.Cryptography.Xml.SignedInfo>objeto encapsulado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>  Também pode adicionar um <xref:System.Security.Cryptography.Xml.Reference>objeto chamando diretamente o <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>método o <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> </xref:System.Security.Cryptography.Xml.Reference>       Para mais informações sobre assinaturas digitais de XML, consulte a especificação de XMLDSIG disponível em www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_3.vb)]"
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);
    parameters:
    - id: reference
      type: System.Security.Cryptography.Xml.Reference
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> objeto que descrevem um método resumido, o valor de texto implícita e a transformação a utilizar para criar uma assinatura digital de XML."
  overload: System.Security.Cryptography.Xml.SignedXml.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  id: CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica utilizando a chave pública na assinatura.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Este método também calcula o resumo das referências e o valor da assinatura.       Se um documento XML foi assinado com uma assinatura de x.&509;, o método CheckSignature irá procurar o arquivo de &quot;AddressBook&quot; para certificados adequados para a verificação. Por exemplo, se o certificado é referenciado por um requerente chave identificador (SKI), o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método irá selecione certificados com este SKI e tente-las umas a seguir até pode verificar o certificado.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>"
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_17_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_17_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_17_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_17_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_17_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_17_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_3.vb)]"
  syntax:
    content: public bool CheckSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>verifica a propriedade; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> não corresponde à propriedade da chave pública na assinatura do <> </> *> propriedade.       - ou - não foi possível criar a descrição de assinatura.       - ou não foi possível criar o algoritmo de hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para a chave especificada.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_1.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_1.cs)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "A implementação do <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> propriedade que contém a chave a ser utilizado para verificar o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para especificado chave; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> propriedade o <code> key </code> não corresponde ao parâmetro o <> </> *> propriedade.       - ou - não foi possível criar a descrição de assinatura.       - ou não foi possível criar o algoritmo de hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para o algoritmo de código (MAC) de autenticação de mensagem especificado.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "A implementação de <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> que detém o MAC para ser utilizado para verificar o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para MAC especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> propriedade especificado <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objeto não é válido.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - não foi possível criar a transformação criptográfica utilizada para verificar a assinatura."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para especificado <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objeto e, opcionalmente, se o certificado é válido.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Na versão 1.1 do .NET Framework, o certificado x. 509 não é verificado.  Na versão 2.0 e posterior, o certificado x. 509 é verificado.       Na versão 2.0 e posterior do .NET Framework, o método CheckSignature irá procurar o arquivo de &quot;AddressBook&quot; para certificados adequados para a verificação. Por exemplo, se o certificado é referenciado por um identificador de chave do requerente (SKI), o método CheckSignature será selecione certificados com este SKI e tente-las umas a seguir até pode verificar o certificado."
  example:
  - "The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.  \n  \n [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/visualbasic/e51a3b72-eabb-4d0b-b51a-_1.vb)]\n [!code-cs[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/csharp/e51a3b72-eabb-4d0b-b51a-_1.cs)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objeto a utilizar para verificar o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para verificar a assinatura só; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para verificar a assinatura e o certificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a assinatura é válida. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a assinatura e o certificado são válidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível criar uma descrição de assinatura para o <code> certificate </code> parâmetro."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  id: CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica utilizando a chave pública na assinatura.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_1.vb)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_2.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_2.vb)]"
  syntax:
    content: public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);
    parameters:
    - id: signingKey
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Quando este método devolve, contém a implementação de <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> que contém a chave pública na assinatura. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica público a utilizar chaves na assinatura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> signingKey </code> parâmetro é nulo."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> não corresponde à propriedade da chave pública na assinatura do <> </> *> propriedade.       - ou - não foi possível criar a descrição de assinatura.       - ou não foi possível criar o algoritmo de hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Calcula uma assinatura digital de XML."
  remarks: "O método ComputeSignature cria uma assinatura digital de XML e construções muitos dos elementos XML necessários.       Tem de definir os dados sejam assinados e <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>propriedade antes de chamar este método.</xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>"
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_74_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_74_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_74_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_74_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_2.vb)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <> </> *> propriedade não é um <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> objeto ou <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> objeto.       - ou - não foi possível carregar a chave."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Calcula uma assinatura digital do XML utilizando o algoritmo de código (MAC) de autenticação de mensagem especificado."
  remarks: "O método ComputeSignature cria uma assinatura digital do XML utilizando o algoritmo de MAC especificado e construções muitos dos elementos XML necessários.       Tem de definir os dados sejam assinados antes de chamar este método."
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_2.vb)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "A <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objeto que contém o MAC para ser utilizado para calcular o valor da <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> o objeto especificado pelo <code> macAlg </code> parâmetro não é uma instância de <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>.       - ou - <xref:System.Security.Cryptography.HashAlgorithm.HashSize*>propriedade especificado <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objeto não é válido.</xref:System.Security.Cryptography.HashAlgorithm.HashSize*>       - ou - não foi possível criar a transformação criptográfica utilizada para verificar a assinatura."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define um <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> objeto que define as regras de processamento de encriptação de XML."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "Um <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> objeto que define as regras de processamento de encriptação de XML."
  overload: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  id: GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Devolve o <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto com o ID especificado de especificado <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto."
  syntax:
    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "O <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto para obter o <xref href=&quot;System.Xml.XmlElement&quot;> </xref> de objeto do."
    - id: idValue
      type: System.String
      description: "O ID do <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto para obter o <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto."
    return:
      type: System.Xml.XmlElement
      description: "O <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto com o ID especificado de especificado <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não foi possível encontrar."
  overload: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Devolve a chave pública de uma assinatura."
  remarks: "O método GetPublicKey devolve um <xref:System.Security.Cryptography.AsymmetricAlgorithm>objeto que contém uma chave pública que pode ser utilizada para verificar uma assinatura digital de XML.</xref:System.Security.Cryptography.AsymmetricAlgorithm>       A chave deve ser um <xref:System.Security.Cryptography.DSA>ou um <xref:System.Security.Cryptography.RSA>chave.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.DSA>"
  syntax:
    content: protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Um <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objeto que contém a chave pública de assinatura, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a chave não pode ser encontrada."
  overload: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Devolve a representação XML de um <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "A representação XML do <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "O representa de propriedade KeyInfo o `KeyInfo`> elemento de uma assinatura digital do XML utilizando um <xref:System.Security.Cryptography.Xml.KeyInfo>contido a propriedade do objeto.</xref:System.Security.Cryptography.Xml.KeyInfo>  O `KeyInfo`> elemento é um subelemento do `Signature`> elemento.       Utilize a propriedade de KeyInfo para incorporar as informações relacionadas com a chave que se destina a ajudar a identificar a chave de necessária para validar um documento XML.       Para obter mais informações sobre o `<KeyInfo>` elemento, consulte a especificação de XMLDSIG, que está disponível no www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_31_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_31_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_31_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_31_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Carrega um <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> estado a partir de um elemento XML."
  remarks: ''
  example:
  - "The following code example shows how to use the LoadXml method to verify an XML document.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/csharp/m-system.security.crypto_14_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/visualbasic/m-system.security.crypto_14_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/cpp/m-system.security.crypto_14_1.cpp)]"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "O elemento XML para carregar o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> estado do."
  overload: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <code> value </code> não contém um parâmetro <> </> *> propriedade.       - ou - <code> value </code> não contém um parâmetro <> </> *> propriedade."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  id: m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: protected System.Security.Cryptography.Xml.Signature m_signature;
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  id: m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o nome da chave instalada para ser utilizada para assinatura de <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: protected string m_strSigningKeyName;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Define o atual <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto."
  remarks: "O <xref:System.Xml.XmlResolver>classe resolve recursos externos de XML com o nome por um Uniform Resource Identifier (URI).</xref:System.Xml.XmlResolver> Se não confiar na origem do ficheiro XML, poderá não quiser permitir que o ficheiro XML aceder a recursos de computador com o nome o URI. Pode utilizar a propriedade de resolução para controlar o nível de acesso com ficheiros XML para recursos de computador, especificando diferentes <xref:System.Xml.XmlResolver>objetos.</xref:System.Xml.XmlResolver> Se não pretender permitir que qualquer acesso, pode definir esta propriedade `null` (`Nothing` no Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Atual <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto. As predefinições é um <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  id: SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "[Suportadas no .NET Framework 4.5.1 e versões posteriores]       Obtém os nomes dos métodos cujos algoritmos de colocação em forma canónica estão explicitamente permitidos."
  remarks: "Métodos de colocação em forma canónica converter um documento XML do respetivo formato canónico. Para obter mais informações sobre canónica XML, consulte [canónica XML](http://www.w3.org/TR/xml-c14n) no Web site da W3C."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> SafeCanonicalizationMethods { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "Uma coleção de nomes de métodos em segurança produzem canónica XML."
  overload: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  id: Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "O representa de propriedade de assinatura de `Signature`> elemento de uma assinatura digital do XML utilizando um <xref:System.Security.Cryptography.Xml.Signature>contido a propriedade do objeto.</xref:System.Security.Cryptography.Xml.Signature>  O `Signature`> elemento é o elemento de raiz utilizado para criação de assinatura digital de XML e a verificação.       Utilize a propriedade de assinatura para obter o <xref:System.Security.Cryptography.Xml.Signature>objeto utilizado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature>       Para obter mais informações sobre o `<Signature>` elemento, consulte a especificação de XMLDSIG, que está disponível no www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the Signature property to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_9_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_9_1.cpp)]  \n  \n The following code example uses the Signature property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_9_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_9_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.Signature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  id: SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém um delegado que será chamado para validar o formato (não a segurança criptográfica) de uma assinatura XML."
  remarks: "Este método pode ser utilizado para garantir que apenas determinadas transformações são utilizadas ou que a assinatura utiliza um determinado algoritmo hash e assim sucessivamente.       Definir a propriedade como `null` remove todos os validação do formato da assinatura do <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml>       Também pode ler delegado atual do objeto e a cadeia para o mesmo se pretender.       Se estiver a configurar uma validação do formato, o delegado que fornece irão receber como um parâmetro de entrada a <xref:System.Security.Cryptography.Xml.SignedXml>objeto que está a ser verificado e devolve um valor booleano – `true` se o formato é aceitável, `false` se não for.</xref:System.Security.Cryptography.Xml.SignedXml> Se o delegado devolve `false` por qualquer motivo, o <xref:System.Security.Cryptography.Xml.SignedXml>objeto irão comunicar que a assinatura XML não é válida.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public Func<System.Security.Cryptography.Xml.SignedXml,bool> SignatureFormatValidator { get; set; }
    return:
      type: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o formato é aceitável; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  id: SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o comprimento da assinatura de atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: public string SignatureLength { get; }
    return:
      type: System.String
      description: "O comprimento da assinatura para o atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  id: SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o método de assinatura de atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "O representa de propriedade ajusta ao SignatureMethod o `SignatureMethod`> elemento de uma assinatura digital do XML utilizando uma cadeia de Uniform Resource Identifier (URI) contida a propriedade. O `SignatureMethod`> elemento é um subelemento do `SignedInfo`> elemento.       Utilize a propriedade ajusta ao SignatureMethod para obter o `SignatureMethod`> URI utilizado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> Esta propriedade é só de leitura. Para obter mais informações sobre como especificar programaticamente um URI para o `SignatureMethod`> elemento, consulte o <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>       Para obter mais informações sobre o `<SignatureMethod>` elemento, consulte a especificação de XMLDSIG, que está disponível no www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public string SignatureMethod { get; }
    return:
      type: System.String
      description: "O método de assinatura de atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o valor de assinatura de atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "O representa de propriedade SignatureValue o `SignatureValue`> elemento de uma assinatura digital de XML a utilizar uma matriz de bytes contidos a propriedade.  O `SignatureValue`> elemento é um subelemento do `Signature>` elemento.       Utilize a propriedade de SignatureValue para obter o valor da assinatura digital XML.  Esta propriedade é preenchida automaticamente quando efetua uma chamada com êxito para o <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>método.</xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>       Para obter mais informações sobre o `<SignatureValue>` elemento, consulte a especificação de XMLDSIG, que está disponível no www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém o valor de assinatura da atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "O representa de propriedade de SignedInfo o `SignedInfo`> elemento de uma assinatura digital de XML com uma matriz de bytes contidos a propriedade.  O `SignedInfo`> elemento é um subelemento do `Signature>` elemento.       Utilize a propriedade de SignedInfo para obter o <xref:System.Security.Cryptography.Xml.SignedInfo>objeto que é utilizado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto para criar uma assinatura digital de XML.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo>       Para obter mais informações sobre o `<SignedInfo>` elemento, consulte a especificação de XMLDSIG, que está disponível no www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  id: SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define a chave de algoritmo assimétrico utilizada para assinar um <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "Utilize a propriedade de SigningKey para especificar a chave assimétrica que pretende utilizar para criar uma assinatura digital de XML."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_40_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_40_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_40_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_40_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/p-system.security.crypto_40_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/p-system.security.crypto_40_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_3.vb)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "A chave de algoritmo assimétrico utilizada para assinar o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  id: SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o nome da chave instalada para ser utilizada para assinatura de <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: public string SigningKeyName { get; set; }
    return:
      type: System.String
      description: "O nome da chave instalada para ser utilizada para assinatura de <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  id: XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a transformação de desencriptação do modo XML. Este campo é constante."
  remarks: "O valor do campo XmlDecryptionTransformUrl é &quot;http://www.w3.org/2002/07/decrypt#XML&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2002/07/decrypt#XML."
  syntax:
    content: public const string XmlDecryptionTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  id: XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a transformação base 64. Este campo é constante."
  remarks: "O valor do campo XmlDsigBase64TransformUrl é &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>classe implementa a transformação descrita pelo campo de XmlDsigBase64TransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#base64."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/csharp/f-system.security.crypto_0_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_0_1.vb)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/cpp/f-system.security.crypto_0_1.cpp)]"
  syntax:
    content: public const string XmlDsigBase64TransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  id: XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a transformação XML canónico. Este campo é constante."
  remarks: "O valor do campo XmlDsigC14NTransformUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>classe implementa a transformação descrita pelo campo de XmlDsigC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>"
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_4_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_4_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_4_1.vb)]"
  syntax:
    content: public const string XmlDsigC14NTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  id: XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a transformação XML canónico, com os seus comentários. Este campo é constante."
  remarks: "O valor do campo XmlDsigC14NWithCommentsTransformUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>classe implementa a transformação descrita pelo campo de XmlDsigC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>"
  syntax:
    content: public const string XmlDsigC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  id: XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o algoritmo de colocação em forma canónica padrão para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigCanonicalizationUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>classe implementa a transformação descrita pelo campo de XmlDsigCanonicalizationUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  id: XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o algoritmo de colocação em forma canónica padrão para assinaturas digitais de XML e inclui os seus comentários. Este campo é constante."
  remarks: "O valor do campo XmlDsigCanonicalizationWithCommentsUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>classe implementa a transformação descrita pelo campo de XmlDsigCanonicalizationWithCommentsUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationWithCommentsUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  id: XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a norma <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> algoritmo para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigDSAUrl é &quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#dsa-sha1."
  syntax:
    content: public const string XmlDsigDSAUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  id: XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a transformação de assinatura com envelope. Este campo é constante."
  remarks: "O valor do campo XmlDsigEnvelopedSignatureTransformUrl é &quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>classe implementa a transformação descrita pelo campo de XmlDsigEnvelopedSignatureTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#enveloped-signature."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/csharp/62dc9f7e-cdc8-4569-bf73-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/cpp/62dc9f7e-cdc8-4569-bf73-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/visualbasic/62dc9f7e-cdc8-4569-bf73-_1.vb)]"
  syntax:
    content: public const string XmlDsigEnvelopedSignatureTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  id: XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para exclusivo XML colocação em forma canónica. Este campo é constante."
  remarks: "O valor do campo XmlDsigExcC14NTransformUrl é &quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>classe implementa a transformação descrita pelo campo de XmlDsigExcC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2001/10/xml-exc-c14n#."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/f-system.security.crypto_9_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/f-system.security.crypto_9_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/f-system.security.crypto_9_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  id: XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para exclusivo XML colocação em forma canónica, com os seus comentários. Este campo é constante."
  remarks: "O valor do campo XmlDsigExcC14NWithCommentsTransformUrl é &quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>classe implementa a transformação descrita pelo campo de XmlDsigExcC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2001/10/xml-exc-c14n#WithComments."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/csharp/15045a8f-c740-45e0-8c9c-_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/cpp/15045a8f-c740-45e0-8c9c-_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/visualbasic/15045a8f-c740-45e0-8c9c-_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  id: XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a norma <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> algoritmo para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigHMACSHA1Url é &quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#hmac-sha1."
  syntax:
    content: public const string XmlDsigHMACSHA1Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  id: XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o algoritmo de colocação em forma canónica mínima padrão para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigMinimalCanonicalizationUrl é &quot;http://www.w3.org/2000/09/xmldsig#minimal&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#minimal."
  syntax:
    content: public const string XmlDsigMinimalCanonicalizationUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  id: XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o espaço de nomes padrão para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigNamespaceUrl é &quot;http://www.w3.org/2000/09/xmldsig#&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#."
  syntax:
    content: public const string XmlDsigNamespaceUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  id: XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a norma <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> método de assinatura para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA1Url é &quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#rsa-sha1."
  syntax:
    content: public const string XmlDsigRSASHA1Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  id: XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variação de método de assinatura de SHA-256 para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA256Url é &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more)."
  syntax:
    content: public const string XmlDsigRSASHA256Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  id: XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variação de método de assinatura de SHA-384 para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA384Url é &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)."
  syntax:
    content: public const string XmlDsigRSASHA384Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  id: XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variação de método de assinatura de SHA-512 para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA512Url é &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)."
  syntax:
    content: public const string XmlDsigRSASHA512Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  id: XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a norma <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> resumida método para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigSHA1Url é &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/2000/09/xmldsig#sha1."
  syntax:
    content: public const string XmlDsigSHA1Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  id: XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a norma <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> resumida método para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigSHA256Url é &quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256)."
  syntax:
    content: public const string XmlDsigSHA256Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  id: XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a norma <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> resumida método para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigSHA384Url é &quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384)."
  syntax:
    content: public const string XmlDsigSHA384Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  id: XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para a norma <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> resumida método para assinaturas digitais de XML. Este campo é constante."
  remarks: "O valor do campo XmlDsigSHA512Url é &quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512)."
  syntax:
    content: public const string XmlDsigSHA512Url;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  id: XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o idioma de caminho XML (XPath). Este campo é constante."
  remarks: "O valor do campo XmlDsigXPathTransformUrl é &quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>classe implementa a transformação descrita pelo campo de XmlDsigXPathTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/TR/1999/REC-xpath-19991116."
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.  \n  \n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_1_1.vb)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_1_1.cs)]"
  syntax:
    content: public const string XmlDsigXPathTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  id: XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para transformações de XSLT. Este campo é constante."
  remarks: "O valor do campo XmlDsigXsltTransformUrl é &quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;.       Utilize este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>classe implementa a transformação descrita pelo campo de XmlDsigXsltTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>       Para obter mais informações, consulte a especificação de Consortium World Wide Web (W3C) em http://www.w3.org/TR/1999/REC-xslt-19991116."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_3_1.cpp)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_3_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_3_1.vb)]"
  syntax:
    content: public const string XmlDsigXsltTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  id: XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o algoritmo de transformação de licença utilizado para normalizar XrML licenças assinaturas."
  remarks: "O valor do campo XmlLicenseTransformUrl é &quot;urn: mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform&quot; utilizar este campo para comodamente fornecer um valor para um dos atributos de um elemento utilizado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlLicenseTransform>classe implementa a transformação descrita pelo campo de XmlLicenseTransformUrl.</xref:System.Security.Cryptography.Xml.XmlLicenseTransform>"
  syntax:
    content: public const string XmlLicenseTransformUrl;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
- uid: System.Security.Cryptography.Xml.Reference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
- uid: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
  parent: System
  isExternal: true
  name: Func<SignedXml,Boolean>
  nameWithType: Func<SignedXml,Boolean>
  fullName: System.Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.SignedXml
    name: SignedXml
    nameWithType: SignedXml
    fullName: SignedXml
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml
  nameWithType: SignedXml.SignedXml
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject
  nameWithType: SignedXml.AddObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference
  nameWithType: SignedXml.AddReference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature
  nameWithType: SignedXml.CheckSignature
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey
  nameWithType: SignedXml.CheckSignatureReturningKey
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedXml.ComputeSignature
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement
  nameWithType: SignedXml.GetIdElement
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey
  nameWithType: SignedXml.GetPublicKey
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml
  nameWithType: SignedXml.GetXml
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml
  nameWithType: SignedXml.LoadXml
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
- uid: System.Security.Cryptography.Xml.SignedXml.Signature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
