### YamlMime:ManagedReference
items:
- uid: System.Net.AuthenticationManager
  id: AuthenticationManager
  children:
  - System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.CredentialPolicy
  - System.Net.AuthenticationManager.CustomTargetNameDictionary
  - System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.RegisteredModules
  - System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.Unregister(System.String)
  langs:
  - csharp
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: System.Net.AuthenticationManager
  type: Class
  summary: "Gere os módulos de autenticação chamados durante o processo de autenticação de cliente."
  remarks: "AuthenticationManager é uma classe estática que gere os módulos de autenticação que utiliza uma aplicação. Quando é efetuado um pedido para recursos protegidos, as chamadas de AuthenticationManager o <xref:System.Net.AuthenticationManager.Authenticate%2A>método para obter um <xref:System.Net.Authorization>instância para utilizar em pedidos subsequentes.</xref:System.Net.Authorization> </xref:System.Net.AuthenticationManager.Authenticate%2A>       O AuthenticationManager consulta cada módulo registado autenticação ao chamar o <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>método para cada módulo.</xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> O módulo de autenticação primeiro para devolver uma <xref:System.Net.Authorization>instância é utilizada para autenticar o pedido.</xref:System.Net.Authorization>       Negociação de módulos que fornecem o resumo básico,, NTLM, e tipos de autenticação do Kerberos estão registados com o AuthenticationManager por predefinição. Módulos de autenticação adicional que implementam o <xref:System.Net.IAuthenticationModule>interface pode ser adicionada utilizando o <xref:System.Net.AuthenticationManager.Register%2A>método.</xref:System.Net.AuthenticationManager.Register%2A> </xref:System.Net.IAuthenticationModule> Módulos de autenticação são denominados pela ordem em que foram adicionados à lista.      > [!NOTE] > O Kerberos e a negociar tipo de autenticação não é suportado no Windows 95/98 ou o Windows NT 4.0."
  example:
  - >-
    [!code-cs[System.Net.Authentication#1](~/add/codesnippet/csharp/t-system.net.authenticat_0_1.cs)]
     [!code-cpp[System.Net.Authentication#1](~/add/codesnippet/cpp/t-system.net.authenticat_0_1.cpp)]
     [!code-vb[System.Net.Authentication#1](~/add/codesnippet/visualbasic/t-system.net.authenticat_0_1.vb)]
  syntax:
    content: public class AuthenticationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  id: Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Chama o módulo cada autenticação registado para localizar o módulo primeiro que possa responder ao pedido de autenticação."
  remarks: "As chamadas de método de autenticar o <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>método em cada módulo registado autenticação até que um módulo responde com uma <xref:System.Net.Authorization>instância.</xref:System.Net.Authorization> </xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>       O primeiro <xref:System.Net.Authorization>instância devolvida é utilizada para autenticar o pedido.</xref:System.Net.Authorization> Se nenhum módulo de autenticação pode autenticar o pedido, o método Authenticate devolve `null`.       Módulos de autenticação são designadas por ordem na qual estão registados com <xref:System.Net.AuthenticationManager>.</xref:System.Net.AuthenticationManager>"
  syntax:
    content: public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: challenge
      type: System.String
      description: "O desafio devolvido pelo recurso de Internet."
    - id: request
      type: System.Net.WebRequest
      description: "O <xref:System.Net.WebRequest>que iniciou o desafio de autenticação.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "O <xref:System.Net.ICredentials>associada a este pedido.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Uma instância do <xref href=&quot;System.Net.Authorization&quot;> </xref> classe que contém o resultado da tentativa de autorização. Se não houver nenhum módulo de autenticação para responder ao desafio, este método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.Authenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>challenge</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>request</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CredentialPolicy
  id: CredentialPolicy
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define a política de credencial a ser utilizado para pedidos de recursos através de <xref:System.Net.HttpWebRequest>classe.</xref:System.Net.HttpWebRequest>"
  remarks: "A política de credencial determina se deve enviar credenciais ao enviar um pedido para um recurso de rede, tal como o conteúdo de uma página Web. Se as credenciais são enviadas, servidores que exigem a autenticação de cliente podem tentar autenticar o cliente quando o pedido é recebido em vez de enviarem uma resposta com a indicação de que são necessárias credenciais do cliente. Embora isto guarda uma ida e volta ao servidor, deve ser balanceado contra o risco de segurança inerente no envio de credenciais em toda a rede. Quando o servidor de destino não necessita de autenticação de cliente é melhor para não enviar credenciais.       A política de credencial que será chamada apenas para pedidos que especifique credenciais ou utilizam um <xref:System.Net.WebProxy>objeto que especifica as credenciais.</xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates setting the credential policy.  \n  \n [!code-cpp[NclCredPolicy#2](~/add/codesnippet/cpp/p-system.net.authenticat_1_1.cpp)]\n [!code-cs[NclCredPolicy#2](~/add/codesnippet/csharp/p-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }
    return:
      type: System.Net.ICredentialPolicy
      description: "Um objeto que implementa o <xref href=&quot;System.Net.ICredentialPolicy&quot;> </xref> interface que determina se as credenciais são enviadas com pedidos. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.CredentialPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  id: CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o dicionário que contém nomes de principais de serviço (SPNs) que são utilizados para identificar anfitriões durante a autenticação Kerberos para pedidos efetuados com <xref:System.Net.WebRequest>e respetivas classes derivadas.</xref:System.Net.WebRequest>"
  remarks: "Um SPN é um nome pelo qual um cliente identifica de forma exclusiva uma instância de um serviço ou aplicação num servidor para fins de autenticação mútua. A autenticação mútua for solicitada por predefinição, e pode exigi-lo definindo <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>para <xref:System.Net.Security.AuthenticationLevel>do seu pedido.</xref:System.Net.Security.AuthenticationLevel> </xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>       Quando um <xref:System.Net.WebRequest>requer autenticação mútua, o SPN para o destino tem de ser fornecido pelo cliente.</xref:System.Net.WebRequest> Se souber o SPN, pode adicioná-lo para o CustomTargetNameDictionary antes de enviar o pedido. Se não adicionou informações do SPN para este dicionário o <xref:System.Net.AuthenticationManager>utiliza o <xref:System.Net.WebRequest.RequestUri%2A>método para compor o SPN provavelmente; no entanto, este é um valor calculado e poderão estar incorreto.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Net.AuthenticationManager> Se a autenticação mútua é tentada e falha, pode verificar o dicionário para determinar o SPN calculado. Não existem SPN introduzido na dicionário se o protocolo de autenticação não suporta a autenticação mútua.       Para adicionar um valor SPN para este dicionário, utilize o <xref:System.Uri.AbsoluteUri%2A>do <xref:System.Net.WebRequest.RequestUri%2A>como a chave.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Uri.AbsoluteUri%2A> Internamente, a chave é truncada para incluir o <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>e o <xref:System.Uri.Port%2A>se não é a predefinição porta</xref:System.Uri.Port%2A> </xref:System.Uri.Host%2A> </xref:System.Uri.Scheme%2A>      > [!NOTE] > Aceder a métodos e propriedades do CustomTargetNameDictionary requer <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> sem restrições      > [!NOTE] > A autenticação Kerberos quando é efetuada através de um proxy, o proxy e o nome de anfitrião ultimate tem de ser resolvidas para um SPN. A resolução do nome de proxy está protegida por um tempo limite. Resolução do nome do anfitrião ultimate para um SPN requer uma pesquisa DNS e não existe nenhum limite de tempo diretamente associada esta operação. Por conseguinte operações síncronas poderão demorar mais tempo para o tempo limite. Para ultrapassar isto, adicione prefixos de URI do anfitrião ultimate para a cache SPN antes de efetuar pedidos ao mesmo.       Versão 3.5 SP1 está predefinida para especificar o nome do anfitrião utilizado no URL do pedido no SPN em troca da autenticação NTLM (do LAN Manager de NT) quando a propriedade CustomTargetNameDictionary não está definida. O nome do anfitrião utilizado no URL do pedido pode ser diferente do cabeçalho de anfitrião especificado no <xref:System.Net.HttpRequestHeader?displayProperty=fullName>no pedido do cliente.</xref:System.Net.HttpRequestHeader?displayProperty=fullName> O nome do anfitrião utilizado no URL do pedido pode ser diferente do nome de anfitrião real do servidor, o nome da máquina do servidor, o endereço IP do computador ou o endereço de loopback. Nestes casos, o Windows irá falhar o pedido de autenticação. Para resolver o problema, poderá ter de notificar o Windows que o nome do anfitrião utilizado no URL do pedido do cliente (&quot;contoso&quot;, por exemplo) do pedido é, na verdade, um nome alternativo para o computador local."
  example:
  - "The following code example demonstrates displaying the contents of the CustomTargetNameDictionary.  \n  \n [!code-cpp[NclCredPolicy#5](~/add/codesnippet/cpp/p-system.net.authenticat_0_1.cpp)]\n [!code-cs[NclCredPolicy#5](~/add/codesnippet/csharp/p-system.net.authenticat_0_1.cs)]"
  syntax:
    content: public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Um gravável <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> que contém os valores SPN de chaves compostas de informações do anfitrião."
  overload: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  id: PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Pré-autentica um pedido."
  remarks: "Se o módulo de autenticação pode preauthenticate o pedido, o método PreAuthenticate devolve uma instância de autenticação e envia as informações de autorização para o servidor preventivamente em vez de aguardar que o recurso emitir um desafio. Este comportamento é descrito na secção 3.3 RFC 2617 (autenticação HTTP: básico e autenticação de acesso de texto implícita). Módulos de autenticação que suportam pré-autenticação permitir que os clientes melhorar a eficiência de servidor, evitando extra ida e volta causada por desafios de autenticação.       Conjunto de pedidos de módulos de autorização que podem preauthenticate o <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>propriedade `true`.</xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "A <xref:System.Net.WebRequest>a um recurso de Internet.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "O <xref:System.Net.ICredentials>associado ao pedido.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Uma instância do <xref href=&quot;System.Net.Authorization&quot;> </xref> classe se o pedido pode ser pré-autenticada; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. If <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.AuthenticationManager.PreAuthenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  id: Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Regista um módulo de autenticação com o Gestor de autenticação."
  remarks: "O método de registo adiciona módulos de autenticação até ao fim da lista de módulos chamado <xref:System.Net.AuthenticationManager.Authenticate%2A>método.</xref:System.Net.AuthenticationManager.Authenticate%2A> Módulos de autenticação são denominados pela ordem em que foram adicionados à lista. Se um módulo com o mesmo <xref:System.Net.IAuthenticationModule.AuthenticationType%2A>é já registado, este método Remove o módulo registado e adiciona `authenticationModule` ao fim da lista.</xref:System.Net.IAuthenticationModule.AuthenticationType%2A>"
  example:
  - "The following example registers an authentication module with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static void Register (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "O <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> para registar com o Gestor de autenticação."
  overload: System.Net.AuthenticationManager.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.RegisteredModules
  id: RegisteredModules
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém uma lista de módulos de autenticação que são registados com o Gestor de autenticação."
  remarks: "A propriedade RegisteredModules fornece um <xref:System.Collections.IEnumerator>registado de instância que permite que a lista de módulos de autenticação a ser lido.</xref:System.Collections.IEnumerator> O <xref:System.Net.AuthenticationManager.Register%2A>método adiciona módulos para a lista e o <xref:System.Net.AuthenticationManager.Unregister%2A>método remove módulos do mesmo.</xref:System.Net.AuthenticationManager.Unregister%2A> </xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the RegisteredModules property to get a list of authentication modules that are registered with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#8](~/add/codesnippet/csharp/p-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Authentication#8](~/add/codesnippet/cpp/p-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Authentication#8](~/add/codesnippet/visualbasic/p-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static System.Collections.IEnumerator RegisteredModules { get; }
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que permite que os módulos de autenticação registado a ser lido.</xref:System.Collections.IEnumerator>"
  overload: System.Net.AuthenticationManager.RegisteredModules*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  id: Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Remove o módulo de autenticação especificado na lista de módulos registados."
  remarks: "O método Unregister remove o módulo de autenticação especificado na lista de módulos de autenticação chamado <xref:System.Net.AuthenticationManager.Authenticate%2A>método.</xref:System.Net.AuthenticationManager.Authenticate%2A> O módulo tem de ter sido adicionado à lista, utilizando o <xref:System.Net.AuthenticationManager.Register%2A>método para que possa ser removido da lista.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the Unregister method to remove the specified authentication module from the list of registered modules. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_0_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_0_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_0_1.vb)]"
  syntax:
    content: public static void Unregister (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "O <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> para remover da lista de módulos registados."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O especificada <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> não está registado."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  id: Unregister(System.String)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Remove os módulos de autenticação com o esquema de autenticação especificado na lista de módulos registados."
  remarks: "O <xref:System.Net.AuthenticationManager.Unregister%2A>método Remove o módulo de autenticação com o esquema de autenticação especificado na lista de módulos de autenticação chamado <xref:System.Net.AuthenticationManager.Authenticate%2A>método.</xref:System.Net.AuthenticationManager.Authenticate%2A> </xref:System.Net.AuthenticationManager.Unregister%2A> O módulo tem de ter sido adicionado à lista, utilizando o <xref:System.Net.AuthenticationManager.Register%2A>método para que possa ser removido da lista.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.  \n  \n [!code-vb[AuthenticationManager_UnRegister2#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_1_1.vb)]\n [!code-cpp[AuthenticationManager_UnRegister2#2](~/add/codesnippet/cpp/m-system.net.authenticat_1_1.cpp)]\n [!code-cs[AuthenticationManager_UnRegister2#2](~/add/codesnippet/csharp/m-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static void Unregister (string authenticationScheme);
    parameters:
    - id: authenticationScheme
      type: System.String
      description: "O esquema de autenticação do módulo para remover."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um módulo para este esquema de autenticação não está registado."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
- uid: System.Net.Authorization
  parent: System.Net
  isExternal: false
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.AuthenticationManager.CredentialPolicy
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
- uid: System.Net.ICredentialPolicy
  parent: System.Net
  isExternal: false
  name: ICredentialPolicy
  nameWithType: ICredentialPolicy
  fullName: System.Net.ICredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
- uid: System.Net.IAuthenticationModule
  parent: System.Net
  isExternal: false
  name: IAuthenticationModule
  nameWithType: IAuthenticationModule
  fullName: System.Net.IAuthenticationModule
- uid: System.Net.AuthenticationManager.RegisteredModules
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
- uid: System.Net.AuthenticationManager.Authenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: AuthenticationManager.Authenticate
- uid: System.Net.AuthenticationManager.CredentialPolicy*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate
  nameWithType: AuthenticationManager.PreAuthenticate
- uid: System.Net.AuthenticationManager.Register*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register
  nameWithType: AuthenticationManager.Register
- uid: System.Net.AuthenticationManager.RegisteredModules*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
- uid: System.Net.AuthenticationManager.Unregister*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister
  nameWithType: AuthenticationManager.Unregister
