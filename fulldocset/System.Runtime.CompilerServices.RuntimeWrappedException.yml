### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.RuntimeWrappedException
  id: RuntimeWrappedException
  children:
  - System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  langs:
  - csharp
  name: RuntimeWrappedException
  nameWithType: RuntimeWrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException
  type: Class
  summary: "Encapsula num wrapper uma exceção que não deriva da <xref:System.Exception>classe.</xref:System.Exception> Esta classe não pode ser herdada."
  remarks: "Nalguns idiomas, tais como C++, permitem-lhe gerar exceções de qualquer tipo gerido.  Outros idiomas, tais como Microsoft c# e Visual Basic, requerem que todas as exceções iniciadas de derivar da <xref:System.Exception>classe.</xref:System.Exception>  Para manter a compatibilidade entre idiomas, o language runtime (CLR) encapsula num wrapper objetos que deriva <xref:System.Exception>num objeto RuntimeWrappedException.</xref:System.Exception>       Pode utilizar o <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>classe para especificar se as exceções devem ser apresentadas encapsuladas dentro blocos catch e filtros de exceção para uma assemblagem.</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  Muitos em compiladores de idiomas, incluindo compilers Microsoft c# e Visual Basic, aplicam-se este atributo por predefinição, para especificar o comportamento de encapsulamento de aplicações.       Tenha em atenção que o tempo de execução ainda encapsula num wrapper exceções, mesmo se utilizar o <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>classe para especificar que não pretende moldado.</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  Neste caso, as exceções são e não encapsuladas apenas dentro blocos catch ou filtros de excepção."
  example:
  - "The following code example demonstrates how to throw a <xref:System.String> object as an exception in C++ and catch it using a RuntimeWrappedException object.  \n  \n [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/add/codesnippet/cpp/t-system.runtime.compile_12_1.cpp)]"
  syntax:
    content: 'public sealed class RuntimeWrappedException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Define o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto com informações sobre a exceção."
  remarks: "Conjuntos de método a invocar GetObjectData um <xref:System.Runtime.Serialization.SerializationInfo>objeto com todos os dados de objeto de exceção visada para a serialização.</xref:System.Runtime.Serialization.SerializationInfo> Durante a desserialização, a exceção é reconstituted do `SerializationInfo` transmitidos através do fluxo."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto que contém os dados de objecto serializado sobre a exceção que está a ser emitida."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O <xref:System.Runtime.Serialization.StreamingContext>objeto que contém a nível contextual das informações sobre a origem ou de destino.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  id: WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Obtém o objeto que foi encapsulado pelo <xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;> </xref> objeto."
  remarks: "A propriedade WrappedException obtém um objeto que foi emitido como uma exceção a partir de um idioma que permite que as exceções que deriva da <xref:System.Exception>classe.</xref:System.Exception>"
  syntax:
    content: public object WrappedException { get; }
    return:
      type: System.Object
      description: "O objeto que foi encapsulado pelo <xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;> </xref> objeto."
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData
  nameWithType: RuntimeWrappedException.GetObjectData
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
