### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.RuntimeWrappedException
  id: RuntimeWrappedException
  children:
  - System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  langs:
  - csharp
  name: RuntimeWrappedException
  nameWithType: RuntimeWrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException
  type: Class
  summary: "Wraps an exception that does not derive from the &lt;xref:System.Exception&gt; class. This class cannot be inherited."
  remarks: "Some languages, such as C++, allow you to throw exceptions of any managed type.  Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the <xref:System.Exception> class.  To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from <xref:System.Exception> in a RuntimeWrappedException object.       You can use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.  Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.       Note that the runtime still wraps exceptions even if you use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify that you do not want them wrapped.  In this case, exceptions are unwrapped only inside catch blocks or exception filters."
  example:
  - "The following code example demonstrates how to throw a <xref:System.String> object as an exception in C++ and catch it using a RuntimeWrappedException object.  \n  \n [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/add/codesnippet/CPP/t-system.runtime.compile_12_1.cpp)]"
  syntax:
    content: 'public sealed class RuntimeWrappedException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Sets the <see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot;></see> object with information about the exception."
  remarks: "The GetObjectData method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The  object that holds the serialized object data about the exception being thrown."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The <xref:System.Runtime.Serialization.StreamingContext> object that contains contextual information about the source or destination."
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The info parameter is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  id: WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Gets the object that was wrapped by the <see cref=&quot;T:System.Runtime.CompilerServices.RuntimeWrappedException&quot;></see> object."
  remarks: "The WrappedException property gets an object that was thrown as an exception from a language that allows exceptions that do not derive from the <xref:System.Exception> class."
  syntax:
    content: public object WrappedException { get; }
    return:
      type: System.Object
      description: "The object that was wrapped by the <see cref=&quot;T:System.Runtime.CompilerServices.RuntimeWrappedException&quot;></see> object."
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData
  nameWithType: RuntimeWrappedException.GetObjectData
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
