### YamlMime:ManagedReference
items:
- uid: System.Drawing.IconConverter
  id: IconConverter
  children:
  - System.Drawing.IconConverter.#ctor
  - System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: IconConverter
  nameWithType: IconConverter
  fullName: System.Drawing.IconConverter
  type: Class
  summary: "Converts an <xref href=&quot;System.Drawing.Icon&quot;></xref> object from one data type to another. Access this class through the <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref> object."
  syntax:
    content: 'public class IconConverter : System.ComponentModel.ExpandableObjectConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.ExpandableObjectConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.IconConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: IconConverter()
  nameWithType: IconConverter.IconConverter()
  fullName: System.Drawing.IconConverter.IconConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.IconConverter&quot;></xref> class."
  syntax:
    content: public IconConverter ();
    parameters: []
  overload: System.Drawing.IconConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines whether this <xref href=&quot;System.Drawing.IconConverter&quot;></xref> can convert an instance of a specified type to an <xref href=&quot;System.Drawing.Icon&quot;></xref>, using the specified context."
  remarks: "This method returns `true` only if `sourceType` is equal to a byte array."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type> that specifies the type you want to convert from."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this <xref href=&quot;System.Drawing.IconConverter&quot;></xref> can perform the conversion; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.IconConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines whether this <xref href=&quot;System.Drawing.IconConverter&quot;></xref> can convert an <xref href=&quot;System.Drawing.Icon&quot;></xref> to an instance of a specified type, using the specified context."
  remarks: "This method returns `true` only if `destinationType` is equal to a byte array or string."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type> that specifies the type you want to convert to."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this <xref href=&quot;System.Drawing.IconConverter&quot;></xref> can perform the conversion; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.IconConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts a specified object to an <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> that holds information about a specific culture."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to be converted."
    return:
      type: System.Object
      description: "If this method succeeds, it returns the <xref href=&quot;System.Drawing.Icon&quot;></xref> that it created by converting the specified object. Otherwise, it throws an exception."
  overload: System.Drawing.IconConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion could not be performed."
  platform:
  - net462
- uid: System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts an <xref href=&quot;System.Drawing.Icon&quot;></xref> (or an object that can be cast to an <xref href=&quot;System.Drawing.Icon&quot;></xref>) to a specified type."
  remarks: "The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`. If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object that specifies formatting conventions used by a particular culture."
    - id: value
      type: System.Object
      description: "The object to convert. This object should be of type icon or some type that can be cast to <xref href=&quot;System.Drawing.Icon&quot;></xref>."
    - id: destinationType
      type: System.Type
      description: "The type to convert the icon to."
    return:
      type: System.Object
      description: "This method returns the converted object."
  overload: System.Drawing.IconConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion could not be performed."
  platform:
  - net462
references:
- uid: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: System.ComponentModel.ExpandableObjectConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Drawing.IconConverter.#ctor
  parent: System.Drawing.IconConverter
  isExternal: false
  name: IconConverter()
  nameWithType: IconConverter.IconConverter()
  fullName: System.Drawing.IconConverter.IconConverter()
- uid: System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.IconConverter.#ctor*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: IconConverter
  nameWithType: IconConverter.IconConverter
- uid: System.Drawing.IconConverter.CanConvertFrom*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: IconConverter.CanConvertFrom
- uid: System.Drawing.IconConverter.CanConvertTo*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: IconConverter.CanConvertTo
- uid: System.Drawing.IconConverter.ConvertFrom*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: IconConverter.ConvertFrom
- uid: System.Drawing.IconConverter.ConvertTo*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertTo
  nameWithType: IconConverter.ConvertTo
