### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesignerHost
  id: IDesignerHost
  children:
  - System.ComponentModel.Design.IDesignerHost.Activate
  - System.ComponentModel.Design.IDesignerHost.Activated
  - System.ComponentModel.Design.IDesignerHost.Container
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  - System.ComponentModel.Design.IDesignerHost.Deactivated
  - System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  - System.ComponentModel.Design.IDesignerHost.InTransaction
  - System.ComponentModel.Design.IDesignerHost.LoadComplete
  - System.ComponentModel.Design.IDesignerHost.Loading
  - System.ComponentModel.Design.IDesignerHost.RootComponent
  - System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  - System.ComponentModel.Design.IDesignerHost.TransactionClosed
  - System.ComponentModel.Design.IDesignerHost.TransactionClosing
  - System.ComponentModel.Design.IDesignerHost.TransactionDescription
  - System.ComponentModel.Design.IDesignerHost.TransactionOpened
  - System.ComponentModel.Design.IDesignerHost.TransactionOpening
  langs:
  - csharp
  name: IDesignerHost
  nameWithType: IDesignerHost
  fullName: System.ComponentModel.Design.IDesignerHost
  type: Interface
  summary: "Provides an interface for managing designer transactions and components."
  remarks: "IDesignerHost is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.       The .NET Framework does not provide an implementation of this interface. The interface is implemented by development tools that support designers."
  example:
  - "The following example code demonstrates how to obtain the IDesignerHost service interface from a designer or sited component.  \n  \n [!code-cs[DesignerHostAcquisition#1](~/add/codesnippet/csharp/t-system.componentmodel._54_1.cs)]\n [!code-cpp[DesignerHostAcquisition#1](~/add/codesnippet/cpp/t-system.componentmodel._54_1.cpp)]\n [!code-vb[DesignerHostAcquisition#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_1.vb)]  \n  \n The following example code demonstrates using the IDesignerHost interface to list project components.  \n  \n [!code-cs[IDesignerHostExample#1](~/add/codesnippet/csharp/t-system.componentmodel._54_2.cs)]\n [!code-cpp[IDesignerHostExample#1](~/add/codesnippet/cpp/t-system.componentmodel._54_2.cpp)]\n [!code-vb[IDesignerHostExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  id: Activate
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Activates the designer that this host is hosting."
  remarks: "Designers should be activated before they display their user interface."
  syntax:
    content: public void Activate ();
    parameters: []
  overload: System.ComponentModel.Design.IDesignerHost.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  id: Activated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Occurs when this designer is activated."
  remarks: "A designer is activated before it is displayed."
  syntax:
    content: public event EventHandler Activated;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Container
  id: Container
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the container for this designer host."
  remarks: "This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document. You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "The <xref href=&quot;System.ComponentModel.IContainer&quot;></xref> for this host."
  overload: System.ComponentModel.Design.IDesignerHost.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  id: CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Creates a component of the specified type and adds it to the design document."
  remarks: "If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.       This method does not specify a name for the component. The method creates the component and adds it to the designer container."
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass);
    parameters:
    - id: componentClass
      type: System.Type
      description: "The type of the component to create."
    return:
      type: System.ComponentModel.IComponent
      description: "The newly created component."
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  id: CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Creates a component of the specified type and name, and adds it to the design document."
  remarks: "If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.       This method creates the component and adds it to the designer container."
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);
    parameters:
    - id: componentClass
      type: System.Type
      description: "The type of the component to create."
    - id: name
      type: System.String
      description: "The name for the component."
    return:
      type: System.ComponentModel.IComponent
      description: "The newly created component."
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  id: CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Creates a <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality."
  remarks: "This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.       Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>."
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "A new instance of <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>. When you complete the steps in your transaction, you should call <xref:System.ComponentModel.Design.DesignerTransaction.Commit*> on this object."
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  id: CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Creates a <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description."
  remarks: "This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.       Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>."
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);
    parameters:
    - id: description
      type: System.String
      description: "A title or description for the newly created transaction."
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "A new <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>. When you have completed the steps in your transaction, you should call <xref:System.ComponentModel.Design.DesignerTransaction.Commit*> on this object."
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  id: Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Occurs when this designer is deactivated."
  remarks: "A designer is deactivated just before it is no longer displayed."
  syntax:
    content: public event EventHandler Deactivated;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  id: DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Destroys the specified component and removes it from the designer container."
  syntax:
    content: public void DestroyComponent (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "The component to destroy."
  overload: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  id: GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the designer instance that contains the specified component."
  syntax:
    content: public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "The <xref href=&quot;System.ComponentModel.IComponent&quot;></xref> to retrieve the designer for."
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "An <xref href=&quot;System.ComponentModel.Design.IDesigner&quot;></xref>, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no designer for the specified component."
  overload: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets an instance of the specified, fully qualified type name."
  syntax:
    content: public Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "The name of the type to load."
    return:
      type: System.Type
      description: "The type object for the specified type name, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the type cannot be found."
  overload: System.ComponentModel.Design.IDesignerHost.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  id: InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets a value indicating whether the designer host is currently in a transaction."
  syntax:
    content: public bool InTransaction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a transaction is in progress; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.IDesignerHost.InTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  id: LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Occurs when this designer completes loading its document."
  remarks: "This event occurs after a designer completes loading its document."
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  id: Loading
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets a value indicating whether the designer host is currently loading the document."
  syntax:
    content: public bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the designer host is currently loading the document; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.IDesignerHost.Loading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  id: RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the instance of the base class used as the root component for the current design."
  remarks: "This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user&quot;s derived class extends."
  syntax:
    content: public System.ComponentModel.IComponent RootComponent { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "The instance of the root component class."
  overload: System.ComponentModel.Design.IDesignerHost.RootComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  id: RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the fully qualified name of the class being designed."
  syntax:
    content: public string RootComponentClassName { get; }
    return:
      type: System.String
      description: "The fully qualified name of the base component class."
  overload: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  id: TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adds an event handler for the TransactionClosed event."
  remarks: "This event occurs after a transaction is closed.       A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed."
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  id: TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adds an event handler for the TransactionClosing event."
  remarks: "This event occurs just before a transaction is completed.       A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed."
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  id: TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the description of the current transaction."
  remarks: "The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>."
  syntax:
    content: public string TransactionDescription { get; }
    return:
      type: System.String
      description: "A description of the current transaction."
  overload: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  id: TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adds an event handler for the TransactionOpened event."
  remarks: "This event occurs when a transaction has begun.       A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed."
  syntax:
    content: public event EventHandler TransactionOpened;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  id: TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adds an event handler for the TransactionOpening event."
  remarks: "This event occurs when a transaction is about to begin.       This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun. The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made. Subsequent calls do not generate this event until all transaction objects have been disposed."
  syntax:
    content: public event EventHandler TransactionOpening;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.IDesignerHost.Container
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
- uid: System.ComponentModel.Design.DesignerTransaction
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransaction
  nameWithType: DesignerTransaction
  fullName: System.ComponentModel.Design.DesignerTransaction
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
- uid: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransactionCloseEventHandler
  nameWithType: DesignerTransactionCloseEventHandler
  fullName: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
- uid: System.ComponentModel.Design.IDesignerHost.Activate*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate
  nameWithType: IDesignerHost.Activate
- uid: System.ComponentModel.Design.IDesignerHost.Container*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent
  nameWithType: IDesignerHost.CreateComponent
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction
  nameWithType: IDesignerHost.CreateTransaction
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent
  nameWithType: IDesignerHost.DestroyComponent
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner
  nameWithType: IDesignerHost.GetDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType
  nameWithType: IDesignerHost.GetType
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
- uid: System.ComponentModel.Design.IDesignerHost.Loading*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
