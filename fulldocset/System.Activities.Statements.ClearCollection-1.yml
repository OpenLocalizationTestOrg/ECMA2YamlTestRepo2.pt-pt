### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.ClearCollection`1
  id: ClearCollection`1
  children:
  - System.Activities.Statements.ClearCollection`1.#ctor
  - System.Activities.Statements.ClearCollection`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Statements.ClearCollection`1.Collection
  - System.Activities.Statements.ClearCollection`1.Execute(System.Activities.CodeActivityContext)
  langs:
  - csharp
  name: ClearCollection<T>
  nameWithType: ClearCollection<T>
  fullName: System.Activities.Statements.ClearCollection<T>
  type: Class
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Collection")]

      public sealed class ClearCollection<T> : System.Activities.CodeActivity
    typeParameters:
    - id: T
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.CodeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.CodeActivity.Implementation
  - System.Activities.CodeActivity.ImplementationVersion
  - System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Statements.ClearCollection`1.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.ClearCollection`1
  langs:
  - csharp
  name: ClearCollection()
  nameWithType: ClearCollection<T>.ClearCollection()
  fullName: System.Activities.Statements.ClearCollection<T>.ClearCollection()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public ClearCollection ();
    parameters: []
  overload: System.Activities.Statements.ClearCollection`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ClearCollection`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Statements.ClearCollection`1
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: ClearCollection<T>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Statements.ClearCollection<T>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "To be added."
  overload: System.Activities.Statements.ClearCollection`1.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ClearCollection`1.Collection
  id: Collection
  parent: System.Activities.Statements.ClearCollection`1
  langs:
  - csharp
  name: Collection
  nameWithType: ClearCollection<T>.Collection
  fullName: System.Activities.Statements.ClearCollection<T>.Collection
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Activities.InArgument<System.Collections.Generic.ICollection<T>> Collection { get; set; }
    return:
      type: System.Activities.InArgument{System.Collections.Generic.ICollection{T}}
      description: "To be added."
  overload: System.Activities.Statements.ClearCollection`1.Collection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ClearCollection`1.Execute(System.Activities.CodeActivityContext)
  id: Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Statements.ClearCollection`1
  langs:
  - csharp
  name: Execute(CodeActivityContext)
  nameWithType: ClearCollection<T>.Execute(CodeActivityContext)
  fullName: System.Activities.Statements.ClearCollection<T>.Execute(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.ClearCollection`1.Execute*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.CodeActivity
  isExternal: false
  name: System.Activities.CodeActivity
- uid: System.Activities.Statements.ClearCollection`1.#ctor
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: ClearCollection()
  nameWithType: ClearCollection<T>.ClearCollection()
  fullName: System.Activities.Statements.ClearCollection<T>.ClearCollection()
- uid: System.Activities.Statements.ClearCollection`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: ClearCollection<T>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Statements.ClearCollection<T>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Statements.ClearCollection`1.Collection
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: Collection
  nameWithType: ClearCollection<T>.Collection
  fullName: System.Activities.Statements.ClearCollection<T>.Collection
- uid: System.Activities.InArgument{System.Collections.Generic.ICollection{T}}
  parent: System.Activities
  isExternal: false
  name: InArgument<ICollection<T>>
  nameWithType: InArgument<ICollection<T>>
  fullName: System.Activities.InArgument<System.Collections.Generic.ICollection<T>>
  spec.csharp:
  - uid: System.Activities.InArgument`1
    name: InArgument
    nameWithType: InArgument
    fullName: InArgument<System.Collections.Generic.ICollection<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.ClearCollection`1.Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: Execute(CodeActivityContext)
  nameWithType: ClearCollection<T>.Execute(CodeActivityContext)
  fullName: System.Activities.Statements.ClearCollection<T>.Execute(CodeActivityContext)
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.Statements.ClearCollection`1.#ctor*
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: ClearCollection<T>
  nameWithType: ClearCollection<T>.ClearCollection<T>
- uid: System.Activities.Statements.ClearCollection`1.CacheMetadata*
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: CacheMetadata
  nameWithType: ClearCollection<T>.CacheMetadata
- uid: System.Activities.Statements.ClearCollection`1.Collection*
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: Collection
  nameWithType: ClearCollection<T>.Collection
- uid: System.Activities.Statements.ClearCollection`1.Execute*
  parent: System.Activities.Statements.ClearCollection`1
  isExternal: false
  name: Execute
  nameWithType: ClearCollection<T>.Execute
