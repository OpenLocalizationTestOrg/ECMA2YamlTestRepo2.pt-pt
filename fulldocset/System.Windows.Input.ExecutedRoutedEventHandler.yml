### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  id: ExecutedRoutedEventHandler
  langs:
  - csharp
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
  type: Delegate
  summary: "Representa o método que irá processar a <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> e <xref href=&quot;System.Windows.Input.CommandBinding.PreviewExecuted&quot;> </xref> os eventos encaminhados, bem como relacionada com eventos anexados."
  remarks: "Este delegado contém a lógica de implementação para um <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand>  Separar a lógica de implementação do comando permite que o comando para ser invocado a partir de diferentes origens e tipos e permite a centralização de lógica de comando.       Este delegado é também utilizado para <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>e <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>, que estão anexados a eventos no <xref:System.Windows.Input.CommandManager>classe que implementa grande parte da infraestrutura commanding.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Mas processadores mais práticos processará o <xref:System.Windows.Input.CommandBinding.Executed>eventos a partir de um determinado <xref:System.Windows.Input.CommandBinding>, em vez disso que funcionam no <xref:System.Windows.Input.CommandManager>nível.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       Dentro do <xref:System.Windows.Input.ExecutedRoutedEventArgs>, as seguintes propriedades são geralmente úteis quando escreve um processador de eventos para um evento encaminhado que resulta de um comando executado:- <xref:System.Windows.RoutedEventArgs.Source%2A>reporta o destino onde o comando foi executado.</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.Input.ExecutedRoutedEventArgs> Depois do comando for executado, pode também considerar a <xref:System.Windows.RoutedEventArgs.Source%2A>mais geralmente no encaminhados termos de eventos, como o objeto que gerou um evento encaminhado.</xref:System.Windows.RoutedEventArgs.Source%2A>      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>reporta o comando foi executado.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> Esta propriedade é útil se utilizar enlaces de comando e, se escrever os processadores que processam potencialmente vários comandos.      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>relatórios quaisquer parâmetros de comando específico que foram transmitidos pelo comando em execução.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> Nem todos os comandos utilizam ou esperam parâmetros específicos de comando.      - <xref:System.Windows.RoutedEventArgs.Handled%2A>relatórios se o evento encaminhado que resultaram do comando executado já foi processado por um elemento diferentes ao longo da rota.</xref:System.Windows.RoutedEventArgs.Handled%2A> Para os processadores de eventos encaminhados, é uma prática recomendada para os processadores que realizar o trabalho significativo ao processar o evento para definir <xref:System.Windows.RoutedEventArgs.Handled%2A>para `true`.</xref:System.Windows.RoutedEventArgs.Handled%2A> Isto impede processadores típicos para o evento a processar o evento novamente ainda mais ao longo da rota. Para obter mais informações sobre o processamento de eventos encaminhados, consulte [marcar os eventos encaminhados como Handled e processamento de classe](~/add/includes/ajax-current-ext-md.md).       Este delegado também representa os processadores para <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>e <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName>, que estão anexados a eventos no <xref:System.Windows.Input.CommandManager>classe que implementa grande parte da infraestrutura commanding.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Mas processadores mais práticos processará o <xref:System.Windows.Input.CommandBinding.Executed>eventos a partir de um determinado <xref:System.Windows.Input.CommandBinding>, em vez disso que funcionam no <xref:System.Windows.Input.CommandManager>nível.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       Para obter mais informações sobre commanding, consulte [descrição geral do Commanding](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example creates an ExecutedRoutedEventHandler that sets a visual property on the target when the command is executed. The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.  \n  \n [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/visualbasic/custom_routedcommand/window1.xaml.vb#custom_routedcommandhandlers)]\n [!code-cs[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/csharp/Custom_RoutedCommand/Window1.xaml.cs#custom_routedcommandhandlers)]"
  syntax:
    content: public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
