### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkCompatibilityPreferences
  id: FrameworkCompatibilityPreferences
  children:
  - System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  - System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  - System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  langs:
  - csharp
  name: FrameworkCompatibilityPreferences
  nameWithType: FrameworkCompatibilityPreferences
  fullName: System.Windows.FrameworkCompatibilityPreferences
  type: Class
  summary: "Contains properties that specify how an application should behave relative to WPF features that are in the PresentationFramework assembly."
  syntax:
    content: public static class FrameworkCompatibilityPreferences
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  id: AreInactiveSelectionHighlightBrushKeysSupported
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  fullName: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets a value that indicates whether the application should use the <xref:System.Windows.SystemColors.InactiveSelectionHighlightBrush*> and <xref:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush*> properties for the colors of inactive selected items."
  remarks: "The default value of this property depends which version of WPF that your app targets.  If your app targets WPF 4.0 or earlier, the default is `false`.  If your app targets WPF 4.5, the default is `true`.  If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.  After the value is read, you cannot change it again."
  syntax:
    content: public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the application should use the <xref:System.Windows.SystemColors.InactiveSelectionHighlightBrush*> and <xref:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush*> properties for the colors of inactive selected items; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  id: KeepTextBoxDisplaySynchronizedWithTextProperty
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  fullName: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets a value that indicates whether a data-bound <xref href=&quot;System.Windows.Controls.TextBox&quot;></xref> should display a string that is identical to the value of the source its <xref:System.Windows.Controls.TextBox.Text*> property"
  remarks: "The default value of this property depends which version of WPF that your app targets.  If your app targets WPF 4.0 or earlier, the default is `false`.  If your app targets WPF 4.5, the default is `true`.  If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.  After the value is read, you cannot change it again."
  syntax:
    content: public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a data-bound <xref href=&quot;System.Windows.Controls.TextBox&quot;></xref> should display a string that is identical to the value of the source its <xref:System.Windows.Controls.TextBox.Text*> property; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  id: ShouldThrowOnCopyOrCutFailure
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  fullName: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets a value that indicates whether a failed copy or cut operation in a <xref href=&quot;System.Windows.Controls.Primitives.TextBoxBase&quot;></xref> instance results in a <xref href=&quot;System.Runtime.InteropServices.ExternalException&quot;></xref>."
  remarks: "If a clipboard operation fails, such as with a **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** error, a corresponding <xref:System.Runtime.InteropServices.ExternalException> (which is a type of ExternalException) is thrown.       Because the Win32 `OpenClipboard` API acts globally, well-written applications should call the corresponding `CloseClipboard` API as soon as they have completed their clipboard operations. Otherwise, other applications running in the same session will be unable to access clipboard functions.       In WPF, such a denial of access to the clipboard is normally ignored silently. However, applications can opt to receive an `ExternalException` upon failure by setting the ShouldThrowOnCopyOrCutFailure flag to `true`. However, opting to receive exceptions also requires the application to handle <xref:System.Windows.Input.ApplicationCommands.Cut%2A> and <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands through a <xref:System.Windows.Input.CommandBinding>, and then apply that binding to all TextBoxBase controls (<xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox>)  in the application. The application should ensure that it handles ExternalExceptions resulting from copy and cut operations in the CommandBinding&quot;s Executed handler."
  syntax:
    content: public static bool ShouldThrowOnCopyOrCutFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a failed copy or cut operation in a <xref href=&quot;System.Windows.Controls.Primitives.TextBoxBase&quot;></xref> instance results in a <xref href=&quot;System.Runtime.InteropServices.ExternalException&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  fullName: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  fullName: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  fullName: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
