### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicDataExtensions
  id: DynamicDataExtensions
  children:
  - System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  - System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  - System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control@)
  - System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control@,System.String)
  - System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control@)
  - System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  - System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  - System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer@)
  - System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn@)
  - System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer@)
  - System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  - System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  langs:
  - csharp
  name: DynamicDataExtensions
  nameWithType: DynamicDataExtensions
  fullName: System.Web.DynamicData.DynamicDataExtensions
  type: Class
  summary: "Provides extension methods that are used by ASP.NET Dynamic Data."
  syntax:
    content: public static class DynamicDataExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  id: ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: ConvertEditedValue(IFieldFormattingOptions,String)
  nameWithType: DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returns the value provided by a user for a control that is being validated."
  remarks: "For information about formatting options, see the <xref:System.Web.DynamicData.IFieldFormattingOptions> type overview."
  example:
  - "The following example shows how to use the ConvertEditedValue method. The example gets user input from a field template that is configured to accept date-time data. In the DynamicData\\FieldTemplates\\DateTime_Edit.ascx.cs or DynamicData\\FieldTemplates\\DateTime_Edit.ascx.vb file, the method converts empty strings to `null`.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#3](~/add/codesnippet/csharp/1ef0bca6-aaf5-492d-acd1-_1.cs)]"
  syntax:
    content: public static object ConvertEditedValue (this System.Web.DynamicData.IFieldFormattingOptions formattingOptions, string value);
    parameters:
    - id: formattingOptions
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "The formatting options object, as defined by the <xref href=&quot;System.Web.DynamicData.IFieldFormattingOptions&quot;></xref> object."
    - id: value
      type: System.String
      description: "The input value to be converted."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string and the <xref:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull*> property of <code>formattingOptions</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>value</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string and matches the <xref:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText*> property of <code>formattingOptions</code>; otherwise, the unchanged value of <code>value</code>."
  overload: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  id: EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: EnablePersistedSelection(BaseDataBoundControl)
  nameWithType: DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
  fullName: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Enables selection to be persisted in data controls that support selection and paging."
  remarks: "In controls that extend <xref:System.Web.UI.WebControls.BaseDataBoundControl> and that support selection, paging, and sorting, calling this method enables the control to persist selection even when the selected row is not visible. For example, if the user selects a row and then pages to another page, or if the user sorts the data, the selected row remains selected. If this method is not called, selection is lost when the user pages or sorts.       The <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A> method calls EnablePersistedSelection."
  syntax:
    content: public static void EnablePersistedSelection (this System.Web.UI.WebControls.BaseDataBoundControl dataBoundControl);
    parameters:
    - id: dataBoundControl
      type: System.Web.UI.WebControls.BaseDataBoundControl
      description: "The data bound control."
  overload: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  id: ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: ExpandDynamicWhereParameters(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Expands dynamic filters into <xref uid=&quot;langword_csharp_Where&quot; name=&quot;Where&quot; href=&quot;&quot;></xref> parameters that are usable by the data source."
  remarks: "This method expands the values of the current instances of the <xref:System.Web.DynamicData.DynamicControlParameter> and <xref:System.Web.DynamicData.DynamicQueryStringParameter> controls into `Where` parameters that are usable in queries by the data source."
  syntax:
    content: public static void ExpandDynamicWhereParameters (this System.Web.DynamicData.IDynamicDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.DynamicData.IDynamicDataSource
      description: "The data source object."
  overload: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control@)
  id: FindDataSourceControl(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FindDataSourceControl(Control)
  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(Control)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returns the data source that is associated with the data control for the specified control."
  remarks: ''
  example:
  - "The following example shows how to find the containing data source control. In the example, the Dynamic Data page templates are copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The Insert.aspx file markup is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`, in which the FindDataSourceControl method is called to find the data source control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/891f3768-5749-4318-8a27-_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/891f3768-5749-4318-8a27-_2.aspx)]"
  syntax:
    content: public static System.Web.DynamicData.IDynamicDataSource FindDataSourceControl (this System.Web.UI.Control current);
    parameters:
    - id: current
      type: System.Web.UI.Control
      description: "A control inside the hierarchy of a data-bound control whose containing control you want to find."
    return:
      type: System.Web.DynamicData.IDynamicDataSource
      description: "The data source that is associated with the data control for the specified control."
  overload: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control@,System.String)
  id: FindFieldTemplate(System.Web.UI.Control@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FindFieldTemplate(Control,String)
  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(Control,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returns the field template for the specified column in the specified control&quot;s naming container."
  remarks: ''
  example:
  - "The following example shows how to find the text box control for a specified column name. In example, the Dynamic Data page templates are copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The Insert.aspx file markup is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`, in which the <xref:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl%2A> method is called to find a text box control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/a9a49ffb-dded-4e65-a1d7-_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/a9a49ffb-dded-4e65-a1d7-_2.aspx)]"
  syntax:
    content: public static System.Web.UI.Control FindFieldTemplate (this System.Web.UI.Control control, string columnName);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "The containing control."
    - id: columnName
      type: System.String
      description: "The name of the column."
    return:
      type: System.Web.UI.Control
      description: "The field template for the specified column in the specified control&quot;s naming container."
  overload: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control@)
  id: FindMetaTable(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FindMetaTable(Control)
  nameWithType: DynamicDataExtensions.FindMetaTable(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(Control)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returns the metatable object for the containing data control."
  remarks: ''
  example:
  - "The following example shows how to find the <xref:System.Web.DynamicData.MetaTable> object for a control. In the example, the Dynamic Data page templates are copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The Insert.aspx file markup is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`, in which the FindMetaTable method is called to find the <xref:System.Web.DynamicData.MetaTable> object.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/287a14db-c680-4865-9ec7-_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/287a14db-c680-4865-9ec7-_2.aspx)]"
  syntax:
    content: public static System.Web.DynamicData.MetaTable FindMetaTable (this System.Web.UI.Control current);
    parameters:
    - id: current
      type: System.Web.UI.Control
      description: "The current control."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "The metatable object for the containing data control."
  overload: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  id: FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FormatEditValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Formats the specified field value by using the specified formatting options."
  remarks: "The FormatEditValue method is like the <xref:System.Web.DynamicData.DynamicDataExtensions.FormatValue%2A> method, but it is used when the field is in edit mode."
  syntax:
    content: public static string FormatEditValue (this System.Web.DynamicData.IFieldFormattingOptions formattingOptions, object fieldValue);
    parameters:
    - id: formattingOptions
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "The <xref href=&quot;System.Web.DynamicData.IFieldFormattingOptions&quot;></xref> instance to use."
    - id: fieldValue
      type: System.Object
      description: "The field value to format."
    return:
      type: System.String
      description: "The field value that has been formatted by using the specified formatting options."
  overload: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  id: FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FormatValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Formats the specified field value by using the specified formatting options."
  syntax:
    content: public static string FormatValue (this System.Web.DynamicData.IFieldFormattingOptions formattingOptions, object fieldValue);
    parameters:
    - id: formattingOptions
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "The <xref href=&quot;System.Web.DynamicData.IFieldFormattingOptions&quot;></xref> instance to use."
    - id: fieldValue
      type: System.Object
      description: "The field value to format."
    return:
      type: System.String
      description: "The field value that has been formatted by using the specified formatting options."
  overload: System.Web.DynamicData.DynamicDataExtensions.FormatValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource@)
  id: GetDefaultValues(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetDefaultValues(IDataSource)
  nameWithType: DynamicDataExtensions.GetDefaultValues(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(IDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the collection of the default values for the specified data source."
  remarks: "The collection of default values is set by using the <xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A> or <xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> methods."
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,object> GetDefaultValues (this System.Web.UI.IDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.IDataSource
      description: "The data source for which to get the default values."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "The collection of default values that are associated with the <xref href=&quot;System.Web.UI.IDataSource&quot;></xref> object."
  overload: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer@)
  id: GetDefaultValues(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetDefaultValues(INamingContainer)
  nameWithType: DynamicDataExtensions.GetDefaultValues(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(INamingContainer)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the collection of the default values for the specified data control."
  remarks: "The collection of default values is set by using the <xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A> or <xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> methods."
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,object> GetDefaultValues (this System.Web.UI.INamingContainer control);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "The data control for which to get the default values."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "The collection of default values that are associated with the <xref href=&quot;System.Web.UI.INamingContainer&quot;></xref> object."
  overload: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn@)
  id: GetEnumType(System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetEnumType(MetaColumn)
  nameWithType: DynamicDataExtensions.GetEnumType(MetaColumn)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(MetaColumn)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the type of the enumeration that represents the column."
  remarks: "The column represents an enumeration if the underlying type is an enumeration or if the column is annotated in the entity partial class with the <xref:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute> attribute."
  syntax:
    content: public static Type GetEnumType (this System.Web.DynamicData.MetaColumn column);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "The column to get the enumeration type for."
    return:
      type: System.Type
      description: "The type of the enumeration that represents the column if the underlying type is an enumeration; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.DynamicData.DynamicDataExtensions.GetEnumType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource@)
  id: GetMetaTable(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetMetaTable(IDataSource)
  nameWithType: DynamicDataExtensions.GetMetaTable(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(IDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the metadata for a table in the specified data source object."
  remarks: "The table metadata was set by using the <xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A> or <xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> method."
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetMetaTable (this System.Web.UI.IDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.IDataSource
      description: "The data source object for which to get the table metadata."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "The table metadata associated with the <xref href=&quot;System.Web.UI.IDataSource&quot;></xref> object."
  overload: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer@)
  id: GetMetaTable(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetMetaTable(INamingContainer)
  nameWithType: DynamicDataExtensions.GetMetaTable(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(INamingContainer)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the table metadata for the specified data control."
  remarks: "The table metadata was set by using the <xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A> or <xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> method."
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetMetaTable (this System.Web.UI.INamingContainer control);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "The data control for which to get the table metadata."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "The table metadata that is associated with the <xref href=&quot;System.Web.UI.INamingContainer&quot;></xref> object."
  overload: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource@)
  id: GetTable(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetTable(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.GetTable(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetTable(IDynamicDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returns the <xref href=&quot;System.Web.DynamicData.MetaTable&quot;></xref> object that is associated with the specified data source control."
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetTable (this System.Web.DynamicData.IDynamicDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.DynamicData.IDynamicDataSource
      description: "The data source control."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "The table that is associated with the specified data source control."
  overload: System.Web.DynamicData.DynamicDataExtensions.GetTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.DynamicData.IDynamicDataSource.EntitySetName*> property of <code>dataSource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Web.DynamicData.IDynamicDataSource.ContextType*> property of <code>dataSource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  id: LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: LoadWith(LinqDataSource)
  nameWithType: DynamicDataExtensions.LoadWith(LinqDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWith(LinqDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  syntax:
    content: public static void LoadWith<TEntity> (this System.Web.UI.WebControls.LinqDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.LinqDataSource
      description: "To be added."
  overload: System.Web.DynamicData.DynamicDataExtensions.LoadWith<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  id: LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: LoadWithForeignKeys(LinqDataSource,Type)
  nameWithType: DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Sets the <xref href=&quot;System.Data.Linq.DataLoadOptions&quot;></xref> value of a LINQ-to-SQL data source to force all the foreign-key entities to be loaded."
  remarks: "For more information, see the <xref:System.Data.Linq.DataLoadOptions?displayProperty=fullName> class overview."
  syntax:
    content: public static void LoadWithForeignKeys (this System.Web.UI.WebControls.LinqDataSource dataSource, Type rowType);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.LinqDataSource
      description: "The LINQ data source to load the foreign keys from."
    - id: rowType
      type: System.Type
      description: "The type of the entities that are returned by the data source."
  overload: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  id: SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: SetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Sets the table metadata for the specified data control."
  syntax:
    content: public static void SetMetaTable (this System.Web.UI.INamingContainer control, System.Web.DynamicData.MetaTable table);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "The <xref href=&quot;System.Web.UI.INamingContainer&quot;></xref> object that contains the table."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "The table metadata."
  overload: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Sets the table metadata and default value mapping for the specified data control."
  syntax:
    content: public static void SetMetaTable (this System.Web.UI.INamingContainer control, System.Web.DynamicData.MetaTable table, System.Collections.Generic.IDictionary<string,object> defaultValues);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "The <xref href=&quot;System.Web.UI.INamingContainer&quot;></xref> object that contains the table."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "The table metadata."
    - id: defaultValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "The default value mapping."
  overload: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  id: SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: SetMetaTable(INamingContainer,MetaTable,Object)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Sets the table metadata and default value mapping for the specified data control."
  syntax:
    content: public static void SetMetaTable (this System.Web.UI.INamingContainer control, System.Web.DynamicData.MetaTable table, object defaultValues);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "The <xref href=&quot;System.Web.UI.INamingContainer&quot;></xref> object that contains the table."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "The table metadata."
    - id: defaultValues
      type: System.Object
      description: "The default value mapping."
  overload: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  id: TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: TryGetMetaTable(IDataSource,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Determines whether table metadata is available."
  syntax:
    content: public static bool TryGetMetaTable (this System.Web.UI.IDataSource dataSource, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: dataSource
      type: System.Web.UI.IDataSource
      description: "The data source that contains the table."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "When this method returns, contains the table metadata. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if table metadata is available; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  id: TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: TryGetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Determines whether table metadata is available."
  syntax:
    content: public static bool TryGetMetaTable (this System.Web.UI.INamingContainer control, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "The <xref href=&quot;System.Web.UI.INamingContainer&quot;></xref> object that contains the table."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "When this method returns, contains the table metadata. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if table metadata is available; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ConvertEditedValue(IFieldFormattingOptions,String)
  nameWithType: DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
- uid: System.Web.DynamicData.IFieldFormattingOptions
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldFormattingOptions
  nameWithType: IFieldFormattingOptions
  fullName: System.Web.DynamicData.IFieldFormattingOptions
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: EnablePersistedSelection(BaseDataBoundControl)
  nameWithType: DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
  fullName: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
- uid: System.Web.UI.WebControls.BaseDataBoundControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: BaseDataBoundControl
  nameWithType: BaseDataBoundControl
  fullName: System.Web.UI.WebControls.BaseDataBoundControl
- uid: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ExpandDynamicWhereParameters(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
- uid: System.Web.DynamicData.IDynamicDataSource
  parent: System.Web.DynamicData
  isExternal: false
  name: IDynamicDataSource
  nameWithType: IDynamicDataSource
  fullName: System.Web.DynamicData.IDynamicDataSource
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindDataSourceControl(Control)
  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindFieldTemplate(Control,String)
  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(Control,String)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindMetaTable(Control)
  nameWithType: DynamicDataExtensions.FindMetaTable(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(Control)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatEditValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetDefaultValues(IDataSource)
  nameWithType: DynamicDataExtensions.GetDefaultValues(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(IDataSource)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetDefaultValues(INamingContainer)
  nameWithType: DynamicDataExtensions.GetDefaultValues(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(INamingContainer)
- uid: System.Web.UI.INamingContainer
  parent: System.Web.UI
  isExternal: false
  name: INamingContainer
  nameWithType: INamingContainer
  fullName: System.Web.UI.INamingContainer
- uid: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetEnumType(MetaColumn)
  nameWithType: DynamicDataExtensions.GetEnumType(MetaColumn)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(MetaColumn)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetMetaTable(IDataSource)
  nameWithType: DynamicDataExtensions.GetMetaTable(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(IDataSource)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetMetaTable(INamingContainer)
  nameWithType: DynamicDataExtensions.GetMetaTable(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(INamingContainer)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetTable(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.GetTable(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetTable(IDynamicDataSource)
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWith(LinqDataSource)
  nameWithType: DynamicDataExtensions.LoadWith(LinqDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWith(LinqDataSource)
- uid: System.Web.UI.WebControls.LinqDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSource
  nameWithType: LinqDataSource
  fullName: System.Web.UI.WebControls.LinqDataSource
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWithForeignKeys(LinqDataSource,Type)
  nameWithType: DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer,MetaTable,Object)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: TryGetMetaTable(IDataSource,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: TryGetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
- uid: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ConvertEditedValue
  nameWithType: DynamicDataExtensions.ConvertEditedValue
- uid: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: DynamicDataExtensions.EnablePersistedSelection
- uid: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ExpandDynamicWhereParameters
  nameWithType: DynamicDataExtensions.ExpandDynamicWhereParameters
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindDataSourceControl
  nameWithType: DynamicDataExtensions.FindDataSourceControl
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindFieldTemplate
  nameWithType: DynamicDataExtensions.FindFieldTemplate
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindMetaTable
  nameWithType: DynamicDataExtensions.FindMetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatEditValue
  nameWithType: DynamicDataExtensions.FormatEditValue
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatValue*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatValue
  nameWithType: DynamicDataExtensions.FormatValue
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetDefaultValues
  nameWithType: DynamicDataExtensions.GetDefaultValues
- uid: System.Web.DynamicData.DynamicDataExtensions.GetEnumType*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetEnumType
  nameWithType: DynamicDataExtensions.GetEnumType
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetMetaTable
  nameWithType: DynamicDataExtensions.GetMetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.GetTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetTable
  nameWithType: DynamicDataExtensions.GetTable
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWith<TEntity>*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWith<TEntity>
  nameWithType: DynamicDataExtensions.LoadWith<TEntity>
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWithForeignKeys
  nameWithType: DynamicDataExtensions.LoadWithForeignKeys
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable
  nameWithType: DynamicDataExtensions.SetMetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: TryGetMetaTable
  nameWithType: DynamicDataExtensions.TryGetMetaTable
