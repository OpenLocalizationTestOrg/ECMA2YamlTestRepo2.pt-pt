### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.TextSearch
  id: TextSearch
  children:
  - System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)
  - System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)
  - System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)
  - System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)
  - System.Windows.Controls.TextSearch.TextPathProperty
  - System.Windows.Controls.TextSearch.TextProperty
  langs:
  - csharp
  name: TextSearch
  nameWithType: TextSearch
  fullName: System.Windows.Controls.TextSearch
  type: Class
  summary: "Enables a user to quickly access items in a set by typing prefixes of strings."
  remarks: "This class is used to assign a string to items in a control&quot;s collection. Assigning a string to each item in the collection accomplishes two objectives. It specifies the text to display when the item is selected, and it enables the user to select an item by typing the assigned string.       For example, assume that a <xref:System.Windows.Controls.ComboBox> contains a collection of <xref:System.Windows.Controls.Image> objects, one of which is an image of a dog.  If you assign the string, &quot;Dog&quot; to that item, the user can select the dog by typing the word in the combo box&quot;s text box. As soon as the user types enough of the word to distinguish it from other items in the selection, the image of the dog will be selected. If <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is set to `true` on the <xref:System.Windows.Controls.ComboBox>, &quot;Dog&quot; will appear in the text box.       You can specify the text that identifies an item by using the <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=fullName> property on a control or by setting the <xref:System.Windows.Controls.TextSearch.Text%2A> property on each item in the control&quot;s collection. Setting one of these properties ensures that unexpected text is not displayed. If you set the <xref:System.Windows.Controls.TextSearch.Text%2A> property on a control&quot;s collection item, the <xref:System.Windows.Controls.TextSearch.TextPath%2A> property will be ignored.  If you set the <xref:System.Windows.Controls.TextSearch.TextPath%2A> property to a value that is not the name of an actual property, <xref:System.Windows.Controls.TextSearch.TextPath%2A> is ignored.      <a name=&quot;xamlTextUsage_TextSearch&quot;></a>    ## XAML Text Usage    You cannot declare this managed class in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], but you can use its static properties to assign values in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following examples create <xref:System.Windows.Controls.ComboBox> controls that contain images as items instead of text.  Functionally, the examples are the same. The first example sets the <xref:System.Windows.Controls.TextSearch.TextPath%2A> property on the <xref:System.Windows.Controls.ComboBox> and the second example sets the <xref:System.Windows.Controls.AccessText.Text%2A> property on each item in the collection.  \n  \n [!code-xml[ComboBoxProps_snip#1](~/add/codesnippet/xaml/comboboxsimple/pane1.xaml#1)]  \n  \n [!code-xml[ComboBoxProps_snip#2](~/add/codesnippet/xaml/comboboxsimple/pane1.xaml#2)]"
  syntax:
    content: 'public sealed class TextSearch : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)
  id: GetText(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextSearch
  langs:
  - csharp
  name: GetText(DependencyObject)
  nameWithType: TextSearch.GetText(DependencyObject)
  fullName: System.Windows.Controls.TextSearch.GetText(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the string to that identifies the specified item."
  remarks: "This method returns the value of the <xref:System.Windows.Controls.TextSearch.Text%2A> attached property from the specified element."
  syntax:
    content: public static string GetText (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The element from which the property value is read."
    return:
      type: System.String
      description: "The string that identifies the specified item."
  overload: System.Windows.Controls.TextSearch.GetText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)
  id: GetTextPath(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextSearch
  langs:
  - csharp
  name: GetTextPath(DependencyObject)
  nameWithType: TextSearch.GetTextPath(DependencyObject)
  fullName: System.Windows.Controls.TextSearch.GetTextPath(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the name of the property that identifies an item in the specified element&quot;s collection."
  remarks: "This method returns the value of the <xref:System.Windows.Controls.TextSearch.TextPath%2A> attached property from the specified element."
  syntax:
    content: public static string GetTextPath (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The element from which the property value is read."
    return:
      type: System.String
      description: "The name of the property that identifies the item to the user."
  overload: System.Windows.Controls.TextSearch.GetTextPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)
  id: SetText(System.Windows.DependencyObject,System.String)
  parent: System.Windows.Controls.TextSearch
  langs:
  - csharp
  name: SetText(DependencyObject,String)
  nameWithType: TextSearch.SetText(DependencyObject,String)
  fullName: System.Windows.Controls.TextSearch.SetText(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Writes the <xref:System.Windows.Controls.TextSearch.Text*> attached property value to the specified element."
  syntax:
    content: public static void SetText (System.Windows.DependencyObject element, string text);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The element to which the property value is written."
    - id: text
      type: System.String
      description: "The string that identifies the item."
  overload: System.Windows.Controls.TextSearch.SetText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)
  id: SetTextPath(System.Windows.DependencyObject,System.String)
  parent: System.Windows.Controls.TextSearch
  langs:
  - csharp
  name: SetTextPath(DependencyObject,String)
  nameWithType: TextSearch.SetTextPath(DependencyObject,String)
  fullName: System.Windows.Controls.TextSearch.SetTextPath(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Writes the <xref:System.Windows.Controls.TextSearch.TextPath*> attached property to the specified element."
  syntax:
    content: public static void SetTextPath (System.Windows.DependencyObject element, string path);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The element to which the property value is written."
    - id: path
      type: System.String
      description: "The name of the property that identifies an item."
  overload: System.Windows.Controls.TextSearch.SetTextPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextSearch.TextPathProperty
  id: TextPathProperty
  parent: System.Windows.Controls.TextSearch
  langs:
  - csharp
  name: TextPathProperty
  nameWithType: TextSearch.TextPathProperty
  fullName: System.Windows.Controls.TextSearch.TextPathProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextSearch.TextPath*> attached property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextPathProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextSearch.TextProperty
  id: TextProperty
  parent: System.Windows.Controls.TextSearch
  langs:
  - csharp
  name: TextProperty
  nameWithType: TextSearch.TextProperty
  fullName: System.Windows.Controls.TextSearch.TextProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextSearch.Text*> attached property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: GetText(DependencyObject)
  nameWithType: TextSearch.GetText(DependencyObject)
  fullName: System.Windows.Controls.TextSearch.GetText(DependencyObject)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: GetTextPath(DependencyObject)
  nameWithType: TextSearch.GetTextPath(DependencyObject)
  fullName: System.Windows.Controls.TextSearch.GetTextPath(DependencyObject)
- uid: System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: SetText(DependencyObject,String)
  nameWithType: TextSearch.SetText(DependencyObject,String)
  fullName: System.Windows.Controls.TextSearch.SetText(DependencyObject,String)
- uid: System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: SetTextPath(DependencyObject,String)
  nameWithType: TextSearch.SetTextPath(DependencyObject,String)
  fullName: System.Windows.Controls.TextSearch.SetTextPath(DependencyObject,String)
- uid: System.Windows.Controls.TextSearch.TextPathProperty
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: TextPathProperty
  nameWithType: TextSearch.TextPathProperty
  fullName: System.Windows.Controls.TextSearch.TextPathProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.TextSearch.TextProperty
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: TextProperty
  nameWithType: TextSearch.TextProperty
  fullName: System.Windows.Controls.TextSearch.TextProperty
- uid: System.Windows.Controls.TextSearch.GetText*
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: GetText
  nameWithType: TextSearch.GetText
- uid: System.Windows.Controls.TextSearch.GetTextPath*
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: GetTextPath
  nameWithType: TextSearch.GetTextPath
- uid: System.Windows.Controls.TextSearch.SetText*
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: SetText
  nameWithType: TextSearch.SetText
- uid: System.Windows.Controls.TextSearch.SetTextPath*
  parent: System.Windows.Controls.TextSearch
  isExternal: false
  name: SetTextPath
  nameWithType: TextSearch.SetTextPath
