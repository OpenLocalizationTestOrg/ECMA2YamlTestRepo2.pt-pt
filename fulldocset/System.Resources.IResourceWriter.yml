### YamlMime:ManagedReference
items:
- uid: System.Resources.IResourceWriter
  id: IResourceWriter
  children:
  - System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  - System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  - System.Resources.IResourceWriter.AddResource(System.String,System.String)
  - System.Resources.IResourceWriter.Close
  - System.Resources.IResourceWriter.Generate
  langs:
  - csharp
  name: IResourceWriter
  nameWithType: IResourceWriter
  fullName: System.Resources.IResourceWriter
  type: Interface
  summary: "Fornece a funcionalidade de base para escrever os recursos para um ficheiro de saída ou fluxo."
  remarks: "Os escritores de recursos são utilizados para escrever recursos em ficheiros num formato de ficheiro específica. Implemente esta interface se pretender controlar a forma como em que um ficheiro de recursos é escrito (por exemplo, para armazenar recursos na algo que não seja um. txt,. resx ou ficheiro. resources binário). Caso contrário, utilize a predefinição <xref:System.Resources.ResourceWriter>classe, que escreve recursos para um ficheiro. resources binário, ou o <xref:System.Resources.ResXResourceWriter>classe, que escreve recursos para um ficheiro de recursos (. resx) de XML.</xref:System.Resources.ResXResourceWriter> </xref:System.Resources.ResourceWriter>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IResourceWriter : IDisposable
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  id: AddResource(System.String,System.Byte[])
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: AddResource(String,Byte[])
  nameWithType: IResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.IResourceWriter.AddResource(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona uma matriz de número inteiro sem sinal de 8 bits como um recurso com o nome para a lista de recursos para serem escritos."
  remarks: "Os recursos não são escritos até o <xref:System.Resources.IResourceWriter.Generate%2A>método é chamado.</xref:System.Resources.IResourceWriter.Generate%2A>"
  syntax:
    content: public void AddResource (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "Nome de um recurso."
    - id: value
      type: System.Byte[]
      description: "Valor de um recurso como uma matriz de número inteiro sem sinal de 8 bits."
  overload: System.Resources.IResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  id: AddResource(System.String,System.Object)
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: AddResource(String,Object)
  nameWithType: IResourceWriter.AddResource(String,Object)
  fullName: System.Resources.IResourceWriter.AddResource(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona um recurso com o nome do tipo <xref:System.Object>à lista de recursos para serem escritos.</xref:System.Object>"
  remarks: "O recurso não é escrito até o <xref:System.Resources.IResourceWriter.Generate%2A>método é chamado.</xref:System.Resources.IResourceWriter.Generate%2A>      > [!NOTE]  >   `value` poderá ter de ser serializável, pelo que poderá ter de fornecer um conversor de tipos, consoante o recurso escritor é utilizado."
  syntax:
    content: public void AddResource (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do recurso."
    - id: value
      type: System.Object
      description: "O valor do recurso."
  overload: System.Resources.IResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: AddResource(String,String)
  nameWithType: IResourceWriter.AddResource(String,String)
  fullName: System.Resources.IResourceWriter.AddResource(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona um recurso com o nome do tipo <xref:System.String>à lista de recursos para serem escritos.</xref:System.String>"
  remarks: "O recurso não é escrito até o <xref:System.Resources.IResourceWriter.Generate%2A>método é chamado.</xref:System.Resources.IResourceWriter.Generate%2A>"
  syntax:
    content: public void AddResource (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do recurso."
    - id: value
      type: System.String
      description: "O valor do recurso."
  overload: System.Resources.IResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.IResourceWriter.Close
  id: Close
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: Close()
  nameWithType: IResourceWriter.Close()
  fullName: System.Resources.IResourceWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Fecha o ficheiro de recursos ou fluxo, assegurar que todos os dados foi escritos para o ficheiro subjacente."
  remarks: "Se necessário, feche irá chamar o <xref:System.Resources.IResourceWriter.Generate%2A>método para a saída os recursos para o ficheiro subjacente ou fluxo antes de fechar o mesmo.</xref:System.Resources.IResourceWriter.Generate%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.IResourceWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.IResourceWriter.Generate
  id: Generate
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: Generate()
  nameWithType: IResourceWriter.Generate()
  fullName: System.Resources.IResourceWriter.Generate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Escreve todos os recursos adicionados pelo <xref:System.Resources.IResourceWriter.AddResource*>método para o ficheiro de saída ou fluxo.</xref:System.Resources.IResourceWriter.AddResource*>"
  remarks: "Gerar não feche o ficheiro de saída ou fluxo de saída. Em vez disso, considere chamar o <xref:System.Resources.IResourceWriter.Close%2A>método.</xref:System.Resources.IResourceWriter.Close%2A> Gerar é útil quando pretender criar um ficheiro de recursos, mas não pretende fechar o fluxo de saída. Gerar pode ser chamado uma vez. Depois de chamar gerar, todos os <xref:System.Resources.IResourceWriter>métodos diferente <xref:System.Resources.IResourceWriter.Close%2A>irá gerar uma exceção.</xref:System.Resources.IResourceWriter.Close%2A> </xref:System.Resources.IResourceWriter>"
  syntax:
    content: public void Generate ();
    parameters: []
  overload: System.Resources.IResourceWriter.Generate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource(String,Byte[])
  nameWithType: IResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.IResourceWriter.AddResource(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource(String,Object)
  nameWithType: IResourceWriter.AddResource(String,Object)
  fullName: System.Resources.IResourceWriter.AddResource(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource(String,String)
  nameWithType: IResourceWriter.AddResource(String,String)
  fullName: System.Resources.IResourceWriter.AddResource(String,String)
- uid: System.Resources.IResourceWriter.Close
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Close()
  nameWithType: IResourceWriter.Close()
  fullName: System.Resources.IResourceWriter.Close()
- uid: System.Resources.IResourceWriter.Generate
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Generate()
  nameWithType: IResourceWriter.Generate()
  fullName: System.Resources.IResourceWriter.Generate()
- uid: System.Resources.IResourceWriter.AddResource*
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource
  nameWithType: IResourceWriter.AddResource
- uid: System.Resources.IResourceWriter.Close*
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Close
  nameWithType: IResourceWriter.Close
- uid: System.Resources.IResourceWriter.Generate*
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Generate
  nameWithType: IResourceWriter.Generate
