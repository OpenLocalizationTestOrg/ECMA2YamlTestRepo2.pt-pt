### YamlMime:ManagedReference
items:
- uid: System.Resources.IResourceWriter
  id: IResourceWriter
  children:
  - System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  - System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  - System.Resources.IResourceWriter.AddResource(System.String,System.String)
  - System.Resources.IResourceWriter.Close
  - System.Resources.IResourceWriter.Generate
  langs:
  - csharp
  name: IResourceWriter
  nameWithType: IResourceWriter
  fullName: System.Resources.IResourceWriter
  type: Interface
  summary: "Provides the base functionality for writing resources to an output file or stream."
  remarks: "Resource writers are used to write resources to files in a particular file format. Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file). Otherwise, use the default <xref:System.Resources.ResourceWriter> class, which writes resources to a binary .resources file, or the <xref:System.Resources.ResXResourceWriter> class, which writes resources to an XML resource (.resx) file."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IResourceWriter : IDisposable
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  id: AddResource(System.String,System.Byte[])
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: AddResource(String,Byte[])
  nameWithType: IResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.IResourceWriter.AddResource(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written."
  remarks: "The resources are not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called."
  syntax:
    content: public void AddResource (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "Name of a resource."
    - id: value
      type: System.Byte[]
      description: "Value of a resource as an 8-bit unsigned integer array."
  overload: System.Resources.IResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  id: AddResource(System.String,System.Object)
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: AddResource(String,Object)
  nameWithType: IResourceWriter.AddResource(String,Object)
  fullName: System.Resources.IResourceWriter.AddResource(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a named resource of type <xref:System.Object> to the list of resources to be written."
  remarks: "The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called.      > [!NOTE] >  `value` might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used."
  syntax:
    content: public void AddResource (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the resource."
    - id: value
      type: System.Object
      description: "The value of the resource."
  overload: System.Resources.IResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: AddResource(String,String)
  nameWithType: IResourceWriter.AddResource(String,String)
  fullName: System.Resources.IResourceWriter.AddResource(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a named resource of type <xref:System.String> to the list of resources to be written."
  remarks: "The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called."
  syntax:
    content: public void AddResource (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the resource."
    - id: value
      type: System.String
      description: "The value of the resource."
  overload: System.Resources.IResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.IResourceWriter.Close
  id: Close
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: Close()
  nameWithType: IResourceWriter.Close()
  fullName: System.Resources.IResourceWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Closes the underlying resource file or stream, ensuring all the data has been written to the file."
  remarks: "If necessary, Close will call the <xref:System.Resources.IResourceWriter.Generate%2A> method to output the resources to the underlying file or stream before closing it."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.IResourceWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.IResourceWriter.Generate
  id: Generate
  parent: System.Resources.IResourceWriter
  langs:
  - csharp
  name: Generate()
  nameWithType: IResourceWriter.Generate()
  fullName: System.Resources.IResourceWriter.Generate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Writes all the resources added by the <xref:System.Resources.IResourceWriter.AddResource*> method to the output file or stream."
  remarks: "Generate does not close the output file or output stream. Instead, consider calling the <xref:System.Resources.IResourceWriter.Close%2A> method. Generate is useful when you want to create a resource file, but you don&quot;t want to close the output stream. Generate can be called only once. After you call Generate, all <xref:System.Resources.IResourceWriter> methods other than <xref:System.Resources.IResourceWriter.Close%2A> will throw an exception."
  syntax:
    content: public void Generate ();
    parameters: []
  overload: System.Resources.IResourceWriter.Generate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource(String,Byte[])
  nameWithType: IResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.IResourceWriter.AddResource(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource(String,Object)
  nameWithType: IResourceWriter.AddResource(String,Object)
  fullName: System.Resources.IResourceWriter.AddResource(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource(String,String)
  nameWithType: IResourceWriter.AddResource(String,String)
  fullName: System.Resources.IResourceWriter.AddResource(String,String)
- uid: System.Resources.IResourceWriter.Close
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Close()
  nameWithType: IResourceWriter.Close()
  fullName: System.Resources.IResourceWriter.Close()
- uid: System.Resources.IResourceWriter.Generate
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Generate()
  nameWithType: IResourceWriter.Generate()
  fullName: System.Resources.IResourceWriter.Generate()
- uid: System.Resources.IResourceWriter.AddResource*
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: AddResource
  nameWithType: IResourceWriter.AddResource
- uid: System.Resources.IResourceWriter.Close*
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Close
  nameWithType: IResourceWriter.Close
- uid: System.Resources.IResourceWriter.Generate*
  parent: System.Resources.IResourceWriter
  isExternal: false
  name: Generate
  nameWithType: IResourceWriter.Generate
