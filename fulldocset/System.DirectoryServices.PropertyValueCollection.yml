### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.PropertyValueCollection
  id: PropertyValueCollection
  children:
  - System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  - System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  - System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  - System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  - System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  - System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  - System.DirectoryServices.PropertyValueCollection.OnClearComplete
  - System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.DirectoryServices.PropertyValueCollection.PropertyName
  - System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  - System.DirectoryServices.PropertyValueCollection.Value
  langs:
  - csharp
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection
  type: Class
  summary: "Contém os valores de uma <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> propriedade."
  syntax:
    content: 'public class PropertyValueCollection : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: PropertyValueCollection.Add(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Acrescenta especificado <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto a esta coleção."
  syntax:
    content: public int Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto acrescentar a esta coleção."
    return:
      type: System.Int32
      description: "O índice baseado em zero do <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto que é acrescentado a esta coleção."
  overload: System.DirectoryServices.PropertyValueCollection.Add*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Ocorreu um erro durante a chamada para a interface subjacente."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  id: AddRange(System.DirectoryServices.PropertyValueCollection)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: AddRange(PropertyValueCollection)
  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Acrescenta o conteúdo a <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto a esta coleção."
  syntax:
    content: public void AddRange (System.DirectoryServices.PropertyValueCollection value);
    parameters:
    - id: value
      type: System.DirectoryServices.PropertyValueCollection
      description: "A <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto que contém os objetos a acrescentar a esta coleção."
  overload: System.DirectoryServices.PropertyValueCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  id: AddRange(System.Object[])
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: AddRange(Object[])
  nameWithType: PropertyValueCollection.AddRange(Object[])
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Acrescenta o conteúdo da especificado <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto a esta coleção."
  syntax:
    content: public void AddRange (object[] value);
    parameters:
    - id: value
      type: System.Object[]
      description: "O <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> matriz que contém os objetos a acrescentar a esta coleção."
  overload: System.DirectoryServices.PropertyValueCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: PropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Determina se especificado <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto está nesta coleção."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto para procurar nesta coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade especificada pertence a esta coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.PropertyValueCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Copia todos os <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objetos nesta coleção para a matriz especificada, que começa no índice especificado na matriz de destino."
  syntax:
    content: public void CopyTo (object[] array, int index);
    parameters:
    - id: array
      type: System.Object[]
      description: "A matriz de <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objetos que recebe os elementos desta coleção."
    - id: index
      type: System.Int32
      description: "O índice baseado em zero `array` em que este método é iniciada copiar esta coleção."
  overload: System.DirectoryServices.PropertyValueCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: PropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém o índice de um valor de propriedade especificado nesta coleção."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O valor da propriedade para localizar."
    return:
      type: System.Int32
      description: "O índice baseado em zero do valor de propriedade especificado. Se o objeto não for encontrado, o valor de retorno é de -1."
  overload: System.DirectoryServices.PropertyValueCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: PropertyValueCollection.Insert(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Insere um valor de propriedade para esta coleção num índice especificado."
  syntax:
    content: public void Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero no qual pretende inserir o valor da propriedade."
    - id: value
      type: System.Object
      description: "O valor da propriedade para inserir."
  overload: System.DirectoryServices.PropertyValueCollection.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Ocorreu um erro durante a chamada para a interface subjacente."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O índice é inferior a 0 (zero) ou superior ao tamanho da colecção."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define o valor da propriedade que está localizado num índice especificado desta coleção."
  remarks: "Em c#, esta propriedade é o indexador para a <xref:System.DirectoryServices.PropertyValueCollection>classe.</xref:System.DirectoryServices.PropertyValueCollection>       No JScript, pode utilizar as propriedades de predefinição indexada definidas por um tipo, mas não é possível definir explicitamente as suas próprias. No entanto, especificar que o atributo expando numa classe disponibiliza automaticamente um predefinido indexada propriedade cujo tipo é o objeto e cujo tipo de índice é <xref:System.String>.</xref:System.String>"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero do valor de propriedade."
    return:
      type: System.Object
      description: "O valor da propriedade no índice especificado."
  overload: System.DirectoryServices.PropertyValueCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O índice é menor que zero (0) ou superior ao tamanho da colecção."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete
  id: OnClearComplete
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: PropertyValueCollection.OnClearComplete()
  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Substitui o <xref:System.Collections.CollectionBase.OnClearComplete*>método.</xref:System.Collections.CollectionBase.OnClearComplete*>"
  syntax:
    content: protected override void OnClearComplete ();
    parameters: []
  overload: System.DirectoryServices.PropertyValueCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Substitui o <xref:System.Collections.CollectionBase.OnInsertComplete*>método.</xref:System.Collections.CollectionBase.OnInsertComplete*>"
  syntax:
    content: protected override void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero no qual pretende inserir `value`."
    - id: value
      type: System.Object
      description: "O novo valor de elemento no `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Substitui o <xref:System.Collections.CollectionBase.OnRemoveComplete*>método.</xref:System.Collections.CollectionBase.OnRemoveComplete*>"
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero no qual o valor pode ser encontrado."
    - id: value
      type: System.Object
      description: "O valor do elemento para remover `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  id: OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Substitui o &lt;xref:System.Collections.CollectionBase.OnSetComplete%2A?displayProperty=fullName&gt; método."
  syntax:
    content: protected override void OnSetComplete (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero que `oldValue` pode ser encontrado."
    - id: oldValue
      type: System.Object
      description: "O valor substitui `newValue`."
    - id: newValue
      type: System.Object
      description: "O novo valor de elemento no `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnSetComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName
  id: PropertyName
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém o nome da propriedade para os atributos na coleção de valor."
  syntax:
    content: public string PropertyName { get; }
    return:
      type: System.String
      description: "Uma cadeia que contém o nome da propriedade com os valores que estão incluídos neste <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> objeto."
  overload: System.DirectoryServices.PropertyValueCollection.PropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: PropertyValueCollection.Remove(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove um valor de propriedade especificado nesta coleção."
  remarks: "Ao trabalhar com um valor de propriedade de cadeia com múltiplos valores, o método de remover com êxito irá remover o item correto. No entanto, que identifica os itens correctos pelo nome é difícil com um valor de propriedade DNWithString com múltiplos valor (como o DNWithString a classe com, que é utilizado para armazenar os itens de DNWithString, tem 2 propriedades de cadeia que representa o item). A forma de o remover esses itens é ao encontrar o objeto da coleção (por criar ciclos através da todos os itens) e chamada de função remover com ponteiro o objeto que pretende localizar.  Esta situação é ilustrada no exemplo abaixo."
  example:
  - "```c#  \n  \n// Bind to the AD object  \nDirectoryEntry myUser = new DirectoryEntry(\"LDAP://AdServer:389/CN=MyUsername,CN=Users,DC=contoso,DC=com\");  \n  \n// Get the attribute  \nPropertyValueCollection testAttribute = myUser.Properties[\"someAttribute\"];  \n  \n// Find the item in the collection that we want to delete  \nDNWithString dnwsItemToRemove = null;  \nforeach (DNWithString dnwsItem in testAttribute)  \n{  \n    if (dnwsItem.StringValue.Equals(\"SomeValue\"))  \n    {  \n        dnwsItemToRemove = dnwsItem;  \n        break;  \n    }  \n}  \n  \n// Delete it  \ntestAttribute.Remove(dnwsItemToRemove);  \n  \n// Store the data  \nmyUser.CommitChanges();  \n```"
  syntax:
    content: public void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O valor da propriedade para remover."
  overload: System.DirectoryServices.PropertyValueCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Ocorreu um erro durante a chamada para a interface subjacente."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Value
  id: Value
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Value
  nameWithType: PropertyValueCollection.Value
  fullName: System.DirectoryServices.PropertyValueCollection.Value
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define os valores da colecção."
  remarks: "Para adicionar vários valores, defina esta propriedade como uma matriz de valores."
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "Se a coleção está vazia, o valor da propriedade é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic). Se a coleção contiver um valor, o valor da propriedade é esse valor. Se a coleção contiver vários valores, o valor da propriedade é igual a uma cópia de uma matriz desses valores.       Se definir esta propriedade, o valor ou valores são adicionados para o <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref>. Definição desta propriedade como uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>) limpa a coleção."
  overload: System.DirectoryServices.PropertyValueCollection.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Add(Object)
  nameWithType: PropertyValueCollection.Add(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange(PropertyValueCollection)
  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)
- uid: System.DirectoryServices.PropertyValueCollection
  parent: System.DirectoryServices
  isExternal: false
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange(Object[])
  nameWithType: PropertyValueCollection.AddRange(Object[])
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: PropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: PropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)
- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: PropertyValueCollection.Insert(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: PropertyValueCollection.OnClearComplete()
  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: PropertyValueCollection.Remove(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)
- uid: System.DirectoryServices.PropertyValueCollection.Value
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Value
  nameWithType: PropertyValueCollection.Value
  fullName: System.DirectoryServices.PropertyValueCollection.Value
- uid: System.DirectoryServices.PropertyValueCollection.Add*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Add
  nameWithType: PropertyValueCollection.Add
- uid: System.DirectoryServices.PropertyValueCollection.AddRange*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange
  nameWithType: PropertyValueCollection.AddRange
- uid: System.DirectoryServices.PropertyValueCollection.Contains*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Contains
  nameWithType: PropertyValueCollection.Contains
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyValueCollection.CopyTo
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: IndexOf
  nameWithType: PropertyValueCollection.IndexOf
- uid: System.DirectoryServices.PropertyValueCollection.Insert*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Insert
  nameWithType: PropertyValueCollection.Insert
- uid: System.DirectoryServices.PropertyValueCollection.Item*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Item
  nameWithType: PropertyValueCollection.Item
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: PropertyValueCollection.OnClearComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: PropertyValueCollection.OnInsertComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: PropertyValueCollection.OnRemoveComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnSetComplete
  nameWithType: PropertyValueCollection.OnSetComplete
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
- uid: System.DirectoryServices.PropertyValueCollection.Remove*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyValueCollection.Remove
- uid: System.DirectoryServices.PropertyValueCollection.Value*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Value
  nameWithType: PropertyValueCollection.Value
