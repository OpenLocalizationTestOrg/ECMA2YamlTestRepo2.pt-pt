### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.DependencyPropertyConverter
  id: DependencyPropertyConverter
  children:
  - System.Windows.Markup.DependencyPropertyConverter.#ctor
  - System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: DependencyPropertyConverter
  nameWithType: DependencyPropertyConverter
  fullName: System.Windows.Markup.DependencyPropertyConverter
  type: Class
  summary: "Converte uma cadeia para um <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> objeto."
  remarks: "A classe de DependencyPropertyConverter converte apenas a partir de um <xref:System.String>para uma instância de <xref:System.Windows.DependencyProperty>.</xref:System.Windows.DependencyProperty> </xref:System.String> Outras tentativas de conversão acionar uma excepção.       Converte o DependencyPropertyConverter de um <xref:System.String>utilizando o seguinte formato de entrada: *typeName*`.`*propertyName*.</xref:System.String> Um formato de *namespacePrefix*:*typeName*`.`*propertyName* também é aceite por motivos de legado, mas a *namespacePrefix*: componente é ignorado. Um formato de *propertyName* também é aceite em certos casos; este formato depende a capacidade de avaliar as propriedades de ambiente e deduzir o *typeName*, pela implementação de serviço de <xref:System.Xaml.IAmbientProvider>no contexto.</xref:System.Xaml.IAmbientProvider>       Por motivos de legado, esta classe também suporta a conversão de registos BAML, mas este é um detalhe de implementação e não deve ser confiada.       O comportamento deste conversor especificamente é orientado para em torno de um cenário WPF único para o processamento de XAML: ler o valor de atributo de <xref:System.Windows.Setter.Property%2A>e de gerar um <xref:System.Windows.DependencyProperty>valor.</xref:System.Windows.DependencyProperty> </xref:System.Windows.Setter.Property%2A>      <a name=&quot;xamlTextUsage_DependencyPropertyConverter&quot;></a># # Utilização de texto XAML"
  syntax:
    content: 'public sealed class DependencyPropertyConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Markup.DependencyPropertyConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.DependencyPropertyConverter
  langs:
  - csharp
  name: DependencyPropertyConverter()
  nameWithType: DependencyPropertyConverter.DependencyPropertyConverter()
  fullName: System.Windows.Markup.DependencyPropertyConverter.DependencyPropertyConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Markup.DependencyPropertyConverter&quot;> </xref> classe."
  syntax:
    content: public DependencyPropertyConverter ();
    parameters: []
  overload: System.Windows.Markup.DependencyPropertyConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.DependencyPropertyConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Determina se um objeto do tipo especificado pode ser convertido para uma instância do <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>."
  remarks: "A <xref:System.Windows.Markup.DependencyPropertyConverter>classe só converte uma cadeia a uma instância de <xref:System.Windows.DependencyProperty>.</xref:System.Windows.DependencyProperty> </xref:System.Windows.Markup.DependencyPropertyConverter> Por conseguinte, apenas um `sourceType` de <xref:System.String>devolve `true`.</xref:System.String>       `context`Não é utilizado por esta implementação."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um contexto de formato que fornece informações sobre o ambiente a partir do qual está a ser invocado este conversor."
    - id: sourceType
      type: System.Type
      description: "O tipo que está a ser avaliado para a conversão."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este conversor pode efetuar a operação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.DependencyPropertyConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Determina se uma instância de <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> pode ser convertido para o tipo especificado."
  remarks: "Esta implementação sempre devolve `false`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um contexto de formato que fornece informações sobre o ambiente a partir do qual está a ser invocado este conversor."
    - id: destinationType
      type: System.Type
      description: "O tipo que está a ser avaliado para a conversão."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este conversor pode efetuar a operação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.DependencyPropertyConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Tenta converter o objeto especificado para um <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>, utilizando o contexto especificado."
  remarks: "A <xref:System.Windows.Markup.DependencyPropertyConverter>classe só converte uma cadeia a uma instância de <xref:System.Windows.DependencyProperty>.</xref:System.Windows.DependencyProperty> </xref:System.Windows.Markup.DependencyPropertyConverter>       `culture`Não é utilizado por esta implementação.       O `context` fornecido é esperado para fornecer serviços que são necessários para avaliação adequada. Estes incluem <xref:System.Xaml.IAmbientProvider>, <xref:System.Windows.Markup.IXamlTypeResolver>e <xref:System.Xaml.IXamlSchemaContextProvider>.</xref:System.Xaml.IXamlSchemaContextProvider> </xref:System.Windows.Markup.IXamlTypeResolver> </xref:System.Xaml.IAmbientProvider>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um contexto de formato que fornece informações sobre o ambiente a partir do qual está a ser invocado este conversor."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Informações específicas do idioma."
    - id: source
      type: System.Object
      description: "O objeto a converter."
    return:
      type: System.Object
      description: "O objecto convertido. Se a conversão é efetuada com êxito, este é um <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>."
  overload: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>source</code>Não é possível converter."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>or <code>source</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.DependencyPropertyConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Tenta converter um <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> para o tipo especificado, utilizando o contexto especificado. Sempre emite uma exceção."
  remarks: "Esta implementação sempre emite uma exceção."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um contexto de formato que fornece informações sobre o ambiente a partir do qual está a ser invocado este conversor."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Informações específicas do idioma."
    - id: value
      type: System.Object
      description: "O objeto a converter."
    - id: destinationType
      type: System.Type
      description: "O tipo para converter o objeto."
    return:
      type: System.Object
      description: "Sempre emite uma exceção."
  overload: System.Windows.Markup.DependencyPropertyConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Em todos os casos."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.DependencyPropertyConverter.#ctor
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: DependencyPropertyConverter()
  nameWithType: DependencyPropertyConverter.DependencyPropertyConverter()
  fullName: System.Windows.Markup.DependencyPropertyConverter.DependencyPropertyConverter()
- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.DependencyPropertyConverter.#ctor*
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: DependencyPropertyConverter
  nameWithType: DependencyPropertyConverter.DependencyPropertyConverter
- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom*
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: DependencyPropertyConverter.CanConvertFrom
- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo*
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: DependencyPropertyConverter.CanConvertTo
- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom*
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: DependencyPropertyConverter.ConvertFrom
- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertTo*
  parent: System.Windows.Markup.DependencyPropertyConverter
  isExternal: false
  name: ConvertTo
  nameWithType: DependencyPropertyConverter.ConvertTo
