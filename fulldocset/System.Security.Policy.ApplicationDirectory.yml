### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationDirectory
  id: ApplicationDirectory
  children:
  - System.Security.Policy.ApplicationDirectory.#ctor(System.String)
  - System.Security.Policy.ApplicationDirectory.Clone
  - System.Security.Policy.ApplicationDirectory.Copy
  - System.Security.Policy.ApplicationDirectory.Directory
  - System.Security.Policy.ApplicationDirectory.Equals(System.Object)
  - System.Security.Policy.ApplicationDirectory.GetHashCode
  - System.Security.Policy.ApplicationDirectory.ToString
  langs:
  - csharp
  name: ApplicationDirectory
  nameWithType: ApplicationDirectory
  fullName: System.Security.Policy.ApplicationDirectory
  type: Class
  summary: "Provides the application directory as evidence for policy evaluation. This class cannot be inherited."
  remarks: "The domain host can associate a file directory with an application domain. The evidence for policy evaluation is provided only when the application domain is associated with a file directory."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationDirectory : System.Security.Policy.EvidenceBase
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: ApplicationDirectory(String)
  nameWithType: ApplicationDirectory.ApplicationDirectory(String)
  fullName: System.Security.Policy.ApplicationDirectory.ApplicationDirectory(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;></xref> class."
  remarks: "Application code does not need to create instances of this class."
  syntax:
    content: public ApplicationDirectory (string name);
    parameters:
    - id: name
      type: System.String
      description: "The path of the application directory."
  overload: System.Security.Policy.ApplicationDirectory.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Clone
  id: Clone
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Clone()
  nameWithType: ApplicationDirectory.Clone()
  fullName: System.Security.Policy.ApplicationDirectory.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Creates a new object that is a copy of the current instance."
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "A new object that is a copy of this instance."
  overload: System.Security.Policy.ApplicationDirectory.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Copy
  id: Copy
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Copy()
  nameWithType: ApplicationDirectory.Copy()
  fullName: System.Security.Policy.ApplicationDirectory.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Creates a new copy of the <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;></xref>."
  syntax:
    content: public object Copy ();
    parameters: []
    return:
      type: System.Object
      description: "A new, identical copy of the <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;></xref>."
  overload: System.Security.Policy.ApplicationDirectory.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Directory
  id: Directory
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Directory
  nameWithType: ApplicationDirectory.Directory
  fullName: System.Security.Policy.ApplicationDirectory.Directory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets the path of the application directory."
  syntax:
    content: public string Directory { get; }
    return:
      type: System.String
      description: "The path of the application directory."
  overload: System.Security.Policy.ApplicationDirectory.Directory*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ApplicationDirectory.Equals(Object)
  fullName: System.Security.Policy.ApplicationDirectory.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determines whether instances of the same type of an evidence object are equivalent."
  remarks: "The directory values of the two instances must match exactly. Equivalent noncanonical paths are not resolved. For example, C:\\app and C:\\temp\\\\...\\app are not equal directory values."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "An object of same type as the current evidence object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two instances are equivalent; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Policy.ApplicationDirectory.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ApplicationDirectory.GetHashCode()
  fullName: System.Security.Policy.ApplicationDirectory.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets the hash code of the current application directory."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "The hash code of the current application directory."
  overload: System.Security.Policy.ApplicationDirectory.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.ToString
  id: ToString
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: ToString()
  nameWithType: ApplicationDirectory.ToString()
  fullName: System.Security.Policy.ApplicationDirectory.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets a string representation of the state of the <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;></xref> evidence object."
  remarks: "This method is useful during debugging to get an easy-to-read representation of the object."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A representation of the state of the <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;></xref> evidence object."
  overload: System.Security.Policy.ApplicationDirectory.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationDirectory.#ctor(System.String)
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ApplicationDirectory(String)
  nameWithType: ApplicationDirectory.ApplicationDirectory(String)
  fullName: System.Security.Policy.ApplicationDirectory.ApplicationDirectory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.ApplicationDirectory.Clone
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Clone()
  nameWithType: ApplicationDirectory.Clone()
  fullName: System.Security.Policy.ApplicationDirectory.Clone()
- uid: System.Security.Policy.ApplicationDirectory.Copy
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Copy()
  nameWithType: ApplicationDirectory.Copy()
  fullName: System.Security.Policy.ApplicationDirectory.Copy()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.ApplicationDirectory.Directory
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Directory
  nameWithType: ApplicationDirectory.Directory
  fullName: System.Security.Policy.ApplicationDirectory.Directory
- uid: System.Security.Policy.ApplicationDirectory.Equals(System.Object)
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Equals(Object)
  nameWithType: ApplicationDirectory.Equals(Object)
  fullName: System.Security.Policy.ApplicationDirectory.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationDirectory.GetHashCode
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: GetHashCode()
  nameWithType: ApplicationDirectory.GetHashCode()
  fullName: System.Security.Policy.ApplicationDirectory.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.ApplicationDirectory.ToString
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ToString()
  nameWithType: ApplicationDirectory.ToString()
  fullName: System.Security.Policy.ApplicationDirectory.ToString()
- uid: System.Security.Policy.ApplicationDirectory.#ctor*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ApplicationDirectory
  nameWithType: ApplicationDirectory.ApplicationDirectory
- uid: System.Security.Policy.ApplicationDirectory.Clone*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Clone
  nameWithType: ApplicationDirectory.Clone
- uid: System.Security.Policy.ApplicationDirectory.Copy*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Copy
  nameWithType: ApplicationDirectory.Copy
- uid: System.Security.Policy.ApplicationDirectory.Directory*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Directory
  nameWithType: ApplicationDirectory.Directory
- uid: System.Security.Policy.ApplicationDirectory.Equals*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Equals
  nameWithType: ApplicationDirectory.Equals
- uid: System.Security.Policy.ApplicationDirectory.GetHashCode*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: GetHashCode
  nameWithType: ApplicationDirectory.GetHashCode
- uid: System.Security.Policy.ApplicationDirectory.ToString*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ToString
  nameWithType: ApplicationDirectory.ToString
