### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ReflectionPermissionFlag
  id: ReflectionPermissionFlag
  children:
  - System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  - System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  - System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  - System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  langs:
  - csharp
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
  type: Enum
  summary: "Especifica a utilização de permitidos do <xref href=&quot;System.Reflection&quot;> </xref> e <xref href=&quot;System.Reflection.Emit&quot;> </xref> espaços de nomes."
  remarks: "Esta enumeração é utilizada pelo <xref:System.Security.Permissions.ReflectionPermission>e <xref:System.Security.Permissions.ReflectionPermissionAttribute>classes.</xref:System.Security.Permissions.ReflectionPermissionAttribute> </xref:System.Security.Permissions.ReflectionPermission> Se não <xref:System.Security.Permissions.ReflectionPermission>é concedido, reflexão é permitido em todos os tipos e membros, mas são permitidas operações de invocação apenas em tipos visíveis e membros.</xref:System.Security.Permissions.ReflectionPermission> Para obter mais informações, consulte [considerações de segurança para reflexão](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] > Porque <xref:System.Security.Permissions.ReflectionPermission>pode fornecer acesso aos membros de classe privada, recomendamos que conceda <xref:System.Security.Permissions.ReflectionPermission>ao código da Internet apenas com o sinalizador de RestrictedMemberAccess e não com quaisquer outros sinalizadores.</xref:System.Security.Permissions.ReflectionPermission> </xref:System.Security.Permissions.ReflectionPermission>       O sinalizador de RestrictedMemberAccess é introduzido no [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]. Para utilizar este sinalizador, a aplicação deve visar o [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)] ou posterior.      > [!IMPORTANT] > AllFlags não inclui o sinalizador de RestrictedMemberAccess. Para obter uma máscara de que inclui todos os sinalizadores esta enumeração, tem de utilizar a combinação de AllFlags com RestrictedMemberAccess.       Iniciando com o [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)], o sinalizador de ReflectionEmit já não é necessário para emitir o código, a menos que são emitidos símbolos de depuração. Para utilizar esta funcionalidade, a aplicação deve visar o [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] ou posterior.       Iniciando com o [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], o sinalizador de TypeInformation já não é necessário para refletir no nonpublic tipos e membros; o sinalizador foi marcado como obsoleto."
  example:
  - "The following example shows how to use the ReflectionPermissionFlag enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermission> class that represents the right to perform restricted member access. This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermission> class.  \n  \n For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/visualbasic/t-system.security.permis_18_1.vb)]\n [!code-cs[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/csharp/t-system.security.permis_18_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ReflectionPermissionFlag
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  id: AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "<xref uid=&quot;langword_csharp_TypeInformation&quot; name=&quot;TypeInformation&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MemberAccess&quot; name=&quot;MemberAccess&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_ReflectionEmit&quot; name=&quot;ReflectionEmit&quot; href=&quot;&quot;></xref> are set. AllFlags não inclui RestrictedMemberAccess."
  syntax:
    content: AllFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  id: MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Operações de invocação em todos os membros são permitidas, independentemente do conjunto de permissões. Se este sinalizador não estiver definido, as operações de invocação só são permitidas no membros visíveis."
  syntax:
    content: MemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  id: NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Enumeração de tipos e membros é permitida. Operações de invocação são permitidas em tipos visíveis e membros."
  syntax:
    content: NoFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  id: ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "É permitido emitir símbolos de depuração. Começando com o [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)], este sinalizador já não é necessário para emitir o código."
  syntax:
    content: ReflectionEmit
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  id: RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Acesso de membro restrito é fornecido para código parcialmente fidedigno. Código parcialmente fidedigno pode aceder a tipos nonpublic e membros, mas apenas se a concessão de conjunto do código parcialmente fidedigno inclui todas as permissões no conjunto de concessão da assemblagem que contém os tipos de nonpublic e membros que está a ser acedidos. Este sinalizador é novo no [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]."
  syntax:
    content: RestrictedMemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  id: TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Este sinalizador está obsoleto. Não existem sinalizadores são necessários para enumerar os tipos e membros de e para examinar os seus metadados. Em alternativa, utilize NoFlags."
  syntax:
    content: TypeInformation
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
