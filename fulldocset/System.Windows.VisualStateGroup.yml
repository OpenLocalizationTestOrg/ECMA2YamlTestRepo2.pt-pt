### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateGroup
  id: VisualStateGroup
  children:
  - System.Windows.VisualStateGroup.#ctor
  - System.Windows.VisualStateGroup.CurrentState
  - System.Windows.VisualStateGroup.CurrentStateChanged
  - System.Windows.VisualStateGroup.CurrentStateChanging
  - System.Windows.VisualStateGroup.Name
  - System.Windows.VisualStateGroup.States
  - System.Windows.VisualStateGroup.Transitions
  langs:
  - csharp
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
  type: Class
  summary: "Contém mutuamente <xref href=&quot;System.Windows.VisualState&quot;> </xref> objetos e <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objetos que são utilizados para mover de um Estado para outro."
  remarks: "Cada VisualStateGroup contém uma coleção de <xref:System.Windows.VisualState>objetos.</xref:System.Windows.VisualState> A <xref:System.Windows.VisualState>contém uma coleção de <xref:System.Windows.Media.Animation.Storyboard>objetos que especificar como aspecto do controlo é alterado quando o controlo está num Estado de determinados.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> Por exemplo, um <xref:System.Windows.Controls.Button>pode ter um aspeto ligeiramente diferente quando é premido que quando não é premido.</xref:System.Windows.Controls.Button> Dois Estados que o <xref:System.Windows.Controls.Button>define correspondem ao quando é premido (`&quot;Pressed&quot;`) e quando não se encontra (`&quot;Normal&quot;`).</xref:System.Windows.Controls.Button>       Adicionar <xref:System.Windows.VisualState>a um controlo, definindo o `VisualStateManager.VisualStateGroups` ligado propriedade no controlo.</xref:System.Windows.VisualState> Que coloca os Estados que o se mutuamente entre si no VisualStateGroup mesmo. Por exemplo, o <xref:System.Windows.Controls.CheckBox>tem dois objetos de VisualStateGroup.</xref:System.Windows.Controls.CheckBox> Um inclui os Estados `Normal`, `MouseOver`, `Pressed`, e `Disabled`. Outros contém os Estados `Checked`, `UnChecked`, e `Indeterminate`. O <xref:System.Windows.Controls.CheckBox>podem estar em Estados `MouseOver` e `UnChecked` ao mesmo tempo, mas não pode ser no `MouseOver` e `Pressed` Estados ao mesmo tempo.</xref:System.Windows.Controls.CheckBox>       Embora possa adicionar <xref:System.Windows.VisualState>objetos a qualquer elemento são uma forma particularmente útil para permitir que os outros possam redefinir o comportamento de <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> visual</xref:System.Windows.VisualState> Se criar um controlo personalizado que utiliza um <xref:System.Windows.Controls.ControlTemplate>, pode especificar que indica que o controlo pode estar em adicionando um <xref:System.Windows.TemplateVisualStateAttribute>na respetiva definição de classe.</xref:System.Windows.TemplateVisualStateAttribute> </xref:System.Windows.Controls.ControlTemplate> Em seguida, qualquer pessoa que cria uma nova <xref:System.Windows.Controls.ControlTemplate>para o controlo pode adicionar <xref:System.Windows.VisualState>objetos para o modelo.</xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> O <xref:System.Windows.TemplateVisualStateAttribute>ativa as ferramentas de Estruturador, tais como Expression Blend, para expor os Estados do controlo.</xref:System.Windows.TemplateVisualStateAttribute> Estados com o mesmo <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>pertencem a mesma VisualStateGroup.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>       Para obter mais informações sobre como utilizar objetos VisualStateGroup um <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar o aspeto de um controlo existente, criando um ControlTemplate](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Controls.ControlTemplate> Para obter mais informações sobre como criar controla que utilizam o <xref:System.Windows.VisualStateManager>, consulte [criação de um controlo que tem um aspeto personalizável](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.VisualStateManager>       O <xref:System.Windows.VisualStateGroup.Transitions%2A>propriedade contém <xref:System.Windows.VisualTransition>objetos que são aplicados quando a transição de controlo entre Estados que estão definidos no VisualStateGroup.</xref:System.Windows.VisualTransition> </xref:System.Windows.VisualStateGroup.Transitions%2A>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a VisualStateGroup named `CommonStates`, which defines the `MouseOver` and `Normal` states. The VisualStateGroup also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("States")]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public class VisualStateGroup : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> classe."
  syntax:
    content: public VisualStateGroup ();
    parameters: []
  overload: System.Windows.VisualStateGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentState
  id: CurrentState
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém o <xref href=&quot;System.Windows.VisualState&quot;> </xref> que atualmente é aplicado ao controlo."
  syntax:
    content: public System.Windows.VisualState CurrentState { get; }
    return:
      type: System.Windows.VisualState
      description: "O <xref href=&quot;System.Windows.VisualState&quot;> </xref> que atualmente é aplicado ao controlo."
  overload: System.Windows.VisualStateGroup.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  id: CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ocorre depois de um controlo passa para um Estado diferente."
  remarks: "Este evento ocorre após as transições de controlo para um novo Estado e o <xref:System.Windows.VisualStateGroup.CurrentStateChanging>evento ocorre.</xref:System.Windows.VisualStateGroup.CurrentStateChanging>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  id: CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ocorre quando um controlo inicia a transição para um Estado diferente."
  remarks: "O evento ocorre quando o controlo começa a Estados de transição. Se um <xref:System.Windows.VisualTransition>é aplicada para a alteração de estado, este evento ocorre quando começa a transição.</xref:System.Windows.VisualTransition> Se um <xref:System.Windows.VisualTransition>não está aplicado, este evento ocorre depois do controlo passa para o novo Estado, mas antes o <xref:System.Windows.VisualStateGroup.CurrentStateChanged>eventos.</xref:System.Windows.VisualStateGroup.CurrentStateChanged> </xref:System.Windows.VisualTransition>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Name
  id: Name
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o nome do <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  remarks: "Os autores de controlo especificar que indica que o controlo pode estar ao adicionar um <xref:System.Windows.TemplateVisualStateAttribute>na respetiva definição de classe.</xref:System.Windows.TemplateVisualStateAttribute> Estados com o mesmo <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>pertencem mesmo <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> Definir o nome de <xref:System.Windows.VisualStateGroup>para o valor da <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>propriedade.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> </xref:System.Windows.VisualStateGroup>"
  example:
  - "The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#5](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#5)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  overload: System.Windows.VisualStateGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.States
  id: States
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a coleção de mutuamente <xref href=&quot;System.Windows.VisualState&quot;> </xref> objetos."
  remarks: ''
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList States { get; }
    return:
      type: System.Collections.IList
      description: "A coleção de mutuamente <xref href=&quot;System.Windows.VisualState&quot;> </xref> objetos."
  overload: System.Windows.VisualStateGroup.States*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Transitions
  id: Transitions
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a coleção de <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objetos."
  remarks: "Os <xref:System.Windows.VisualTransition>objetos em transições são aplicados quando a transição de controlo entre Estados que estão definidas no <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.VisualTransition>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList Transitions { get; }
    return:
      type: System.Collections.IList
      description: "A coleção de <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objetos."
  overload: System.Windows.VisualStateGroup.Transitions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.VisualStateGroup.#ctor
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
- uid: System.Windows.VisualStateGroup.CurrentState
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisualStateChangedEventArgs>
  nameWithType: EventHandler<VisualStateChangedEventArgs>
  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.VisualStateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateChangedEventArgs
    name: VisualStateChangedEventArgs
    nameWithType: VisualStateChangedEventArgs
    fullName: VisualStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
- uid: System.Windows.VisualStateGroup.Name
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateGroup.States
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateGroup.Transitions
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
- uid: System.Windows.VisualStateGroup.#ctor*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup.VisualStateGroup
- uid: System.Windows.VisualStateGroup.CurrentState*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
- uid: System.Windows.VisualStateGroup.Name*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
- uid: System.Windows.VisualStateGroup.States*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
- uid: System.Windows.VisualStateGroup.Transitions*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
