### YamlMime:ManagedReference
items:
- uid: System.Configuration.RegexStringValidatorAttribute
  id: RegexStringValidatorAttribute
  children:
  - System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)
  - System.Configuration.RegexStringValidatorAttribute.Regex
  - System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  langs:
  - csharp
  name: RegexStringValidatorAttribute
  nameWithType: RegexStringValidatorAttribute
  fullName: System.Configuration.RegexStringValidatorAttribute
  type: Class
  summary: "Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited."
  remarks: "You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <xref:System.Configuration.RegexStringValidator> and pass to it the value of the decorating parameters.       You may apply RegexStringValidatorAttribute objects to property types only."
  example:
  - "The following example shows how to decorate the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the RegexStringValidatorAttribute object.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/VisualBasic/t-system.configuration.r_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/CSharp/t-system.configuration.r_2_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class RegexStringValidatorAttribute : System.Configuration.ConfigurationValidatorAttribute
  inheritance:
  - System.Attribute
  - System.Configuration.ConfigurationValidatorAttribute
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationValidatorAttribute.ValidatorType
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.RegexStringValidatorAttribute
  langs:
  - csharp
  name: RegexStringValidatorAttribute(String)
  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
  fullName: System.Configuration.RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Configuration.RegexStringValidatorAttribute&quot;></see> object."
  remarks: "The `regex` parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property.       You use this constructor in the attributed model to ensure that the string value assigned to the related property contains only the allowed characters."
  example:
  - "The following example shows how to use the RegexStringValidatorAttribute constructor.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/VisualBasic/m-system.configuration.r_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/CSharp/m-system.configuration.r_0_1.cs)]"
  syntax:
    content: public RegexStringValidatorAttribute (string regex);
    parameters:
    - id: regex
      type: System.String
      description: "The string to use for regular expression validation."
  overload: System.Configuration.RegexStringValidatorAttribute.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.RegexStringValidatorAttribute.Regex
  id: Regex
  parent: System.Configuration.RegexStringValidatorAttribute
  langs:
  - csharp
  name: Regex
  nameWithType: RegexStringValidatorAttribute.Regex
  fullName: System.Configuration.RegexStringValidatorAttribute.Regex
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the string used to perform regular-expression validation."
  remarks: ''
  example:
  - "The following example shows how to use the Regex property.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/VisualBasic/p-system.configuration.r_1_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/CSharp/p-system.configuration.r_1_1.cs)]"
  syntax:
    content: public string Regex { get; }
    return:
      type: System.String
      description: "The string containing the regular expression used to filter the string assigned to the decorated configuration-element property."
  overload: System.Configuration.RegexStringValidatorAttribute.Regex*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  id: ValidatorInstance
  parent: System.Configuration.RegexStringValidatorAttribute
  langs:
  - csharp
  name: ValidatorInstance
  nameWithType: RegexStringValidatorAttribute.ValidatorInstance
  fullName: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets an instance of the <see cref=&quot;T:System.Configuration.RegexStringValidator&quot;></see> class."
  remarks: "You use the ValidatorInstance property to perform string validation by calling its <xref:System.Configuration.StringValidator.Validate%2A> method."
  example:
  - "The following example shows how to use the ValidatorInstance method.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/VisualBasic/p-system.configuration.r_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/CSharp/p-system.configuration.r_0_1.cs)]"
  syntax:
    content: public override System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }
    return:
      type: System.Configuration.ConfigurationValidatorBase
      description: "The <see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot;></see> validator instance."
  overload: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Configuration.ConfigurationValidatorAttribute
  isExternal: false
  name: System.Configuration.ConfigurationValidatorAttribute
- uid: System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: RegexStringValidatorAttribute(String)
  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
  fullName: System.Configuration.RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.RegexStringValidatorAttribute.Regex
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: Regex
  nameWithType: RegexStringValidatorAttribute.Regex
  fullName: System.Configuration.RegexStringValidatorAttribute.Regex
- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: ValidatorInstance
  nameWithType: RegexStringValidatorAttribute.ValidatorInstance
  fullName: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
- uid: System.Configuration.ConfigurationValidatorBase
  parent: System.Configuration
  isExternal: false
  name: ConfigurationValidatorBase
  nameWithType: ConfigurationValidatorBase
  fullName: System.Configuration.ConfigurationValidatorBase
- uid: System.Configuration.RegexStringValidatorAttribute.#ctor*
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: RegexStringValidatorAttribute
  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute
- uid: System.Configuration.RegexStringValidatorAttribute.Regex*
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: Regex
  nameWithType: RegexStringValidatorAttribute.Regex
- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance*
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: ValidatorInstance
  nameWithType: RegexStringValidatorAttribute.ValidatorInstance
