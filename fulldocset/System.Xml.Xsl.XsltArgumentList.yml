### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XsltArgumentList
  id: XsltArgumentList
  children:
  - System.Xml.Xsl.XsltArgumentList.#ctor
  - System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)
  - System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)
  - System.Xml.Xsl.XsltArgumentList.Clear
  - System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)
  - System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)
  - System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)
  - System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)
  - System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  langs:
  - csharp
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
  type: Class
  summary: "Contains a variable number of arguments which are either XSLT parameters or extension objects."
  remarks: "This class is used by the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method. It allows parameters and extension objects to be invoked from within the style sheet.       When the parameters and objects are added to the XsltArgumentList, they are associated with a namespace qualified name and a namespace URI, respectively.       The following are advantages to passing an object rather than using an embedded script such as `<msxsl:script>`:      -   Provides better encapsulation and reuse of classes.      -   Allows style sheets to be smaller and more easily maintained.      -   Supports passing node fragments (through the <xref:System.Xml.XPath.XPathNavigator>) to the style sheet.       For more information about using the XsltArgumentList, see [XSLT Extension Objects](~/add/includes/ajax-current-ext-md.md) and [XSLT Parameters](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public class XsltArgumentList
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: XsltArgumentList()
  nameWithType: XsltArgumentList.XsltArgumentList()
  fullName: System.Xml.Xsl.XsltArgumentList.XsltArgumentList()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Implements a new instance of the <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>."
  syntax:
    content: public XsltArgumentList ();
    parameters: []
  overload: System.Xml.Xsl.XsltArgumentList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)
  id: AddExtensionObject(System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: AddExtensionObject(String,Object)
  nameWithType: XsltArgumentList.AddExtensionObject(String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Adds a new object to the <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> and associates it with the namespace URI."
  remarks: "The `params` keyword, which allows an unspecified number of parameters to be passed, is currently not supported. XSLT style sheets that utilize methods defined with the `params` keyword does not work correctly. For more information, see [params](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "In the following example, the style sheet uses an XSLT extension object to convert the book price.  \n  \n [!code-vb[XsltArgumentList.AddExtensionObject#1](~/add/codesnippet/visualbasic/207575d1-290f-43a6-bf00-_1.vb)]\n [!code-cs[XsltArgumentList.AddExtensionObject#1](~/add/codesnippet/csharp/207575d1-290f-43a6-bf00-_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XsltArgumentList.AddExtensionObject#2](~/add/codesnippet/xml/207575d1-290f-43a6-bf00-_2.xml)]  \n  \n `prices.xsl`  \n  \n [!code-xml[XsltArgumentList.AddExtensionObject#3](~/add/codesnippet/xml/207575d1-290f-43a6-bf00-_3.xsl)]"
  syntax:
    content: public void AddExtensionObject (string namespaceUri, object extension);
    parameters:
    - id: namespaceUri
      type: System.String
      description: "The namespace URI to associate with the object. To use the default namespace, specify an empty string."
    - id: extension
      type: System.Object
      description: "The object to add to the list."
  overload: System.Xml.Xsl.XsltArgumentList.AddExtensionObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>namespaceUri</code> is either <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or http://www.w3.org/1999/XSL/Transform       The <code>namespaceUri</code> already has an extension object associated with it."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The caller does not have sufficient permissions to call this method."
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)
  id: AddParam(System.String,System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: AddParam(String,String,Object)
  nameWithType: XsltArgumentList.AddParam(String,String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddParam(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Adds a parameter to the <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> and associates it with the namespace qualified name."
  remarks: "The `parameter` should correspond to a W3C type. The following table shows the W3C types, either XPath or XSLT, and the corresponding.NET class.      |W3C Type|Equivalent.NET Class (Type)|   |--------------|-----------------------------------|   |`String` (XPath)|<xref:System.String>|   |`Boolean` (XPath)|<xref:System.Boolean>|   |`Number` (XPath)|<xref:System.Double>|   |`Result Tree Fragment` (XSLT)|<xref:System.Xml.XPath.XPathNavigator>|   |`Node Set` (XPath)|<xref:System.Xml.XPath.XPathNodeIterator><br /><br /> `XPathNavigator[]`|   |`Node`* (XPath)|<xref:System.Xml.XPath.XPathNavigator>|       *This is equivalent to a node set that contains a single node.       If the parameter object being invoked from within the style sheet  is not one of the above, it is converted according to the following rules:      -   CLR numeric types are converted to <xref:System.Double>.      -   The <xref:System.DateTime> type is converted to <xref:System.String>.      -   <xref:System.Xml.XPath.IXPathNavigable> types are converted to <xref:System.Xml.XPath.XPathNavigator>. `XPathNavigator[]` is converted to <xref:System.Xml.XPath.XPathNodeIterator>.       All other types throw an error."
  example:
  - "The following example uses the AddParam method to create a parameter representing the current date and time.  \n  \n [!code-vb[XsltArgumentList.AddParam#1](~/add/codesnippet/visualbasic/8ec8daf9-d9bd-4ab5-82ff-_1.vb)]\n [!code-cs[XsltArgumentList.AddParam#1](~/add/codesnippet/csharp/8ec8daf9-d9bd-4ab5-82ff-_1.cs)]  \n  \n The example uses the following two data files as input.  \n  \n `order.xml`  \n  \n [!code-xml[XsltArgumentList.AddParam#2](~/add/codesnippet/xml/8ec8daf9-d9bd-4ab5-82ff-_2.xml)]  \n  \n `order.xsl`  \n  \n [!code-xml[XsltArgumentList.AddParam#3](~/add/codesnippet/xml/8ec8daf9-d9bd-4ab5-82ff-_3.xsl)]"
  syntax:
    content: public void AddParam (string name, string namespaceUri, object parameter);
    parameters:
    - id: name
      type: System.String
      description: "The name to associate with the parameter."
    - id: namespaceUri
      type: System.String
      description: "The namespace URI to associate with the parameter. To use the default namespace, specify an empty string."
    - id: parameter
      type: System.Object
      description: "The parameter value or object to add to the list."
  overload: System.Xml.Xsl.XsltArgumentList.AddParam*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>namespaceUri</code> is either <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or http://www.w3.org/1999/XSL/Transform.       The <code>name</code> is not a valid name according to the W3C XML specification.       The <code>namespaceUri</code> already has a parameter associated with it."
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.Clear
  id: Clear
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: Clear()
  nameWithType: XsltArgumentList.Clear()
  fullName: System.Xml.Xsl.XsltArgumentList.Clear()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Removes all parameters and extension objects from the <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Xml.Xsl.XsltArgumentList.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)
  id: GetExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: GetExtensionObject(String)
  nameWithType: XsltArgumentList.GetExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Gets the object associated with the given namespace."
  syntax:
    content: public object GetExtensionObject (string namespaceUri);
    parameters:
    - id: namespaceUri
      type: System.String
      description: "The namespace URI of the object."
    return:
      type: System.Object
      description: "The namespace URI object or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if one was not found."
  overload: System.Xml.Xsl.XsltArgumentList.GetExtensionObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)
  id: GetParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: GetParam(String,String)
  nameWithType: XsltArgumentList.GetParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetParam(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Gets the parameter associated with the namespace qualified name."
  syntax:
    content: public object GetParam (string name, string namespaceUri);
    parameters:
    - id: name
      type: System.String
      description: "The name of the parameter. <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> does not check to ensure the name passed is a valid local name; however, the name cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: namespaceUri
      type: System.String
      description: "The namespace URI associated with the parameter."
    return:
      type: System.Object
      description: "The parameter object or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if one was not found."
  overload: System.Xml.Xsl.XsltArgumentList.GetParam*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)
  id: RemoveExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: RemoveExtensionObject(String)
  nameWithType: XsltArgumentList.RemoveExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Removes the object with the namespace URI from the <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>."
  syntax:
    content: public object RemoveExtensionObject (string namespaceUri);
    parameters:
    - id: namespaceUri
      type: System.String
      description: "The namespace URI associated with the object to remove."
    return:
      type: System.Object
      description: "The object with the namespace URI or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if one was not found."
  overload: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)
  id: RemoveParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: RemoveParam(String,String)
  nameWithType: XsltArgumentList.RemoveParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveParam(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Removes the parameter from the <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>."
  syntax:
    content: public object RemoveParam (string name, string namespaceUri);
    parameters:
    - id: name
      type: System.String
      description: "The name of the parameter to remove. <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> does not check to ensure the name passed is a valid local name; however, the name cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: namespaceUri
      type: System.String
      description: "The namespace URI of the parameter to remove."
    return:
      type: System.Object
      description: "The parameter object or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if one was not found."
  overload: System.Xml.Xsl.XsltArgumentList.RemoveParam*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  id: XsltMessageEncountered
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: XsltMessageEncountered
  nameWithType: XsltArgumentList.XsltMessageEncountered
  fullName: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Occurs when a message is specified in the style sheet by the `xsl:message` element."
  remarks: "If the event is not registered, all messages are piped to standard out."
  syntax:
    content: public event System.Xml.Xsl.XsltMessageEncounteredEventHandler XsltMessageEncountered;
    return:
      type: System.Xml.Xsl.XsltMessageEncounteredEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Xml.Xsl.XsltArgumentList.#ctor
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: XsltArgumentList()
  nameWithType: XsltArgumentList.XsltArgumentList()
  fullName: System.Xml.Xsl.XsltArgumentList.XsltArgumentList()
- uid: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddExtensionObject(String,Object)
  nameWithType: XsltArgumentList.AddExtensionObject(String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddParam(String,String,Object)
  nameWithType: XsltArgumentList.AddParam(String,String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddParam(String,String,Object)
- uid: System.Xml.Xsl.XsltArgumentList.Clear
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: Clear()
  nameWithType: XsltArgumentList.Clear()
  fullName: System.Xml.Xsl.XsltArgumentList.Clear()
- uid: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetExtensionObject(String)
  nameWithType: XsltArgumentList.GetExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(String)
- uid: System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetParam(String,String)
  nameWithType: XsltArgumentList.GetParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetParam(String,String)
- uid: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveExtensionObject(String)
  nameWithType: XsltArgumentList.RemoveExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(String)
- uid: System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveParam(String,String)
  nameWithType: XsltArgumentList.RemoveParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveParam(String,String)
- uid: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: XsltMessageEncountered
  nameWithType: XsltArgumentList.XsltMessageEncountered
  fullName: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
- uid: System.Xml.Xsl.XsltMessageEncounteredEventHandler
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltMessageEncounteredEventHandler
  nameWithType: XsltMessageEncounteredEventHandler
  fullName: System.Xml.Xsl.XsltMessageEncounteredEventHandler
- uid: System.Xml.Xsl.XsltArgumentList.#ctor*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList.XsltArgumentList
- uid: System.Xml.Xsl.XsltArgumentList.AddExtensionObject*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddExtensionObject
  nameWithType: XsltArgumentList.AddExtensionObject
- uid: System.Xml.Xsl.XsltArgumentList.AddParam*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddParam
  nameWithType: XsltArgumentList.AddParam
- uid: System.Xml.Xsl.XsltArgumentList.Clear*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: Clear
  nameWithType: XsltArgumentList.Clear
- uid: System.Xml.Xsl.XsltArgumentList.GetExtensionObject*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetExtensionObject
  nameWithType: XsltArgumentList.GetExtensionObject
- uid: System.Xml.Xsl.XsltArgumentList.GetParam*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetParam
  nameWithType: XsltArgumentList.GetParam
- uid: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveExtensionObject
  nameWithType: XsltArgumentList.RemoveExtensionObject
- uid: System.Xml.Xsl.XsltArgumentList.RemoveParam*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveParam
  nameWithType: XsltArgumentList.RemoveParam
