### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  id: ManualWorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  langs:
  - csharp
  name: ManualWorkflowSchedulerService
  nameWithType: ManualWorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  type: Class
  summary: "Provides a threading service that allows the host application creating a workflow instance to donate the <xref href=&quot;System.Threading.Thread&quot;></xref> on which the workflow instance is run. Using this threading service, host applications can run a workflow instance on a single <xref href=&quot;System.Threading.Thread&quot;></xref> in synchronous mode (although if the workflow contains a delay activity, the work is postponed until after the delay activity is executed on a separate thread spawned by [System.Threading.Timer](~/add/includes/ajax-current-ext-md.md)).This mode blocks the execution of the host application until the workflow instance becomes idle. Subsequently, the workflow instance can only be executed using the <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*> method of this service."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       ManualWorkflowSchedulerService does not automatically run a workflow instance that is in the queue. The host must call <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A> to run a specified workflow."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class ManualWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService()
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;></xref> class."
  syntax:
    content: public ManualWorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService(Boolean)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;></xref> class."
  syntax:
    content: public ManualWorkflowSchedulerService (bool useActiveTimers);
    parameters:
    - id: useActiveTimers
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> that determines how delay activities are handled. If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer). If <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, the host must manually resume the workflow after the delay activities expire."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService(NameValueCollection)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;></xref> class."
  syntax:
    content: public ManualWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> that contains parameters for `useActiveTimers`. If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer). If <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, the host must manually resume the workflow after the delay activities expire."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: ManualWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Cancels the specified existing workflow instance work item."
  syntax:
    content: protected override void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: "The <xref:System.Guid> associated with the existing scheduled work item to cancel."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: ManualWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Overloaded from &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName&gt;. This method is called whenever &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A?displayProperty=fullName&gt; is called and is used by the <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;></xref> to do work that is needed when the <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;></xref> starts."
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  id: RunWorkflow(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: RunWorkflow(Guid)
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Runs the specified workflow instance."
  remarks: "This is a synchronous call that uses the current thread to run the workflow. It does not return until the workflow idles, suspends, completes, terminates, or aborts."
  syntax:
    content: public bool RunWorkflow (Guid workflowInstanceId);
    parameters:
    - id: workflowInstanceId
      type: System.Guid
      description: "The <xref:System.Guid> for the workflow instance to run."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the workflow starts running; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code> is an empty GUID."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Adds a workflow instance to the pending work items queue using the specified workflow instance using the specified multicast delegate."
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;></xref> multicast delegate that represents the method to run."
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid> that represents the workflow instance."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code> contains a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Adds the specified workflow instance to the pending work item queue using the specified multicast delegate, <xref:System.DateTime> and GUIDs."
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;></xref> multicast delegate that represents the method to run."
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid> that represents the workflow instance."
    - id: whenUtc
      type: System.DateTime
      description: "The <xref:System.DateTime> that indicates the time to begin running the thread."
    - id: timerId
      type: System.Guid
      description: "A <xref:System.Guid> that represents the scheduled thread."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code> contains a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code> or <code>timerId</code> is an empty GUID."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Stop()
  nameWithType: ManualWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Overloaded from &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A?displayProperty=fullName&gt;. The <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;></xref> uses this method to do work that is needed when the <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;></xref> stops."
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService()
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService(Boolean)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService(NameValueCollection)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: ManualWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: OnStarted()
  nameWithType: ManualWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: RunWorkflow(Guid)
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(Guid)
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Stop()
  nameWithType: ManualWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: ManualWorkflowSchedulerService.Cancel
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: OnStarted
  nameWithType: ManualWorkflowSchedulerService.OnStarted
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: RunWorkflow
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: ManualWorkflowSchedulerService.Schedule
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Stop
  nameWithType: ManualWorkflowSchedulerService.Stop
