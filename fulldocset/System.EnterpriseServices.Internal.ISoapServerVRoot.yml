### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot
  id: ISoapServerVRoot
  children:
  - System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)
  - System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  langs:
  - csharp
  name: ISoapServerVRoot
  nameWithType: ISoapServerVRoot
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot
  type: Interface
  summary: "Publishes authenticated, encrypted SOAP virtual roots on servers."
  remarks: "See <xref:System.EnterpriseServices.Internal.SoapServerVRoot> for the default implementation.       ISoapServerVRoot is used internally by the .NET Framework. You do not need to use it directly in your code."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")]

      public interface ISoapServerVRoot
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  langs:
  - csharp
  name: CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Creates a SOAP virtual root with security options."
  syntax:
    content: public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "The root Web server."
    - id: inBaseUrl
      type: System.String
      description: "The base URL that contains the virtual root."
    - id: inVirtualRoot
      type: System.String
      description: "The name of the virtual root."
    - id: homePage
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref uid=&quot;langword_csharp_EnableDefaultDoc&quot; name=&quot;EnableDefaultDoc&quot; href=&quot;&quot;></xref> property is to be set; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: discoFile
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a default discovery file is to be created; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if there is to be no discovery file. If <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and a Default.disco file exists, the file is deleted."
    - id: secureSockets
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if SSL encryption is required; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: authentication
      type: System.String
      description: "Specify &quot;anonymous&quot; if no authentication is to be used (anonymous user). Otherwise, specify an empty string."
    - id: operation
      type: System.String
      description: "Not used. Specify <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> for this parameter."
    - id: baseUrl
      type: System.String
      description: "When this method returns, this parameter contains the base URL."
    - id: virtualRoot
      type: System.String
      description: "When this method returns, this parameter contains the name of the virtual root."
    - id: physicalPath
      type: System.String
      description: "When this method returns, this parameter contains the disk address of the Virtual Root directory."
  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A caller in the call chain does not have permission to access unmanaged code."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The SOAP utility is not available."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)
  id: DeleteVirtualRootEx(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  langs:
  - csharp
  name: DeleteVirtualRootEx(String,String,String)
  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Deletes a virtual root. Not fully implemented."
  remarks: "The functionality to delete a virtual root is not currently available in the implementation of this interface. The implementation returns without deleting the root."
  syntax:
    content: public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "The root Web server."
    - id: baseUrl
      type: System.String
      description: "The base URL that contains the virtual root."
    - id: virtualRoot
      type: System.String
      description: "The name of the virtual root."
  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A caller in the call chain does not have permission to access unmanaged code."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The SOAP utility is not available."
  - type: System.EnterpriseServices.ServicedComponentException
    commentId: T:System.EnterpriseServices.ServicedComponentException
    description: "The call to identify the system directory failed."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  id: GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  langs:
  - csharp
  name: GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Returns the security status of an existing SOAP virtual root."
  syntax:
    content: public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "The root Web server."
    - id: inBaseUrl
      type: System.String
      description: "The base URL that contains the virtual root."
    - id: inVirtualRoot
      type: System.String
      description: "The name of the virtual root."
    - id: exists
      type: System.String
      description: "When this method returns, this parameter contains a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the virtual directory exists; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: secureSockets
      type: System.String
      description: "When this method returns, this parameter contains a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if SSL encryption is required; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: windowsAuth
      type: System.String
      description: "When this method returns, this parameter contains <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if Windows authentication is set, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: anonymous
      type: System.String
      description: "When this method returns, this parameter contains <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if no authentication is set (anonymous user); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: homePage
      type: System.String
      description: "When this method returns, this parameter contains a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the Virtual Root directory&quot;s <xref uid=&quot;langword_csharp_EnableDefaultDoc&quot; name=&quot;EnableDefaultDoc&quot; href=&quot;&quot;></xref> property is set; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: discoFile
      type: System.String
      description: "When this method returns, this parameter contains a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a Default.disco file exists; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: physicalPath
      type: System.String
      description: "When this method returns, this parameter contains the disk address of the Virtual Root directory."
    - id: baseUrl
      type: System.String
      description: "When this method returns, this parameter contains the base URL."
    - id: virtualRoot
      type: System.String
      description: "When this method returns, this parameter contains the name of the virtual root."
  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServicedComponentException
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponentException
  nameWithType: ServicedComponentException
  fullName: System.EnterpriseServices.ServicedComponentException
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: DeleteVirtualRootEx(String,String,String)
  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx*
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: CreateVirtualRootEx
  nameWithType: ISoapServerVRoot.CreateVirtualRootEx
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx*
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: DeleteVirtualRootEx
  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus*
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: GetVirtualRootStatus
  nameWithType: ISoapServerVRoot.GetVirtualRootStatus
