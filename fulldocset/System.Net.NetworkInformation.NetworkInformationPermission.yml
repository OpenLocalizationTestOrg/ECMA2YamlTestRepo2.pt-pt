### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.NetworkInformationPermission
  id: NetworkInformationPermission
  children:
  - System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)
  - System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.NetworkInformation.NetworkInformationPermission.Access
  - System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)
  - System.Net.NetworkInformation.NetworkInformationPermission.Copy
  - System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)
  - System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)
  - System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted
  - System.Net.NetworkInformation.NetworkInformationPermission.ToXml
  - System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: NetworkInformationPermission
  nameWithType: NetworkInformationPermission
  fullName: System.Net.NetworkInformation.NetworkInformationPermission
  type: Class
  summary: "Controls access to network information and traffic statistics for the local computer. This class cannot be inherited."
  remarks: "This permission is used to secure data returned by the classes in the <xref:System.Net.NetworkInformation> namespace.       For declarative security, use the <xref:System.Net.NetworkInformation.NetworkInformationPermissionAttribute> class."
  example:
  - "The following example creates an unrestricted permission object.  \n  \n [!code-cpp[NclNetworkInfoPerms#1](~/add/codesnippet/cpp/t-system.net.networkinfo_1_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#1](~/add/codesnippet/csharp/t-system.net.networkinfo_1_1.cs)]\n [!code-vb[NclNetworkInfoPerms#1](~/add/codesnippet/visualbasic/t-system.net.networkinfo_1_1.vb)]"
  syntax:
    content: 'public sealed class NetworkInformationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)
  id: '#ctor(System.Net.NetworkInformation.NetworkInformationAccess)'
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: NetworkInformationPermission(NetworkInformationAccess)
  nameWithType: NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.NetworkInformation.NetworkInformationPermission&quot;></xref> class using the specified <xref href=&quot;System.Net.NetworkInformation.NetworkInformationAccess&quot;></xref> value."
  remarks: "The permission created by this constructor can be used to secure access to network information."
  example:
  - "The following example creates a permission object that controls access to network information.  \n  \n [!code-cpp[NclNetworkInfoPerms#3](~/add/codesnippet/cpp/0c9e38f1-56eb-4687-a9ed-_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#3](~/add/codesnippet/csharp/0c9e38f1-56eb-4687-a9ed-_1.cs)]\n [!code-vb[NclNetworkInfoPerms#3](~/add/codesnippet/visualbasic/0c9e38f1-56eb-4687-a9ed-_1.vb)]"
  syntax:
    content: public NetworkInformationPermission (System.Net.NetworkInformation.NetworkInformationAccess access);
    parameters:
    - id: access
      type: System.Net.NetworkInformation.NetworkInformationAccess
      description: "One of the <xref href=&quot;System.Net.NetworkInformation.NetworkInformationAccess&quot;></xref> values."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: NetworkInformationPermission(PermissionState)
  nameWithType: NetworkInformationPermission.NetworkInformationPermission(PermissionState)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.NetworkInformationPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.NetworkInformation.NetworkInformationPermission&quot;></xref> class with the specified <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>."
  remarks: "The permission created by this constructor can be used to secure access to network information."
  example:
  - "The following example creates an unrestricted permission object.  \n  \n [!code-cpp[NclNetworkInfoPerms#1](~/add/codesnippet/cpp/5800daa4-2cb9-4fea-9e49-_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#1](~/add/codesnippet/csharp/5800daa4-2cb9-4fea-9e49-_1.cs)]\n [!code-vb[NclNetworkInfoPerms#1](~/add/codesnippet/visualbasic/5800daa4-2cb9-4fea-9e49-_1.vb)]"
  syntax:
    content: public NetworkInformationPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "One of the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> values."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Access
  id: Access
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: Access
  nameWithType: NetworkInformationPermission.Access
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Access
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Gets the level of access to network information controlled by this permission."
  remarks: "A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess> &#124; <xref:System.Net.NetworkInformation.NetworkInformationAccess> access. A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess> access."
  example:
  - "The following code example creates a <xref:System.Net.NetworkInformation.NetworkInformationPermission>, adds a <xref:System.Net.NetworkInformation.NetworkInformationAccess> value to it, and displays the value of this property.  \n  \n [!code-cpp[NclNetworkInfoPerms#7](~/add/codesnippet/cpp/p-system.net.networkinfo_7_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#7](~/add/codesnippet/csharp/p-system.net.networkinfo_7_1.cs)]\n [!code-vb[NclNetworkInfoPerms#7](~/add/codesnippet/visualbasic/p-system.net.networkinfo_7_1.vb)]"
  syntax:
    content: public System.Net.NetworkInformation.NetworkInformationAccess Access { get; }
    return:
      type: System.Net.NetworkInformation.NetworkInformationAccess
      description: "One of the <xref href=&quot;System.Net.NetworkInformation.NetworkInformationAccess&quot;></xref> values."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.Access*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)
  id: AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: AddPermission(NetworkInformationAccess)
  nameWithType: NetworkInformationPermission.AddPermission(NetworkInformationAccess)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(NetworkInformationAccess)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Adds the specified value to this permission."
  remarks: "Use this method to modify access to network information by adding to the state of the current permission."
  example:
  - "The following example creates an empty permission object and then adds to it.  \n  \n [!code-cpp[NclNetworkInfoPerms#7](~/add/codesnippet/cpp/fe9a0842-daf8-4a73-876b-_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#7](~/add/codesnippet/csharp/fe9a0842-daf8-4a73-876b-_1.cs)]\n [!code-vb[NclNetworkInfoPerms#7](~/add/codesnippet/visualbasic/fe9a0842-daf8-4a73-876b-_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkInformation.NetworkInformationAccess access);
    parameters:
    - id: access
      type: System.Net.NetworkInformation.NetworkInformationAccess
      description: "One of the <xref href=&quot;System.Net.NetworkInformation.NetworkInformationAccess&quot;></xref> values."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Copy
  id: Copy
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: NetworkInformationPermission.Copy()
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Creates and returns an identical copy of this permission."
  remarks: "A copy of a permission represents the same access to resources as the original permission."
  example:
  - "The following example creates copy of a permission object.  \n  \n [!code-cpp[NclNetworkInfoPerms#4](~/add/codesnippet/cpp/m-system.net.networkinfo_0_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#4](~/add/codesnippet/csharp/m-system.net.networkinfo_0_1.cs)]\n [!code-vb[NclNetworkInfoPerms#4](~/add/codesnippet/visualbasic/m-system.net.networkinfo_0_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.NetworkInformation.NetworkInformationPermission&quot;></xref> that is identical to the current permission"
  overload: System.Net.NetworkInformation.NetworkInformationPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: NetworkInformationPermission.FromXml(SecurityElement)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Sets the state of this permission using the specified XML encoding."
  remarks: "This method is used by the security system and is not normally called by application code."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;></xref> that contains the XML encoding to use to set the state of the current permission"
  overload: System.Net.NetworkInformation.NetworkInformationPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code> is not a permission encoding.       -or-       <code>securityElement</code> is not an encoding of a <xref href=&quot;System.Net.NetworkInformation.NetworkInformationPermission&quot;></xref>.       -or-       <code>securityElement</code> has invalid <xref href=&quot;System.Net.NetworkInformation.NetworkInformationAccess&quot;></xref> values."
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: NetworkInformationPermission.Intersect(IPermission)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Creates and returns a permission that is the intersection of the current permission and the specified permission."
  remarks: "The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection."
  example:
  - "The following example creates a permission object that is the intersection of existing permission objects.  \n  \n [!code-cpp[NclNetworkInfoPerms#6](~/add/codesnippet/cpp/fe4f8c0c-6e8b-41f4-9103-_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#6](~/add/codesnippet/csharp/fe4f8c0c-6e8b-41f4-9103-_1.cs)]\n [!code-vb[NclNetworkInfoPerms#6](~/add/codesnippet/visualbasic/fe4f8c0c-6e8b-41f4-9103-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "An <xref href=&quot;System.Security.IPermission&quot;></xref> to intersect with the current permission. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.NetworkInformation.NetworkInformationPermission&quot;></xref> that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the intersection is empty or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code> is not a <xref href=&quot;System.Net.NetworkInformation.NetworkInformationPermission&quot;></xref>."
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: NetworkInformationPermission.IsSubsetOf(IPermission)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Determines whether the current permission is a subset of the specified permission."
  remarks: "The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. If this method returns true, the current permission represents no more access to the protected resource than does the specified permission."
  example:
  - "The following code example displays the subset relationship between two permissions.  \n  \n [!code-cpp[NclNetworkInfoPerms#5](~/add/codesnippet/cpp/0c2f654b-ec51-424b-8a0f-_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#5](~/add/codesnippet/csharp/0c2f654b-ec51-424b-8a0f-_1.cs)]\n [!code-vb[NclNetworkInfoPerms#5](~/add/codesnippet/visualbasic/0c2f654b-ec51-424b-8a0f-_1.vb)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "An <xref href=&quot;System.Security.IPermission&quot;></xref> that is to be tested for the subset relationship. This permission must be of the same type as the current permission"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: NetworkInformationPermission.IsUnrestricted()
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Returns a value indicating whether the current permission is unrestricted."
  remarks: "An unrestricted permission is created using the <xref:System.Net.NetworkInformation.NetworkInformationPermission.%23ctor%2A> constructor."
  example:
  - "The following example creates a permission object and displays its state.  \n  \n [!code-cpp[NclNetworkInfoPerms#2](~/add/codesnippet/cpp/m-system.net.networkinfo_3_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#2](~/add/codesnippet/csharp/m-system.net.networkinfo_3_1.cs)]\n [!code-vb[NclNetworkInfoPerms#2](~/add/codesnippet/visualbasic/m-system.net.networkinfo_3_1.vb)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current permission is unrestricted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.ToXml
  id: ToXml
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: NetworkInformationPermission.ToXml()
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Creates an XML encoding of the state of this permission."
  remarks: "This method is used by the security system and is not normally called by application code."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;></xref> that contains the XML encoding of the current permission."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: NetworkInformationPermission.Union(IPermission)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Creates a permission that is the union of this permission and the specified permission."
  remarks: "The Union method returns a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union."
  example:
  - "The following example creates a permission object that is the union of existing permission objects.  \n  \n [!code-cpp[NclNetworkInfoPerms#5](~/add/codesnippet/cpp/5deacdcb-eed2-429c-9be9-_1.cpp)]\n [!code-cs[NclNetworkInfoPerms#5](~/add/codesnippet/csharp/5deacdcb-eed2-429c-9be9-_1.cs)]\n [!code-vb[NclNetworkInfoPerms#5](~/add/codesnippet/visualbasic/5deacdcb-eed2-429c-9be9-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.NetworkInformation.NetworkInformationPermission&quot;></xref> permission to combine with the current permission."
    return:
      type: System.Security.IPermission
      description: "A new permission that represents the union of the current permission and the specified permission."
  overload: System.Net.NetworkInformation.NetworkInformationPermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: NetworkInformationPermission(NetworkInformationAccess)
  nameWithType: NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)
- uid: System.Net.NetworkInformation.NetworkInformationAccess
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkInformationAccess
  nameWithType: NetworkInformationAccess
  fullName: System.Net.NetworkInformation.NetworkInformationAccess
- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: NetworkInformationPermission(PermissionState)
  nameWithType: NetworkInformationPermission.NetworkInformationPermission(PermissionState)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.NetworkInformationPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Access
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Access
  nameWithType: NetworkInformationPermission.Access
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Access
- uid: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: AddPermission(NetworkInformationAccess)
  nameWithType: NetworkInformationPermission.AddPermission(NetworkInformationAccess)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(NetworkInformationAccess)
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Copy
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Copy()
  nameWithType: NetworkInformationPermission.Copy()
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: NetworkInformationPermission.FromXml(SecurityElement)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: NetworkInformationPermission.Intersect(IPermission)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Intersect(IPermission)
- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: NetworkInformationPermission.IsSubsetOf(IPermission)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: NetworkInformationPermission.IsUnrestricted()
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted()
- uid: System.Net.NetworkInformation.NetworkInformationPermission.ToXml
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: ToXml()
  nameWithType: NetworkInformationPermission.ToXml()
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.ToXml()
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: NetworkInformationPermission.Union(IPermission)
  fullName: System.Net.NetworkInformation.NetworkInformationPermission.Union(IPermission)
- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: NetworkInformationPermission
  nameWithType: NetworkInformationPermission.NetworkInformationPermission
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Access*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Access
  nameWithType: NetworkInformationPermission.Access
- uid: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: AddPermission
  nameWithType: NetworkInformationPermission.AddPermission
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Copy*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Copy
  nameWithType: NetworkInformationPermission.Copy
- uid: System.Net.NetworkInformation.NetworkInformationPermission.FromXml*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: FromXml
  nameWithType: NetworkInformationPermission.FromXml
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Intersect*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Intersect
  nameWithType: NetworkInformationPermission.Intersect
- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: NetworkInformationPermission.IsSubsetOf
- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: NetworkInformationPermission.IsUnrestricted
- uid: System.Net.NetworkInformation.NetworkInformationPermission.ToXml*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: ToXml
  nameWithType: NetworkInformationPermission.ToXml
- uid: System.Net.NetworkInformation.NetworkInformationPermission.Union*
  parent: System.Net.NetworkInformation.NetworkInformationPermission
  isExternal: false
  name: Union
  nameWithType: NetworkInformationPermission.Union
