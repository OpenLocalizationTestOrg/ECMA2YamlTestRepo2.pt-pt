### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  id: SafeAccessTokenHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)
  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle
  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid
  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle
  langs:
  - csharp
  name: SafeAccessTokenHandle
  nameWithType: SafeAccessTokenHandle
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  type: Class
  summary: "Provides a safe handle to a Windows thread or process access token. For more information see [Access Tokens](https://msdn.microsoft.com/library/windows/desktop/aa374909.aspx)"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public sealed class SafeAccessTokenHandle : System.Runtime.InteropServices.SafeHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  langs:
  - csharp
  name: SafeAccessTokenHandle(IntPtr)
  nameWithType: SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Win32.SafeHandles.SafeAccessTokenHandle&quot;></xref> class."
  syntax:
    content: public SafeAccessTokenHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "An <xref:System.IntPtr> object that represents the pre-existing handle to use. Using <xref:System.IntPtr> returns an invalid handle."
  overload: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle
  id: InvalidHandle
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  langs:
  - csharp
  name: InvalidHandle
  nameWithType: SafeAccessTokenHandle.InvalidHandle
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Returns an invalid handle by instantiating a <xref href=&quot;Microsoft.Win32.SafeHandles.SafeAccessTokenHandle&quot;></xref> object with <xref:System.IntPtr.Zero>."
  syntax:
    content: public static Microsoft.Win32.SafeHandles.SafeAccessTokenHandle InvalidHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
      description: "Returns a<xref href=&quot;Microsoft.Win32.SafeHandles.SafeAccessTokenHandle&quot;></xref> object."
  overload: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  langs:
  - csharp
  name: IsInvalid
  nameWithType: SafeAccessTokenHandle.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Gets a value that indicates whether the handle is invalid."
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the handle is not valid; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeAccessTokenHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: System.Runtime.InteropServices.SafeHandle
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: SafeAccessTokenHandle(IntPtr)
  nameWithType: SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: InvalidHandle
  nameWithType: SafeAccessTokenHandle.InvalidHandle
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeAccessTokenHandle
  nameWithType: SafeAccessTokenHandle
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: IsInvalid
  nameWithType: SafeAccessTokenHandle.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeAccessTokenHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle()
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: SafeAccessTokenHandle
  nameWithType: SafeAccessTokenHandle.SafeAccessTokenHandle
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle*
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: InvalidHandle
  nameWithType: SafeAccessTokenHandle.InvalidHandle
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: IsInvalid
  nameWithType: SafeAccessTokenHandle.IsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle*
  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafeAccessTokenHandle.ReleaseHandle
