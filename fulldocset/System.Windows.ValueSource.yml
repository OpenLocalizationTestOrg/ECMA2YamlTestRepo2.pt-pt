### YamlMime:ManagedReference
items:
- uid: System.Windows.ValueSource
  id: ValueSource
  children:
  - System.Windows.ValueSource.BaseValueSource
  - System.Windows.ValueSource.Equals(System.Object)
  - System.Windows.ValueSource.GetHashCode
  - System.Windows.ValueSource.IsAnimated
  - System.Windows.ValueSource.IsCoerced
  - System.Windows.ValueSource.IsCurrent
  - System.Windows.ValueSource.IsExpression
  - System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  - System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  langs:
  - csharp
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
  type: Struct
  summary: "Relatórios de informações devolvidas de &lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;."
  remarks: "A maior parte das informações que transmite ValueSource está contida no <xref:System.Windows.ValueSource.BaseValueSource%2A>propriedade.</xref:System.Windows.ValueSource.BaseValueSource%2A> Esta propriedade contém um valor de enumeração que especifica exatamente um aspeto do gerais [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] sistema de propriedade que é responsável pelo valor Efetivo de uma propriedade de dependência.       Para além do valor base, as informações que poderão ser interessantes sobre um valor de propriedade de dependência são se o valor está a ser animado e se o valor envolve uma expressão (por exemplo, um enlace, ou uma referência de recursos dinâmicos). Esta informação é comunicada pelo <xref:System.Windows.ValueSource.IsAnimated%2A>e <xref:System.Windows.ValueSource.IsExpression%2A>respetivamente.</xref:System.Windows.ValueSource.IsExpression%2A> </xref:System.Windows.ValueSource.IsAnimated%2A> Além disso, se adesão está a funcionar com um valor de propriedade, a propriedade retém o valor pretendido e o valor da propriedade irá tentar aceder esse valor pretendido se as restrições da adesão específico forem alteradas ou lifted. Uma propriedade coerced que não é o valor pretendido irão comunicar que <xref:System.Windows.ValueSource.IsCoerced%2A>é `true`.</xref:System.Windows.ValueSource.IsCoerced%2A>"
  syntax:
    content: public struct ValueSource
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.ValueSource.BaseValueSource
  id: BaseValueSource
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor da <xref href=&quot;System.Windows.BaseValueSource&quot;> </xref> enumeração, que indica a origem de que forneceu o sistema de propriedade de dependência com um valor."
  remarks: "O valor base não é o valor Efetivo se adesão ou animação está a funcionar na propriedade. Verifique <xref:System.Windows.ValueSource.IsAnimated%2A>e <xref:System.Windows.ValueSource.IsCoerced%2A>se pretende determinar se o valor base é o valor Efetivo.</xref:System.Windows.ValueSource.IsCoerced%2A> </xref:System.Windows.ValueSource.IsAnimated%2A>       Pode também querer verifique <xref:System.Windows.ValueSource.IsExpression%2A>para ver se o valor base foi avaliado fora de uma expressão.</xref:System.Windows.ValueSource.IsExpression%2A>"
  syntax:
    content: public System.Windows.BaseValueSource BaseValueSource { get; }
    return:
      type: System.Windows.BaseValueSource
      description: "Um valor de enumeração."
  overload: System.Windows.ValueSource.BaseValueSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve um valor que indica se esta <xref href=&quot;System.Windows.ValueSource&quot;> </xref> é igual a um objeto especificado."
  remarks: "Esta implementação suporta igualdade de valor, com base em cada um dos valores de propriedade de cada <xref:System.Windows.ValueSource>estrutura.</xref:System.Windows.ValueSource>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O objeto comparar com esta <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto fornecido é equivalente à atual <xref href=&quot;System.Windows.ValueSource&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.GetHashCode
  id: GetHashCode
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve o código hash para este <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
  remarks: "Este código hash baseia-se no <xref:System.Windows.ValueSource.BaseValueSource%2A>valor.</xref:System.Windows.ValueSource.BaseValueSource%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash de número inteiro sem sinal de 32 bits."
  overload: System.Windows.ValueSource.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsAnimated
  id: IsAnimated
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor que declara se está a ser animada a propriedade."
  remarks: "Para qualquer propriedade que está atualmente a ser animada, a origem comunicado pelo <xref:System.Windows.ValueSource.BaseValueSource%2A>não é imediatamente relevantes, porque a animação opera num precedência de propriedade de dependência superior ao valor base.</xref:System.Windows.ValueSource.BaseValueSource%2A> Para obter mais informações sobre a precedência e animações, consulte [precedência de valor de propriedade de dependência](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsAnimated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade é animada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsAnimated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCoerced
  id: IsCoerced
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor que declara se este valor resultou de um <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementação aplicada a uma propriedade de dependência."
  remarks: "Se a adesão está a funcionar com um valor de propriedade, a propriedade mantém um valor pretendido e o valor da propriedade irá tentar aceder esse valor pretendido se as restrições da adesão específico forem alteradas ou lifted. Uma propriedade coerced que não é o valor pretendido irão comunicar que IsCoerced é `true`.       Adesão age em precedência superior ao valor base, não sendo rigorosos um participante na forma como o valor de base está definido. Por conseguinte o estado de ser forçada é comunicado por esta propriedade em vez de um valor da <xref:System.Windows.BaseValueSource>enumeração.</xref:System.Windows.BaseValueSource> Para obter mais informações sobre a adesão, valores de base e precedência, consulte [precedência de valor de propriedade de dependência](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsCoerced { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor resultante de uma <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementação aplicada a uma propriedade de dependência; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsCoerced*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCurrent
  id: IsCurrent
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém se o valor foi definido pelo <xref:System.Windows.DependencyObject.SetCurrentValue*>método.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  syntax:
    content: public bool IsCurrent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor foi definido pelo <xref:System.Windows.DependencyObject.SetCurrentValue*>método; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  overload: System.Windows.ValueSource.IsCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsExpression
  id: IsExpression
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor que declara se este valor resultante de uma expressão avaliada. Esta situação pode ter um <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> suportar um enlace ou uma expressão interna, tais como aqueles que suportam o [extensão de Markup DynamicResource](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Uma expressão avaliada também irá reportar o valor de base específico definição condição em que a expressão foi aplicada, como um valor no <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> O <xref:System.Windows.ValueSource.BaseValueSource%2A>ainda é muito relevantes para qualquer propriedade onde é IsExpression `true`.</xref:System.Windows.ValueSource.BaseValueSource%2A> Saber se um valor fornecido através de uma expressão pode ser particularmente útil se o valor foi definido indiretamente, tais como através de um modelo ou um valor de propriedade herdado.       Se não for possível avaliar uma expressão (falha de enlace; foi encontrado nenhum recurso com esse nome), em seguida, o valor serão provenientes alguns outro participante no sistema de propriedade, provavelmente, o valor predefinido. Se a origem, em seguida, é reportada no <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> Avaliações de expressão falhada irão devolver `false` para IsExpression."
  syntax:
    content: public bool IsExpression { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor provém de uma expressão avaliada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias têm o mesmo valor."
  remarks: "Esta implementação chama <xref:System.Windows.ValueSource.Equals%2A>, e suporta o valor igualdade com base em todas as propriedades de <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "O primeiro <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    - id: vs2
      type: System.Windows.ValueSource
      description: "O segundo <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias são equivalentes; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias não têm o mesmo valor."
  remarks: "Esta implementação chama <xref:System.Windows.ValueSource.Equals%2A>, devolvendo o respetivo negação e suporta a igualdade de valor com base em todas as propriedades de <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "O primeiro <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    - id: vs2
      type: System.Windows.ValueSource
      description: "O segundo <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias não são equivalentes; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.ValueSource.BaseValueSource
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
- uid: System.Windows.BaseValueSource
  parent: System.Windows
  isExternal: false
  name: BaseValueSource
  nameWithType: BaseValueSource
  fullName: System.Windows.BaseValueSource
- uid: System.Windows.ValueSource.Equals(System.Object)
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ValueSource.GetHashCode
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ValueSource.IsAnimated
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource.BaseValueSource*
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
- uid: System.Windows.ValueSource.Equals*
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals
  nameWithType: ValueSource.Equals
- uid: System.Windows.ValueSource.GetHashCode*
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode
  nameWithType: ValueSource.GetHashCode
- uid: System.Windows.ValueSource.IsAnimated*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality
  nameWithType: ValueSource.op_Equality
- uid: System.Windows.ValueSource.op_Inequality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality
  nameWithType: ValueSource.op_Inequality
