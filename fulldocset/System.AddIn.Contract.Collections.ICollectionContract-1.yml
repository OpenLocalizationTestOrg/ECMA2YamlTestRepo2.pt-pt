### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.ICollectionContract`1
  id: ICollectionContract`1
  children:
  - System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)
  - System.AddIn.Contract.Collections.ICollectionContract`1.Clear
  - System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)
  - System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)
  - System.AddIn.Contract.Collections.ICollectionContract`1.GetCount
  - System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly
  - System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)
  langs:
  - csharp
  name: ICollectionContract<C>
  nameWithType: ICollectionContract<C>
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>
  type: Interface
  syntax:
    content: 'public interface ICollectionContract<C> : System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'
    typeParameters:
    - id: C
      description: "To be added."
  implements:
  - System.AddIn.Contract.Collections.IEnumerableContract<C>
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)
  id: Add(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  name: Add(C)
  nameWithType: ICollectionContract<C>.Add(C)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Add(C)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public void Add (C item);
    parameters:
    - id: item
      type: C
      description: "To be added."
  overload: System.AddIn.Contract.Collections.ICollectionContract`1.Add*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Clear
  id: Clear
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  name: Clear()
  nameWithType: ICollectionContract<C>.Clear()
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Clear()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.AddIn.Contract.Collections.ICollectionContract`1.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)
  id: Contains(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  name: Contains(C)
  nameWithType: ICollectionContract<C>.Contains(C)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Contains(C)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public bool Contains (C item);
    parameters:
    - id: item
      type: C
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.AddIn.Contract.Collections.ICollectionContract`1.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  name: CopyTo(C[],Int32)
  nameWithType: ICollectionContract<C>.CopyTo(C[],Int32)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.CopyTo(C[],Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public void CopyTo (C[] array, int arrayIndex);
    parameters:
    - id: array
      type: C[]
      description: "To be added."
    - id: arrayIndex
      type: System.Int32
      description: "To be added."
  overload: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount
  id: GetCount
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  name: GetCount()
  nameWithType: ICollectionContract<C>.GetCount()
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetCount()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public int GetCount ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly
  id: GetIsReadOnly
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  name: GetIsReadOnly()
  nameWithType: ICollectionContract<C>.GetIsReadOnly()
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetIsReadOnly()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public bool GetIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)
  id: Remove(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  name: Remove(C)
  nameWithType: ICollectionContract<C>.Remove(C)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Remove(C)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public bool Remove (C item);
    parameters:
    - id: item
      type: C
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.AddIn.Contract.Collections.ICollectionContract`1.Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Add(C)
  nameWithType: ICollectionContract<C>.Add(C)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Add(C)
- uid: C
  isExternal: true
  name: C
  nameWithType: C
  fullName: C
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Clear
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Clear()
  nameWithType: ICollectionContract<C>.Clear()
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Clear()
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Contains(C)
  nameWithType: ICollectionContract<C>.Contains(C)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Contains(C)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: CopyTo(C[],Int32)
  nameWithType: ICollectionContract<C>.CopyTo(C[],Int32)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.CopyTo(C[],Int32)
- uid: C[]
  isExternal: true
  name: C
  nameWithType: C
  fullName: C[]
  spec.csharp:
  - uid: C
    name: C
    nameWithType: C
    fullName: C[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: GetCount()
  nameWithType: ICollectionContract<C>.GetCount()
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetCount()
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: GetIsReadOnly()
  nameWithType: ICollectionContract<C>.GetIsReadOnly()
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetIsReadOnly()
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Remove(C)
  nameWithType: ICollectionContract<C>.Remove(C)
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Remove(C)
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Add*
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Add
  nameWithType: ICollectionContract<C>.Add
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Clear*
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Clear
  nameWithType: ICollectionContract<C>.Clear
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Contains*
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Contains
  nameWithType: ICollectionContract<C>.Contains
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo*
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: CopyTo
  nameWithType: ICollectionContract<C>.CopyTo
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount*
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: GetCount
  nameWithType: ICollectionContract<C>.GetCount
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly*
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: GetIsReadOnly
  nameWithType: ICollectionContract<C>.GetIsReadOnly
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Remove*
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Remove
  nameWithType: ICollectionContract<C>.Remove
