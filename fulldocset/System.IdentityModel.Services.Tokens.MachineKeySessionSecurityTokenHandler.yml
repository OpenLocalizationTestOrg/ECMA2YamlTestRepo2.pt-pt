### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  id: MachineKeySessionSecurityTokenHandler
  children:
  - System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor
  - System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor(System.TimeSpan)
  langs:
  - csharp
  name: MachineKeySessionSecurityTokenHandler
  nameWithType: MachineKeySessionSecurityTokenHandler
  fullName: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  type: Class
  summary: "Processa os tokens de sessão utilizando as chaves de assinatura e encriptação especificadas no ASP.NET <xref uid=&quot;langword_csharp_&lt;machineKey&gt;&quot; name=&quot;&lt;machineKey&gt;&quot; href=&quot;&quot;> </xref> elemento num ficheiro de configuração."
  remarks: "Por predefinição, o <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>classe utiliza o <xref:System.IdentityModel.ProtectedDataCookieTransform>classe, que utiliza a API Data Protection (DPAPI), para proteger o token de sessão.</xref:System.IdentityModel.ProtectedDataCookieTransform> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> A DPAPI fornece proteção utilizando as credenciais de utilizador ou de máquina e armazena os dados de chave no perfil de utilizador. Isto significa que um token de sessão assinados e encriptados num computador não pode ser validada ou desencriptar num computador diferente.       Por outro lado, a classe de MachineKeySessionSecurityTokenHandler utiliza o <xref:System.IdentityModel.Services.MachineKeyTransform>classe, que protege os dados de cookie de sessão utilizando o material de criptografia especificado no `<machineKey>` elemento no ficheiro de configuração.</xref:System.IdentityModel.Services.MachineKeyTransform> Isto significa que as mesmas chaves (e os tokens de sessão) podem ser utilizados em vários computadores. Isto é especialmente importante quando uma aplicação é implementada numa web farm. Para obter mais informações sobre como utilizar o Windows Identity Foundation para proteger as aplicações que são implementadas numa web farm, consulte [WIF e Web Farms](~/add/includes/ajax-current-ext-md.md).       Configure a aplicação para utilizar o MachineKeySessionSecurityTokenHandler adicionando-o para a coleção de processador de token. Tem de remover primeiro o <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>(ou derivado de qualquer processador a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>classe) da coleção de processador token se esses um processador estiver presente.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Isto acontece porque deriva de MachineKeySessionSecurityTokenHandler <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>e uma coleção de processador de token não pode conter vários processadores de qualquer tipo indicado.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  example:
  - "The following XML shows how to use the ASP.NET `<machineKey>` element in configuration to explicitly specify signing and encryption keys. The `<machineKey>` element is specified under the `<system.web>` element in a configuration file.  \n  \n```xml  \n<machineKey compatibilityMode=\"Framework45\" decryptionKey=\"CC510D … 8925E6\" validationKey=\"BEAC8 … 6A4B1DE\" />  \n```  \n  \n The following XML shows how to add the MachineKeySessionSecurityTokenHandler to a token handler collection. The default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is first removed from the collection. Token handlers are configured under the [\\&lt;securityTokenHandlers\\&gt;](../Topic/%3CsecurityTokenHandlers%3E.md) element.  \n  \n```xml  \n<securityTokenHandlers>  \n  <remove type=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />  \n  <add type=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />  \n</securityTokenHandlers>  \n```"
  syntax:
    content: 'public class MachineKeySessionSecurityTokenHandler : System.IdentityModel.Tokens.SessionSecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  langs:
  - csharp
  name: MachineKeySessionSecurityTokenHandler()
  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()
  fullName: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&quot;> </xref> classe."
  syntax:
    content: public MachineKeySessionSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  langs:
  - csharp
  name: MachineKeySessionSecurityTokenHandler(TimeSpan)
  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)
  fullName: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&quot;> </xref> classe que possui a duração do token predefinido especificado."
  syntax:
    content: public MachineKeySessionSecurityTokenHandler (TimeSpan tokenLifetime);
    parameters:
    - id: tokenLifetime
      type: System.TimeSpan
      description: "A predefinição de duração para obter um token."
  overload: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>tokenLifetime</code>é mais curta do que ou igual a &lt;xref:System.TimeSpan?displayProperty=fullName&gt;"
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SessionSecurityTokenHandler
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  isExternal: false
  name: MachineKeySessionSecurityTokenHandler()
  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()
  fullName: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()
- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor(System.TimeSpan)
  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  isExternal: false
  name: MachineKeySessionSecurityTokenHandler(TimeSpan)
  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)
  fullName: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  isExternal: false
  name: MachineKeySessionSecurityTokenHandler
  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler
