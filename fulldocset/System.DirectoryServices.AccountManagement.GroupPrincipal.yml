### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal
  id: GroupPrincipal
  children:
  - System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose
  - System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers
  - System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  - System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  - System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  langs:
  - csharp
  name: GroupPrincipal
  nameWithType: GroupPrincipal
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal
  type: Class
  summary: "Contém as contas de grupo. As contas de grupo podem ser arbitrários coleções de objetos principais ou as contas criadas para fins administrativos."
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GroupPrincipal(PrincipalContext)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> classe utilizando o contexto especificado."
  remarks: "A conta do principal de grupo não é continuada quando é criado. Para manter a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>método.</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  syntax:
    content: public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)'
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GroupPrincipal(PrincipalContext,String)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> classe e atribui-o para o contexto especificado e o nome de conta do SAM."
  remarks: "A conta do principal de grupo não é continuada quando é criado. Para manter a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>método.</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  syntax:
    content: public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: samAccountName
      type: System.String
      description: "O nome de conta do SAM para este principal."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose
  id: Dispose
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: Dispose()
  nameWithType: GroupPrincipal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Disposes a instância atual do <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> objeto."
  syntax:
    content: public override void Dispose ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve um objeto principal do grupo que corresponde ao valor de identidade especificado."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: identityValue
      type: System.String
      description: "A identidade do principal de grupo. Este parâmetro pode ser qualquer formato que faz a <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> enumeração."
    return:
      type: System.DirectoryServices.AccountManagement.GroupPrincipal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> que corresponda ao valor de identidade especificado e tipo de objeto ou nulo se não são encontradas correspondências."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*
  exceptions:
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "Foram encontrados vários grupo principal objetos correspondentes do objeto de grupo atual."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve um objeto principal do grupo que corresponda ao tipo de identidade especificado e valor. Esta versão do <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity>método determina o formato do valor de identidade.</xref:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração que especifica o formato do `identityValue` parâmetro."
    - id: identityValue
      type: System.String
      description: "A identidade do principal de grupo. Este parâmetro pode ser qualquer formato que faz a <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> enumeração."
    return:
      type: System.DirectoryServices.AccountManagement.GroupPrincipal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> que corresponda ao valor de identidade especificado e tipo ou encontram-se um valor nulo se não existem correspondências."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*
  exceptions:
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "Foram encontrados vários grupo principal objetos correspondentes do objeto de grupo atual."
  - type: System.ComponenetModel.InvalidEnumerationOperatorException
    commentId: T:System.ComponenetModel.InvalidEnumerationOperatorException
    description: "O valor de identidade não é um <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers
  id: GetMembers
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GetMembers()
  nameWithType: GroupPrincipal.GetMembers()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de objetos principais que está contida no grupo."
  remarks: "Este método não procura recursivamente de grupo atual. Por conseguinte, os objetos de grupo podem ser devolvidos na coleção de objeto principal.       Os membros são devolvidos without respect to contexto. Por exemplo, se um contexto de AD DS com base em &quot;CN = SpecialUsers, DC = Fabrikam, DC = com&quot;, o conjunto de PrincipalFindResult irá incluir os membros do grupo que estão localizados em &quot;CN = NormalUsers, DC = Fabrikam, DC = com&quot; Além disso, embora estes abrangidos por um âmbito que não faz parte do contexto que está a ser procurado. A coleção principal devolvida também pode conter membros que se encontram num arquivo diferente do grupo."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetMembers ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt; objeto que contém os objetos principais que são membros do grupo ou uma coleção vazia se o grupo não tem membros."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)
  id: GetMembers(System.Boolean)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GetMembers(Boolean)
  nameWithType: GroupPrincipal.GetMembers(Boolean)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de objetos principais que está contida no grupo. Quando o sinalizador recursivo está definido como true, este método de pesquisa recursivamente de grupo atual e devolve todos os membros do grupo aninhado."
  remarks: "A coleção principal devolvida não contém objetos de grupo quando o sinalizador recursivo está definido como `true`; apenas são devolvidos nós de folha. Por exemplo, quando um grupo que contenha um objeto de computador e um objeto de grupo (com apenas principais de utilizador) estiver em modo recursivo procurar, a coleção devolvida contém o objeto de computador e os objetos de principal de utilizador no grupo aninhado. Uma vez que o objeto de grupo não é uma folha, mesmo quando está vazio,-não é devolvido na pesquisa recursiva.  Quando o sinalizador recursivo está definido como `false`, a coleção devolvida pode conter objetos de grupo.       Os membros são devolvidos without respect to contexto. Por exemplo, se um contexto de AD DS com base em &quot;CN = SpecialUsers, DC = Fabrikam, DC = com&quot;, o conjunto de PrincipalFindResult irá incluir os membros do grupo que estão localizados em &quot;CN = NormalUsers, DC = Fabrikam, DC = com&quot; Além disso, embora estes abrangidos por um âmbito que não faz parte do contexto que está a ser procurado. A coleção principal devolvida também pode conter membros que se encontram num arquivo diferente do grupo."
  example:
  - "The following code connects to the LDAP domain \"fabrikam.com\" with the username set to \"administrator\" and the password set to \"SecretPwd123\" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed to find the group that has the name \"Domain Admins\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor \"DC=fabrikam,DC=com.\" If the group is found, all the principals that are members of this group, which includes recursive members, are then enumerated  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      \n                                            \"fabrikam.com\",   \n                                            \"DC=fabrikam,DC=com\",   \n                                            \"administrator\",   \n                                            \"SecretPwd123\");  \n  \nGroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   \n                                                   IdentityType.Name,   \n                                                   \"Domain Admins\");  \n  \nif (grp != null)  \n{  \n    foreach (Principal p in grp.GetMembers(true))  \n    {  \n         Console.WriteLine(p.Name);  \n    }  \n    grp.Dispose();  \n}  \n  \nctx.Dispose();   \n```"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetMembers (bool recursive);
    parameters:
    - id: recursive
      type: System.Boolean
      description: "Um valor booleano que especifica se o grupo está a procurar recursivamente."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt; objeto que contém os objetos principais que são membros do grupo ou uma coleção vazia se o grupo não tem membros."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  id: GroupScope
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GroupScope
  nameWithType: GroupPrincipal.GroupScope
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o tipo Nullable <xref href=&quot;System.DirectoryServices.AccountManagement.GroupScope&quot;> </xref> enumeração que especifica o âmbito para o principal deste grupo."
  syntax:
    content: public Nullable<System.DirectoryServices.AccountManagement.GroupScope> GroupScope { get; set; }
    return:
      type: System.Nullable{System.DirectoryServices.AccountManagement.GroupScope}
      description: "Um que pode ser nulo <xref href=&quot;System.DirectoryServices.AccountManagement.GroupScope&quot;> </xref> valor de enumeração que especifica o âmbito deste grupo ou nulo se nenhum âmbito tiver sido definido."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A aplicação não pode definir esta propriedade como nulo."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  id: IsSecurityGroup
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: IsSecurityGroup
  nameWithType: GroupPrincipal.IsSecurityGroup
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor nulo booleano que indica se o grupo está ativado para segurança."
  remarks: "Quando esta propriedade devolve false, o grupo está temporariamente não com segurança ativada. Quando o [IsSecurityGroup](~/add/includes/ajax-current-ext-md.md) propriedade é reposta para true mais tarde, o grupo terão as mesmas propriedades antes foi definido como false.       Se o principal não tem foi continuado no arquivo, esta propriedade devolve um valor nula. Depois do principal é persistente, a predefinição com segurança ativada depende o arquivo. Os arquivos de AD DS e AD LDS desativar novos principais de quando estes são mantidas, enquanto SAM permite novos principais de quando estes são mantidas."
  syntax:
    content: public Nullable<bool> IsSecurityGroup { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o grupo de segurança ativado ou nulo se o grupo tem não foram continuado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A aplicação não pode definir esta propriedade como nulo."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  id: Members
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: Members
  nameWithType: GroupPrincipal.Members
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém uma coleção de objetos principais que representam os membros do grupo."
  remarks: "Para os grupos do AD DS, a propriedade de membros inclui principais de utilizador que são membros do grupo devido ao respetivo primaryId atributo. Quando o grupo contém estes tipos de membros, as seguintes restrições aplicam-se: - <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A>método não pode ser utilizado para remover membros que fazem parte do grupo devido ao respetivo atributo de primaryId.</xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A>      -O <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A>método não pode ser utilizado para limpar os membros que fazem parte do grupo devido ao respetivo atributo de primaryId.</xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A>"
  example:
  - "The following code connects to the LDAP domain \"fabrikam.com\" with the username set to \"administrator\" and the password set to \"SecretPwd123\" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed to find the group that has name \"Domain Admins\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, \"DC=fabrikam,DC=com.\" If the group is found, the user who has name \"John Smith\" is removed from the group and the user who has name \"Jim Daly\" is added to the group  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       \n                                            \"fabrikam.com\",                                                                               \n                                            \"DC=fabrikam,DC=com\",                                                                 \n                                            \"administrator\",   \n                                            \"SecretPwd123\");  \n  \nGroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   \n                                                   IdentityType.Name,   \n                                                   \"Domain Admins\");  \n  \nif (grp != null)  \n{  \n    grp.Members.Remove(ctx, IdentityType.Name, \"John Smith\");            \n    grp.Members.Add(ctx, IdentityType.Name, \"Jim Daly\");  \n    grp.Save();  \n    grp.Dispose();  \n}  \nctx.Dispose();  \n```"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalCollection
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalCollection&quot;> </xref> objeto que contém os objetos principais que representam os membros do grupo."
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.Members*
  exceptions: []
  platform:
  - net462
references:
- uid: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.Principal
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.ComponenetModel.InvalidEnumerationOperatorException
  isExternal: true
  name: System.ComponenetModel.InvalidEnumerationOperatorException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupPrincipal(PrincipalContext)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupPrincipal(PrincipalContext,String)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Dispose()
  nameWithType: GroupPrincipal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose()
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,String)
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: GroupPrincipal
  nameWithType: GroupPrincipal
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GetMembers()
  nameWithType: GroupPrincipal.GetMembers()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GetMembers(Boolean)
  nameWithType: GroupPrincipal.GetMembers(Boolean)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupScope
  nameWithType: GroupPrincipal.GroupScope
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
- uid: System.Nullable{System.DirectoryServices.AccountManagement.GroupScope}
  parent: System
  isExternal: true
  name: Nullable<GroupScope>
  nameWithType: Nullable<GroupScope>
  fullName: System.Nullable<System.DirectoryServices.AccountManagement.GroupScope>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DirectoryServices.AccountManagement.GroupScope>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.GroupScope
    name: GroupScope
    nameWithType: GroupScope
    fullName: GroupScope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: IsSecurityGroup
  nameWithType: GroupPrincipal.IsSecurityGroup
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Members
  nameWithType: GroupPrincipal.Members
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
- uid: System.DirectoryServices.AccountManagement.PrincipalCollection
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalCollection
  nameWithType: PrincipalCollection
  fullName: System.DirectoryServices.AccountManagement.PrincipalCollection
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupPrincipal
  nameWithType: GroupPrincipal.GroupPrincipal
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Dispose
  nameWithType: GroupPrincipal.Dispose
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: FindByIdentity
  nameWithType: GroupPrincipal.FindByIdentity
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GetMembers
  nameWithType: GroupPrincipal.GetMembers
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupScope
  nameWithType: GroupPrincipal.GroupScope
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: IsSecurityGroup
  nameWithType: GroupPrincipal.IsSecurityGroup
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Members
  nameWithType: GroupPrincipal.Members
