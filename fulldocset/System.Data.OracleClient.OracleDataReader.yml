### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleDataReader
  id: OracleDataReader
  children:
  - System.Data.OracleClient.OracleDataReader.Close
  - System.Data.OracleClient.OracleDataReader.Depth
  - System.Data.OracleClient.OracleDataReader.FieldCount
  - System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetEnumerator
  - System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.GetSchemaTable
  - System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.HasRows
  - System.Data.OracleClient.OracleDataReader.IsClosed
  - System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  - System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  - System.Data.OracleClient.OracleDataReader.Item(System.String)
  - System.Data.OracleClient.OracleDataReader.NextResult
  - System.Data.OracleClient.OracleDataReader.Read
  - System.Data.OracleClient.OracleDataReader.RecordsAffected
  langs:
  - csharp
  name: OracleDataReader
  nameWithType: OracleDataReader
  fullName: System.Data.OracleClient.OracleDataReader
  type: Class
  summary: "Provides a way of reading a forward-only stream of data rows from a data source. This class cannot be inherited."
  remarks: "To create an OracleDataReader, you must call the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of the <xref:System.Data.OracleClient.OracleCommand> object, rather than directly using a constructor.       Changes made to a resultset by another process or thread while data is being read may be visible to the user of the OracleDataReader.       <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the OracleDataReader is closed. In some cases, you must call <xref:System.Data.OracleClient.OracleDataReader.Close%2A> before you can call <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>.       More than one OracleDataReader can be open at any given time.       The following two Visual Basic examples demonstrate how to use an OracleDataReader to retrieve an Oracle `REF CURSOR`. These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body. You must create these on your server to use the examples.       Create the following Oracle package on the Oracle server.      ```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR IN OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```       Create the following Oracle package body on the Oracle server.      ```      CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO <> 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;   /   ```       This Visual Basic example executes a PL/SQL stored procedure that returns a `REF CURSOR` parameter, and reads the value as an OracleDataReader.      ```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = &quot;CURSPKG.OPEN_ONE_CURSOR&quot;      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter(&quot;N_EMPNO&quot;, OracleType.Number)).Value = 7369      command.Parameters.Add(New OracleParameter(&quot;IO_CURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader()      While (reader.Read())         &quot; Do something with the values.      End While      reader.Close()      connection.Close()   End Sub   ```       This Visual Basic example executes a PL/SQL stored procedure that returns two `REF CURSOR` parameters, and reads the values using an OracleDataReader.      ```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim dataSet As New DataSet()      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = &quot;CURSPKG.OPEN_TWO_CURSORS&quot;      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter(&quot;EMPCURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output      command.Parameters.Add(New OracleParameter(&quot;DEPTCURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader(CommandBehavior.CloseConnection)      While (reader.Read())         &quot; Do something with the values.      End While      reader.NextResult()      While (reader.Read())           &quot; Do something with the values.      End While      reader.Close()      connection.Close()    End Sub   ```       This C# example creates an Oracle table and loads it with data. You must run this example prior to running the subsequent example, which demonstrates using an OracleDataReader to access the data using OracleType structures.      ```c#   public void Setup(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      try      {         connection.Open();         OracleCommand command = connection.CreateCommand();         command.CommandText =&quot;CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))&quot;;         command.ExecuteNonQuery();         command.CommandText =&quot;INSERT INTO OracleTypesTable VALUES (&quot;test&quot;, 2, to_date(&quot;2000-01-11 12:54:01&quot;,&quot;yyyy-mm-dd hh24:mi:ss&quot;), &quot;0001020304&quot;)&quot;;         command.ExecuteNonQuery();         command.CommandText=&quot;SELECT * FROM OracleTypesTable&quot;;      }      catch(Exception)      {      }      finally      {         connection.Close();      }   }   ```       This C# example uses an OracleDataReader to access data, and uses several <xref:System.Data.OracleClient.OracleType> structures to display the data.      ```c#   public void ReadOracleTypesExample(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      connection.Open();      OracleCommand command = connection.CreateCommand();      try      {         command.CommandText = &quot;SELECT * FROM OracleTypesTable&quot;;         OracleDataReader reader = command.ExecuteReader();         reader.Read();         //Using the Oracle specific getters for each type is faster than         //using GetOracleValue.         //First column, MyVarchar2, is a VARCHAR2 data type in Oracle Server         //and maps to OracleString.         OracleString oraclestring1 = reader.GetOracleString(0);         Console.WriteLine(&quot;OracleString &quot; + oraclestring1.ToString());            //Second column, MyNumber, is a NUMBER data type in Oracle Server         //and maps to OracleNumber.         OracleNumber oraclenumber1 = reader.GetOracleNumber(1);         Console.WriteLine(&quot;OracleNumber &quot; + oraclenumber1.ToString());            //Third column, MyDate, is a DATA data type in Oracle Server         //and maps to OracleDateTime.         OracleDateTime oracledatetime1 = reader.GetOracleDateTime(2);         Console.WriteLine(&quot;OracleDateTime &quot; + oracledatetime1.ToString());            //Fourth column, MyRaw, is a RAW data type in Oracle Server and         //maps to OracleBinary.         OracleBinary oraclebinary1 = reader.GetOracleBinary(3);            //Calling value on a null OracleBinary throws         //OracleNullValueException; therefore, check for a null value.         if (oraclebinary1.IsNull==false)         {            foreach(byte b in oraclebinary1.Value)            {               Console.WriteLine(&quot;byte &quot; + b.ToString());            }         }         reader.Close();      }      catch(Exception e)      {         Console.WriteLine(e.ToString());      }      finally      {         connection.Close();      }   }   ```"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an OracleDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OracleDataReader, then the <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleDataReader#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleDataReader#1](~/add/codesnippet/csharp/t-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: 'public sealed class OracleDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Close
  id: Close
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OracleDataReader.Close()
  fullName: System.Data.OracleClient.OracleDataReader.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Closes the <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> object."
  remarks: "More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.      > [!CAUTION] >  Do not call `Close` or `Dispose` on a connection, a `DataReader`, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Depth
  id: Depth
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OracleDataReader.Depth
  fullName: System.Data.OracleClient.OracleDataReader.Depth
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets a value indicating the depth of nesting for the current row."
  remarks: "The outermost table has a depth of zero."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "The depth of nesting for the current row."
  overload: System.Data.OracleClient.OracleDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.FieldCount
  id: FieldCount
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
  fullName: System.Data.OracleClient.OracleDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the number of columns in the current row."
  remarks: "Includes hidden fields. Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.       After executing a query that does not return rows, FieldCount returns 0."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "When not positioned in a valid record set, 0; otherwise the number of columns in the current record. The default is -1."
  overload: System.Data.OracleClient.OracleDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "There is no current connection to a data source."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OracleDataReader.GetBoolean(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a Boolean."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Boolean
      description: "A Boolean that is the value of the column."
  overload: System.Data.OracleClient.OracleDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OracleDataReader.GetByte(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a byte."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Byte
      description: "The value of the specified column as a byte."
  overload: System.Data.OracleClient.OracleDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset."
  remarks: "GetBytes returns the number of available bytes in the field. In most cases this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, if the <xref:System.Data.OracleClient.OracleDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting of <xref:System.Data.CommandBehavior>.       If you pass a buffer that is a null value, GetBytes returns the length of the field in bytes."
  syntax:
    content: public override long GetBytes (int i, long fieldOffset, byte[] buffer2, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    - id: fieldOffset
      type: System.Int64
      description: "The index within the field where the read operation is to begin."
    - id: buffer2
      type: System.Byte[]
      description: "The buffer into which to read the stream of bytes."
    - id: bufferoffset
      type: System.Int32
      description: "The index where `buffer` is to begin the write operation."
    - id: length
      type: System.Int32
      description: "The number of bytes to read."
    return:
      type: System.Int64
      description: "The actual number of bytes read."
  overload: System.Data.OracleClient.OracleDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OracleDataReader.GetChar(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a character."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Char
      description: "The value of the specified column as a character."
  overload: System.Data.OracleClient.OracleDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset."
  remarks: "GetChars returns the number of available characters in the field. In most cases this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field. This may be the case, for example, if the <xref:System.Data.OracleClient.OracleDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting of <xref:System.Data.CommandBehavior>.       If you pass a buffer that is a null value. GetChars returns the length of the field in characters."
  syntax:
    content: public override long GetChars (int i, long fieldOffset, char[] buffer2, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    - id: fieldOffset
      type: System.Int64
      description: "The index within the row where the read operation is to begin."
    - id: buffer2
      type: System.Char[]
      description: "The buffer into which to copy data."
    - id: bufferoffset
      type: System.Int32
      description: "The index where `buffer` is to begin the write operation."
    - id: length
      type: System.Int32
      description: "The number of characters to read."
    return:
      type: System.Int64
      description: "The actual number of characters read."
  overload: System.Data.OracleClient.OracleDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OracleDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the name of the source data type."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.String
      description: "The name of the source data type."
  overload: System.Data.OracleClient.OracleDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OracleDataReader.GetDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a <xref uid=&quot;langword_csharp_DateTime&quot; name=&quot;DateTime&quot; href=&quot;&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.DateTime
      description: "The value of the specified column as a <xref uid=&quot;langword_csharp_DateTime&quot; name=&quot;DateTime&quot; href=&quot;&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OracleDataReader.GetDecimal(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Decimal
      description: "The value of the specified column as a <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OracleDataReader.GetDouble(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a double-precision floating point number."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Double
      description: "The value of the specified column as a double-precision floating point number."
  overload: System.Data.OracleClient.OracleDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OracleDataReader.GetEnumerator()
  fullName: System.Data.OracleClient.OracleDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader."
  remarks: "Although you can use this method to retrieve an explicit enumerator, in languages that support a foreach construct, it&quot;s simpler to use the looping construct directly in order to iterate through the rows in the data reader."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader."
  overload: System.Data.OracleClient.OracleDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OracleDataReader.GetFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the <xref:System.Type> that is the data type of the object."
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Type
      description: "The <xref:System.Type> that is the data type of the object."
  overload: System.Data.OracleClient.OracleDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OracleDataReader.GetFloat(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a single-precision floating-point number."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Single
      description: "The value of the specified column as a single-precision floating-point number."
  overload: System.Data.OracleClient.OracleDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OracleDataReader.GetGuid(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a globally-unique identifier (GUID)."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Guid
      description: "The value of the specified column as a GUID."
  overload: System.Data.OracleClient.OracleDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OracleDataReader.GetInt16(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a 16-bit signed integer."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Int16
      description: "The value of the specified column as a 16-bit signed integer."
  overload: System.Data.OracleClient.OracleDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OracleDataReader.GetInt32(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a 32-bit signed integer."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Int32
      description: "The value of the specified column as a 32-bit signed integer."
  overload: System.Data.OracleClient.OracleDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OracleDataReader.GetInt64(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a 64-bit signed integer."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Int64
      description: "The value of the specified column as a 64-bit signed integer."
  overload: System.Data.OracleClient.OracleDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OracleDataReader.GetName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the name of the specified column."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.String
      description: "A string that is the name of the specified column."
  overload: System.Data.OracleClient.OracleDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  id: GetOracleBFile(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleBFile(Int32)
  nameWithType: OracleDataReader.GetOracleBFile(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBFile(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleBFile GetOracleBFile (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleBFile*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  id: GetOracleBinary(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleBinary(Int32)
  nameWithType: OracleDataReader.GetOracleBinary(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBinary(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleBinary GetOracleBinary (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleBinary*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  id: GetOracleDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleDateTime(Int32)
  nameWithType: OracleDataReader.GetOracleDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleDateTime&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleDateTime GetOracleDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleDateTime
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleDateTime&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  id: GetOracleLob(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleLob(Int32)
  nameWithType: OracleDataReader.GetOracleLob(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleLob(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleLob GetOracleLob (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleLob
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleLob*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  id: GetOracleMonthSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleMonthSpan(Int32)
  nameWithType: OracleDataReader.GetOracleMonthSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleMonthSpan&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleMonthSpan
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleMonthSpan&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  id: GetOracleNumber(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleNumber(Int32)
  nameWithType: OracleDataReader.GetOracleNumber(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleNumber(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleNumber&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleNumber GetOracleNumber (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleNumber
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleNumber&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleNumber*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  id: GetOracleString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleString(Int32)
  nameWithType: OracleDataReader.GetOracleString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleString(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleString&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleString GetOracleString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleString
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleString&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  id: GetOracleTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleTimeSpan(Int32)
  nameWithType: OracleDataReader.GetOracleTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleTimeSpan&quot;></xref> object."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Data.OracleClient.OracleTimeSpan
      description: "The value of the specified column as an <xref href=&quot;System.Data.OracleClient.OracleTimeSpan&quot;></xref> object."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  id: GetOracleValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleValue(Int32)
  nameWithType: OracleDataReader.GetOracleValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the column at the specified ordinal in its Oracle format."
  remarks: "This method returns <xref:System.DBNull> for null database columns."
  syntax:
    content: public object GetOracleValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Object
      description: "The Oracle value to return."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  id: GetOracleValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleValues(Object[])
  nameWithType: OracleDataReader.GetOracleValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets all the attribute columns in the current row in Oracle format."
  remarks: "For most applications, the GetOracleValues method provides an efficient means for retrieving all columns, rather than retrieving each column individually.       You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.       This method returns <xref:System.DBNull> for null database columns."
  syntax:
    content: public int GetOracleValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "An array of type <xref:System.Object> into which to copy the attribute columns."
    return:
      type: System.Int32
      description: "The number of instances of <xref:System.Object> in the array."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OracleDataReader.GetOrdinal(String)
  fullName: System.Data.OracleClient.OracleDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the column ordinal, given the name of the column."
  remarks: "GetOrdinal performs a case-sensitive lookup first. If it fails, a second case-insensitive search is made. The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.       GetOrdinal is kana-width insensitive.       Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call GetOrdinal within a loop. Instead, call GetOrdinal once and then assign the results to an integer variable for use within the loop."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub ReadOracleData(ByVal connectionString As String)  \n  \n    Dim queryString As String = \"SELECT OrderID, CustomerID FROM Orders\"  \n    Dim connection As New OracleConnection(connectionString)  \n    Dim command As New OracleCommand(queryString, connectionString)  \n  \n    connection.Open()  \n  \n    Dim reader As OracleDataReader = command.ExecuteReader()  \n  \n    Dim custIdCol As Integer = reader.GetOrdinal(\"CustomerID\")  \n  \n    Do While reader.Read()  \n        Console.WriteLine(\"CustomerID = {0}\", reader.GetString(custIdCol))  \n    Loop  \n  \n    reader.Close()  \n    connection.Close()  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic void ReadOracleData(string connectionString)  \n{  \n    string queryString = \"SELECT OrderID, CustomerID FROM Orders\";  \n    OracleConnection connection = new OracleConnection(connectionString);  \n    OracleCommand command = new OracleCommand(queryString,connection);  \n  \n    connection.Open();  \n    OracleDataReader reader = command.ExecuteReader();  \n  \n    int custIdCol = reader.GetOrdinal(\"CustomerID\");  \n  \n    while (reader.Read())  \n        Console.WriteLine(\"CustomerID = {0}\", reader.GetString(custIdCol));  \n  \n    reader.Close();  \n    connection.Close();  \n}  \n```"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the column."
    return:
      type: System.Int32
      description: "The zero-based column ordinal."
  overload: System.Data.OracleClient.OracleDataReader.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets an <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> that is a representation of the underlying provider specific field type."
  syntax:
    content: public override Type GetProviderSpecificFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "An <xref:System.Int32>."
    return:
      type: System.Type
      description: "Gets an <xref:System.Object> that is a representation of the underlying provider specific field type."
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets an <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> that is a representation of the underlying provider specific field type."
  syntax:
    content: public override object GetProviderSpecificValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "An <xref:System.Int32>."
    return:
      type: System.Object
      description: "Gets an <xref:System.Object> that is a representation of the underlying provider specific field type."
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: OracleDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets an array of objects that are a representation of the underlying provider specific values."
  remarks: "For most applications, the GetProviderSpecificValues method provides an efficient means for retrieving all columns, rather than retrieving each column individually.       You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.       This method returns <xref:System.DBNull> for null database columns."
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "An array of <xref:System.Object>."
    return:
      type: System.Int32
      description: "The number of instances of <xref:System.Object> in the array."
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OracleDataReader.GetSchemaTable()
  fullName: System.Data.OracleClient.OracleDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Returns a <xref href=&quot;System.Data.DataTable&quot;></xref> that describes the column metadata of the OracleDataReader."
  remarks: "The GetSchemaTable method returns metadata about each column in the following order:      |DataReader Column|Description|   |-----------------------|-----------------|   |ColumnName|The name of the column; this might not be unique. If the column name cannot be determined, a null value is returned. This name always reflects the most recent naming of the column in the current view or command text.|   |ColumnOrdinal|The zero-based ordinal of the column. This column cannot contain a null value.|   |ColumnSize|The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type.|   |NumericPrecision|If <xref:System.Data.OracleClient.OracleParameter.DbType%2A> is a numeric data type, this is the maximum precision of the column. The precision depends on the definition of the column. `Float` and `Double` data types in Oracle are binary precision.|   |NumericScale|If <xref:System.Data.OracleClient.OracleParameter.DbType%2A> is a numeric data type, the number of digits to the right of the decimal point. `Float` and `Double` data types in Oracle are binary scale.|   |DataType|Maps to the common language runtime type of <xref:System.Data.OracleClient.OracleParameter.DbType%2A>.|   |IsLong|`true` if the column contains a Binary Long Object (BLOB) that contains very long data.|   |AllowDBNull|`true` if the consumer can set the column to a null value; otherwise, `false`. A column may contain null values, even if it cannot be set to a null value.|   |IsUnique|`true`: No two rows in the base table-the table returned in <xref:System.Data.Common.SchemaTableColumn.BaseTableName> -can have the same value in this column. **IsUnique** is guaranteed to be `true` if the column constitutes a key by itself or if there is a constraint of type UNIQUE that applies only to this column. `false`: The column can contain duplicate values in the base table. The default for this column is false.|   |IsKey|`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with **IsKey** set to true must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index. `false`: The column is not required to uniquely identify the row.|   |BaseTableName|The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.|   |BaseColumnName|The name of the column in the data store. This might be different than the column name returned in the **ColumnName** column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default for this column is a null value.|   |BaseSchemaName|The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default for this column is a null value.|       A row is returned for every column in the results set.      > [!NOTE] >  To ensure that metadata columns return the correct information, you must call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> that describes the column metadata."
  overload: System.Data.OracleClient.OracleDataReader.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OracleDataReader.GetString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a string."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.String
      description: "The value of the specified column as a string."
  overload: System.Data.OracleClient.OracleDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: OracleDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column as a <xref uid=&quot;langword_csharp_System.TimeSpan&quot; name=&quot;System.TimeSpan&quot; href=&quot;&quot;></xref>."
  remarks: "Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method."
  syntax:
    content: public TimeSpan GetTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.TimeSpan
      description: "The value of the specified column as a <xref:System.TimeSpan>."
  overload: System.Data.OracleClient.OracleDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified cast is not valid."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OracleDataReader.GetValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the column at the specified ordinal in its native format."
  remarks: "This method returns <xref:System.DBNull> for null database columns. The value returned by this method might be the result of the conversion from Oracle&quot;s Number data type to .NET Decimal type. If the value is too large to be stored in the .NET Decimal, this method throws an <xref:System.Data.OracleClient.OracleException> that is an overflow exception."
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Object
      description: "The value to return."
  overload: System.Data.OracleClient.OracleDataReader.GetValue*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "The value is too large to be stored in the .NET Decimal."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OracleDataReader.GetValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Populates an array of objects with the column values of the current row."
  remarks: "For most applications, the GetValues method provides an efficient means for retrieving all columns, rather than retrieving each column individually.       You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.       This method returns <xref:System.DBNull> for null database columns. The value returned in the <xref:System.Object> array might be the result of the conversion from Oracle&quot;s Number data type to .NET Decimal type. If the value is too large to be stored in the .NET Decimal, this method throws an <xref:System.Data.OracleClient.OracleException> that is an overflow exception."
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "An array of type <xref:System.Object> into which to copy the attribute columns."
    return:
      type: System.Int32
      description: "The number of instances of <xref:System.Object> in the array."
  overload: System.Data.OracleClient.OracleDataReader.GetValues*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "The value is too large to be stored in the .NET Decimal."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.HasRows
  id: HasRows
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OracleDataReader.HasRows
  fullName: System.Data.OracleClient.OracleDataReader.HasRows
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets a value indicating whether the <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> contains one or more rows."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> contains one or more rows; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.IsClosed
  id: IsClosed
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
  fullName: System.Data.OracleClient.OracleDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Indicates whether the <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> is closed."
  remarks: "IsClosed and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed."
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> is closed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OracleDataReader.IsDBNull(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets a value indicating whether the column contains non-existent or missing values."
  remarks: "To avoid raising an error, call this method to check for null column values before calling the typed Get methods (for example, <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>, <xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>, and so on)."
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based column ordinal."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified column value is equivalent to <xref href=&quot;System.DBNull&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OracleDataReader.Item(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column in its native format given the column ordinal."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "The column ordinal."
    return:
      type: System.Object
      description: "The value of the specified column in its native format."
  overload: System.Data.OracleClient.OracleDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "The index passed was outside the range of 0 through <xref:System.Data.IDataRecord.FieldCount*>."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OracleDataReader.Item(String)
  fullName: System.Data.OracleClient.OracleDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the value of the specified column in its native format given the column name."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "The column name."
    return:
      type: System.Object
      description: "The value of the specified column in its native format."
  overload: System.Data.OracleClient.OracleDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "No column with the specified name was found."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.NextResult
  id: NextResult
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OracleDataReader.NextResult()
  fullName: System.Data.OracleClient.OracleDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Advances the <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> to the next result"
  remarks: "You must use a `REF CURSOR` when calling this method."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there are more result sets; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Read
  id: Read
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OracleDataReader.Read()
  fullName: System.Data.OracleClient.OracleDataReader.Read()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Advances the <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> to the next record."
  remarks: "The default position of the <xref:System.Data.OracleClient.OracleDataReader> is prior to the first record. Therefore, you must call Read to begin accessing any data.       More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an <xref:System.Data.OracleClient.OracleDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OracleClient.OracleDataReader>, then the <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oracleclie_4_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_4_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there are more rows; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
  fullName: System.Data.OracleClient.OracleDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the number of rows changed, inserted, or deleted by execution of the SQL statement."
  remarks: "The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.OracleClient.OracleDataReader>.       <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed."
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected, or the statement failed."
  overload: System.Data.OracleClient.OracleDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.OracleClient.OracleDataReader.Close
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Close()
  nameWithType: OracleDataReader.Close()
  fullName: System.Data.OracleClient.OracleDataReader.Close()
- uid: System.Data.OracleClient.OracleDataReader.Depth
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Depth
  nameWithType: OracleDataReader.Depth
  fullName: System.Data.OracleClient.OracleDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleDataReader.FieldCount
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
  fullName: System.Data.OracleClient.OracleDataReader.FieldCount
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OracleDataReader.GetBoolean(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OracleDataReader.GetByte(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OracleDataReader.GetChar(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OracleDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OracleDataReader.GetDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OracleDataReader.GetDecimal(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OracleDataReader.GetDouble(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OracleDataReader.GetEnumerator()
  fullName: System.Data.OracleClient.OracleDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OracleDataReader.GetFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OracleDataReader.GetFloat(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OracleDataReader.GetGuid(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OracleDataReader.GetInt16(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OracleDataReader.GetInt32(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt32(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OracleDataReader.GetInt64(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt64(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OracleDataReader.GetName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetName(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBFile(Int32)
  nameWithType: OracleDataReader.GetOracleBFile(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBFile(Int32)
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBinary(Int32)
  nameWithType: OracleDataReader.GetOracleBinary(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBinary(Int32)
- uid: System.Data.OracleClient.OracleBinary
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBinary
  nameWithType: OracleBinary
  fullName: System.Data.OracleClient.OracleBinary
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleDateTime(Int32)
  nameWithType: OracleDataReader.GetOracleDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(Int32)
- uid: System.Data.OracleClient.OracleDateTime
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDateTime
  nameWithType: OracleDateTime
  fullName: System.Data.OracleClient.OracleDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleLob(Int32)
  nameWithType: OracleDataReader.GetOracleLob(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleLob(Int32)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleMonthSpan(Int32)
  nameWithType: OracleDataReader.GetOracleMonthSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(Int32)
- uid: System.Data.OracleClient.OracleMonthSpan
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleMonthSpan
  nameWithType: OracleMonthSpan
  fullName: System.Data.OracleClient.OracleMonthSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleNumber(Int32)
  nameWithType: OracleDataReader.GetOracleNumber(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleNumber(Int32)
- uid: System.Data.OracleClient.OracleNumber
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleNumber
  nameWithType: OracleNumber
  fullName: System.Data.OracleClient.OracleNumber
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleString(Int32)
  nameWithType: OracleDataReader.GetOracleString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleString(Int32)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleTimeSpan(Int32)
  nameWithType: OracleDataReader.GetOracleTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(Int32)
- uid: System.Data.OracleClient.OracleTimeSpan
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTimeSpan
  nameWithType: OracleTimeSpan
  fullName: System.Data.OracleClient.OracleTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValue(Int32)
  nameWithType: OracleDataReader.GetOracleValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValues(Object[])
  nameWithType: OracleDataReader.GetOracleValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OracleDataReader.GetOrdinal(String)
  fullName: System.Data.OracleClient.OracleDataReader.GetOrdinal(String)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: OracleDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(Object[])
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OracleDataReader.GetSchemaTable()
  fullName: System.Data.OracleClient.OracleDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OracleDataReader.GetString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetString(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: OracleDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OracleDataReader.GetValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetValue(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OracleDataReader.GetValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetValues(Object[])
- uid: System.Data.OracleClient.OracleDataReader.HasRows
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: HasRows
  nameWithType: OracleDataReader.HasRows
  fullName: System.Data.OracleClient.OracleDataReader.HasRows
- uid: System.Data.OracleClient.OracleDataReader.IsClosed
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
  fullName: System.Data.OracleClient.OracleDataReader.IsClosed
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OracleDataReader.IsDBNull(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.IsDBNull(Int32)
- uid: System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OracleDataReader.Item(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.Item(Int32)
- uid: System.Data.OracleClient.OracleDataReader.Item(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OracleDataReader.Item(String)
  fullName: System.Data.OracleClient.OracleDataReader.Item(String)
- uid: System.Data.OracleClient.OracleDataReader.NextResult
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OracleDataReader.NextResult()
  fullName: System.Data.OracleClient.OracleDataReader.NextResult()
- uid: System.Data.OracleClient.OracleDataReader.Read
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Read()
  nameWithType: OracleDataReader.Read()
  fullName: System.Data.OracleClient.OracleDataReader.Read()
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
  fullName: System.Data.OracleClient.OracleDataReader.RecordsAffected
- uid: System.Data.OracleClient.OracleDataReader.Close*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Close
  nameWithType: OracleDataReader.Close
- uid: System.Data.OracleClient.OracleDataReader.Depth*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Depth
  nameWithType: OracleDataReader.Depth
- uid: System.Data.OracleClient.OracleDataReader.FieldCount*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OracleDataReader.GetBoolean
- uid: System.Data.OracleClient.OracleDataReader.GetByte*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetByte
  nameWithType: OracleDataReader.GetByte
- uid: System.Data.OracleClient.OracleDataReader.GetBytes*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OracleDataReader.GetBytes
- uid: System.Data.OracleClient.OracleDataReader.GetChar*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChar
  nameWithType: OracleDataReader.GetChar
- uid: System.Data.OracleClient.OracleDataReader.GetChars*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChars
  nameWithType: OracleDataReader.GetChars
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OracleDataReader.GetDataTypeName
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OracleDataReader.GetDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OracleDataReader.GetDecimal
- uid: System.Data.OracleClient.OracleDataReader.GetDouble*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OracleDataReader.GetDouble
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OracleDataReader.GetEnumerator
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OracleDataReader.GetFieldType
- uid: System.Data.OracleClient.OracleDataReader.GetFloat*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OracleDataReader.GetFloat
- uid: System.Data.OracleClient.OracleDataReader.GetGuid*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OracleDataReader.GetGuid
- uid: System.Data.OracleClient.OracleDataReader.GetInt16*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OracleDataReader.GetInt16
- uid: System.Data.OracleClient.OracleDataReader.GetInt32*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OracleDataReader.GetInt32
- uid: System.Data.OracleClient.OracleDataReader.GetInt64*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OracleDataReader.GetInt64
- uid: System.Data.OracleClient.OracleDataReader.GetName*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetName
  nameWithType: OracleDataReader.GetName
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBFile
  nameWithType: OracleDataReader.GetOracleBFile
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBinary
  nameWithType: OracleDataReader.GetOracleBinary
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleDateTime
  nameWithType: OracleDataReader.GetOracleDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleLob
  nameWithType: OracleDataReader.GetOracleLob
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleMonthSpan
  nameWithType: OracleDataReader.GetOracleMonthSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleNumber
  nameWithType: OracleDataReader.GetOracleNumber
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleString
  nameWithType: OracleDataReader.GetOracleString
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleTimeSpan
  nameWithType: OracleDataReader.GetOracleTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValue
  nameWithType: OracleDataReader.GetOracleValue
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValues
  nameWithType: OracleDataReader.GetOracleValues
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OracleDataReader.GetOrdinal
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: OracleDataReader.GetProviderSpecificFieldType
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: OracleDataReader.GetProviderSpecificValue
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: OracleDataReader.GetProviderSpecificValues
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OracleDataReader.GetSchemaTable
- uid: System.Data.OracleClient.OracleDataReader.GetString*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetString
  nameWithType: OracleDataReader.GetString
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: OracleDataReader.GetTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValue
  nameWithType: OracleDataReader.GetValue
- uid: System.Data.OracleClient.OracleDataReader.GetValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValues
  nameWithType: OracleDataReader.GetValues
- uid: System.Data.OracleClient.OracleDataReader.HasRows*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: HasRows
  nameWithType: OracleDataReader.HasRows
- uid: System.Data.OracleClient.OracleDataReader.IsClosed*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OracleDataReader.IsDBNull
- uid: System.Data.OracleClient.OracleDataReader.Item*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item
  nameWithType: OracleDataReader.Item
- uid: System.Data.OracleClient.OracleDataReader.NextResult*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: NextResult
  nameWithType: OracleDataReader.NextResult
- uid: System.Data.OracleClient.OracleDataReader.Read*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Read
  nameWithType: OracleDataReader.Read
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
