### YamlMime:ManagedReference
items:
- uid: System.Messaging.ReceiveCompletedEventArgs
  id: ReceiveCompletedEventArgs
  children:
  - System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  - System.Messaging.ReceiveCompletedEventArgs.Message
  langs:
  - csharp
  name: ReceiveCompletedEventArgs
  nameWithType: ReceiveCompletedEventArgs
  fullName: System.Messaging.ReceiveCompletedEventArgs
  type: Class
  summary: "Provides data for the <see cref=&quot;E:System.Messaging.MessageQueue.ReceiveCompleted&quot;></see> event. When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler."
  remarks: "When you use event notification to receive messages asynchronously from the queue, you must create a method that handles your message processing. Your code must call <xref:System.Messaging.MessageQueue.BeginReceive%2A> to begin the asynchronous processing. When a message is received, your application is notified through the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event. An instance of ReceiveCompletedEventArgs is passed into the event delegate that calls your event handler. The data associated with the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is contained in the delegate&quot;s <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.       There are two ways to provide notification of event completion: event notification and callbacks. ReceiveCompletedEventArgs is used only with event notification. For information comparing callbacks and event notification, see &quot;Events vs. Callbacks&quot; on MSDN.       ReceiveCompletedEventArgs provides access to the message that initiated the end of the asynchronous receive operation, through the <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> member. This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>."
  example:
  - "The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.ReceiveCompletedEventHandler>. The event handler, `MyReceiveCompleted`, receives a message from a queue and writes its body to the screen.  \n  \n [!code-cs[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/CSharp/t-system.messaging.recei_1_1.cs)]\n [!code-cpp[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/CPP/t-system.messaging.recei_1_1.cpp)]\n [!code-vb[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/VisualBasic/t-system.messaging.recei_1_1.vb)]"
  syntax:
    content: 'public class ReceiveCompletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  id: AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the result of the asynchronous operation requested."
  remarks: "AsyncResult identifies ongoing or completed asynchronous operations. The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndReceive%2A> to access the message associated with the completed operation.       When you call <xref:System.Messaging.MessageQueue.BeginReceive%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed. The AsyncResult indicates the state of the asynchronous operation. <xref:System.Messaging.MessageQueue.BeginReceive%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndReceive%2A> completes it."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "A &lt;xref:System.IAsyncResult&gt; that contains the data associated with the receive operation."
  overload: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  id: Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets the message associated with the asynchronous receive operation."
  remarks: "The Message property provides a means for retrieving the message that initiated the end of the asynchronous receive operation.       <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName> is called the first time the Message property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndReceive%2A> prior to getting the value of this property."
  syntax:
    content: public System.Messaging.Message Message { get; }
    return:
      type: System.Messaging.Message
      description: "A <see cref=&quot;T:System.Messaging.Message&quot;></see> that represents the end result of the asynchronous receive operation."
  overload: System.Messaging.ReceiveCompletedEventArgs.Message*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "The Message could not be retrieved. The time-out on the asynchronous operation might have expired."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
