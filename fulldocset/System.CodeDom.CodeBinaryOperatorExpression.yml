### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeBinaryOperatorExpression
  id: CodeBinaryOperatorExpression
  children:
  - System.CodeDom.CodeBinaryOperatorExpression.#ctor
  - System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)
  - System.CodeDom.CodeBinaryOperatorExpression.Left
  - System.CodeDom.CodeBinaryOperatorExpression.Operator
  - System.CodeDom.CodeBinaryOperatorExpression.Right
  langs:
  - csharp
  name: CodeBinaryOperatorExpression
  nameWithType: CodeBinaryOperatorExpression
  fullName: System.CodeDom.CodeBinaryOperatorExpression
  type: Class
  summary: "Representa uma expressão que é composta por uma operação binária entre duas expressões."
  remarks: "CodeBinaryOperatorExpression pode ser utilizado para representar expressões de código que incluem um operador binário. Alguns exemplos de operadores binários são igualdade (`==`), adição (`+`) e bit a bit (`|`) operadores. O <xref:System.CodeDom.CodeBinaryOperatorType>enumeração representa um conjunto de básicos, frequentemente utilizados operadores binários, que são suportados em vários idiomas.</xref:System.CodeDom.CodeBinaryOperatorType>"
  example:
  - "This example demonstrates use of a CodeBinaryOperatorExpression to add two numbers together.  \n  \n [!code-cs[CodeBinaryOperatorExpression#2](~/add/codesnippet/csharp/t-system.codedom.codebin_1.cs)]\n [!code-cpp[CodeBinaryOperatorExpression#2](~/add/codesnippet/cpp/t-system.codedom.codebin_1.cpp)]\n [!code-vb[CodeBinaryOperatorExpression#2](~/add/codesnippet/visualbasic/t-system.codedom.codebin_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeBinaryOperatorExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: CodeBinaryOperatorExpression()
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeBinaryOperatorExpression&quot;> </xref> classe."
  syntax:
    content: public CodeBinaryOperatorExpression ();
    parameters: []
  overload: System.CodeDom.CodeBinaryOperatorExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)
  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)'
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeBinaryOperatorExpression&quot;> </xref> classe utilizando os parâmetros especificados."
  syntax:
    content: public CodeBinaryOperatorExpression (System.CodeDom.CodeExpression left, System.CodeDom.CodeBinaryOperatorType op, System.CodeDom.CodeExpression right);
    parameters:
    - id: left
      type: System.CodeDom.CodeExpression
      description: "O <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> no lado esquerdo do operador."
    - id: op
      type: System.CodeDom.CodeBinaryOperatorType
      description: "A <xref href=&quot;System.CodeDom.CodeBinaryOperatorType&quot;> </xref> que indica o tipo de operador."
    - id: right
      type: System.CodeDom.CodeExpression
      description: "O <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> à direita do operador."
  overload: System.CodeDom.CodeBinaryOperatorExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.Left
  id: Left
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: Left
  nameWithType: CodeBinaryOperatorExpression.Left
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Left
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a expressão de código no lado esquerdo do operador."
  syntax:
    content: public System.CodeDom.CodeExpression Left { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica o operando esquerdo."
  overload: System.CodeDom.CodeBinaryOperatorExpression.Left*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator
  id: Operator
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: Operator
  nameWithType: CodeBinaryOperatorExpression.Operator
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Operator
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define o operador na expressão operador binário."
  remarks: "Um operador binário executa uma edição de avaliação em dois operandos. Alguns exemplos de operadores binários são igualdade (`==`), adição (`+`) e bit a bit (`|`) operadores. Muitos operadores binários frequentemente utilizados podem ser encontrados no <xref:System.CodeDom.CodeBinaryOperatorType>enumeração.</xref:System.CodeDom.CodeBinaryOperatorType>"
  syntax:
    content: public System.CodeDom.CodeBinaryOperatorType Operator { get; set; }
    return:
      type: System.CodeDom.CodeBinaryOperatorType
      description: "A <xref href=&quot;System.CodeDom.CodeBinaryOperatorType&quot;> </xref> que indica o tipo de operador na expressão."
  overload: System.CodeDom.CodeBinaryOperatorExpression.Operator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.Right
  id: Right
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: Right
  nameWithType: CodeBinaryOperatorExpression.Right
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Right
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a expressão de código à direita do operador."
  syntax:
    content: public System.CodeDom.CodeExpression Right { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica o operando direito."
  overload: System.CodeDom.CodeBinaryOperatorExpression.Right*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: CodeBinaryOperatorExpression()
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
- uid: System.CodeDom.CodeBinaryOperatorType
  parent: System.CodeDom
  isExternal: false
  name: CodeBinaryOperatorType
  nameWithType: CodeBinaryOperatorType
  fullName: System.CodeDom.CodeBinaryOperatorType
- uid: System.CodeDom.CodeBinaryOperatorExpression.Left
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Left
  nameWithType: CodeBinaryOperatorExpression.Left
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Left
- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Operator
  nameWithType: CodeBinaryOperatorExpression.Operator
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Operator
- uid: System.CodeDom.CodeBinaryOperatorExpression.Right
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Right
  nameWithType: CodeBinaryOperatorExpression.Right
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Right
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: CodeBinaryOperatorExpression
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression
- uid: System.CodeDom.CodeBinaryOperatorExpression.Left*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Left
  nameWithType: CodeBinaryOperatorExpression.Left
- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Operator
  nameWithType: CodeBinaryOperatorExpression.Operator
- uid: System.CodeDom.CodeBinaryOperatorExpression.Right*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Right
  nameWithType: CodeBinaryOperatorExpression.Right
