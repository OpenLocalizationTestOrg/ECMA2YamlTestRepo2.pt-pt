### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDependency
  id: SqlDependency
  children:
  - System.Data.SqlClient.SqlDependency.#ctor
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  - System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.HasChanges
  - System.Data.SqlClient.SqlDependency.Id
  - System.Data.SqlClient.SqlDependency.OnChange
  - System.Data.SqlClient.SqlDependency.Start(System.String)
  - System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  langs:
  - csharp
  name: SqlDependency
  nameWithType: SqlDependency
  fullName: System.Data.SqlClient.SqlDependency
  type: Class
  summary: "The SqlDependency object represents a query notification dependency between an application and an instance of SQL Server. An application can create a SqlDependency object and register to receive notifications via the <xref href=&quot;System.Data.SqlClient.OnChangeEventHandler&quot;></xref> event handler."
  remarks: "SqlDependency is ideal for caching scenarios, where your ASP.NET application or middle-tier service needs to keep certain information cached in memory. SqlDependency allows you to receive notifications when the original data in the database changes so that the cache can be refreshed.       To set up a dependency, you need to associate a SqlDependency object to one or more <xref:System.Data.SqlClient.SqlCommand> objects. To receive notifications, you need to subscribe to the <xref:System.Data.SqlClient.SqlDependency.OnChange> event. For more information about the requirements for creating queries for notifications, see &quot;Creating a Query for Notification&quot; in SQL Server Books Online.      > [!NOTE] >  SqlDependency was designed to be used in ASP.NET or middle-tier services where there is a relatively small number of servers having dependencies active against the database. It was not designed for use in client applications, where hundreds or thousands of client computers would have SqlDependency objects set up for a single database server. If you are developing an application where you need reliable sub-second notifications when data changes, review the sections **Planning an Efficient Query Notifications Strategy** and **Alternatives to Query Notifications** in the [Planning for Notifications](http://go.microsoft.com/fwlink/?LinkId=211984) topic in SQL Server Books Online.       For more information, see [Query Notifications in SQL Server](~/add/includes/ajax-current-ext-md.md) and &quot;Building Notification Solutions&quot; in SQL Server Books Online.      > [!NOTE] >  The <xref:System.Data.SqlClient.SqlDependency.OnChange> event may be generated on a different thread from the thread that initiated command execution.       Query notifications are supported only for SELECT statements that meet a list of specific requirements. The following table provides links to the Service Broker and Query Notifications documentation in SQL Server Books Online.       **SQL Server Books Online**      -   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [Security and Protection (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)      -   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)      -   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [Solution Design Considerations (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public sealed class SqlDependency
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates a new instance of the <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> class with the default settings."
  remarks: "The constructor initializes the <xref:System.Data.SqlClient.SqlDependency> object using the default Service Broker service name and time-out. At some point after construction, you must use the <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> method to associate one or more commands to this <xref:System.Data.SqlClient.SqlDependency> object.       Query notifications are supported only for SELECT statements that meet a list of specific requirements. The following table provides links to the Service Broker and Query Notifications documentation in SQL Server Books Online.       **SQL Server Books Online**      -   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [Security and Protection (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)      -   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)      -   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [Solution Design Considerations (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency ();
    parameters: []
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates a new instance of the <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> class and associates it with the <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> parameter."
  remarks: "Internally, this constructor creates an instance of the <xref:System.Data.Sql.SqlNotificationRequest> class, and binds it to a <xref:System.Data.SqlClient.SqlCommand> object.       Query notifications are supported only for SELECT statements that meet a list of specific requirements. The following table provides links to the Service Broker and Query Notifications documentation in SQL Server Books Online.       **SQL Server Books Online**      -   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [Security and Protection (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)      -   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)      -   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [Solution Design Considerations (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "The <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object to associate with this <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> object. The constructor will set up a <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> object and bind it to the command."
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> parameter is NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object already has a <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> object assigned to its <xref:System.Data.SqlClient.SqlCommand.Notification*> property, and that <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> is not associated with this dependency."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  id: '#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates a new instance of the <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> class, associates it with the <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> parameter, and specifies notification options and a time-out value."
  remarks: "Query notifications are supported only for SELECT statements that meet a list of specific requirements. The following table provides links to the Service Broker and Query Notifications documentation in SQL Server Books Online.       **SQL Server Books Online**      -   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [Security and Protection (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)      -   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)      -   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [Solution Design Considerations (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "The <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object to associate with this <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> object. The constructor sets up a <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> object and bind it to the command."
    - id: options
      type: System.String
      description: "The notification request options to be used by this dependency.  `null` to use the default service."
    - id: timeout
      type: System.Int32
      description: "The time-out for this notification in seconds. The default is 0, indicating that the server&quot;s time-out should be used."
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> parameter is NULL."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The time-out value is less than zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object already has a <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> object assigned to its <xref:System.Data.SqlClient.SqlCommand.Notification*> property and that <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> is not associated with this dependency.       An attempt was made to create a **SqlDependency** instance from within SQLCLR."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  id: AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Associates a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object with this <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> instance."
  remarks: "Query notifications are supported only for SELECT statements that meet a list of specific requirements. The following table provides links to the Service Broker and Query Notifications documentation in SQL Server Books Online.       **SQL Server Books Online**      -   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [Security and Protection (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)      -   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)      -   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [Solution Design Considerations (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object containing a statement that is valid for notifications."
  overload: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> parameter is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object already has a <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> object assigned to its <xref:System.Data.SqlClient.SqlCommand.Notification*> property, and that <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref> is not associated with this dependency."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  id: HasChanges
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets a value that indicates whether one of the result sets associated with the dependency has changed."
  remarks: "If you are not using the <xref:System.Data.SqlClient.SqlDependency.OnChange> event, you can check the HasChanges property to determine if the query results have changed.       The HasChanges property does not necessarily imply a change in the data. Other circumstances, such as time-out expired and failure to set the notification request, also generate a change event."
  syntax:
    content: public bool HasChanges { get; }
    return:
      type: System.Boolean
      description: "A Boolean value indicating whether one of the result sets has changed."
  overload: System.Data.SqlClient.SqlDependency.HasChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Id
  id: Id
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets a value that uniquely identifies this instance of the <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> class."
  remarks: "The Id property is used to uniquely identify a given <xref:System.Data.SqlClient.SqlDependency> instance."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "A string representation of a GUID that is generated for each instance of the <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> class."
  overload: System.Data.SqlClient.SqlDependency.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.OnChange
  id: OnChange
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Occurs when a notification is received for any of the commands associated with this <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref> object."
  remarks: "OnChange occurs when the results for the associated command change. If you are not using OnChange, you can check the <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> property to determine whether the query results have changed.       The OnChange event does not necessarily imply a change in the data. Other circumstances, such as time-out expired and failure to set the notification request, also generate OnChange."
  syntax:
    content: public event System.Data.SqlClient.OnChangeEventHandler OnChange;
    return:
      type: System.Data.SqlClient.OnChangeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  id: Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string."
  remarks: "This method starts the listener for the <xref:System.AppDomain> for receiving dependency notifications from the instance of [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] specified by the `connectionString` parameter. This method may be called more than once with different connection strings for multiple servers.       For additional remarks, see <xref:System.Data.SqlClient.SqlDependency.Start%2A>."
  syntax:
    content: public static bool Start (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "The connection string for the instance of [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] from which to obtain change notifications."
    return:
      type: System.Boolean
      description: '**true** if the listener initialized successfully; **false** if a compatible listener already exists.'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>connectionString</code> parameter is NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>connectionString</code> parameter is the same as a previous call to this method, but the parameters are different.       The method was called from within the CLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The caller does not have the required <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> code access security (CAS) permission."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A subsequent call to the method has been made with an equivalent <code>connectionString</code> parameter with a different user, or a user that does not default to the same schema.       Also, any underlying **SqlClient** exceptions."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  id: Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string using the specified SQL Server Service Broker queue."
  remarks: "This method starts the listener for the <xref:System.AppDomain> for receiving dependency notifications from the instance of SQL Server specified by the `connectionString` parameter. This method may be called more than once with different connection strings for multiple servers.       If no queue name is specified, <xref:System.Data.SqlClient.SqlDependency> creates a temporary queue and service in the server that is used for the entire process, even if the process involves more than one <xref:System.AppDomain>. The queue and service are automatically removed upon application shutdown.       For additional remarks, see <xref:System.Data.SqlClient.SqlDependency.Start%2A>."
  syntax:
    content: public static bool Start (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "The connection string for the instance of SQL Server from which to obtain change notifications."
    - id: queue
      type: System.String
      description: "An existing SQL Server Service Broker queue to be used. If <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the default queue is used."
    return:
      type: System.Boolean
      description: '**true** if the listener initialized successfully; **false** if a compatible listener already exists.'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>connectionString</code> parameter is NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>connectionString</code> parameter is the same as a previous call to this method, but the parameters are different.       The method was called from within the CLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The caller does not have the required <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> code access security (CAS) permission."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A subsequent call to the method has been made with an equivalent <code>connectionString</code> parameter but a different user, or a user that does not default to the same schema.       Also, any underlying **SqlClient** exceptions."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  id: Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Stops a listener for a connection specified in a previous <xref:System.Data.SqlClient.SqlDependency.Start*> call."
  remarks: "The <xref:System.Data.SqlClient.SqlDependency.Stop%2A> method must be called for each <xref:System.Data.SqlClient.SqlDependency.Start%2A> call. A given listener only shuts down fully when it receives the same number of <xref:System.Data.SqlClient.SqlDependency.Stop%2A> requests as <xref:System.Data.SqlClient.SqlDependency.Start%2A> requests."
  syntax:
    content: public static bool Stop (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Connection string for the instance of SQL Server that was used in a previous <xref:System.Data.SqlClient.SqlDependency.Start*> call."
    return:
      type: System.Boolean
      description: '**true** if the listener was completely stopped; **false** if the <xref href=&quot;System.AppDomain&quot;></xref> was unbound from the listener, but there are is at least one other <xref href=&quot;System.AppDomain&quot;></xref> using the same listener.'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>connectionString</code> parameter is NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The method was called from within SQLCLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The caller does not have the required <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> code access security (CAS) permission."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "An underlying **SqlClient** exception occurred."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  id: Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Stops a listener for a connection specified in a previous <xref:System.Data.SqlClient.SqlDependency.Start*> call."
  remarks: "The <xref:System.Data.SqlClient.SqlDependency.Stop%2A> method must be called for each <xref:System.Data.SqlClient.SqlDependency.Start%2A> call. A given listener only shuts down fully when it receives the same number of <xref:System.Data.SqlClient.SqlDependency.Stop%2A> requests as <xref:System.Data.SqlClient.SqlDependency.Start%2A> requests."
  syntax:
    content: public static bool Stop (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "Connection string for the instance of SQL Server that was used in a previous <xref:System.Data.SqlClient.SqlDependency.Start*> call."
    - id: queue
      type: System.String
      description: "The SQL Server Service Broker queue that was used in a previous <xref:System.Data.SqlClient.SqlDependency.Start*> call."
    return:
      type: System.Boolean
      description: '**true** if the listener was completely stopped; **false** if the <xref href=&quot;System.AppDomain&quot;></xref> was unbound from the listener, but there is at least one other <xref href=&quot;System.AppDomain&quot;></xref> using the same listener.'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>connectionString</code> parameter is NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The method was called from within SQLCLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The caller does not have the required <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> code access security (CAS) permission."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "And underlying **SqlClient** exception occurred."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDependency.#ctor
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDependency.Id
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.OnChange
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
- uid: System.Data.SqlClient.OnChangeEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: OnChangeEventHandler
  nameWithType: OnChangeEventHandler
  fullName: System.Data.SqlClient.OnChangeEventHandler
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
- uid: System.Data.SqlClient.SqlDependency.#ctor*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency
  nameWithType: SqlDependency.SqlDependency
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency
  nameWithType: SqlDependency.AddCommandDependency
- uid: System.Data.SqlClient.SqlDependency.HasChanges*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
- uid: System.Data.SqlClient.SqlDependency.Id*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.Start*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start
  nameWithType: SqlDependency.Start
- uid: System.Data.SqlClient.SqlDependency.Stop*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop
  nameWithType: SqlDependency.Stop
