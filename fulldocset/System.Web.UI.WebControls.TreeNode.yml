### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNode
  id: TreeNode
  children:
  - System.Web.UI.WebControls.TreeNode.#ctor
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.Checked
  - System.Web.UI.WebControls.TreeNode.ChildNodes
  - System.Web.UI.WebControls.TreeNode.Clone
  - System.Web.UI.WebControls.TreeNode.Collapse
  - System.Web.UI.WebControls.TreeNode.CollapseAll
  - System.Web.UI.WebControls.TreeNode.DataBound
  - System.Web.UI.WebControls.TreeNode.DataItem
  - System.Web.UI.WebControls.TreeNode.DataPath
  - System.Web.UI.WebControls.TreeNode.Depth
  - System.Web.UI.WebControls.TreeNode.Expand
  - System.Web.UI.WebControls.TreeNode.ExpandAll
  - System.Web.UI.WebControls.TreeNode.Expanded
  - System.Web.UI.WebControls.TreeNode.ImageToolTip
  - System.Web.UI.WebControls.TreeNode.ImageUrl
  - System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.NavigateUrl
  - System.Web.UI.WebControls.TreeNode.Parent
  - System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.SaveViewState
  - System.Web.UI.WebControls.TreeNode.Select
  - System.Web.UI.WebControls.TreeNode.SelectAction
  - System.Web.UI.WebControls.TreeNode.Selected
  - System.Web.UI.WebControls.TreeNode.ShowCheckBox
  - System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNode.Target
  - System.Web.UI.WebControls.TreeNode.Text
  - System.Web.UI.WebControls.TreeNode.ToggleExpandState
  - System.Web.UI.WebControls.TreeNode.ToolTip
  - System.Web.UI.WebControls.TreeNode.TrackViewState
  - System.Web.UI.WebControls.TreeNode.Value
  - System.Web.UI.WebControls.TreeNode.ValuePath
  langs:
  - csharp
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
  type: Class
  summary: "Representa um nó de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controlo é constituído por nós.</xref:System.Web.UI.WebControls.TreeView> Cada entrada na árvore da denomina-se um nó e é representada por um objeto de TreeNode. Um nó que contém outros nós é chamado um *nó principal*. Um nó que está contido por outro nó é chamado um *o nó secundário*. Um nó que não tem nós subordinados é chamado um *o nó de folha*. Um nó que não está contido em qualquer outro nó, mas o predecessor para todos os outros nós é o *nó raiz*. Um nó pode ser um elemento principal e um principal subordinado, mas raiz, e nós de folha são mutuamente exclusivos. Várias propriedades de visual e comportamentais de nós são determinadas pelo se um nó é um *raiz*, *principal*, ou *folha* nós.       Embora uma árvore típica tem apenas um nó de raiz, o <xref:System.Web.UI.WebControls.TreeView>controlo permite-lhe adicionar vários nós raiz para a estrutura de árvore.</xref:System.Web.UI.WebControls.TreeView> Isto é útil quando pretende apresentar item listagens sem apresentar um nó principal de raiz única, como uma lista de categorias de produto.       Um nó principalmente armazena dados em duas propriedades, o <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade e o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> O valor da <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade é apresentada no <xref:System.Web.UI.WebControls.TreeView>controlo e o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade é utilizada para armazenar quaisquer dados adicionais sobre o nó, tais como os dados utilizados para processar eventos de nova colocação.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> Um nó também armazena o caminho do nó para o nó de raiz no <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> O <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade indica a posição do nó relativo para o nó de raiz.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>      > [!NOTE] > Nós no mesmo nível têm de ter cada um valor exclusivo para o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade; o <xref:System.Web.UI.WebControls.TreeView>controlo não é possível distinguir entre nós diferentes no mesmo nível que têm o mesmo valor.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Neste cenário, se o utilizador clica um nó que tem um valor duplicado, o nó que aparece em primeiro lugar no <xref:System.Web.UI.WebControls.TreeView>controlo é selecionado.</xref:System.Web.UI.WebControls.TreeView>       Os seguintes elementos de interface (IU) de quatro utilizador, o que podem ser personalizados ou ocultos é composto por um objeto de TreeNode:-um ícone de indicador de nó de expansão utilizado para mostrar se o nó é expandido, fechado ou não é possível expandir.      -Uma caixa de verificação opcional associada com o nó.      -Uma imagem do nó opcional.      -Texto o nó.       Pode especificar uma imagem personalizada para os indicadores de nó expansível, expansível e não é possível expandir definindo a <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>e <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>as propriedades de <xref:System.Web.UI.WebControls.TreeView>classe.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> Os ícones de indicador de nó de expansão mesmo podem ser ocultados inteiramente definindo a <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade o <xref:System.Web.UI.WebControls.TreeView>de classe para `false`.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>       Para apresentar uma caixa de verificação junto a um nó, defina a <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>propriedade de <xref:System.Web.UI.WebControls.TreeView>classe.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Quando o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>propriedade está definida como um valor diferente de `TreeNodeType.Node`, são apresentadas as caixas de verificação junto ao tipo de nó especificado.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Pode substituir seletivamente a caixa de verificação de um nó individual, definindo o nó <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> Quando é apresentada uma caixa de verificação, utilize o <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>propriedade para determinar se a caixa de verificação está selecionada.</xref:System.Web.UI.WebControls.TreeNode.Checked%2A>       Pode visualizar uma imagem num nó, definindo o <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> Esta imagem é apresentada junto do texto do nó.       O texto de um nó de <xref:System.Web.UI.WebControls.TreeView>controlo pode estar em um de dois modos: modo de seleção ou navegação.</xref:System.Web.UI.WebControls.TreeView> Por predefinição, um nó está no modo de seleção. Para colocar um nó em modo de navegação, defina o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade para um valor diferente de uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Para colocar um nó em modo de seleção, defina o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade como uma cadeia vazia.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Navegadores de Internet algumas têm uma limitação que pode afetar o desempenho do <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Por exemplo, Microsoft Internet Explorer 6.0 tem um limite de caráter do URL de carateres de 2067 que mensagens do mesmo. Se o número de carateres num URL de um nó é maior do que esse número, expandir esse nó falhará e sem exceção é emitida.       Por predefinição, ao clicar num nó que está no modo de seleção de mensagens a página de volta para o servidor e gera o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>eventos.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Opcionalmente, pode especificar um evento diferentes para gerar, definindo o nó `SelectAction` propriedade. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> Para determinar o nó que foi clicado no modo de seleção, utilize o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>propriedade o <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Quando um nó no modo de navegação, todos os eventos de seleção estão desativados para esse nó. Ao clicar no nó no modo de navegação direciona o utilizador para o URL especificado. Opcionalmente, pode definir o <xref:System.Web.UI.WebControls.TreeNode.Target%2A>propriedade para especificar o window ou frame onde apresentar o conteúdo associado.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       A classe de TreeNode contém várias propriedades que são utilizadas para armazenar o estado do nó. Utilize o <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>propriedade para determinar se um nó estiver seleccionado.</xref:System.Web.UI.WebControls.TreeNode.Selected%2A> Para determinar se o nó é expandido, utilize o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> O <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>propriedade é utilizada para determinar se um nó está vinculado a dados.</xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Quando um nó está vinculado a dados, pode aceder a do item de dados subjacente, utilizando o <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>       A classe fornece várias propriedades que ajudam a determinar a posição de um nó de relação a outros nós na árvore. Utilize o <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>propriedade para determinar a profundidade do nó.</xref:System.Web.UI.WebControls.TreeNode.Depth%2A> Pode obter a lista delimitada de nós do nó atual para o nó de raiz utilizando o <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Para determinar o nó de principal do nó, utilize o <xref:System.Web.UI.WebControls.TreeNode.Parent%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Parent%2A> Nós subordinados são acedidos através de <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       Por vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende da intervenção do utilizador. Por este motivo, o <xref:System.Web.UI.WebControls.TreeView>controlo suporta a população de nó dinâmico.</xref:System.Web.UI.WebControls.TreeView> Um nó pode ser preenchido em tempo de execução quando é expandido. Tenha em atenção que pode obter um comportamento inesperado se persistir nós criada no modo assíncrono. Por exemplo, se utilizar um thread de trabalho de fundo para preencher nós de forma assíncrona, a árvore de nó poderá não ser preenchida imediatamente apesar do controlo prossegue com o restante do ciclo de vida da página. Na nova colocação, a criação de nós atrasado pode causar problemas quando o estado de visualização do controlo foi carregado mas a árvore de nó não é totalmente preenchida.  Para obter mais informações sobre a população de nó dinâmico, consulte o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Para obter uma lista de valores de propriedade inicial para uma instância de TreeNode, consulte o <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>construtor.</xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to create TreeNode objects in the <xref:System.Web.UI.WebControls.TreeView> control. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ChildNodes")]

      public class TreeNode : ICloneable, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe sem texto ou um valor."
  remarks: "Utilize este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe utilizando os valores predefinidos.</xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Quando é utilizado este construtor, todas as propriedades de <xref:System.Web.UI.WebControls.TreeNode>objeto estão definidos para os respetivos valores predefinidos.</xref:System.Web.UI.WebControls.TreeNode> Lembre-se de que defina as propriedades, conforme necessário, depois de criar o objeto."
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_241_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_241_1.aspx)]"
  syntax:
    content: public TreeNode ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe com o texto especificado."
  remarks: "Utilize este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe com o texto especificado pelo `text` parâmetro.</xref:System.Web.UI.WebControls.TreeNode>       A tabela seguinte mostra o valor da propriedade inicial para uma instância do <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor da `text` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_234_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_234_1.aspx)]"
  syntax:
    content: public TreeNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é apresentado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo para o nó."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe com o texto especificado e valor."
  remarks: "Utilize este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe com o texto e o valor especificado pelo `text` e `value` parâmetros, respetivamente.</xref:System.Web.UI.WebControls.TreeNode>       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor da `text` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| O valor da `value` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_51_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é apresentado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo para o nó."
    - id: value
      type: System.String
      description: "Os dados suplementares associados com o nó, tais como os dados utilizados para processar eventos de nova colocação."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe com o proprietário especificado."
  syntax:
    content: protected TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeView
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> que irá conter a nova <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
    - id: isRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> é um nó de raiz; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe com o texto especificado, o valor e o URL de imagem."
  remarks: "Utilize este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe com o texto, o valor e o URL especificado de imagem de `text`, `value`, e `imageUrl` parâmetros, respetivamente.</xref:System.Web.UI.WebControls.TreeNode>       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor da `text` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| O valor da `value` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>| O valor da `imageUrl` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/3795fa87-8785-4a78-ab89-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/3795fa87-8785-4a78-ab89-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é apresentado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo para o nó."
    - id: value
      type: System.String
      description: "Os dados suplementares associados com o nó, tais como os dados utilizados para processar eventos de nova colocação."
    - id: imageUrl
      type: System.String
      description: "O URL de uma imagem que é apresentado junto ao nó."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> utilizando o texto especificado, o valor, o URL da imagem, o URL de navegação e o destino de classe."
  remarks: "Utilize este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe utilizando os URLs de texto, valor, imagem e navegação e apresentar o destino especificado pelo `text`, `value`, `imageUrl`, `navigateUrl`, e `target` parâmetros, respetivamente.</xref:System.Web.UI.WebControls.TreeNode>       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor da `text` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| O valor da `value` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>| O valor da `imageUrl` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>| O valor da `navigateUrl` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Target%2A>| O valor da `target` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/731d6a74-0b18-423b-841c-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/731d6a74-0b18-423b-841c-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é apresentado no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo para o nó."
    - id: value
      type: System.String
      description: "Os dados suplementares associados com o nó, tais como os dados utilizados para processar eventos de nova colocação."
    - id: imageUrl
      type: System.String
      description: "O URL de uma imagem que é apresentado junto ao nó."
    - id: navigateUrl
      type: System.String
      description: "O URL de ligação para quando o nó é clicado."
    - id: target
      type: System.String
      description: "A janela de destino ou um intervalo no qual a apresentar o conteúdo da página Web ligada para quando o nó é clicado."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Checked
  id: Checked
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se a caixa de verificação do nó está selecionada."
  remarks: "Quando um nó apresenta uma caixa de verificação, a propriedade Checked é normalmente utilizada para especificar se a caixa de verificação está selecionada. Quando é selecionada a caixa de verificação associada a um nó, o nó for adicionado automaticamente ao <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>coleção do <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> A propriedade Checked também pode ser utilizada para determinar se a caixa de verificação está selecionada.      > [!NOTE] > É mais comum para determinar quais os nós no <xref:System.Web.UI.WebControls.TreeView>controlo ter as respetivas caixas de verificação selecionadas por repetir o <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>coleção.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the Checked property to specify whether a node's check box is selected. It initializes the check boxes of nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_280_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_280_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se estiver selecionada a caixa de verificação do nó; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  id: ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> coleção que contém os nós de primeiro nível subordinado do nó atual."
  remarks: "Utilize a propriedade ChildNodes para obter um <xref:System.Web.UI.WebControls.TreeNodeCollection>coleção que contém os nós de primeiro nível subordinado do nó atual.</xref:System.Web.UI.WebControls.TreeNodeCollection> Esta coleção é normalmente utilizada para iterar através de todos os nós subordinados de primeiro nível ou para aceder a um nó específico de primeiro nível de subordinados do nó atual.       A propriedade ChildNodes também pode ser utilizada para gerir de forma programática nós subordinados de primeiro nível no nó atual. Pode adicionar, inserir, remover e obter <xref:System.Web.UI.WebControls.TreeNode>objetos da coleção.</xref:System.Web.UI.WebControls.TreeNode> Todas as atualizações à coleção serão refletidas automaticamente no <xref:System.Web.UI.WebControls.TreeView>controlar da próxima vez que a página é atualizada.</xref:System.Web.UI.WebControls.TreeView>       Para aceder a nós subordinados mais abaixo na árvore, utilize a propriedade de ChildNodes do nó subordinado ao nível seguinte para navegar para baixo os níveis de nó."
  example:
  - "The following code example demonstrates how to use the ChildNodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_95_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_95_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> que contém os nós de primeiro nível subordinado do nó atual."
  overload: System.Web.UI.WebControls.TreeNode.ChildNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Clone
  id: Clone
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe com as propriedades da atual <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> instância."
  remarks: "Este é um método de programa auxiliar que suporta a <xref:System.ICloneable>interface implementada pelo <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.ICloneable>"
  syntax:
    content: protected virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> com as propriedades da atual <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> instância."
  overload: System.Web.UI.WebControls.TreeNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  id: Collapse
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fecha o atual nó de árvore."
  remarks: "Utilize o método de fechar para fechar comodamente o nó atual.      > [!NOTE] > Como alternativa, também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade `false`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para fechar o nó atual e todos os respetivos nós subordinados, considere utilizar o <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>método.</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>irá fechar todos os nós da árvore completa.</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the Collapse method to programmatically collapse a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_20_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_20_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Collapse ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fecha o nó atual e todos os respetivos nós subordinados."
  remarks: "Utilize o método CollapseAll para fechar comodamente o nó atual e todos os respetivos nós subordinados.      > [!NOTE] > Como alternativa, também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade do nó atual e cada um dos respetivos nós subordinados para `false`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para fechar apenas o nó atual, considere utilizar o <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>método.</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>irá fechar todos os nós da árvore completa.</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the CollapseAll method to programmatically collapse a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  id: DataBound
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o nó foi criado através do enlace de dados."
  remarks: "A propriedade ligado a dados é utilizada para programaticamente determinar se o nó foi criado através do enlace de dados. Porque não é possível misturar conteúdo estático e dinâmico no mesmo nó, esta propriedade é usada normalmente quando preencher um <xref:System.Web.UI.WebControls.TreeView>controlo dinamicamente para determinar se o nó contém conteúdo estático.</xref:System.Web.UI.WebControls.TreeView>       O valor desta propriedade é armazenado no estado de visualização."
  syntax:
    content: public bool DataBound { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó foi criado através do enlace de dados caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.DataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o item de dados que está vinculado ao controlo."
  remarks: "Quando o <xref:System.Web.UI.WebControls.TreeView>controlo está vinculado a uma origem de dados, tais como um <xref:System.Web.UI.WebControls.XmlDataSource>objeto, esta propriedade for definida para o item de dados que está vinculado a este nó específico.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeView> Esta propriedade é normalmente utilizada para aceder aos valores do item de dados.      > [!NOTE] > Esta propriedade está disponível apenas após o enlace de dados."
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; que representa o item de dados que está vinculado ao controlo. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica que o nó não está vinculado a qualquer item de dados."
  overload: System.Web.UI.WebControls.TreeNode.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  id: DataPath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o caminho para os dados vinculados ao nó."
  remarks: "O valor da propriedade DataPath é usado normalmente quando chamar o <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName>vinculado método para fornecer o caminho para os dados para o nó atual.</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName> Este método devolve um <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>objeto que contém os dados no caminho especificado.</xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>       O valor desta propriedade é armazenado no estado de visualização."
  syntax:
    content: public string DataPath { get; }
    return:
      type: System.String
      description: "O caminho para os dados vinculados ao nó. Este valor provém do controlo de origem de dados hierárquica ao qual o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo está vinculado. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.DataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a profundidade do nó."
  remarks: "Utilize a propriedade de profundidade para determinar a profundidade do nó. A profundidade representa o número de níveis da hierarquia entre um nó e o nó de raiz. Por exemplo, um nó de raiz tem uma profundidade de zero. Um elemento subordinado do nó de raiz tem uma profundidade de uma e assim sucessivamente."
  example:
  - "The following code example demonstrates how use the Depth property to determine the depth of a node. It initializes all nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1355_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1355_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "A profundidade do nó."
  overload: System.Web.UI.WebControls.TreeNode.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expand
  id: Expand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Expande o atual nó de árvore."
  remarks: "Utilize o método de expansão para comodamente expanda o nó atual.      > [!NOTE] > Como alternativa, também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade `true`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para expandir o nó atual e todos os respetivos nós subordinados, considere utilizar o <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>método.</xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>irá expandir todos os nós da árvore completa.</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the Expand method to programmatically expand a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_91_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Expand ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Expand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Expandir o nó atual e todos os respetivos nós subordinados."
  remarks: "Utilize o método de ExpandAll comodamente expandir o nó atual e todos os respetivos nós subordinados.      > [!NOTE] > Como alternativa, também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade do nó atual e cada um dos respetivos nós subordinados para `true`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para expandir apenas o nó atual, considere utilizar o <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>método.</xref:System.Web.UI.WebControls.TreeNode.Expand%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>irá expandir todos os nós da árvore completa.</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>"
  example:
  - "The following code example demonstrates how to use the ExpandAll method to programmatically expand a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_213_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_213_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  id: Expanded
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o nó é expandido."
  remarks: "Utilize a propriedade de Expanded a especificar ou a determinar se o nó é expandido.       Pode expandir e fechar um nó ao chamar o <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>e <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>métodos, respetivamente.</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> </xref:System.Web.UI.WebControls.TreeNode.Expand%2A> Também pode expandir e fechar um nó e todos os respetivos nós subordinados, chamando o <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>e <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>métodos, respetivamente.</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> </xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       Uma vez que a propriedade Expanded uma propriedade de estado de tri, o seguinte fragmento de código do c# faz com que um erro de compilação: ```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ``` implicitamente casts VB.Net enquanto o `Boolean` valor para um `NullableBoolean`, c# não. Por conseguinte, é uma melhor prática explicitamente verificou o estado da propriedade. Por exemplo, os seguintes exemplos de código no Visual Basic e c# teste explicitamente o valor da propriedade Expanded.       Exemplo de código seguinte do Visual Basic testes explicitamente o valor da propriedade Expanded. Neste exemplo testa se a propriedade Expanded estiver definida como `True`; por conseguinte `Nothing` e `False` passa o `If` instrução.      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```Este exemplo de código c# testes explicitamente o valor da propriedade Expanded. Neste exemplo testa se a propriedade Expanded estiver definida como `True`; por conseguinte `Null` e `False` passa o `If` instrução.      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```"
  example:
  - "The following code example demonstrates how to use the Expanded property to programmatically expand a node. It initializes all nodes with a depth of one to an expanded state. Notice that when the root node is expanded, its child nodes are already expanded. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeExpanded#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_746_1.aspx)]\n [!code-cs[TreeNodeExpanded#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_746_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> Expanded { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó é expandido, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o nó não está expandido, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Expanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto da descrição da imagem apresentado junto a um nó."
  remarks: "Quando uma imagem é apresentada junto a um nó (quando o <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>definir a propriedade), utilize a propriedade ImageToolTip para especificar a descrição apresentada quando o utilizador positions o ponteiro do rato sobre a imagem.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> O texto que especificar fornece tecnologia de apoio aos dispositivos com uma descrição da imagem que pode ser utilizada para tornar o controlo mais acessível.       O valor desta propriedade é armazenado no estado de visualização.       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for an image displayed next to a node. For this example to work correctly, you must provide your own images.  \n  \n [!code-vb[TreeNodeImageToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_911_1.aspx)]\n [!code-cs[TreeNodeImageToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_911_1.aspx)]"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "O texto de descrição para a imagem apresentada junto de um nó. A predefinição é uma cadeia vazia (&quot;&quot;), que indica que esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o URL de uma imagem que é apresentado junto ao nó."
  remarks: "Utilize a propriedade ImageUrl para especificar uma imagem personalizada para o nó atual no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> Esta imagem é apresentada junto ao nó e pode estar em qualquer formato de ficheiro (. jpg, GIF, *.bmp e assim sucessivamente), desde que esse formato de suporte do browser do cliente.       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the ImageUrl property to provide a custom image for a node. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1020_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1020_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "O URL de uma imagem personalizada que é apresentado junto ao nó. O valor predefinido é uma cadeia vazia (&quot;&quot;), que indica que esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TreeNode.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o nó está a guardar as alterações para o estado de vista."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controlo está marcado para guardar Estado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o estado de visualização guardado anteriormente do nó."
  remarks: "LoadViewState é um método de programa auxiliar utilizado para carregar o estado guardado anteriormente vista do nó"
  syntax:
    content: protected virtual void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um <xref:System.Object>que representa o estado do nó.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o URL para navegar para quando o nó é clicado."
  remarks: "O texto de um nó pode estar em um de dois modos: modo de seleção ou navegação. Por predefinição, um nó está no modo de seleção. Para colocar um nó em modo de navegação, defina a propriedade NavigateUrl do nó para um valor diferente de uma cadeia vazia.       Quando um nó no modo de navegação, todos os eventos de seleção estão desativados para esse nó. Ao clicar no nó no modo de navegação, o utilizador contém ligações para o URL especificado. Opcionalmente, pode definir o <xref:System.Web.UI.WebControls.TreeNode.Target%2A>propriedade para especificar o window ou frame onde apresentar o conteúdo associado.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_1.aspx)]  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when the node is clicked. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_2.aspx)]"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "O URL para navegar para quando o nó é clicado. O valor predefinido é uma cadeia vazia (&quot;&quot;), que indica que esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Parent
  id: Parent
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o nó principal do nó atual."
  remarks: "Devolve de propriedade principal uma <xref:System.Web.UI.WebControls.TreeNode>objeto que representa o nó principal do nó atual.</xref:System.Web.UI.WebControls.TreeNode> É frequentemente utilizado para determinar o nó principal ou para aceder às propriedades do nó principal.      > [!NOTE] > Um nó de raiz não tem um nó principal.       Para aceder a nós subordinados do nó atual, utilize o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>"
  example:
  - "The following code example demonstrates how to use the Parent property to access the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of the current node's parent node.  \n  \n [!code-vb[TreeNodeParent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_132_1.aspx)]\n [!code-cs[TreeNodeParent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_132_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode Parent { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> que representa o nó principal do nó atual."
  overload: System.Web.UI.WebControls.TreeNode.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o nó é preenchido dinamicamente."
  remarks: "Por vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende da intervenção do utilizador. Por este motivo, o <xref:System.Web.UI.WebControls.TreeView>controlo suporta a população de nó dinâmico.</xref:System.Web.UI.WebControls.TreeView> Quando um nó PopulateOnDemand for definida como `true`, esse nó é preenchido em tempo de execução através de um evento de nova colocação quando o nó é expandido. Para preencher um nó dinamicamente, um método de processamento de eventos que preenche o nó tem de ser definido para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>eventos.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       Browsers suportados também podem tirar partido da população de nó do lado do cliente. Quando ativada, isto permite que o <xref:System.Web.UI.WebControls.TreeView>controlo para preencher dinamicamente um nó no cliente quando esse nó é expandido, o que impede a necessidade de post para o servidor.</xref:System.Web.UI.WebControls.TreeView> Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the PopulateOnDemand property to indicate that a node is populated dynamically.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_774_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_774_1.aspx)]"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para preencher o nó dinamicamente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  id: RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite aos programadores do controlo Adicionar composição adicional para o nó."
  remarks: "Este método pode ser substituído pelos programadores do controlo para adicionar a compor adicionais depois do nó é composto."
  syntax:
    content: protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída utilizado para escrever o conteúdo para uma página Web."
  overload: System.Web.UI.WebControls.TreeNode.RenderPostText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  id: RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite aos programadores do controlo Adicionar composição adicional para o nó."
  remarks: "Este método pode ser substituído pelos programadores do controlo para adicionar a compor adicionais antes do nó é composto."
  syntax:
    content: protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída utilizado para escrever o conteúdo para uma página Web."
  overload: System.Web.UI.WebControls.TreeNode.RenderPreText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Guarda o estado de visualização atual do nó."
  remarks: "O método de SaveViewState é um método de programa auxiliar chamado pelo nó de guardar o estado."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém o estado guardado do nó.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Select
  id: Select
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Seleciona o nó atual no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize o método Select para selecionar o nó atual no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView>       **Tenha em atenção** como alternativa, também pode selecionar o nó atual, definindo o <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>propriedade `true`.</xref:System.Web.UI.WebControls.TreeNode.Selected%2A>"
  example:
  - "The following code example demonstrates how to use the Select method to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_189_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_189_1.aspx)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o evento ou eventos para elevar quando um nó é selecionado."
  remarks: "O texto de um nó de <xref:System.Web.UI.WebControls.TreeView>controlo pode estar em um de dois modos: modo de seleção ou navegação.</xref:System.Web.UI.WebControls.TreeView> Por predefinição, um nó está no modo de seleção. Para colocar um nó em modo de navegação, defina o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade para um valor diferente de uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Para colocar um nó em modo de seleção, defina o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade como uma cadeia vazia.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Quando um nó no modo de navegação, eventos de seleção estão desativados para esse nó. Ao clicar num nó irá direcionar o utilizador para o URL especificado, em vez de publicar a página de volta para o servidor e gerar um evento.       Quando um nó está no modo de seleção, utilize a propriedade SelectAction para especificar qual o evento ou eventos são gerados quando um nó é selecionado. A tabela seguinte lista as opções disponíveis.      | Ação de seleção | Descrição |   |----------------------|-----------------|   | `TreeNodeSelectAction.Expand`| Activa/desactiva o nó entre expandido e fechado. Gera o evento de <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ou o evento de <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>conforme apropriado. |   | `TreeNodeSelectAction.None`| Eleva não há eventos quando um nó é selecionado. |   | `TreeNodeSelectAction.Select`| Gera o evento de <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>Quando um nó é selecionado. |   | `TreeNodeSelectAction.SelectExpand`| Eleva ambos o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>e <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>eventos quando um nó é selecionado.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Nós apenas são expandidos, nunca fechado. |      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>propriedade não é composta para um nó com a respetiva propriedade SelectAction definida como `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1227_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1227_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;> </xref> valores. A predefinição é <xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Selected
  id: Selected
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o nó está seleccionado."
  remarks: "Utilize a propriedade de selecionados a especificar ou a determinar se o nó é selecionado.      > [!NOTE] > Apesar da propriedade pode ser utilizada para determinar se o nó é selecionado, é mais comum para utilizar o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>propriedade.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Apenas um nó pode ser selecionado um dado momento a <xref:System.Web.UI.WebControls.TreeView>controlar quando utilizar esta propriedade.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Como alternativa, pode selecionar o nó utilizando o <xref:System.Web.UI.WebControls.TreeNode.Select%2A>método.</xref:System.Web.UI.WebControls.TreeNode.Select%2A>       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the Selected property to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_559_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_559_1.aspx)]"
  syntax:
    content: public bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se for selecionado o nó; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Selected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se é apresentada uma caixa de verificação junto ao nó."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controlo permite-lhe apresentar uma caixa de verificação junto a imagem de um nó.</xref:System.Web.UI.WebControls.TreeView> Utilize a propriedade ShowCheckBox para mostrar ou ocultar a caixa de verificação para o nó atual.       Embora a propriedade ShowCheckBox pode ser utilizada para apresentar as caixas de verificação, é mais comum para utilizar o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>propriedade o <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> O <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>propriedade, no entanto, afeta cada tipo de nó especificado pela propriedade; por conseguinte, a propriedade ShowCheckBox, muitas vezes, é utilizada para substituir essa definição para um nó individual.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>       Uma vez que o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>propriedade é uma propriedade de estado de tri, o seguinte fragmento de código do c# causa um erro de compilação: ```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ``` implicitamente casts VB.Net enquanto o `Boolean` valor para um `NullableBoolean`, c# não.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> Por conseguinte, é uma melhor prática explicitamente verificou o estado da propriedade. Por exemplo, os seguintes exemplos de código no Visual Basic e c# Testar explicitamente o valor da <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Exemplo de código seguinte do Visual Basic testa explicitamente o valor da <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> Neste exemplo testa se o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade está definida como `True`; por conseguinte `Nothing` e `False` passa o `If` instrução.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```Este exemplo de código c# testa explicitamente o valor da <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> Neste exemplo testa se o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade está definida como `True`; por conseguinte `Null` e `False` passa o `If` instrução.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to use the ShowCheckBox property to programmatically show and hide the check box for a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_833_1.aspx)]\n [!code-cs[TreeNodeShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_833_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para apresentar a caixa de verificação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria uma cópia do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto."
  remarks: "O método ICloneable.Clone é utilizado pelo <xref:System.Web.UI.WebControls.TreeNode>classe que faça uma cópia de si próprio.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa uma cópia do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.TreeNode>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "Um valor que indica se o nó está a guardar as alterações para o estado de vista."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o nó anteriormente vista estado guardado."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; que contém os valores de estado de vista guardado."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Guarda as alterações ao estado de vista de um &lt;xref:System.Object?displayProperty=fullName&gt;."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O &lt;xref:System.Object?displayProperty=fullName&gt; que contém as alterações de estado de vista."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Indica o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto controlar as alterações para o estado de vista."
  remarks: "Depois deste método foi chamado no controlo de servidor, o <xref:System.Web.UI.Control.IsTrackingViewState%2A>propriedade devolve `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a janela de destino ou um intervalo no qual a apresentar o conteúdo da página Web associado um nó."
  remarks: "Utilize a propriedade de destino para especificar o window ou frame no qual pretende apresentar os conteúdos Web ligado a um nó quando esse nó é clicado.      > [!NOTE] > Definição esta propriedade substitui a <xref:System.Web.UI.WebControls.TreeView.Target%2A>propriedade o <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.Target%2A>      > [!NOTE] > Propriedade de destino a composto como um `target` atributo. O `target` atributo no `anchor` elementos não é permitida na definição do tipo de documento XHTML 1.1. Não defina a propriedade de destino se a saída composta para o <xref:System.Web.UI.WebControls.TreeNode>objecto tem de ser XHTML em conformidade 1.1.</xref:System.Web.UI.WebControls.TreeNode> Para obter mais informações, consulte [XHTML normas no Visual Studio e ao ASP.NET](~/add/includes/ajax-current-ext-md.md).   >> Ao criar acessíveis páginas Web, é vivamente recomendado que é evitar utilizando a propriedade de destino para outra janela de destino. Para obter mais informações, consulte [NIB: ASP.NET acessibilidade](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).       O valor desta propriedade é armazenado no estado de visualização."
  example:
  - "The following code example demonstrates how to set up the frames for the next example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_1.aspx)]  \n  \n The following code example demonstrates how to use the Target property to specify the frame in which to display the linked content. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_2.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "A janela de destino ou um intervalo no qual a apresentar o conteúdo da página de Web ligado. Os valores têm de começar com uma letra no intervalo de a z (sensível), exceto para determinados valores especiais que começam com um caráter de sublinhado, conforme mostrado na seguinte tabela.       <table><thead><tr><th> Valor de destino       </th><th> Descrição       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> Compõe o conteúdo numa nova janela sem fotogramas.       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> Compõe o conteúdo no principal frameset imediata.       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> Compõe o conteúdo no painel de procura.       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> Compõe o conteúdo da moldura com o foco.       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> Compõe o conteúdo na janela completo sem fotogramas.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Consulte a documentação do browser para determinar se o <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> valor é suportado. Por exemplo, Microsoft Internet Explorer 5.0 e posterior suportam a <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> valor de destino.      </div>       O valor predefinido é uma cadeia vazia (&quot;&quot;), que atualiza o window ou frame com o foco."
  overload: System.Web.UI.WebControls.TreeNode.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto apresentado para o nó a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo."
  remarks: "Utilize a propriedade de texto para especificar ou a determinar o texto que é apresentado para o nó a <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Se contém a propriedade Text `null`, a `get` acessor devolve o valor da <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> Se o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade, por sua vez, contém `null`, <xref:System.String.Empty>é devolvido.</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>       O valor desta propriedade é armazenado no estado de visualização.       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the text for a node.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_843_1.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_843_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "O texto apresentado para o nó a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  id: ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Alterna entre o estado expandido e fechado do nó."
  remarks: "Utilize o método ToggleExpandState alternativo entre um expandido e um estado fechado para o nó. Por exemplo, se o nó estiver fechado, chamar o método ToggleExpandState expande o nó e vice-versa.      > [!NOTE] > Como alternativa, pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade diretamente.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>"
  example:
  - "The following code example demonstrates how to use the ToggleExpandState method to alternate between an expanded and a collapsed state for the root node of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeToggleExpandState#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_18_1.aspx)]\n [!code-cs[TreeNodeToggleExpandState#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_18_1.aspx)]"
  syntax:
    content: public void ToggleExpandState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto da descrição para o nó."
  remarks: "Utilize a propriedade ToolTip para especificar o texto da descrição para o nó. O texto da descrição é apresentado quando o ponteiro do rato está posicionado sobre o nó.       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ToolTip property to provide ToolTips for the nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_69_1.aspx)]\n [!code-vb[TreeNodeToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_69_1.aspx)]"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "O texto de descrição para o nó. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Marca o ponto de partida no qual pretende começar a controlar e guardar o estado de visualização muda para o nó."
  syntax:
    content: protected void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor não apresentada utilizado para armazenar quaisquer dados adicionais sobre o nó, tais como os dados utilizados para processar eventos de nova colocação."
  remarks: "A propriedade Value é utilizada para completar a <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade ao armazenar quaisquer dados adicionais associados com o nó.</xref:System.Web.UI.WebControls.TreeNode.Text%2A> Este valor não é apresentada no controlo e costuma é utilizada para armazenar os dados para processar eventos de nova colocação.      > [!NOTE] > Se contém a propriedade Value `null`, a `get` acessor devolve o valor da <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Text%2A> Se o <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade, por sua vez, contém `null`, <xref:System.String.Empty>é devolvido.</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > Nós no mesmo nível têm de ter cada um valor exclusivo para a propriedade valor; o <xref:System.Web.UI.WebControls.TreeView>controlo não é possível distinguir entre nós diferentes no mesmo nível que têm o mesmo valor.</xref:System.Web.UI.WebControls.TreeView> Neste cenário, se o utilizador clica um nó que tem um valor duplicado, o nó que aparece em primeiro lugar no <xref:System.Web.UI.WebControls.TreeView>controlo é selecionado.</xref:System.Web.UI.WebControls.TreeView>       O valor desta propriedade é armazenado no estado de visualização.       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Value property to store the key field.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1316_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1316_1.aspx)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "Dados suplementares acerca do nó que não é apresentado. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  id: ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o caminho a partir do nó de raiz para o nó atual."
  remarks: "A propriedade ValuePath contém uma lista separada por delimitador de valores de nó que formam um caminho de nó raiz para o nó atual. Utilize o <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>propriedade para especificar o caráter delimitador utilizado para separar os valores de nó.</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Este valor é frequentemente utilizado ao analisar a lista para os valores individuais, ou para transmitir como um argumento para o <xref:System.Web.UI.WebControls.TreeView.FindNode%2A>método de <xref:System.Web.UI.WebControls.TreeView>classe.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.FindNode%2A>       Dependendo do valor apresentado no <xref:System.Web.UI.WebControls.TreeView>controlo, o caráter delimitador poderá ser necessário alterar para evitar quaisquer conflitos.</xref:System.Web.UI.WebControls.TreeView> Por exemplo, se definir o caráter delimitador para uma vírgula, o valor apresentado não deve conter qualquer vírgulas; caso contrário, com precisão não é possível analisar a propriedade ValuePath.      > [!NOTE] > Nós no mesmo nível têm de ter cada um valor exclusivo para o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade; o <xref:System.Web.UI.WebControls.TreeView>controlo não é possível distinguir entre nós diferentes no mesmo nível que têm o mesmo valor.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Neste cenário, se o utilizador clica um nó que tem um valor duplicado, o nó que aparece em primeiro lugar no <xref:System.Web.UI.WebControls.TreeView>controlo é selecionado.</xref:System.Web.UI.WebControls.TreeView>"
  example:
  - "The following code example demonstrates how to parse the ValuePath property.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_230_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_230_1.aspx)]"
  syntax:
    content: public string ValuePath { get; }
    return:
      type: System.String
      description: "Uma lista separada por delimitador de valores de nó que formam um caminho de nó raiz para o nó atual."
  overload: System.Web.UI.WebControls.TreeNode.ValuePath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
- uid: System.Web.UI.WebControls.TreeView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.Checked
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNode.Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNode.Expand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.Select
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Target
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Value
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
- uid: System.Web.UI.WebControls.TreeNode.#ctor*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.Checked*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNode.Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone
  nameWithType: TreeNode.Clone
- uid: System.Web.UI.WebControls.TreeNode.Collapse*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse
  nameWithType: TreeNode.Collapse
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll
  nameWithType: TreeNode.CollapseAll
- uid: System.Web.UI.WebControls.TreeNode.DataBound*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
- uid: System.Web.UI.WebControls.TreeNode.Expand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand
  nameWithType: TreeNode.Expand
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll
  nameWithType: TreeNode.ExpandAll
- uid: System.Web.UI.WebControls.TreeNode.Expanded*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState
  nameWithType: TreeNode.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText
  nameWithType: TreeNode.RenderPostText
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText
  nameWithType: TreeNode.RenderPreText
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState
  nameWithType: TreeNode.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.Select*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select
  nameWithType: TreeNode.Select
- uid: System.Web.UI.WebControls.TreeNode.SelectAction*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNode.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Target*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState
  nameWithType: TreeNode.ToggleExpandState
- uid: System.Web.UI.WebControls.TreeNode.ToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState
  nameWithType: TreeNode.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Value*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
