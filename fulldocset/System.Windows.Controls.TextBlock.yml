### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.TextBlock
  id: TextBlock
  children:
  - System.Windows.Controls.TextBlock.#ctor
  - System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)
  - System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)
  - System.Windows.Controls.TextBlock.Background
  - System.Windows.Controls.TextBlock.BackgroundProperty
  - System.Windows.Controls.TextBlock.BaselineOffset
  - System.Windows.Controls.TextBlock.BaselineOffsetProperty
  - System.Windows.Controls.TextBlock.BreakAfter
  - System.Windows.Controls.TextBlock.BreakBefore
  - System.Windows.Controls.TextBlock.ContentEnd
  - System.Windows.Controls.TextBlock.ContentStart
  - System.Windows.Controls.TextBlock.FontFamily
  - System.Windows.Controls.TextBlock.FontFamilyProperty
  - System.Windows.Controls.TextBlock.FontSize
  - System.Windows.Controls.TextBlock.FontSizeProperty
  - System.Windows.Controls.TextBlock.FontStretch
  - System.Windows.Controls.TextBlock.FontStretchProperty
  - System.Windows.Controls.TextBlock.FontStyle
  - System.Windows.Controls.TextBlock.FontStyleProperty
  - System.Windows.Controls.TextBlock.FontWeight
  - System.Windows.Controls.TextBlock.FontWeightProperty
  - System.Windows.Controls.TextBlock.Foreground
  - System.Windows.Controls.TextBlock.ForegroundProperty
  - System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)
  - System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)
  - System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)
  - System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)
  - System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.Controls.TextBlock.HostedElementsCore
  - System.Windows.Controls.TextBlock.Inlines
  - System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)
  - System.Windows.Controls.TextBlock.IsHyphenationEnabled
  - System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty
  - System.Windows.Controls.TextBlock.LineHeight
  - System.Windows.Controls.TextBlock.LineHeightProperty
  - System.Windows.Controls.TextBlock.LineStackingStrategy
  - System.Windows.Controls.TextBlock.LineStackingStrategyProperty
  - System.Windows.Controls.TextBlock.LogicalChildren
  - System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)
  - System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)
  - System.Windows.Controls.TextBlock.OnCreateAutomationPeer
  - System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.Controls.TextBlock.Padding
  - System.Windows.Controls.TextBlock.PaddingProperty
  - System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)
  - System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)
  - System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)
  - System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)
  - System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)
  - System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)
  - System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)
  - System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)
  - System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  - System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  - System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset
  - System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.Controls.TextBlock.ShouldSerializeText
  - System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)
  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)
  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements
  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)
  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Controls.TextBlock.Text
  - System.Windows.Controls.TextBlock.TextAlignment
  - System.Windows.Controls.TextBlock.TextAlignmentProperty
  - System.Windows.Controls.TextBlock.TextDecorations
  - System.Windows.Controls.TextBlock.TextDecorationsProperty
  - System.Windows.Controls.TextBlock.TextEffects
  - System.Windows.Controls.TextBlock.TextEffectsProperty
  - System.Windows.Controls.TextBlock.TextProperty
  - System.Windows.Controls.TextBlock.TextTrimming
  - System.Windows.Controls.TextBlock.TextTrimmingProperty
  - System.Windows.Controls.TextBlock.TextWrapping
  - System.Windows.Controls.TextBlock.TextWrappingProperty
  - System.Windows.Controls.TextBlock.Typography
  - System.Windows.Controls.TextBlock.VisualChildrenCount
  langs:
  - csharp
  name: TextBlock
  nameWithType: TextBlock
  fullName: System.Windows.Controls.TextBlock
  type: Class
  summary: "Provides a lightweight control for displaying small amounts of flow content."
  remarks: "A TextBlock can contain a string in its <xref:System.Windows.Controls.TextBlock.Text%2A> property or <xref:System.Windows.Documents.Inline> flow content elements, such as <xref:System.Windows.Documents.Bold>, <xref:System.Windows.Documents.Hyperlink>, and <xref:System.Windows.Documents.InlineUIContainer>, in its <xref:System.Windows.Controls.TextBlock.Inlines%2A> property.       TextBlock is designed to be lightweight, and is geared specifically at integrating small portions of flow content into a [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].  TextBlock is optimized for single-line display, and provides good performance for displaying up to a few lines of content.       TextBlock is not optimized for scenarios that need to display more than a few lines of content; for such scenarios, a <xref:System.Windows.Documents.FlowDocument> coupled with an appropriate viewing control is a better choice than TextBlock, in terms of performance.  After TextBlock, <xref:System.Windows.Controls.FlowDocumentScrollViewer> is the next lightest-weight control for displaying flow content, and simply provides a scrolling content area with minimal [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].  <xref:System.Windows.Controls.FlowDocumentPageViewer> is optimized around &quot;page-at-a-time&quot; viewing mode for flow content.  Finally, <xref:System.Windows.Controls.FlowDocumentReader> supports the richest set functionality for viewing flow content, but is correspondingly heavier-weight.       Horizontally aligning text within a TextBlock is done with the <xref:System.Windows.Controls.TextBlock.TextAlignment%2A> property. Aligning the TextBlock within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties."
  example:
  - "The following example shows how to use the TextBlock element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockSimpleXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblocksimplexaml)]  \n  \n The following figure shows how this example renders.  \n  \n ![Screenshot: TextBlocks  and buttons](~/add/media/textblock-simple.png \"Screenshot: TextBlocks  and buttons\")  \n  \n The following example shows how to shows how to achieve similar results programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockSimple](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblocksimple)]\n [!code-vb[FlowDocumentSnippets#_TextBlockSimple](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblocksimple)]"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Text)]

      [System.Windows.Markup.ContentProperty("Inlines")]

      public class TextBlock : System.Windows.FrameworkElement, IServiceProvider, System.Windows.IContentHost
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  implements:
  - System.IServiceProvider
  - System.Windows.IContentHost
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.ActualHeight
  - System.Windows.FrameworkElement.ActualHeightProperty
  - System.Windows.FrameworkElement.ActualWidth
  - System.Windows.FrameworkElement.ActualWidthProperty
  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkElement.ApplyTemplate
  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.FrameworkElement.BeginInit
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkElement.BindingGroup
  - System.Windows.FrameworkElement.BindingGroupProperty
  - System.Windows.FrameworkElement.BringIntoView
  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)
  - System.Windows.FrameworkElement.ContextMenu
  - System.Windows.FrameworkElement.ContextMenuClosing
  - System.Windows.FrameworkElement.ContextMenuClosingEvent
  - System.Windows.FrameworkElement.ContextMenuOpening
  - System.Windows.FrameworkElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkElement.ContextMenuProperty
  - System.Windows.FrameworkElement.Cursor
  - System.Windows.FrameworkElement.CursorProperty
  - System.Windows.FrameworkElement.DataContext
  - System.Windows.FrameworkElement.DataContextChanged
  - System.Windows.FrameworkElement.DataContextProperty
  - System.Windows.FrameworkElement.DefaultStyleKey
  - System.Windows.FrameworkElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkElement.EndInit
  - System.Windows.FrameworkElement.FindName(System.String)
  - System.Windows.FrameworkElement.FindResource(System.Object)
  - System.Windows.FrameworkElement.FlowDirection
  - System.Windows.FrameworkElement.FlowDirectionProperty
  - System.Windows.FrameworkElement.FocusVisualStyle
  - System.Windows.FrameworkElement.FocusVisualStyleProperty
  - System.Windows.FrameworkElement.ForceCursor
  - System.Windows.FrameworkElement.ForceCursorProperty
  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.FrameworkElement.GetTemplateChild(System.String)
  - System.Windows.FrameworkElement.GetUIParentCore
  - System.Windows.FrameworkElement.Height
  - System.Windows.FrameworkElement.HeightProperty
  - System.Windows.FrameworkElement.HorizontalAlignment
  - System.Windows.FrameworkElement.HorizontalAlignmentProperty
  - System.Windows.FrameworkElement.InheritanceBehavior
  - System.Windows.FrameworkElement.Initialized
  - System.Windows.FrameworkElement.InputScope
  - System.Windows.FrameworkElement.InputScopeProperty
  - System.Windows.FrameworkElement.IsInitialized
  - System.Windows.FrameworkElement.IsLoaded
  - System.Windows.FrameworkElement.Language
  - System.Windows.FrameworkElement.LanguageProperty
  - System.Windows.FrameworkElement.LayoutTransform
  - System.Windows.FrameworkElement.LayoutTransformProperty
  - System.Windows.FrameworkElement.Loaded
  - System.Windows.FrameworkElement.LoadedEvent
  - System.Windows.FrameworkElement.Margin
  - System.Windows.FrameworkElement.MarginProperty
  - System.Windows.FrameworkElement.MaxHeight
  - System.Windows.FrameworkElement.MaxHeightProperty
  - System.Windows.FrameworkElement.MaxWidth
  - System.Windows.FrameworkElement.MaxWidthProperty
  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)
  - System.Windows.FrameworkElement.MinHeight
  - System.Windows.FrameworkElement.MinHeightProperty
  - System.Windows.FrameworkElement.MinWidth
  - System.Windows.FrameworkElement.MinWidthProperty
  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkElement.Name
  - System.Windows.FrameworkElement.NameProperty
  - System.Windows.FrameworkElement.OnApplyTemplate
  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.OverridesDefaultStyle
  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkElement.Parent
  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)
  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkElement.RequestBringIntoView
  - System.Windows.FrameworkElement.RequestBringIntoViewEvent
  - System.Windows.FrameworkElement.Resources
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)
  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElement.ShouldSerializeResources
  - System.Windows.FrameworkElement.ShouldSerializeStyle
  - System.Windows.FrameworkElement.ShouldSerializeTriggers
  - System.Windows.FrameworkElement.SizeChanged
  - System.Windows.FrameworkElement.SizeChangedEvent
  - System.Windows.FrameworkElement.SourceUpdated
  - System.Windows.FrameworkElement.Style
  - System.Windows.FrameworkElement.StyleProperty
  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkElement.Tag
  - System.Windows.FrameworkElement.TagProperty
  - System.Windows.FrameworkElement.TargetUpdated
  - System.Windows.FrameworkElement.TemplatedParent
  - System.Windows.FrameworkElement.ToolTip
  - System.Windows.FrameworkElement.ToolTipClosing
  - System.Windows.FrameworkElement.ToolTipClosingEvent
  - System.Windows.FrameworkElement.ToolTipOpening
  - System.Windows.FrameworkElement.ToolTipOpeningEvent
  - System.Windows.FrameworkElement.ToolTipProperty
  - System.Windows.FrameworkElement.Triggers
  - System.Windows.FrameworkElement.TryFindResource(System.Object)
  - System.Windows.FrameworkElement.Unloaded
  - System.Windows.FrameworkElement.UnloadedEvent
  - System.Windows.FrameworkElement.UnregisterName(System.String)
  - System.Windows.FrameworkElement.UpdateDefaultStyle
  - System.Windows.FrameworkElement.UseLayoutRounding
  - System.Windows.FrameworkElement.UseLayoutRoundingProperty
  - System.Windows.FrameworkElement.VerticalAlignment
  - System.Windows.FrameworkElement.VerticalAlignmentProperty
  - System.Windows.FrameworkElement.Width
  - System.Windows.FrameworkElement.WidthProperty
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledCore
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextBlock()
  nameWithType: TextBlock.TextBlock()
  fullName: System.Windows.Controls.TextBlock.TextBlock()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> class."
  syntax:
    content: public TextBlock ();
    parameters: []
  overload: System.Windows.Controls.TextBlock.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)
  id: '#ctor(System.Windows.Documents.Inline)'
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextBlock(Inline)
  nameWithType: TextBlock.TextBlock(Inline)
  fullName: System.Windows.Controls.TextBlock.TextBlock(Inline)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> class, adding a specified <xref href=&quot;System.Windows.Documents.Inline&quot;></xref> element as the initial display content."
  remarks: "Valid input types for `inline` include <xref:System.Windows.Documents.AnchoredBlock>, <xref:System.Windows.Documents.InlineUIContainer>, <xref:System.Windows.Documents.LineBreak>, <xref:System.Windows.Documents.Run>, and <xref:System.Windows.Documents.Span>."
  example:
  - "The following example demonstrates the use of this constructor.  In this case, the <xref:System.Windows.Controls.TextBlock> contains a text <xref:System.Windows.Documents.Run>.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockConstructorSimple](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockconstructorsimple)]\n [!code-vb[FlowDocumentSnippets#_TextBlockConstructorSimple](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockconstructorsimple)]"
  syntax:
    content: public TextBlock (System.Windows.Documents.Inline inline);
    parameters:
    - id: inline
      type: System.Windows.Documents.Inline
      description: "An object deriving from the abstract <xref href=&quot;System.Windows.Documents.Inline&quot;></xref> class, to be added as the initial content."
  overload: System.Windows.Controls.TextBlock.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inline</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)
  id: ArrangeOverride(System.Windows.Size)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: ArrangeOverride(Size)
  nameWithType: TextBlock.ArrangeOverride(Size)
  fullName: System.Windows.Controls.TextBlock.ArrangeOverride(Size)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Positions child elements and determines a size for the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "This method overrides <xref:System.Windows.FrameworkElement.ArrangeOverride%2A?displayProperty=fullName>."
  syntax:
    content: protected override sealed System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);
    parameters:
    - id: arrangeSize
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;></xref> within the hosting parent element that the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> should use to arrange itself and its child elements. Sizing constraints may affect this requested size."
    return:
      type: System.Windows.Size
      description: "The actual <xref href=&quot;System.Windows.Size&quot;></xref> used to arrange the element."
  overload: System.Windows.Controls.TextBlock.ArrangeOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.Background
  id: Background
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: Background
  nameWithType: TextBlock.Background
  fullName: System.Windows.Controls.TextBlock.Background
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the <xref href=&quot;System.Windows.Media.Brush&quot;></xref> used to fill the background of content area."
  remarks: "Any Background settings on child elements override this top-level setting.       For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.      <a name=&quot;dependencyPropertyInfo_Background&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.BackgroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to set the Background attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the Background property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.Media.Brush Background { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "The brush used to fill the background of the content area, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to not use a background brush. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.Background*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.BackgroundProperty
  id: BackgroundProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: BackgroundProperty
  nameWithType: TextBlock.BackgroundProperty
  fullName: System.Windows.Controls.TextBlock.BackgroundProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.Background*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BackgroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.BaselineOffset
  id: BaselineOffset
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: BaselineOffset
  nameWithType: TextBlock.BaselineOffset
  fullName: System.Windows.Controls.TextBlock.BaselineOffset
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the amount by which each line of text is offset from the baseline."
  remarks: "The baseline is the imaginary horizontal line with which the base of each character in a line of text is aligned.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* BaselineOffset`=&quot;`*double*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetBaselineOffset%2A> and <xref:System.Windows.Controls.TextBlock.SetBaselineOffset%2A>."
  syntax:
    content: public double BaselineOffset { get; set; }
    return:
      type: System.Double
      description: "The amount by which each line of text is offset from the baseline, in device independent pixels. &lt;xref:System.Double?displayProperty=fullName&gt; indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is &lt;xref:System.Double?displayProperty=fullName&gt;."
  overload: System.Windows.Controls.TextBlock.BaselineOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.BaselineOffsetProperty
  id: BaselineOffsetProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: BaselineOffsetProperty
  nameWithType: TextBlock.BaselineOffsetProperty
  fullName: System.Windows.Controls.TextBlock.BaselineOffsetProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BaselineOffsetProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.BreakAfter
  id: BreakAfter
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: BreakAfter
  nameWithType: TextBlock.BreakAfter
  fullName: System.Windows.Controls.TextBlock.BreakAfter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a <xref href=&quot;System.Windows.LineBreakCondition&quot;></xref> that indicates how content should break after the current element."
  remarks: "This property always returns <xref:System.Windows.LineBreakCondition>."
  syntax:
    content: public System.Windows.LineBreakCondition BreakAfter { get; }
    return:
      type: System.Windows.LineBreakCondition
      description: "The conditions for breaking content after the current element."
  overload: System.Windows.Controls.TextBlock.BreakAfter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.BreakBefore
  id: BreakBefore
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: BreakBefore
  nameWithType: TextBlock.BreakBefore
  fullName: System.Windows.Controls.TextBlock.BreakBefore
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a <xref href=&quot;System.Windows.LineBreakCondition&quot;></xref> that indicates how content should break before the current element."
  remarks: "This property always returns <xref:System.Windows.LineBreakCondition>."
  syntax:
    content: public System.Windows.LineBreakCondition BreakBefore { get; }
    return:
      type: System.Windows.LineBreakCondition
      description: "The conditions for breaking content after the current element."
  overload: System.Windows.Controls.TextBlock.BreakBefore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.ContentEnd
  id: ContentEnd
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: ContentEnd
  nameWithType: TextBlock.ContentEnd
  fullName: System.Windows.Controls.TextBlock.ContentEnd
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> to the end of content in the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "The end of content is taken to be the insertion position directly following the last character in the <xref:System.Windows.Controls.TextBlock>.       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>."
  syntax:
    content: public System.Windows.Documents.TextPointer ContentEnd { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> to the end of content in the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.ContentEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.ContentStart
  id: ContentStart
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: ContentStart
  nameWithType: TextBlock.ContentStart
  fullName: System.Windows.Controls.TextBlock.ContentStart
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> to the beginning of content in the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "The beginning of content is taken to be the insertion position directly preceding the first character in the <xref:System.Windows.Controls.TextBlock>.       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>."
  syntax:
    content: public System.Windows.Documents.TextPointer ContentStart { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> to the beginning of content in the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.ContentStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontFamily
  id: FontFamily
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontFamily
  nameWithType: TextBlock.FontFamily
  fullName: System.Windows.Controls.TextBlock.FontFamily
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the preferred top-level font family for the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Any FontFamily settings on child elements override this top-level setting.  \n  \n When multiple families are specified, the second and subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  \n  \n This property specifies a preference only.  If the specified font family is not available, the <xref:System.Windows.Controls.TextBlock> silently falls back to the font determined by the <xref:System.Windows.SystemFonts.MessageFontFamily%2A> value.  \n  \n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontFamily`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontFamily%2A> and <xref:System.Windows.Controls.TextBlock.SetFontFamily%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontFamily` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.  \n  \n<a name=\"xamlAttributeUsage_FontFamily\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object FontFamily=\"fontFamilyName\"/>  \n- or -  \n<object FontFamily=\"fontFamilyNamesList\"/>  \n- or -  \n<object FontFamily=\"fontFamilyFolderReference\"/>  \n- or -  \n<object FontFamily=\"fontFamilyUriReference\"/>  \n```  \n  \n<a name=\"xamlValues_FontFamily\"></a>   \n## XAML Values  \n *fontFamilyName*  \n A string specifying a font family name.  For example, `\"Arial\"` or `\"Century Gothic\"`.  \n  \n *fontFamilyNamesList*  \n A string specifying multiple font family names, each separated by a comma (any whitespace following a comma is ignored).  The first font family specified serves as the primary font family; subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  For example, `\"Arial, Century Gothic\"` specifies Arial as the primary font family, with Century Gothic as the fallback font family.  \n  \n *fontFamilyFolderReference*  \n A string specifying a folder containing the font, along with a font family name.  The folder and font family name are delimited by a # character.  The folder reference may be absolute, or relative.  For example, `\"Custom Fonts\\#My Custom Font\"`.  \n  \n *fontFamilyUriReference*  \n A string specifying a [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the font, along with a font family name.  The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and font family name are delimited by a # character.  For example, `\"http://MyFontServer/Fonts/#My Custom Font\"`.  \n  \n<a name=\"dependencyPropertyInfo_FontFamily\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Controls.TextBlock.FontFamilyProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the FontFamily attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the FontFamily property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.Media.FontFamily FontFamily { get; set; }
    return:
      type: System.Windows.Media.FontFamily
      description: "A <xref href=&quot;System.Windows.Media.FontFamily&quot;></xref> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <xref:System.Windows.SystemFonts.MessageFontFamily*> value."
  overload: System.Windows.Controls.TextBlock.FontFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontFamilyProperty
  id: FontFamilyProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontFamilyProperty
  nameWithType: TextBlock.FontFamilyProperty
  fullName: System.Windows.Controls.TextBlock.FontFamilyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.FontFamily*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontFamilyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontSize
  id: FontSize
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontSize
  nameWithType: TextBlock.FontSize
  fullName: System.Windows.Controls.TextBlock.FontSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the top-level font size for the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Any FontSize settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontSize`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontSize%2A> and <xref:System.Windows.Controls.TextBlock.SetFontSize%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontSize` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=&quot;xamlAttributeUsage_FontSize&quot;></a>    ## XAML Attribute Usage      ```   <object FontSize=&quot;double&quot;/>   - or -   <object FontSize=&quot;qualifiedDouble&quot;/>   ```      <a name=&quot;xamlValues_FontSize&quot;></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than 0.0 but smaller than <xref:System.Double.PositiveInfinity>. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px      <a name=&quot;dependencyPropertyInfo_FontSize&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontSizeProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the FontSize attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the FontSize property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public double FontSize { get; set; }
    return:
      type: System.Double
      description: "The desired font size to use in device independent pixels). The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt; value."
  overload: System.Windows.Controls.TextBlock.FontSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontSizeProperty
  id: FontSizeProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontSizeProperty
  nameWithType: TextBlock.FontSizeProperty
  fullName: System.Windows.Controls.TextBlock.FontSizeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.FontSize*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontSizeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontStretch
  id: FontStretch
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontStretch
  nameWithType: TextBlock.FontStretch
  fullName: System.Windows.Controls.TextBlock.FontStretch
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the top-level font-stretching characteristics for the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Any FontStretch settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStretch`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names of the <xref:System.Windows.FontStretch> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStretch%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStretch%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStretch` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=&quot;dependencyPropertyInfo_FontStretch&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontStretchProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the FontStretch attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the FontStretch property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.FontStretch FontStretch { get; set; }
    return:
      type: System.Windows.FontStretch
      description: "A member of the <xref href=&quot;System.Windows.FontStretch&quot;></xref> class specifying the desired font-stretching characteristics to use. The default is &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;."
  overload: System.Windows.Controls.TextBlock.FontStretch*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontStretchProperty
  id: FontStretchProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontStretchProperty
  nameWithType: TextBlock.FontStretchProperty
  fullName: System.Windows.Controls.TextBlock.FontStretchProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.FontStretch*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontStretchProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontStyle
  id: FontStyle
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontStyle
  nameWithType: TextBlock.FontStyle
  fullName: System.Windows.Controls.TextBlock.FontStyle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the top-level font style for the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Any FontStyle settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStyle`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names in the <xref:System.Windows.FontStyles> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStyle%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStyle%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStyle` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=&quot;dependencyPropertyInfo_FontStyle&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontStyleProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the FontStyle attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the FontStyle property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.FontStyle FontStyle { get; set; }
    return:
      type: System.Windows.FontStyle
      description: "A member of the <xref href=&quot;System.Windows.FontStyles&quot;></xref> class specifying the desired font style. The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontStyle%2A?displayProperty=fullName&gt; value."
  overload: System.Windows.Controls.TextBlock.FontStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontStyleProperty
  id: FontStyleProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontStyleProperty
  nameWithType: TextBlock.FontStyleProperty
  fullName: System.Windows.Controls.TextBlock.FontStyleProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.FontStyle*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontStyleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontWeight
  id: FontWeight
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontWeight
  nameWithType: TextBlock.FontWeight
  fullName: System.Windows.Controls.TextBlock.FontWeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the top-level font weight for the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Any FontWeight settings on child elements override this top-level setting.       For a list of valid values of font weights, see the <xref:System.Windows.FontWeights> class.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontWeight`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values of a property of the <xref:System.Windows.FontWeights> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontWeight%2A> and <xref:System.Windows.Controls.TextBlock.SetFontWeight%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontWeight` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=&quot;dependencyPropertyInfo_FontWeight&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontWeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the FontWeight attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the FontWeight property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.FontWeight FontWeight { get; set; }
    return:
      type: System.Windows.FontWeight
      description: "A member of the <xref href=&quot;System.Windows.FontWeights&quot;></xref> class specifying the desired font weight. The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontWeight%2A?displayProperty=fullName&gt; value."
  overload: System.Windows.Controls.TextBlock.FontWeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.FontWeightProperty
  id: FontWeightProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: FontWeightProperty
  nameWithType: TextBlock.FontWeightProperty
  fullName: System.Windows.Controls.TextBlock.FontWeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.FontWeight*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontWeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.Foreground
  id: Foreground
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: Foreground
  nameWithType: TextBlock.Foreground
  fullName: System.Windows.Controls.TextBlock.Foreground
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the <xref href=&quot;System.Windows.Media.Brush&quot;></xref> to apply to the text contents of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>.       Any Foreground settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* Foreground`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string that resolves to a <xref:System.Windows.Media.Brush> implementation value. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetForeground%2A> and <xref:System.Windows.Controls.TextBlock.SetForeground%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `Foreground` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=&quot;dependencyPropertyInfo_Foreground&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.ForegroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the Foreground attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the Foreground property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.Media.Brush Foreground { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "The brush used to apply to the text contents. The default is &lt;xref:System.Windows.Media.Brushes.Black%2A?displayProperty=fullName&gt;."
  overload: System.Windows.Controls.TextBlock.Foreground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.ForegroundProperty
  id: ForegroundProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: ForegroundProperty
  nameWithType: TextBlock.ForegroundProperty
  fullName: System.Windows.Controls.TextBlock.ForegroundProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.Foreground*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ForegroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)
  id: GetBaselineOffset(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetBaselineOffset(DependencyObject)
  nameWithType: TextBlock.GetBaselineOffset(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetBaselineOffset(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property for a specified dependency object."
  syntax:
    content: public static double GetBaselineOffset (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property."
    return:
      type: System.Double
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetBaselineOffset*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)
  id: GetFontFamily(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetFontFamily(DependencyObject)
  nameWithType: TextBlock.GetFontFamily(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontFamily(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref href=&quot;System.Windows.Controls.TextBlock.FontFamilyProperty&quot;></xref> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.Media.FontFamily GetFontFamily (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property."
    return:
      type: System.Windows.Media.FontFamily
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetFontFamily*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)
  id: GetFontSize(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetFontSize(DependencyObject)
  nameWithType: TextBlock.GetFontSize(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontSize(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property for a specified dependency object."
  syntax:
    content: public static double GetFontSize (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property."
    return:
      type: System.Double
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetFontSize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)
  id: GetFontStretch(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetFontStretch(DependencyObject)
  nameWithType: TextBlock.GetFontStretch(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontStretch(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.FontStretch GetFontStretch (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property."
    return:
      type: System.Windows.FontStretch
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetFontStretch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)
  id: GetFontStyle(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetFontStyle(DependencyObject)
  nameWithType: TextBlock.GetFontStyle(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontStyle(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.FontStyle GetFontStyle (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property."
    return:
      type: System.Windows.FontStyle
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetFontStyle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)
  id: GetFontWeight(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetFontWeight(DependencyObject)
  nameWithType: TextBlock.GetFontWeight(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontWeight(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.FontWeight GetFontWeight (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property."
    return:
      type: System.Windows.FontWeight
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetFontWeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)
  id: GetForeground(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetForeground(DependencyObject)
  nameWithType: TextBlock.GetForeground(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetForeground(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.Media.Brush GetForeground (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property."
    return:
      type: System.Windows.Media.Brush
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetForeground*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)
  id: GetLineHeight(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetLineHeight(DependencyObject)
  nameWithType: TextBlock.GetLineHeight(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetLineHeight(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property for a specified dependency object."
  syntax:
    content: public static double GetLineHeight (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property."
    return:
      type: System.Double
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetLineHeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)
  id: GetLineStackingStrategy(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetLineStackingStrategy(DependencyObject)
  nameWithType: TextBlock.GetLineStackingStrategy(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetLineStackingStrategy(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.LineStackingStrategy GetLineStackingStrategy (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property."
    return:
      type: System.Windows.LineStackingStrategy
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetLineStackingStrategy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)
  id: GetPositionFromPoint(System.Windows.Point,System.Boolean)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetPositionFromPoint(Point,Boolean)
  nameWithType: TextBlock.GetPositionFromPoint(Point,Boolean)
  fullName: System.Windows.Controls.TextBlock.GetPositionFromPoint(Point,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns a <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> to the position closest to a specified <xref href=&quot;System.Windows.Point&quot;></xref>."
  remarks: "This method always returns a valid <xref:System.Windows.Documents.TextPointer> when `snapToText` is `true`."
  syntax:
    content: public System.Windows.Documents.TextPointer GetPositionFromPoint (System.Windows.Point point, bool snapToText);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "A <xref href=&quot;System.Windows.Point&quot;></xref> in the coordinate space of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> for which to return a <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref>."
    - id: snapToText
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to return a <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> to the insertion point closest to `point`, whether or not `point` is inside a character&quot;s bounding box; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if `point` is not inside a character&quot;s bounding box."
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> to the specified point, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>snapToText</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the specified point does not fall within a character bounding box in the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> content area."
  overload: System.Windows.Controls.TextBlock.GetPositionFromPoint*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Current, valid layout information for the control is unavailable."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)
  id: GetRectanglesCore(System.Windows.ContentElement)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetRectanglesCore(ContentElement)
  nameWithType: TextBlock.GetRectanglesCore(ContentElement)
  fullName: System.Windows.Controls.TextBlock.GetRectanglesCore(ContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns a read-only collection of bounding rectangles for a specified <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  remarks: "Each bounding rectangle in the collection corresponds to a line of content in the <xref:System.Windows.ContentElement>."
  syntax:
    content: protected virtual System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect> GetRectanglesCore (System.Windows.ContentElement child);
    parameters:
    - id: child
      type: System.Windows.ContentElement
      description: "A <xref href=&quot;System.Windows.ContentElement&quot;></xref> for which to generate and return a collection of bounding rectangles."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}
      description: "A read-only collection of bounding rectangles for the specified <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.GetRectanglesCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)
  id: GetTextAlignment(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetTextAlignment(DependencyObject)
  nameWithType: TextBlock.GetTextAlignment(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetTextAlignment(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.TextAlignment GetTextAlignment (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property."
    return:
      type: System.Windows.TextAlignment
      description: "The current value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on the specified dependency object."
  overload: System.Windows.Controls.TextBlock.GetTextAlignment*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)
  id: GetVisualChild(System.Int32)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: GetVisualChild(Int32)
  nameWithType: TextBlock.GetVisualChild(Int32)
  fullName: System.Windows.Controls.TextBlock.GetVisualChild(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the <xref href=&quot;System.Windows.Media.Visual&quot;></xref> child at a specified index."
  remarks: "This method overrides <xref:System.Windows.FrameworkElement.GetVisualChild%2A?displayProperty=fullName>."
  syntax:
    content: protected override System.Windows.Media.Visual GetVisualChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A zero-based index specifying the <xref href=&quot;System.Windows.Media.Visual&quot;></xref> child to return.  This value must be between 0 and (<xref:System.Windows.Controls.TextBlock.VisualChildrenCount*> minus 1)"
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> child at the specified index."
  overload: System.Windows.Controls.TextBlock.GetVisualChild*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is not between 0 and (<xref:System.Windows.Controls.TextBlock.VisualChildrenCount*> minus 1)"
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)
  id: HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: HitTestCore(PointHitTestParameters)
  nameWithType: TextBlock.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Controls.TextBlock.HitTestCore(PointHitTestParameters)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns a <xref href=&quot;System.Windows.Media.PointHitTestResult&quot;></xref> for specified <xref href=&quot;System.Windows.Media.PointHitTestParameters&quot;></xref>."
  remarks: "This method is intended to enable precise hit testing for rendered content.       This method overrides <xref:System.Windows.UIElement.HitTestCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override sealed System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);
    parameters:
    - id: hitTestParameters
      type: System.Windows.Media.PointHitTestParameters
      description: "A <xref href=&quot;System.Windows.Media.PointHitTestParameters&quot;></xref> object specifying the parameters to hit test for."
    return:
      type: System.Windows.Media.HitTestResult
      description: "A <xref href=&quot;System.Windows.Media.PointHitTestResult&quot;></xref> for the specified hit test parameters."
  overload: System.Windows.Controls.TextBlock.HitTestCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hitTestParameters</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.HostedElementsCore
  id: HostedElementsCore
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: HostedElementsCore
  nameWithType: TextBlock.HostedElementsCore
  fullName: System.Windows.Controls.TextBlock.HostedElementsCore
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets an enumerator that can be used iterate the elements hosted by this <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerator<System.Windows.IInputElement> HostedElementsCore { get; }
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}
      description: "An enumerator that can iterate elements hosted by this <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.HostedElementsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.Inlines
  id: Inlines
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: Inlines
  nameWithType: TextBlock.Inlines
  fullName: System.Windows.Controls.TextBlock.Inlines
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets an <xref href=&quot;System.Windows.Documents.InlineCollection&quot;></xref> containing the top-level <xref href=&quot;System.Windows.Documents.Inline&quot;></xref> elements that comprise the contents of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Use the <xref:System.Windows.Documents.InlineCollection> returned by this property to enumerate or manipulate the contents of a <xref:System.Windows.Controls.TextBlock>."
  syntax:
    content: public System.Windows.Documents.InlineCollection Inlines { get; }
    return:
      type: System.Windows.Documents.InlineCollection
      description: "An <xref href=&quot;System.Windows.Documents.InlineCollection&quot;></xref> containing the <xref href=&quot;System.Windows.Documents.Inline&quot;></xref> elements that comprise the contents of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.Inlines*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)
  id: InputHitTestCore(System.Windows.Point)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: InputHitTestCore(Point)
  nameWithType: TextBlock.InputHitTestCore(Point)
  fullName: System.Windows.Controls.TextBlock.InputHitTestCore(Point)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns the <xref href=&quot;System.Windows.IInputElement&quot;></xref> at a specified <xref href=&quot;System.Windows.Point&quot;></xref> within the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  syntax:
    content: protected virtual System.Windows.IInputElement InputHitTestCore (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "A <xref href=&quot;System.Windows.Point&quot;></xref>, in the coordinate space of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>, for which to return the corresponding <xref href=&quot;System.Windows.IInputElement&quot;></xref>."
    return:
      type: System.Windows.IInputElement
      description: "The <xref href=&quot;System.Windows.IInputElement&quot;></xref> found at the specified Point, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no such <xref href=&quot;System.Windows.IInputElement&quot;></xref> can be found."
  overload: System.Windows.Controls.TextBlock.InputHitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabled
  id: IsHyphenationEnabled
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: IsHyphenationEnabled
  nameWithType: TextBlock.IsHyphenationEnabled
  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabled
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled."
  remarks: "The automatic word hyphenation feature enables a <xref:System.Windows.Controls.TextBlock> to automatically break and hyphenate words, based on current layout conditions.  This enables long words to begin on one line and continue on this next, and tends to achieve a more even distribution of white space in justified text.  Words are broken and hyphenated according to standard grammar rules.      <a name=&quot;dependencyPropertyInfo_IsHyphenationEnabled&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  syntax:
    content: public bool IsHyphenationEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that automatic breaking and hyphenation of words is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.IsHyphenationEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty
  id: IsHyphenationEnabledProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: IsHyphenationEnabledProperty
  nameWithType: TextBlock.IsHyphenationEnabledProperty
  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.IsHyphenationEnabled*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.LineHeight
  id: LineHeight
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: LineHeight
  nameWithType: TextBlock.LineHeight
  fullName: System.Windows.Controls.TextBlock.LineHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the height of each line of content."
  remarks: "Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text. To change the size of the text, use the <xref:System.Windows.Controls.TextBlock.FontSize%2A> property.       In addition to this property, the layout of lines in a <xref:System.Windows.Controls.TextBlock> is affected by its <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineHeight`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineHeight%2A> and <xref:System.Windows.Controls.TextBlock.SetLineHeight%2A>. The attached property usage is not common.      <a name=&quot;xamlAttributeUsage_LineHeight&quot;></a>    ## XAML Attribute Usage      ```   <object LineHeight=&quot;double&quot;/>   - or -   <object LineHeight=&quot;qualifiedDouble&quot;/>   - or -   <object LineHeight=&quot;Auto&quot;/>   ```      <a name=&quot;xamlValues_LineHeight&quot;></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than `0.0034` and equal to or less then `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height to be determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN?displayProperty=fullName>.      <a name=&quot;dependencyPropertyInfo_LineHeight&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.LineHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the LineHeight attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the LineHeight property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public double LineHeight { get; set; }
    return:
      type: System.Double
      description: "The height of line, in device independent pixels, in the range of 0.0034 to 160000. A value of &lt;xref:System.Double?displayProperty=fullName&gt; (equivalent to an attribute value of &quot;`Auto`&quot;) indicates that the line height is determined automatically from the current font characteristics. The default is &lt;xref:System.Double?displayProperty=fullName&gt;."
  overload: System.Windows.Controls.TextBlock.LineHeight*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "LineHeight is set to a non-positive value."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.LineHeightProperty
  id: LineHeightProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: LineHeightProperty
  nameWithType: TextBlock.LineHeightProperty
  fullName: System.Windows.Controls.TextBlock.LineHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.LineHeight*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.LineStackingStrategy
  id: LineStackingStrategy
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: LineStackingStrategy
  nameWithType: TextBlock.LineStackingStrategy
  fullName: System.Windows.Controls.TextBlock.LineStackingStrategy
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the mechanism by which a line box is determined for each line of text within the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineStackingStrategy`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.LineStackingStrategy> enumeration. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineStackingStrategy%2A> and <xref:System.Windows.Controls.TextBlock.SetLineStackingStrategy%2A>. The attached property usage is not common.      <a name=&quot;dependencyPropertyInfo_LineStackingStrategy&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.LineStackingStrategyProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to use the LineStackingStrategy property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>. The first <xref:System.Windows.Controls.TextBlock> has a LineStackingStrategy value of <xref:System.Windows.LineStackingStrategy> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy>.  \n  \n [!code-xml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/add/codesnippet/xaml/flowmiscsnippets_snip/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  \n  \n The following illustration shows the result of the preceding code.  \n  \n ![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif \"Screenshot: Compare LineStackingStrategy values\")"
  syntax:
    content: public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }
    return:
      type: System.Windows.LineStackingStrategy
      description: "The mechanism by which a line box is determined for each line of text within the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>. The default is <xref href=&quot;System.Windows.LineStackingStrategy&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.LineStackingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.LineStackingStrategyProperty
  id: LineStackingStrategyProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: LineStackingStrategyProperty
  nameWithType: TextBlock.LineStackingStrategyProperty
  fullName: System.Windows.Controls.TextBlock.LineStackingStrategyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.LogicalChildren
  id: LogicalChildren
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: LogicalChildren
  nameWithType: TextBlock.LogicalChildren
  fullName: System.Windows.Controls.TextBlock.LogicalChildren
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets an enumerator that can iterate the logical children of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  syntax:
    content: protected override System.Collections.IEnumerator LogicalChildren { get; }
    return:
      type: System.Collections.IEnumerator
      description: "An enumerator for the logical children."
  overload: System.Windows.Controls.TextBlock.LogicalChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)
  id: MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: MeasureOverride(Size)
  nameWithType: TextBlock.MeasureOverride(Size)
  fullName: System.Windows.Controls.TextBlock.MeasureOverride(Size)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Called to re-measure the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Override this method to implement custom sizing behavior.       This method overrides <xref:System.Windows.FrameworkElement.MeasureOverride%2A?displayProperty=fullName>."
  syntax:
    content: protected override sealed System.Windows.Size MeasureOverride (System.Windows.Size constraint);
    parameters:
    - id: constraint
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;></xref> structure specifying any constraints on the size of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
    return:
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;></xref> structure indicating the new size of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.MeasureOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)
  id: OnChildDesiredSizeChangedCore(System.Windows.UIElement)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: OnChildDesiredSizeChangedCore(UIElement)
  nameWithType: TextBlock.OnChildDesiredSizeChangedCore(UIElement)
  fullName: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Called when a child element deriving from <xref href=&quot;System.Windows.UIElement&quot;></xref> changes its <xref:System.Windows.UIElement.DesiredSize*>."
  syntax:
    content: protected virtual void OnChildDesiredSizeChangedCore (System.Windows.UIElement child);
    parameters:
    - id: child
      type: System.Windows.UIElement
      description: "The child <xref href=&quot;System.Windows.UIElement&quot;></xref> element whose <xref:System.Windows.UIElement.DesiredSize*> has changed."
  overload: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: TextBlock.OnCreateAutomationPeer()
  fullName: System.Windows.Controls.TextBlock.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Creates and returns an <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;></xref> object for this <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>."
  syntax:
    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "An <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;></xref> object for this <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Controls.TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Called when the value one or more hosted dependency properties changes."
  remarks: "This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName>."
  syntax:
    content: protected override sealed void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Arguments for the associated event."
  overload: System.Windows.Controls.TextBlock.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)
  id: OnRender(System.Windows.Media.DrawingContext)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: OnRender(DrawingContext)
  nameWithType: TextBlock.OnRender(DrawingContext)
  fullName: System.Windows.Controls.TextBlock.OnRender(DrawingContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Renders the contents of a <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "This method is invoked by the layout system to render the contents of the <xref:System.Windows.Controls.TextBlock>."
  syntax:
    content: protected override sealed void OnRender (System.Windows.Media.DrawingContext ctx);
    parameters:
    - id: ctx
      type: System.Windows.Media.DrawingContext
      description: "The <xref href=&quot;System.Windows.Media.DrawingContext&quot;></xref> to render the control on."
  overload: System.Windows.Controls.TextBlock.OnRender*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ctx</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.Padding
  id: Padding
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: Padding
  nameWithType: TextBlock.Padding
  fullName: System.Windows.Controls.TextBlock.Padding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Padding can be described as uniform in all directions (`Padding=&quot;10&quot;`), or as four distinct values that represent left, top, right, and bottom padding independently (`Padding=&quot;5,0,10,20&quot;`).       If a specified padding thickness exceeds the corresponding content area dimension (for example, the sum of the left and right padding widths exceeds the content area width), the thickness of the padding is proportionally reduced to be no greater than the relevant content area dimension.      <a name=&quot;xamlAttributeUsage_Padding&quot;></a>    ## XAML Attribute Usage      ```   <object Padding=&quot;uniformThickness&quot;/>   - or -   <object Padding=&quot;independentThickness&quot;/>   - or -   <object Padding=&quot;qualifiedUniformThickness&quot;/>   - or -   <object Padding=&quot;qualifiedIndependentThickness&quot;/>   ```      <a name=&quot;xamlValues_Padding&quot;></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `&quot;10&quot;` is equivalent to a value of `&quot;10,10,10,10&quot;`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, &quot;5,10,15,20&quot; results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1in&quot;` provides uniform padding of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1.5in,0.8in,1.5in,0.8in&quot;`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=&quot;dependencyPropertyInfo_Padding&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"
  example:
  - "The following example shows how to set the Padding attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the Padding property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.Thickness Padding { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;></xref> structure specifying the amount of padding to apply, in device independent pixels. The default is &lt;xref:System.Double.NaN?displayProperty=fullName&gt;."
  overload: System.Windows.Controls.TextBlock.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.PaddingProperty
  id: PaddingProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: PaddingProperty
  nameWithType: TextBlock.PaddingProperty
  fullName: System.Windows.Controls.TextBlock.PaddingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.Padding*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PaddingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)
  id: SetBaselineOffset(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetBaselineOffset(DependencyObject,Double)
  nameWithType: TextBlock.SetBaselineOffset(DependencyObject,Double)
  fullName: System.Windows.Controls.TextBlock.SetBaselineOffset(DependencyObject,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on a specified dependency object."
  syntax:
    content: public static void SetBaselineOffset (System.Windows.DependencyObject element, double value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property."
    - id: value
      type: System.Double
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetBaselineOffset*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)
  id: SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetFontFamily(DependencyObject,FontFamily)
  nameWithType: TextBlock.SetFontFamily(DependencyObject,FontFamily)
  fullName: System.Windows.Controls.TextBlock.SetFontFamily(DependencyObject,FontFamily)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on a specified dependency object."
  syntax:
    content: public static void SetFontFamily (System.Windows.DependencyObject element, System.Windows.Media.FontFamily value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> property."
    - id: value
      type: System.Windows.Media.FontFamily
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetFontFamily*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)
  id: SetFontSize(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetFontSize(DependencyObject,Double)
  nameWithType: TextBlock.SetFontSize(DependencyObject,Double)
  fullName: System.Windows.Controls.TextBlock.SetFontSize(DependencyObject,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on a specified dependency object."
  syntax:
    content: public static void SetFontSize (System.Windows.DependencyObject element, double value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> property."
    - id: value
      type: System.Double
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetFontSize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)
  id: SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetFontStretch(DependencyObject,FontStretch)
  nameWithType: TextBlock.SetFontStretch(DependencyObject,FontStretch)
  fullName: System.Windows.Controls.TextBlock.SetFontStretch(DependencyObject,FontStretch)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on a specified dependency object."
  syntax:
    content: public static void SetFontStretch (System.Windows.DependencyObject element, System.Windows.FontStretch value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> property."
    - id: value
      type: System.Windows.FontStretch
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetFontStretch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)
  id: SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetFontStyle(DependencyObject,FontStyle)
  nameWithType: TextBlock.SetFontStyle(DependencyObject,FontStyle)
  fullName: System.Windows.Controls.TextBlock.SetFontStyle(DependencyObject,FontStyle)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on a specified dependency object."
  syntax:
    content: public static void SetFontStyle (System.Windows.DependencyObject element, System.Windows.FontStyle value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> property."
    - id: value
      type: System.Windows.FontStyle
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetFontStyle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)
  id: SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetFontWeight(DependencyObject,FontWeight)
  nameWithType: TextBlock.SetFontWeight(DependencyObject,FontWeight)
  fullName: System.Windows.Controls.TextBlock.SetFontWeight(DependencyObject,FontWeight)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on a specified dependency object."
  syntax:
    content: public static void SetFontWeight (System.Windows.DependencyObject element, System.Windows.FontWeight value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> property."
    - id: value
      type: System.Windows.FontWeight
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetFontWeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)
  id: SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetForeground(DependencyObject,Brush)
  nameWithType: TextBlock.SetForeground(DependencyObject,Brush)
  fullName: System.Windows.Controls.TextBlock.SetForeground(DependencyObject,Brush)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on a specified dependency object."
  syntax:
    content: public static void SetForeground (System.Windows.DependencyObject element, System.Windows.Media.Brush value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> property."
    - id: value
      type: System.Windows.Media.Brush
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetForeground*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)
  id: SetLineHeight(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetLineHeight(DependencyObject,Double)
  nameWithType: TextBlock.SetLineHeight(DependencyObject,Double)
  fullName: System.Windows.Controls.TextBlock.SetLineHeight(DependencyObject,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on a specified dependency object."
  syntax:
    content: public static void SetLineHeight (System.Windows.DependencyObject element, double value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> property."
    - id: value
      type: System.Double
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetLineHeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Windows.Controls.TextBlock.LineHeight*>is set to a non-positive value."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  id: SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  nameWithType: TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  fullName: System.Windows.Controls.TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on a specified dependency object."
  syntax:
    content: public static void SetLineStackingStrategy (System.Windows.DependencyObject element, System.Windows.LineStackingStrategy value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> property."
    - id: value
      type: System.Windows.LineStackingStrategy
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetLineStackingStrategy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  id: SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: SetTextAlignment(DependencyObject,TextAlignment)
  nameWithType: TextBlock.SetTextAlignment(DependencyObject,TextAlignment)
  fullName: System.Windows.Controls.TextBlock.SetTextAlignment(DependencyObject,TextAlignment)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sets the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on a specified dependency object."
  syntax:
    content: public static void SetTextAlignment (System.Windows.DependencyObject element, System.Windows.TextAlignment value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> property."
    - id: value
      type: System.Windows.TextAlignment
      description: "The new value to set the property to."
  overload: System.Windows.Controls.TextBlock.SetTextAlignment*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset
  id: ShouldSerializeBaselineOffset
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: ShouldSerializeBaselineOffset()
  nameWithType: TextBlock.ShouldSerializeBaselineOffset()
  fullName: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property should be serialized during serialization of a <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> object."
  syntax:
    content: public bool ShouldSerializeBaselineOffset ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)
  id: ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: ShouldSerializeInlines(XamlDesignerSerializationManager)
  nameWithType: TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)
  fullName: System.Windows.Controls.TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.Inlines*> property should be serialized during serialization of a <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> object."
  syntax:
    content: public bool ShouldSerializeInlines (System.Windows.Markup.XamlDesignerSerializationManager manager);
    parameters:
    - id: manager
      type: System.Windows.Markup.XamlDesignerSerializationManager
      description: "A serialization service manager object for this object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Windows.Controls.TextBlock.Inlines*> property should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.ShouldSerializeInlines*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.ShouldSerializeText
  id: ShouldSerializeText
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: ShouldSerializeText()
  nameWithType: TextBlock.ShouldSerializeText()
  fullName: System.Windows.Controls.TextBlock.ShouldSerializeText()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.Text*> property should be serialized during serialization of a <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> object."
  syntax:
    content: public bool ShouldSerializeText ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Windows.Controls.TextBlock.Text*> property should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.ShouldSerializeText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: TextBlock.System.IServiceProvider.GetService(Type)
  fullName: System.Windows.Controls.TextBlock.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."
  syntax:
    content: object IServiceProvider.GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "An object that specifies the type of service object to get."
    return:
      type: System.Object
      description: "A service object of type <code>serviceType</code>, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no service object of type <code>serviceType</code>."
  overload: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)
  id: System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)
  isEii: true
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: System.Windows.IContentHost.GetRectangles(ContentElement)
  nameWithType: TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.GetRectanglesCore*> method instead."
  syntax:
    content: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect> IContentHost.GetRectangles (System.Windows.ContentElement child);
    parameters:
    - id: child
      type: System.Windows.ContentElement
      description: "A <xref href=&quot;System.Windows.ContentElement&quot;></xref> for which to generate and return a collection of bounding rectangles."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}
      description: "A read-only collection of bounding rectangles for the specified <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements
  id: System#Windows#IContentHost#HostedElements
  isEii: true
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: System.Windows.IContentHost.HostedElements
  nameWithType: TextBlock.System.Windows.IContentHost.HostedElements
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.HostedElements
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.HostedElementsCore*> property instead."
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Windows.IInputElement> System.Windows.IContentHost.HostedElements { get; }
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}
      description: "Elements hosted by the content host."
  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)
  id: System#Windows#IContentHost#InputHitTest(System.Windows.Point)
  isEii: true
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: System.Windows.IContentHost.InputHitTest(Point)
  nameWithType: TextBlock.System.Windows.IContentHost.InputHitTest(Point)
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.InputHitTest(Point)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.InputHitTestCore*> method instead."
  syntax:
    content: System.Windows.IInputElement IContentHost.InputHitTest (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Mouse coordinates relative to the content host."
    return:
      type: System.Windows.IInputElement
      description: "The element that has been hit."
  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)
  id: System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)
  isEii: true
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
  nameWithType: TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*> method instead."
  syntax:
    content: void IContentHost.OnChildDesiredSizeChanged (System.Windows.UIElement child);
    parameters:
    - id: child
      type: System.Windows.UIElement
      description: "The child <xref href=&quot;System.Windows.UIElement&quot;></xref> element whose <xref:System.Windows.UIElement.DesiredSize*> has changed."
  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "An object to add as a child."
  overload: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "A string to add to the object."
  overload: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.Text
  id: Text
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: Text
  nameWithType: TextBlock.Text
  fullName: System.Windows.Controls.TextBlock.Text
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the text contents of a <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "Use this property when you want to show plain text in a <xref:System.Windows.Controls.TextBlock>.  When you need to format the text, add <xref:System.Windows.Documents.Inline> objects to the <xref:System.Windows.Controls.TextBlock.Inlines%2A> property.      <a name=&quot;dependencyPropertyInfo_Text&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to set the Text attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[SpanSnippets#_TextBlock_Text1XAML](~/add/codesnippet/xaml/SpanSnippets/Window1.xaml#_textblock_text1xaml)]  \n  \n Alternately, the contents of a text run may simply be contained by <xref:System.Windows.Controls.TextBlock> element tags.  \n  \n The following example shows how to set the Text property programmatically.  \n  \n [!code-cs[SpanSnippets#_TextBlock_Text](~/add/codesnippet/csharp/SpanSnippets/Window1.xaml.cs#_textblock_text)]\n [!code-vb[SpanSnippets#_TextBlock_Text](~/add/codesnippet/visualbasic/spansnippets/window1.xaml.vb#_textblock_text)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "The text contents of this <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>. Note that all non-text content is stripped out, resulting in a plain text representation of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> contents. The default is &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Windows.Controls.TextBlock.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextAlignment
  id: TextAlignment
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextAlignment
  nameWithType: TextBlock.TextAlignment
  fullName: System.Windows.Controls.TextBlock.TextAlignment
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets a value that indicates the horizontal alignment of text content."
  remarks: "This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* TextAlignment`=&quot;`*value*`&quot;.../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.TextAlignment> enumeration. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetTextAlignment%2A> and <xref:System.Windows.Controls.TextBlock.SetTextAlignment%2A>. The attached property usage is not common.      <a name=&quot;dependencyPropertyInfo_TextAlignment&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the TextAlignment attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the TextAlignment property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.TextAlignment TextAlignment { get; set; }
    return:
      type: System.Windows.TextAlignment
      description: "One of the <xref href=&quot;System.Windows.TextAlignment&quot;></xref> values that specifies the desired alignment. The default is <xref href=&quot;System.Windows.TextAlignment&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.TextAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextAlignmentProperty
  id: TextAlignmentProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextAlignmentProperty
  nameWithType: TextBlock.TextAlignmentProperty
  fullName: System.Windows.Controls.TextBlock.TextAlignmentProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.TextAlignment*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextDecorations
  id: TextDecorations
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextDecorations
  nameWithType: TextBlock.TextDecorations
  fullName: System.Windows.Controls.TextBlock.TextDecorations
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets a <xref href=&quot;System.Windows.TextDecorationCollection&quot;></xref> that contains the effects to apply to the text of a <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  remarks: "A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text. There are four types of text decorations: underline, baseline, strikethrough, and overline.  For more information about text decorations, see [How to: Create a Text Decoration](~/add/includes/ajax-current-ext-md.md).       By default, this property is set to `null` and has no <xref:System.Windows.TextDecorationCollection> associated with it.  Before adding any text effects, create a new <xref:System.Windows.TextDecorationCollection> and assign it to this property.      <a name=&quot;dependencyPropertyInfo_TextDecorations&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextDecorationsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to set the TextDecorations attribute.  \n  \n [!code-xml[InlineSnippets#_TextBlock_TextDecXAML](~/add/codesnippet/xaml/InlineSnippets/Window1.xaml#_textblock_textdecxaml)]  \n  \n The following figure shows how this example renders.  \n  \n ![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png \"Screenshot: Text with default strikethrough effect\")  \n  \n The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.  \n  \n ![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png \"Screenshot: Overline TextDecorator\")  \n  \n ![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png \"Screenshot: Default baseline effect on text\")  \n  \n ![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png \"Screenshot: Text with default underline effect\")  \n  \n The following example shows how to set the TextDecorations property programmatically.  \n  \n [!code-cs[InlineSnippets#_TextBlock_TextDec](~/add/codesnippet/csharp/InlineSnippets/Window1.xaml.cs#_textblock_textdec)]\n [!code-vb[InlineSnippets#_TextBlock_TextDec](~/add/codesnippet/visualbasic/inlinesnippets/window1.xaml.vb#_textblock_textdec)]"
  syntax:
    content: public System.Windows.TextDecorationCollection TextDecorations { get; set; }
    return:
      type: System.Windows.TextDecorationCollection
      description: "A <xref href=&quot;System.Windows.TextDecorationCollection&quot;></xref> collection that contains text decorations to apply to this element. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (no text decorations applied)."
  overload: System.Windows.Controls.TextBlock.TextDecorations*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextDecorationsProperty
  id: TextDecorationsProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextDecorationsProperty
  nameWithType: TextBlock.TextDecorationsProperty
  fullName: System.Windows.Controls.TextBlock.TextDecorationsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.TextDecorations*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextDecorationsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextEffects
  id: TextEffects
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextEffects
  nameWithType: TextBlock.TextEffects
  fullName: System.Windows.Controls.TextBlock.TextEffects
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the effects to apply to the text content in this element."
  remarks: "By default, this property is set to `null` and has no <xref:System.Windows.Media.TextEffectCollection> associated with it.  Before adding any text effects, create a new <xref:System.Windows.Media.TextEffectCollection> and assign it to this property.      <a name=&quot;dependencyPropertyInfo_TextEffects&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextEffectsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to create a simple text effect and apply it to a text of a <xref:System.Windows.Controls.TextBlock>.  \n  \n [!code-vb[TextElementSnippets#_TextBlock_TextEffects](~/add/codesnippet/visualbasic/textelementsnippets/window1.xaml.vb#_textblock_texteffects)]\n [!code-cs[TextElementSnippets#_TextBlock_TextEffects](~/add/codesnippet/csharp/TextElementSnippets/Window1.xaml.cs#_textblock_texteffects)]"
  syntax:
    content: public System.Windows.Media.TextEffectCollection TextEffects { get; set; }
    return:
      type: System.Windows.Media.TextEffectCollection
      description: "A <xref href=&quot;System.Windows.Media.TextEffectCollection&quot;></xref> containing one or more <xref href=&quot;System.Windows.Media.TextEffect&quot;></xref> objects that define effects to apply to the text of the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (no effects applied)."
  overload: System.Windows.Controls.TextBlock.TextEffects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextEffectsProperty
  id: TextEffectsProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextEffectsProperty
  nameWithType: TextBlock.TextEffectsProperty
  fullName: System.Windows.Controls.TextBlock.TextEffectsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.TextEffects*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextEffectsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextProperty
  id: TextProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextProperty
  nameWithType: TextBlock.TextProperty
  fullName: System.Windows.Controls.TextBlock.TextProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.Text*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextTrimming
  id: TextTrimming
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextTrimming
  nameWithType: TextBlock.TextTrimming
  fullName: System.Windows.Controls.TextBlock.TextTrimming
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the text trimming behavior to employ when content overflows the content area."
  remarks: "<a name=&quot;dependencyPropertyInfo_TextTrimming&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextTrimmingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  syntax:
    content: public System.Windows.TextTrimming TextTrimming { get; set; }
    return:
      type: System.Windows.TextTrimming
      description: "One of the <xref href=&quot;System.Windows.TextTrimming&quot;></xref> values that specifies the text trimming behavior to employ. The default is <xref href=&quot;System.Windows.TextTrimming&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.TextTrimming*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextTrimmingProperty
  id: TextTrimmingProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextTrimmingProperty
  nameWithType: TextBlock.TextTrimmingProperty
  fullName: System.Windows.Controls.TextBlock.TextTrimmingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.TextTrimming*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextTrimmingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextWrapping
  id: TextWrapping
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextWrapping
  nameWithType: TextBlock.TextWrapping
  fullName: System.Windows.Controls.TextBlock.TextWrapping
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets how the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref> should wrap text."
  remarks: "<a name=&quot;dependencyPropertyInfo_TextWrapping&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextWrappingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to set the TextWrapping attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the TextWrapping property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.TextWrapping TextWrapping { get; set; }
    return:
      type: System.Windows.TextWrapping
      description: "One of the <xref href=&quot;System.Windows.TextWrapping&quot;></xref> values. The default is <xref href=&quot;System.Windows.TextWrapping&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.TextWrapping*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.TextWrappingProperty
  id: TextWrappingProperty
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: TextWrappingProperty
  nameWithType: TextBlock.TextWrappingProperty
  fullName: System.Windows.Controls.TextBlock.TextWrappingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifies the <xref:System.Windows.Controls.TextBlock.TextWrapping*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextWrappingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.Typography
  id: Typography
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: Typography
  nameWithType: TextBlock.Typography
  fullName: System.Windows.Controls.TextBlock.Typography
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the currently effective typography variations for the contents of this element."
  remarks: "The Typography property is applicable only to [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] fonts. A typography variant has no effect on fonts that do not support the variant.  For more information on this topic, see [Typography in WPF](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to set the Typography attribute of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \n  \n The following example shows how to set the Typography property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]"
  syntax:
    content: public System.Windows.Documents.Typography Typography { get; }
    return:
      type: System.Windows.Documents.Typography
      description: "A <xref href=&quot;System.Windows.Documents.Typography&quot;></xref> object that specifies the currently effective typography variations. For a list of default typography values, see <xref href=&quot;System.Windows.Documents.Typography&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.Typography*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.TextBlock.VisualChildrenCount
  id: VisualChildrenCount
  parent: System.Windows.Controls.TextBlock
  langs:
  - csharp
  name: VisualChildrenCount
  nameWithType: TextBlock.VisualChildrenCount
  fullName: System.Windows.Controls.TextBlock.VisualChildrenCount
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the number of <xref href=&quot;System.Windows.Media.Visual&quot;></xref> children hosted by the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  syntax:
    content: protected override int VisualChildrenCount { get; }
    return:
      type: System.Int32
      description: "The number of visual children hosted by the <xref href=&quot;System.Windows.Controls.TextBlock&quot;></xref>."
  overload: System.Windows.Controls.TextBlock.VisualChildrenCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkElement
  isExternal: false
  name: System.Windows.FrameworkElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.TextBlock.#ctor
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextBlock()
  nameWithType: TextBlock.TextBlock()
  fullName: System.Windows.Controls.TextBlock.TextBlock()
- uid: System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextBlock(Inline)
  nameWithType: TextBlock.TextBlock(Inline)
  fullName: System.Windows.Controls.TextBlock.TextBlock(Inline)
- uid: System.Windows.Documents.Inline
  parent: System.Windows.Documents
  isExternal: false
  name: Inline
  nameWithType: Inline
  fullName: System.Windows.Documents.Inline
- uid: System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ArrangeOverride(Size)
  nameWithType: TextBlock.ArrangeOverride(Size)
  fullName: System.Windows.Controls.TextBlock.ArrangeOverride(Size)
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Controls.TextBlock.Background
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Background
  nameWithType: TextBlock.Background
  fullName: System.Windows.Controls.TextBlock.Background
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Controls.TextBlock.BackgroundProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BackgroundProperty
  nameWithType: TextBlock.BackgroundProperty
  fullName: System.Windows.Controls.TextBlock.BackgroundProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.TextBlock.BaselineOffset
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BaselineOffset
  nameWithType: TextBlock.BaselineOffset
  fullName: System.Windows.Controls.TextBlock.BaselineOffset
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.TextBlock.BaselineOffsetProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BaselineOffsetProperty
  nameWithType: TextBlock.BaselineOffsetProperty
  fullName: System.Windows.Controls.TextBlock.BaselineOffsetProperty
- uid: System.Windows.Controls.TextBlock.BreakAfter
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BreakAfter
  nameWithType: TextBlock.BreakAfter
  fullName: System.Windows.Controls.TextBlock.BreakAfter
- uid: System.Windows.LineBreakCondition
  parent: System.Windows
  isExternal: false
  name: LineBreakCondition
  nameWithType: LineBreakCondition
  fullName: System.Windows.LineBreakCondition
- uid: System.Windows.Controls.TextBlock.BreakBefore
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BreakBefore
  nameWithType: TextBlock.BreakBefore
  fullName: System.Windows.Controls.TextBlock.BreakBefore
- uid: System.Windows.Controls.TextBlock.ContentEnd
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ContentEnd
  nameWithType: TextBlock.ContentEnd
  fullName: System.Windows.Controls.TextBlock.ContentEnd
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Controls.TextBlock.ContentStart
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ContentStart
  nameWithType: TextBlock.ContentStart
  fullName: System.Windows.Controls.TextBlock.ContentStart
- uid: System.Windows.Controls.TextBlock.FontFamily
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontFamily
  nameWithType: TextBlock.FontFamily
  fullName: System.Windows.Controls.TextBlock.FontFamily
- uid: System.Windows.Media.FontFamily
  parent: System.Windows.Media
  isExternal: false
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Windows.Media.FontFamily
- uid: System.Windows.Controls.TextBlock.FontFamilyProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontFamilyProperty
  nameWithType: TextBlock.FontFamilyProperty
  fullName: System.Windows.Controls.TextBlock.FontFamilyProperty
- uid: System.Windows.Controls.TextBlock.FontSize
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontSize
  nameWithType: TextBlock.FontSize
  fullName: System.Windows.Controls.TextBlock.FontSize
- uid: System.Windows.Controls.TextBlock.FontSizeProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontSizeProperty
  nameWithType: TextBlock.FontSizeProperty
  fullName: System.Windows.Controls.TextBlock.FontSizeProperty
- uid: System.Windows.Controls.TextBlock.FontStretch
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontStretch
  nameWithType: TextBlock.FontStretch
  fullName: System.Windows.Controls.TextBlock.FontStretch
- uid: System.Windows.FontStretch
  parent: System.Windows
  isExternal: false
  name: FontStretch
  nameWithType: FontStretch
  fullName: System.Windows.FontStretch
- uid: System.Windows.Controls.TextBlock.FontStretchProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontStretchProperty
  nameWithType: TextBlock.FontStretchProperty
  fullName: System.Windows.Controls.TextBlock.FontStretchProperty
- uid: System.Windows.Controls.TextBlock.FontStyle
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontStyle
  nameWithType: TextBlock.FontStyle
  fullName: System.Windows.Controls.TextBlock.FontStyle
- uid: System.Windows.FontStyle
  parent: System.Windows
  isExternal: false
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Windows.FontStyle
- uid: System.Windows.Controls.TextBlock.FontStyleProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontStyleProperty
  nameWithType: TextBlock.FontStyleProperty
  fullName: System.Windows.Controls.TextBlock.FontStyleProperty
- uid: System.Windows.Controls.TextBlock.FontWeight
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontWeight
  nameWithType: TextBlock.FontWeight
  fullName: System.Windows.Controls.TextBlock.FontWeight
- uid: System.Windows.FontWeight
  parent: System.Windows
  isExternal: false
  name: FontWeight
  nameWithType: FontWeight
  fullName: System.Windows.FontWeight
- uid: System.Windows.Controls.TextBlock.FontWeightProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontWeightProperty
  nameWithType: TextBlock.FontWeightProperty
  fullName: System.Windows.Controls.TextBlock.FontWeightProperty
- uid: System.Windows.Controls.TextBlock.Foreground
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Foreground
  nameWithType: TextBlock.Foreground
  fullName: System.Windows.Controls.TextBlock.Foreground
- uid: System.Windows.Controls.TextBlock.ForegroundProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ForegroundProperty
  nameWithType: TextBlock.ForegroundProperty
  fullName: System.Windows.Controls.TextBlock.ForegroundProperty
- uid: System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetBaselineOffset(DependencyObject)
  nameWithType: TextBlock.GetBaselineOffset(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetBaselineOffset(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontFamily(DependencyObject)
  nameWithType: TextBlock.GetFontFamily(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontFamily(DependencyObject)
- uid: System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontSize(DependencyObject)
  nameWithType: TextBlock.GetFontSize(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontSize(DependencyObject)
- uid: System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontStretch(DependencyObject)
  nameWithType: TextBlock.GetFontStretch(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontStretch(DependencyObject)
- uid: System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontStyle(DependencyObject)
  nameWithType: TextBlock.GetFontStyle(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontStyle(DependencyObject)
- uid: System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontWeight(DependencyObject)
  nameWithType: TextBlock.GetFontWeight(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetFontWeight(DependencyObject)
- uid: System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetForeground(DependencyObject)
  nameWithType: TextBlock.GetForeground(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetForeground(DependencyObject)
- uid: System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetLineHeight(DependencyObject)
  nameWithType: TextBlock.GetLineHeight(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetLineHeight(DependencyObject)
- uid: System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetLineStackingStrategy(DependencyObject)
  nameWithType: TextBlock.GetLineStackingStrategy(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetLineStackingStrategy(DependencyObject)
- uid: System.Windows.LineStackingStrategy
  parent: System.Windows
  isExternal: false
  name: LineStackingStrategy
  nameWithType: LineStackingStrategy
  fullName: System.Windows.LineStackingStrategy
- uid: System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetPositionFromPoint(Point,Boolean)
  nameWithType: TextBlock.GetPositionFromPoint(Point,Boolean)
  fullName: System.Windows.Controls.TextBlock.GetPositionFromPoint(Point,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetRectanglesCore(ContentElement)
  nameWithType: TextBlock.GetRectanglesCore(ContentElement)
  fullName: System.Windows.Controls.TextBlock.GetRectanglesCore(ContentElement)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Rect>
  nameWithType: ReadOnlyCollection<Rect>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Rect>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: Rect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ContentElement
  parent: System.Windows
  isExternal: false
  name: ContentElement
  nameWithType: ContentElement
  fullName: System.Windows.ContentElement
- uid: System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetTextAlignment(DependencyObject)
  nameWithType: TextBlock.GetTextAlignment(DependencyObject)
  fullName: System.Windows.Controls.TextBlock.GetTextAlignment(DependencyObject)
- uid: System.Windows.TextAlignment
  parent: System.Windows
  isExternal: false
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: System.Windows.TextAlignment
- uid: System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetVisualChild(Int32)
  nameWithType: TextBlock.GetVisualChild(Int32)
  fullName: System.Windows.Controls.TextBlock.GetVisualChild(Int32)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: HitTestCore(PointHitTestParameters)
  nameWithType: TextBlock.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Controls.TextBlock.HitTestCore(PointHitTestParameters)
- uid: System.Windows.Media.HitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: HitTestResult
  nameWithType: HitTestResult
  fullName: System.Windows.Media.HitTestResult
- uid: System.Windows.Media.PointHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: PointHitTestParameters
  nameWithType: PointHitTestParameters
  fullName: System.Windows.Media.PointHitTestParameters
- uid: System.Windows.Controls.TextBlock.HostedElementsCore
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: HostedElementsCore
  nameWithType: TextBlock.HostedElementsCore
  fullName: System.Windows.Controls.TextBlock.HostedElementsCore
- uid: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<IInputElement>
  nameWithType: IEnumerator<IInputElement>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.IInputElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Windows.IInputElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.IInputElement
    name: IInputElement
    nameWithType: IInputElement
    fullName: IInputElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Controls.TextBlock.Inlines
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Inlines
  nameWithType: TextBlock.Inlines
  fullName: System.Windows.Controls.TextBlock.Inlines
- uid: System.Windows.Documents.InlineCollection
  parent: System.Windows.Documents
  isExternal: false
  name: InlineCollection
  nameWithType: InlineCollection
  fullName: System.Windows.Documents.InlineCollection
- uid: System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: InputHitTestCore(Point)
  nameWithType: TextBlock.InputHitTestCore(Point)
  fullName: System.Windows.Controls.TextBlock.InputHitTestCore(Point)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabled
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: IsHyphenationEnabled
  nameWithType: TextBlock.IsHyphenationEnabled
  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabled
- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: IsHyphenationEnabledProperty
  nameWithType: TextBlock.IsHyphenationEnabledProperty
  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty
- uid: System.Windows.Controls.TextBlock.LineHeight
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LineHeight
  nameWithType: TextBlock.LineHeight
  fullName: System.Windows.Controls.TextBlock.LineHeight
- uid: System.Windows.Controls.TextBlock.LineHeightProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LineHeightProperty
  nameWithType: TextBlock.LineHeightProperty
  fullName: System.Windows.Controls.TextBlock.LineHeightProperty
- uid: System.Windows.Controls.TextBlock.LineStackingStrategy
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LineStackingStrategy
  nameWithType: TextBlock.LineStackingStrategy
  fullName: System.Windows.Controls.TextBlock.LineStackingStrategy
- uid: System.Windows.Controls.TextBlock.LineStackingStrategyProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LineStackingStrategyProperty
  nameWithType: TextBlock.LineStackingStrategyProperty
  fullName: System.Windows.Controls.TextBlock.LineStackingStrategyProperty
- uid: System.Windows.Controls.TextBlock.LogicalChildren
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LogicalChildren
  nameWithType: TextBlock.LogicalChildren
  fullName: System.Windows.Controls.TextBlock.LogicalChildren
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: MeasureOverride(Size)
  nameWithType: TextBlock.MeasureOverride(Size)
  fullName: System.Windows.Controls.TextBlock.MeasureOverride(Size)
- uid: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnChildDesiredSizeChangedCore(UIElement)
  nameWithType: TextBlock.OnChildDesiredSizeChangedCore(UIElement)
  fullName: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(UIElement)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Controls.TextBlock.OnCreateAutomationPeer
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: TextBlock.OnCreateAutomationPeer()
  fullName: System.Windows.Controls.TextBlock.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Controls.TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnRender(DrawingContext)
  nameWithType: TextBlock.OnRender(DrawingContext)
  fullName: System.Windows.Controls.TextBlock.OnRender(DrawingContext)
- uid: System.Windows.Media.DrawingContext
  parent: System.Windows.Media
  isExternal: false
  name: DrawingContext
  nameWithType: DrawingContext
  fullName: System.Windows.Media.DrawingContext
- uid: System.Windows.Controls.TextBlock.Padding
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Padding
  nameWithType: TextBlock.Padding
  fullName: System.Windows.Controls.TextBlock.Padding
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Controls.TextBlock.PaddingProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: PaddingProperty
  nameWithType: TextBlock.PaddingProperty
  fullName: System.Windows.Controls.TextBlock.PaddingProperty
- uid: System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetBaselineOffset(DependencyObject,Double)
  nameWithType: TextBlock.SetBaselineOffset(DependencyObject,Double)
  fullName: System.Windows.Controls.TextBlock.SetBaselineOffset(DependencyObject,Double)
- uid: System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontFamily(DependencyObject,FontFamily)
  nameWithType: TextBlock.SetFontFamily(DependencyObject,FontFamily)
  fullName: System.Windows.Controls.TextBlock.SetFontFamily(DependencyObject,FontFamily)
- uid: System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontSize(DependencyObject,Double)
  nameWithType: TextBlock.SetFontSize(DependencyObject,Double)
  fullName: System.Windows.Controls.TextBlock.SetFontSize(DependencyObject,Double)
- uid: System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontStretch(DependencyObject,FontStretch)
  nameWithType: TextBlock.SetFontStretch(DependencyObject,FontStretch)
  fullName: System.Windows.Controls.TextBlock.SetFontStretch(DependencyObject,FontStretch)
- uid: System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontStyle(DependencyObject,FontStyle)
  nameWithType: TextBlock.SetFontStyle(DependencyObject,FontStyle)
  fullName: System.Windows.Controls.TextBlock.SetFontStyle(DependencyObject,FontStyle)
- uid: System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontWeight(DependencyObject,FontWeight)
  nameWithType: TextBlock.SetFontWeight(DependencyObject,FontWeight)
  fullName: System.Windows.Controls.TextBlock.SetFontWeight(DependencyObject,FontWeight)
- uid: System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetForeground(DependencyObject,Brush)
  nameWithType: TextBlock.SetForeground(DependencyObject,Brush)
  fullName: System.Windows.Controls.TextBlock.SetForeground(DependencyObject,Brush)
- uid: System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetLineHeight(DependencyObject,Double)
  nameWithType: TextBlock.SetLineHeight(DependencyObject,Double)
  fullName: System.Windows.Controls.TextBlock.SetLineHeight(DependencyObject,Double)
- uid: System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  nameWithType: TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  fullName: System.Windows.Controls.TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
- uid: System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetTextAlignment(DependencyObject,TextAlignment)
  nameWithType: TextBlock.SetTextAlignment(DependencyObject,TextAlignment)
  fullName: System.Windows.Controls.TextBlock.SetTextAlignment(DependencyObject,TextAlignment)
- uid: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ShouldSerializeBaselineOffset()
  nameWithType: TextBlock.ShouldSerializeBaselineOffset()
  fullName: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset()
- uid: System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ShouldSerializeInlines(XamlDesignerSerializationManager)
  nameWithType: TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)
  fullName: System.Windows.Controls.TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)
- uid: System.Windows.Markup.XamlDesignerSerializationManager
  parent: System.Windows.Markup
  isExternal: false
  name: XamlDesignerSerializationManager
  nameWithType: XamlDesignerSerializationManager
  fullName: System.Windows.Markup.XamlDesignerSerializationManager
- uid: System.Windows.Controls.TextBlock.ShouldSerializeText
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ShouldSerializeText()
  nameWithType: TextBlock.ShouldSerializeText()
  fullName: System.Windows.Controls.TextBlock.ShouldSerializeText()
- uid: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: TextBlock.System.IServiceProvider.GetService(Type)
  fullName: System.Windows.Controls.TextBlock.System.IServiceProvider.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.GetRectangles(ContentElement)
  nameWithType: TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.HostedElements
  nameWithType: TextBlock.System.Windows.IContentHost.HostedElements
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.HostedElements
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.InputHitTest(Point)
  nameWithType: TextBlock.System.Windows.IContentHost.InputHitTest(Point)
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.InputHitTest(Point)
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
  nameWithType: TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.TextBlock.Text
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Text
  nameWithType: TextBlock.Text
  fullName: System.Windows.Controls.TextBlock.Text
- uid: System.Windows.Controls.TextBlock.TextAlignment
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextAlignment
  nameWithType: TextBlock.TextAlignment
  fullName: System.Windows.Controls.TextBlock.TextAlignment
- uid: System.Windows.Controls.TextBlock.TextAlignmentProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextAlignmentProperty
  nameWithType: TextBlock.TextAlignmentProperty
  fullName: System.Windows.Controls.TextBlock.TextAlignmentProperty
- uid: System.Windows.Controls.TextBlock.TextDecorations
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextDecorations
  nameWithType: TextBlock.TextDecorations
  fullName: System.Windows.Controls.TextBlock.TextDecorations
- uid: System.Windows.TextDecorationCollection
  parent: System.Windows
  isExternal: false
  name: TextDecorationCollection
  nameWithType: TextDecorationCollection
  fullName: System.Windows.TextDecorationCollection
- uid: System.Windows.Controls.TextBlock.TextDecorationsProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextDecorationsProperty
  nameWithType: TextBlock.TextDecorationsProperty
  fullName: System.Windows.Controls.TextBlock.TextDecorationsProperty
- uid: System.Windows.Controls.TextBlock.TextEffects
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextEffects
  nameWithType: TextBlock.TextEffects
  fullName: System.Windows.Controls.TextBlock.TextEffects
- uid: System.Windows.Media.TextEffectCollection
  parent: System.Windows.Media
  isExternal: false
  name: TextEffectCollection
  nameWithType: TextEffectCollection
  fullName: System.Windows.Media.TextEffectCollection
- uid: System.Windows.Controls.TextBlock.TextEffectsProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextEffectsProperty
  nameWithType: TextBlock.TextEffectsProperty
  fullName: System.Windows.Controls.TextBlock.TextEffectsProperty
- uid: System.Windows.Controls.TextBlock.TextProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextProperty
  nameWithType: TextBlock.TextProperty
  fullName: System.Windows.Controls.TextBlock.TextProperty
- uid: System.Windows.Controls.TextBlock.TextTrimming
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextTrimming
  nameWithType: TextBlock.TextTrimming
  fullName: System.Windows.Controls.TextBlock.TextTrimming
- uid: System.Windows.TextTrimming
  parent: System.Windows
  isExternal: false
  name: TextTrimming
  nameWithType: TextTrimming
  fullName: System.Windows.TextTrimming
- uid: System.Windows.Controls.TextBlock.TextTrimmingProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextTrimmingProperty
  nameWithType: TextBlock.TextTrimmingProperty
  fullName: System.Windows.Controls.TextBlock.TextTrimmingProperty
- uid: System.Windows.Controls.TextBlock.TextWrapping
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextWrapping
  nameWithType: TextBlock.TextWrapping
  fullName: System.Windows.Controls.TextBlock.TextWrapping
- uid: System.Windows.TextWrapping
  parent: System.Windows
  isExternal: false
  name: TextWrapping
  nameWithType: TextWrapping
  fullName: System.Windows.TextWrapping
- uid: System.Windows.Controls.TextBlock.TextWrappingProperty
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextWrappingProperty
  nameWithType: TextBlock.TextWrappingProperty
  fullName: System.Windows.Controls.TextBlock.TextWrappingProperty
- uid: System.Windows.Controls.TextBlock.Typography
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Typography
  nameWithType: TextBlock.Typography
  fullName: System.Windows.Controls.TextBlock.Typography
- uid: System.Windows.Documents.Typography
  parent: System.Windows.Documents
  isExternal: false
  name: Typography
  nameWithType: Typography
  fullName: System.Windows.Documents.Typography
- uid: System.Windows.Controls.TextBlock.VisualChildrenCount
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: VisualChildrenCount
  nameWithType: TextBlock.VisualChildrenCount
  fullName: System.Windows.Controls.TextBlock.VisualChildrenCount
- uid: System.Windows.Controls.TextBlock.#ctor*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextBlock
  nameWithType: TextBlock.TextBlock
- uid: System.Windows.Controls.TextBlock.ArrangeOverride*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ArrangeOverride
  nameWithType: TextBlock.ArrangeOverride
- uid: System.Windows.Controls.TextBlock.Background*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Background
  nameWithType: TextBlock.Background
- uid: System.Windows.Controls.TextBlock.BaselineOffset*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BaselineOffset
  nameWithType: TextBlock.BaselineOffset
- uid: System.Windows.Controls.TextBlock.BreakAfter*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BreakAfter
  nameWithType: TextBlock.BreakAfter
- uid: System.Windows.Controls.TextBlock.BreakBefore*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: BreakBefore
  nameWithType: TextBlock.BreakBefore
- uid: System.Windows.Controls.TextBlock.ContentEnd*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ContentEnd
  nameWithType: TextBlock.ContentEnd
- uid: System.Windows.Controls.TextBlock.ContentStart*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ContentStart
  nameWithType: TextBlock.ContentStart
- uid: System.Windows.Controls.TextBlock.FontFamily*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontFamily
  nameWithType: TextBlock.FontFamily
- uid: System.Windows.Controls.TextBlock.FontSize*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontSize
  nameWithType: TextBlock.FontSize
- uid: System.Windows.Controls.TextBlock.FontStretch*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontStretch
  nameWithType: TextBlock.FontStretch
- uid: System.Windows.Controls.TextBlock.FontStyle*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontStyle
  nameWithType: TextBlock.FontStyle
- uid: System.Windows.Controls.TextBlock.FontWeight*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: FontWeight
  nameWithType: TextBlock.FontWeight
- uid: System.Windows.Controls.TextBlock.Foreground*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Foreground
  nameWithType: TextBlock.Foreground
- uid: System.Windows.Controls.TextBlock.GetBaselineOffset*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetBaselineOffset
  nameWithType: TextBlock.GetBaselineOffset
- uid: System.Windows.Controls.TextBlock.GetFontFamily*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontFamily
  nameWithType: TextBlock.GetFontFamily
- uid: System.Windows.Controls.TextBlock.GetFontSize*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontSize
  nameWithType: TextBlock.GetFontSize
- uid: System.Windows.Controls.TextBlock.GetFontStretch*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontStretch
  nameWithType: TextBlock.GetFontStretch
- uid: System.Windows.Controls.TextBlock.GetFontStyle*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontStyle
  nameWithType: TextBlock.GetFontStyle
- uid: System.Windows.Controls.TextBlock.GetFontWeight*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetFontWeight
  nameWithType: TextBlock.GetFontWeight
- uid: System.Windows.Controls.TextBlock.GetForeground*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetForeground
  nameWithType: TextBlock.GetForeground
- uid: System.Windows.Controls.TextBlock.GetLineHeight*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetLineHeight
  nameWithType: TextBlock.GetLineHeight
- uid: System.Windows.Controls.TextBlock.GetLineStackingStrategy*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetLineStackingStrategy
  nameWithType: TextBlock.GetLineStackingStrategy
- uid: System.Windows.Controls.TextBlock.GetPositionFromPoint*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetPositionFromPoint
  nameWithType: TextBlock.GetPositionFromPoint
- uid: System.Windows.Controls.TextBlock.GetRectanglesCore*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetRectanglesCore
  nameWithType: TextBlock.GetRectanglesCore
- uid: System.Windows.Controls.TextBlock.GetTextAlignment*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetTextAlignment
  nameWithType: TextBlock.GetTextAlignment
- uid: System.Windows.Controls.TextBlock.GetVisualChild*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: GetVisualChild
  nameWithType: TextBlock.GetVisualChild
- uid: System.Windows.Controls.TextBlock.HitTestCore*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: HitTestCore
  nameWithType: TextBlock.HitTestCore
- uid: System.Windows.Controls.TextBlock.HostedElementsCore*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: HostedElementsCore
  nameWithType: TextBlock.HostedElementsCore
- uid: System.Windows.Controls.TextBlock.Inlines*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Inlines
  nameWithType: TextBlock.Inlines
- uid: System.Windows.Controls.TextBlock.InputHitTestCore*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: InputHitTestCore
  nameWithType: TextBlock.InputHitTestCore
- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabled*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: IsHyphenationEnabled
  nameWithType: TextBlock.IsHyphenationEnabled
- uid: System.Windows.Controls.TextBlock.LineHeight*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LineHeight
  nameWithType: TextBlock.LineHeight
- uid: System.Windows.Controls.TextBlock.LineStackingStrategy*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LineStackingStrategy
  nameWithType: TextBlock.LineStackingStrategy
- uid: System.Windows.Controls.TextBlock.LogicalChildren*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: LogicalChildren
  nameWithType: TextBlock.LogicalChildren
- uid: System.Windows.Controls.TextBlock.MeasureOverride*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: MeasureOverride
  nameWithType: TextBlock.MeasureOverride
- uid: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnChildDesiredSizeChangedCore
  nameWithType: TextBlock.OnChildDesiredSizeChangedCore
- uid: System.Windows.Controls.TextBlock.OnCreateAutomationPeer*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: TextBlock.OnCreateAutomationPeer
- uid: System.Windows.Controls.TextBlock.OnPropertyChanged*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnPropertyChanged
  nameWithType: TextBlock.OnPropertyChanged
- uid: System.Windows.Controls.TextBlock.OnRender*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: OnRender
  nameWithType: TextBlock.OnRender
- uid: System.Windows.Controls.TextBlock.Padding*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Padding
  nameWithType: TextBlock.Padding
- uid: System.Windows.Controls.TextBlock.SetBaselineOffset*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetBaselineOffset
  nameWithType: TextBlock.SetBaselineOffset
- uid: System.Windows.Controls.TextBlock.SetFontFamily*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontFamily
  nameWithType: TextBlock.SetFontFamily
- uid: System.Windows.Controls.TextBlock.SetFontSize*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontSize
  nameWithType: TextBlock.SetFontSize
- uid: System.Windows.Controls.TextBlock.SetFontStretch*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontStretch
  nameWithType: TextBlock.SetFontStretch
- uid: System.Windows.Controls.TextBlock.SetFontStyle*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontStyle
  nameWithType: TextBlock.SetFontStyle
- uid: System.Windows.Controls.TextBlock.SetFontWeight*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetFontWeight
  nameWithType: TextBlock.SetFontWeight
- uid: System.Windows.Controls.TextBlock.SetForeground*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetForeground
  nameWithType: TextBlock.SetForeground
- uid: System.Windows.Controls.TextBlock.SetLineHeight*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetLineHeight
  nameWithType: TextBlock.SetLineHeight
- uid: System.Windows.Controls.TextBlock.SetLineStackingStrategy*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetLineStackingStrategy
  nameWithType: TextBlock.SetLineStackingStrategy
- uid: System.Windows.Controls.TextBlock.SetTextAlignment*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: SetTextAlignment
  nameWithType: TextBlock.SetTextAlignment
- uid: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ShouldSerializeBaselineOffset
  nameWithType: TextBlock.ShouldSerializeBaselineOffset
- uid: System.Windows.Controls.TextBlock.ShouldSerializeInlines*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ShouldSerializeInlines
  nameWithType: TextBlock.ShouldSerializeInlines
- uid: System.Windows.Controls.TextBlock.ShouldSerializeText*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: ShouldSerializeText
  nameWithType: TextBlock.ShouldSerializeText
- uid: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: TextBlock.System.IServiceProvider.GetService
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.GetRectangles
  nameWithType: TextBlock.System.Windows.IContentHost.GetRectangles
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.HostedElements
  nameWithType: TextBlock.System.Windows.IContentHost.HostedElements
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.InputHitTest
  nameWithType: TextBlock.System.Windows.IContentHost.InputHitTest
- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.IContentHost.OnChildDesiredSizeChanged
  nameWithType: TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged
- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Controls.TextBlock.Text*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Text
  nameWithType: TextBlock.Text
- uid: System.Windows.Controls.TextBlock.TextAlignment*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextAlignment
  nameWithType: TextBlock.TextAlignment
- uid: System.Windows.Controls.TextBlock.TextDecorations*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextDecorations
  nameWithType: TextBlock.TextDecorations
- uid: System.Windows.Controls.TextBlock.TextEffects*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextEffects
  nameWithType: TextBlock.TextEffects
- uid: System.Windows.Controls.TextBlock.TextTrimming*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextTrimming
  nameWithType: TextBlock.TextTrimming
- uid: System.Windows.Controls.TextBlock.TextWrapping*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: TextWrapping
  nameWithType: TextBlock.TextWrapping
- uid: System.Windows.Controls.TextBlock.Typography*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: Typography
  nameWithType: TextBlock.Typography
- uid: System.Windows.Controls.TextBlock.VisualChildrenCount*
  parent: System.Windows.Controls.TextBlock
  isExternal: false
  name: VisualChildrenCount
  nameWithType: TextBlock.VisualChildrenCount
