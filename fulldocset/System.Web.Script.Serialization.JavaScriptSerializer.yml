### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  id: JavaScriptSerializer
  children:
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  - System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  - System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  langs:
  - csharp
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
  type: Class
  summary: '[Json.NET](http://www.newtonsoft.com/json) deve ser utilizada serialização e a anulação da serialização. Fornece a funcionalidade de serialização e a anulação da serialização para aplicações com capacidade de AJAX.'
  remarks: "The JavaScriptSerializer class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server. You cannot access that instance of the serializer. However, this class exposes a public API. Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.  \n  \n To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method. To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods. To serialize and deserialize types that are not natively supported by JavaScriptSerializer, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class. Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.  \n  \n## Mapping Between Managed Types and JSON  \n The following table shows the mapping between managed types and JSON for the serialization process. These managed types are natively supported by JavaScriptSerializer. When you are deserializing from a JSON string to a managed type, the same mapping applies. However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.  \n  \n> [!NOTE]\n>  A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.  \n  \n|Managed type|JSON equivalent|  \n|------------------|---------------------|  \n|<xref:System.String> (UTF-8 encoding only).|String|  \n|<xref:System.Char>|String|  \n|Single null char (such as, \\0 )|Null|  \n|<xref:System.Boolean>|Boolean. Represented in JSON as `true` or `false`|  \n|`null` (`null` object references and <xref:System.Nullable> value types).|A string value of null|  \n|<xref:System.DBNull>|A string value of null|  \n|Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>. The culture-invariant string representation is used.|Number|  \n|<xref:System.DateTime>|Date object, represented in JSON as \"\\\\/Date(number of ticks)\\\\/\". The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.<br /><br /> The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  \n|Enumerations of integer type|Integer equivalent of the enumeration value|  \n|Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.|Array that uses JSON array syntax|  \n|Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.|JavaScript object that uses JSON dictionary syntax|  \n|Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.<br /><br /> Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.|JavaScript object that uses JSON dictionary syntax. A special metadata property named \"__type\" is included to ensure correct deserialization. Make sure that public instance properties have get and set accessors to ensure correct deserialization.|  \n|<xref:System.Guid>|String representation of a GUID|  \n|<xref:System.Uri>|String representation of the return value of <xref:System.Uri.GetComponents%2A>|"
  example:
  - "The first example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/csharp/t-system.web.script.seri_1_1.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_1.vb)]  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/csharp/t-system.web.script.seri_1_2.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_2.vb)]  \n  \n The next example shows a more complicated and complete project that uses the JavaScriptSerializer class to save and restore the state of an object by using JSON serialization. This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-vb[System.Web.Script.Serialization#4](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_3.aspx)]\n [!code-cs[System.Web.Script.Serialization#4](~/add/codesnippet/csharp/t-system.web.script.seri_1_3.aspx)]"
  syntax:
    content: public class JavaScriptSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> classe que não possui nenhuma resolução de tipo."
  remarks: "Uma instância do <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe sem uma resolução de tipo não inclui as propriedades de metadados do tipo (com o nome &quot;__type&quot;) na cadeia de JSON serializada.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Uma propriedade de metadados do tipo é utilizada pelo <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>e <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>Escreva métodos para determinar as adequadas geridos para que a cadeia JSON será convertida.</xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Para obter informações sobre as resoluções de tipo, consulte a <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>classe.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver>"
  syntax:
    content: public JavaScriptSerializer ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  id: '#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> classe que tem uma resolução de tipo personalizado."
  remarks: "Quando é serializar um objeto, o <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe utiliza o `resolver` parâmetro para determinar o valor adequado para incluir na cadeia de JSON serializada para a propriedade de metadados do tipo (&quot;__type&quot;).</xref:System.Web.Script.Serialization.JavaScriptSerializer> Da mesma forma, quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe é anular a serialização de uma cadeia JSON, resolve o valor de propriedade do tipo de metadados para o tipo gerido adequado utilizando a instância de resolução.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Pode definir o `resolver` parâmetro `null`, que é equivalente a chamar o <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>construtor.</xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>       A instância do <xref:System.Web.Script.Serialization.JavaScriptSerializer>que é utilizado pela camada de comunicação assíncrona para invocar serviços Web do script do cliente utiliza uma resolução de tipo especial.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Resolução deste tipo restringe os tipos que podem ser desserializados às definido na assinatura do método do serviço Web ou aqueles que tenham o <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>aplicada.</xref:System.Web.Script.Services.GenerateScriptTypeAttribute> Não é possível modificar esta resolução de tipo incorporado através de programação.      > [!IMPORTANT] > Utilizando uma instância deste objeto inicializado com uma resolução de tipo personalizada pode apresentar um risco de segurança. Utilize este objeto apenas com dados fidedignos. Para obter mais informações, consulte [riscos de segurança de dados não fidedignos](http://go.microsoft.com/fwlink/?LinkId=330378)."
  syntax:
    content: public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);
    parameters:
    - id: resolver
      type: System.Web.Script.Serialization.JavaScriptTypeResolver
      description: "O objeto de tipo-resolução personalizada."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  id: ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte o objeto especificado para o tipo especificado."
  remarks: "Quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer>instância é ao serializar um tipo para o qual está registado um conversor personalizado, as chamadas de serializador o <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>método para obter o dicionário de pares nome/valor que irá ser convertido numa cadeia formatada em JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       O <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>método também pode acionar exceções se o gráfico de objeto é demasiado complexo ou se registado instâncias de <xref:System.Web.Script.Serialization.JavaScriptConverter>ter causado recursão de conversor.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public object ConvertToType (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto a converter."
    - id: targetType
      type: System.Type
      description: "O tipo para converter o objeto."
    return:
      type: System.Object
      description: "A cadeia JSON serializada."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cadeia resultante formatada em JSON excede o valor de <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - ou - <code> obj </code> contém uma referência circular. Uma referência circular ocorre quando um objeto subordinado contém uma referência a um objeto principal e o objeto principal tem uma referência para o objeto subordinado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O limite de recursão definido pelo <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>foi excedido.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  id: ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T ConvertToType<T> (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  id: Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte uma cadeia formatada em JSON para um objeto do tipo especificado."
  remarks: "Este método de anulação da serialização está a tentar converter a raiz do gráfico de objeto para um tipo específico, da forma que o <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>método.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object Deserialize (string input, Type targetType);
    parameters:
    - id: input
      type: System.String
      description: "A cadeia JSON para anular a serialização."
    - id: targetType
      type: System.Type
      description: "O tipo do objeto resultante."
    return:
      type: System.Object
      description: "O objeto de serialização anulado."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O comprimento de <code> input </code> excede o valor de <> </> *>.       - ou - o limite de recursão definido pelo <> </> *> foi excedido.       - ou - <code> input </code> contém uma sequência de caráter inesperado.       - ou - <code> input </code> é um tipo de dicionário e um valor de chave de cadeia não foi encontrado.       - ou - <code> input </code> inclui definições de membro que não estão disponíveis no tipo de destino."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>contém uma propriedade de &quot;__type&quot; que indica o tipo personalizado, mas a resolução de tipo que está atualmente associada o serializador não é possível localizar um tipo gerido correspondente.       - ou - <code>input</code> contém uma propriedade de &quot;__type&quot; que indica o tipo personalizado, mas o resultado da cadeia JSON correspondente ao anular a serialização não pode ser atribuído ao tipo de destino esperado.       - ou - <code>input</code> contém uma propriedade de &quot;__type&quot; que indica o <xref:System.Object> ou um tipo não instantiable (por exemplo, um tipo abstrato ou uma interface).       - ou - foi efetuada uma tentativa para converter uma matriz JSON para um tipo gerido semelhantes a matrizes que não é suportado para utilização como um destino de desserialização de JSON.       - ou - não é possível converter <code>input</code> para o tipo de destino."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T Deserialize<T> (string input);
    parameters:
    - id: input
      type: System.String
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  id: DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte a cadeia JSON especificada para um gráfico de objeto."
  remarks: "Este método de anulação da serialização está a tentar converter a raiz do gráfico de objeto para um tipo específico, tal como com a <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>método.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object DeserializeObject (string input);
    parameters:
    - id: input
      type: System.String
      description: "A cadeia JSON para anular a serialização."
    return:
      type: System.Object
      description: "O objeto de serialização anulado."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> input </code> comprimento excede o valor de <> </> *>.       - ou - o limite de recursão definido pelo <> </> *> foi excedido.       - ou - <code> input </code> contém uma sequência de caráter inesperado.       - ou - <code> input </code> é um tipo de dicionário e um valor de chave de cadeia não foi encontrado.       - ou - <code> input </code> inclui definições de membro que não estão disponíveis no tipo de destino."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>contém uma propriedade de &quot;__type&quot; que indica o tipo personalizado, mas a resolução de tipo que está atualmente associada o serializador não é possível localizar um tipo gerido correspondente.       - ou - <code>input</code> contém uma propriedade de &quot;__type&quot; que indica o tipo personalizado, mas o resultado da cadeia JSON correspondente ao anular a serialização não pode ser atribuído ao tipo de destino esperado.       - ou - <code>input</code> contém uma propriedade de &quot;__type&quot; que indica o <xref:System.Object> ou um tipo não instantiable (por exemplo, um tipo abstrato ou uma interface).       - ou - foi efetuada uma tentativa para converter uma matriz JSON para um tipo gerido semelhantes a matrizes que não é suportado para utilização como um destino de desserialização de JSON.       - ou - não é possível converter <code>input</code> para o tipo de destino."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  id: MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Obtém ou define o comprimento máximo de cadeias JSON que serão aceites pelo <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> classe."
  remarks: 'O valor da propriedade MaxJsonLength só se aplica quando explicitamente a criar uma instância de <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Utilize o `jsonSerialization` elemento do ficheiro de configuração para definir o comprimento máximo para a instância de serializador interno que é utilizado pela camada de comunicação assíncrona. Para obter mais informações sobre os elementos de configuração para a serialização, consulte [como: configurar os serviços do ASP.NET no Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public int MaxJsonLength { get; set; }
    return:
      type: System.Int32
      description: "O comprimento máximo de cadeias JSON. A predefinição é 2097152 carateres, que é equivalente a 4 MB de dados de cadeia Unicode."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A propriedade está definida como um valor que é menor que um."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  id: RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Obtém ou define o limite de constraining o número de níveis de objeto para processar."
  remarks: "A propriedade RecursionLimit refere-se ao número de níveis na hierarquia de objeto que <xref:System.Web.Script.Serialization.JavaScriptSerializer>processará nos seguintes casos: - quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe é anular a serialização de uma cadeia JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Web.Script.Serialization.JavaScriptSerializer>      -Quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe é walking um gráfico de objeto durante a serialização.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       O valor de RecursionLimit só se aplica quando explicitamente a criar uma instância de <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Utilize o `jsonSerialization` elemento do ficheiro de configuração para definir o número de níveis de objeto a processar para a instância de serializador interno que é utilizada pela camada de comunicação assíncrona. Para obter mais informações sobre os elementos de configuração para a serialização, consulte [como: configurar os serviços do ASP.NET no Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int RecursionLimit { get; set; }
    return:
      type: System.Int32
      description: "O número de níveis de objeto. A predefinição é 100."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A propriedade está definida como um valor que é menor que um."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  id: RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Regista um conversor personalizado com o <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> instância."
  remarks: "Pode registar um ou mais conversores personalizados com um <xref:System.Web.Script.Serialization.JavaScriptSerializer>instância utilizando o método RegisterConverters.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Quando estão registados conversores personalizados, <xref:System.Web.Script.Serialization.JavaScriptSerializer>utiliza os conversores de serialização de tipos geridos e anular a serialização de cadeias JSON para os tipos geridos.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Vários conversores podem ser registados com o mesmo <xref:System.Web.Script.Serialization.JavaScriptSerializer>instância e estes conversores podem indicar o suporte para o mesmo tipo.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Como resultado, o último conversor que está registado para um tipo específico é aquele que será utilizado pelo <xref:System.Web.Script.Serialization.JavaScriptSerializer>para serializar o tipo.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Para obter mais informações sobre conversores personalizadas, consulte a <xref:System.Web.Script.Serialization.JavaScriptConverter>classe.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer>class.  \n  \n [!code-vb[System.Web.Script.Serialization#1](~/add/codesnippet/visualbasic/0b038c1f-1fc5-4957-9daf-_1.aspx)]\n [!code-cs[System.Web.Script.Serialization#1](~/add/codesnippet/csharp/0b038c1f-1fc5-4957-9daf-_1.aspx)]"
  syntax:
    content: public void RegisterConverters (System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter> converters);
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
      description: "Uma matriz que contenha os conversores personalizados para ser registado."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>converters</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte um objeto numa cadeia de JSON."
  remarks: "Quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer>instância é ao serializar um tipo para o qual está registado um conversor personalizado, as chamadas de serializador o <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>método para obter o dicionário de pares nome/valor que irá ser convertido numa cadeia JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       O método de serializar também pode acionar exceções se o gráfico de objeto é demasiado complexo ou se registado instâncias de <xref:System.Web.Script.Serialization.JavaScriptConverter>ter causado recursão de conversor.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Serialize (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto de serialização."
    return:
      type: System.String
      description: "A cadeia JSON serializada."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cadeia JSON resultante excede o valor de <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - ou - <code> obj </code> contém uma referência circular. Uma referência circular ocorre quando um objeto subordinado contém uma referência a um objeto principal e o objeto principal tem uma referência para o objeto subordinado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O limite de recursão definido pelo <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>foi excedido.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  id: Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Serializa um objeto e escreve a cadeia JSON resultante especificado <xref:System.Text.StringBuilder>objeto.</xref:System.Text.StringBuilder>"
  remarks: "Quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer>instância é ao serializar um tipo para o qual está registado um conversor personalizado, as chamadas de serializador o <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>método para obter o dicionário de pares nome/valor que irá ser convertido numa cadeia JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       O <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>método também pode acionar exceções se o gráfico de objeto é demasiado complexo ou se registado instâncias de <xref:System.Web.Script.Serialization.JavaScriptConverter>ter causado recursão de conversor.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public void Serialize (object obj, System.Text.StringBuilder output);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto de serialização."
    - id: output
      type: System.Text.StringBuilder
      description: "O <xref:System.Text.StringBuilder>objeto que é utilizado para escrever a cadeia JSON.</xref:System.Text.StringBuilder>"
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cadeia JSON resultante excede o valor de <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - ou - <code> obj </code> contém uma referência circular. Uma referência circular ocorre quando um objeto subordinado contém uma referência a um objeto principal e o objeto principal tem uma referência para o objeto subordinado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O limite de recursão definido pelo <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>foi excedido.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
- uid: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JavaScriptConverter>
  nameWithType: IEnumerable<JavaScriptConverter>
  fullName: System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.Script.Serialization.JavaScriptConverter
    name: JavaScriptConverter
    nameWithType: JavaScriptConverter
    fullName: JavaScriptConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType
  nameWithType: JavaScriptSerializer.ConvertToType
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType<T>
  nameWithType: JavaScriptSerializer.ConvertToType<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptSerializer.Deserialize
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize<T>
  nameWithType: JavaScriptSerializer.Deserialize<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject
  nameWithType: JavaScriptSerializer.DeserializeObject
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters
  nameWithType: JavaScriptSerializer.RegisterConverters
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptSerializer.Serialize
