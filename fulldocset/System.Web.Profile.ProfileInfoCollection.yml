### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileInfoCollection
  id: ProfileInfoCollection
  children:
  - System.Web.Profile.ProfileInfoCollection.#ctor
  - System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  - System.Web.Profile.ProfileInfoCollection.Clear
  - System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  - System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  - System.Web.Profile.ProfileInfoCollection.Count
  - System.Web.Profile.ProfileInfoCollection.GetEnumerator
  - System.Web.Profile.ProfileInfoCollection.IsSynchronized
  - System.Web.Profile.ProfileInfoCollection.Item(System.String)
  - System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  - System.Web.Profile.ProfileInfoCollection.SetReadOnly
  - System.Web.Profile.ProfileInfoCollection.SyncRoot
  langs:
  - csharp
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
  type: Class
  summary: "A collection of <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> objects."
  remarks: "A ProfileInfoCollection object contains <xref:System.Web.Profile.ProfileInfo> objects that represent user profiles from a data source. A ProfileInfoCollection is returned from the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>, and <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> methods of a <xref:System.Web.Profile.ProfileProvider>.       A ProfileInfoCollection can be supplied to the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method to delete profile information and properties from the data source."
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> and <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> methods. The user can pass the ProfileInfoCollection returned by the `find` methods to the <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method to delete the associated profiles from the data source.  \n  \n [!code-vb[System.Web.Profile.SqlProfileProvider#4](~/add/codesnippet/VisualBasic/t-system.web.profile.pro_3_1.aspx)]\n [!code-cs[System.Web.Profile.SqlProfileProvider#4](~/add/codesnippet/CSharp/t-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: 'public sealed class ProfileInfoCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: ProfileInfoCollection()
  nameWithType: ProfileInfoCollection.ProfileInfoCollection()
  fullName: System.Web.Profile.ProfileInfoCollection.ProfileInfoCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Creates a new, empty <see cref=&quot;T:System.Web.Profile.ProfileInfoCollection&quot;></see>."
  remarks: "A <xref:System.Web.Profile.ProfileInfoCollection> is constructed by profile provider implementers and returned from the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>, and <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> methods of the <xref:System.Web.Profile.ProfileProvider> abstract class."
  example:
  - For an example of a <xref:System.Web.Profile.ProfileProvider> implementation that creates a <xref:System.Web.Profile.ProfileInfoCollection> for user profiles in a data store, see [Implementing a Profile Provider](../Topic/Implementing%20a%20Profile%20Provider.md).
  syntax:
    content: public ProfileInfoCollection ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  id: Add(System.Web.Profile.ProfileInfo)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Add(ProfileInfo)
  nameWithType: ProfileInfoCollection.Add(ProfileInfo)
  fullName: System.Web.Profile.ProfileInfoCollection.Add(ProfileInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Adds the specified <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> object to the collection."
  remarks: "The Add method is commonly used by profile-provider implementers to populate a <xref:System.Web.Profile.ProfileInfoCollection> to return from the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>, or <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the <xref:System.Web.Profile.ProfileProvider> abstract class."
  example:
  - For an example of a <xref:System.Web.Profile.ProfileProvider> implementation that creates a <xref:System.Web.Profile.ProfileInfoCollection> for user profiles in a data store, see [Implementing a Profile Provider](../Topic/Implementing%20a%20Profile%20Provider.md).
  syntax:
    content: public void Add (System.Web.Profile.ProfileInfo profileInfo);
    parameters:
    - id: profileInfo
      type: System.Web.Profile.ProfileInfo
      description: "A  object to add to the collection."
  overload: System.Web.Profile.ProfileInfoCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A  object with the same <xref:System.Web.Profile.ProfileInfo.UserName%2A> value as profileInfo already exists in the collection."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    profileInfo is .  \n  \n -or-  \n  \n The <xref:System.Web.Profile.ProfileInfo.UserName%2A> property of profileInfo is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.Clear
  id: Clear
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ProfileInfoCollection.Clear()
  fullName: System.Web.Profile.ProfileInfoCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Removes all <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> objects from the collection."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ProfileInfoCollection.CopyTo(Array,Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Copies the <see cref=&quot;T:System.Web.Profile.ProfileInfoCollection&quot;></see> to a one-dimensional array."
  remarks: "This method uses <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName> to copy <xref:System.Web.Profile.ProfileInfo> objects to the specified <xref:System.Array>."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A one-dimensional <xref:System.Array> that is the destination of the elements copied from the . The <xref:System.Array> must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in array at which copying begins."
  overload: System.Web.Profile.ProfileInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  id: CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: CopyTo(ProfileInfo[],Int32)
  nameWithType: ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Copies the <see cref=&quot;T:System.Web.Profile.ProfileInfoCollection&quot;></see> to a one-dimensional array of type <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see>."
  remarks: "This method uses <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName> to copy <xref:System.Web.Profile.ProfileInfo> objects to the specified array."
  syntax:
    content: public void CopyTo (System.Web.Profile.ProfileInfo[] array, int index);
    parameters:
    - id: array
      type: System.Web.Profile.ProfileInfo[]
      description: "A one-dimensional array of type  that is the destination of the elements copied from the . The array must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in the `array` at which copying begins."
  overload: System.Web.Profile.ProfileInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.Count
  id: Count
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Count
  nameWithType: ProfileInfoCollection.Count
  fullName: System.Web.Profile.ProfileInfoCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Gets the number of <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> objects in the collection."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> objects in the collection."
  overload: System.Web.Profile.ProfileInfoCollection.Count*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ProfileInfoCollection.GetEnumerator()
  fullName: System.Web.Profile.ProfileInfoCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Gets an enumerator that can iterate through the <see cref=&quot;T:System.Web.Profile.ProfileInfoCollection&quot;></see>."
  remarks: "Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection. For more information, see <xref:System.Collections.IEnumerator>."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Web.Profile.ProfileInfoCollection.GetEnumerator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
  fullName: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Gets a value indicating whether the profile info collection is thread safe."
  remarks: "Application code does not normally use this property."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, because thread-safe profile info collections are not supported."
  overload: System.Web.Profile.ProfileInfoCollection.IsSynchronized*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileInfoCollection.Item(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Gets the <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> object in the collection, referenced by the specified &lt;xref:System.Web.Profile.ProfileInfo.UserName%2A&gt;."
  syntax:
    content: public System.Web.Profile.ProfileInfo this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.Web.Profile.ProfileInfo.UserName%2A> of the  object to retrieve from the collection."
    return:
      type: System.Web.Profile.ProfileInfo
      description: "A <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> object for the specified user name. If name is not found in the collection, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> is returned."
  overload: System.Web.Profile.ProfileInfoCollection.Item*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ProfileInfoCollection.Remove(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Removes the <see cref=&quot;T:System.Web.Profile.ProfileInfo&quot;></see> object with the specified user name from the collection."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.Web.Profile.ProfileInfo.UserName%2A> of the  object to remove from the collection."
  overload: System.Web.Profile.ProfileInfoCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ProfileInfoCollection.SetReadOnly()
  fullName: System.Web.Profile.ProfileInfoCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Makes the contents of the <see cref=&quot;T:System.Web.Profile.ProfileInfoCollection&quot;></see> read-only."
  remarks: "The SetReadOnly method marks the <xref:System.Web.Profile.ProfileInfoCollection> as read-only so that <xref:System.Web.Profile.ProfileInfo> objects cannot be added to or removed from the collection. After calling the SetReadOnly method, you cannot change the <xref:System.Web.Profile.ProfileInfoCollection> back to read/write."
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.SetReadOnly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
  fullName: System.Web.Profile.ProfileInfoCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Gets the synchronization root."
  remarks: "Application code does not normally use this property."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_this&quot; name=&quot;this&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Me&quot; name=&quot;Me&quot; href=&quot;&quot;></xref> in Visual Basic), because synchronization of <see cref=&quot;T:System.Web.Profile.ProfileInfoCollection&quot;></see> objects is not supported."
  overload: System.Web.Profile.ProfileInfoCollection.SyncRoot*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Profile.ProfileInfoCollection.#ctor
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: ProfileInfoCollection()
  nameWithType: ProfileInfoCollection.ProfileInfoCollection()
  fullName: System.Web.Profile.ProfileInfoCollection.ProfileInfoCollection()
- uid: System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Add(ProfileInfo)
  nameWithType: ProfileInfoCollection.Add(ProfileInfo)
  fullName: System.Web.Profile.ProfileInfoCollection.Add(ProfileInfo)
- uid: System.Web.Profile.ProfileInfo
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfo
  nameWithType: ProfileInfo
  fullName: System.Web.Profile.ProfileInfo
- uid: System.Web.Profile.ProfileInfoCollection.Clear
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Clear()
  nameWithType: ProfileInfoCollection.Clear()
  fullName: System.Web.Profile.ProfileInfoCollection.Clear()
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ProfileInfoCollection.CopyTo(Array,Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo(ProfileInfo[],Int32)
  nameWithType: ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
- uid: System.Web.Profile.ProfileInfo[]
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfo
  nameWithType: ProfileInfo
  fullName: System.Web.Profile.ProfileInfo[]
  spec.csharp:
  - uid: System.Web.Profile.ProfileInfo
    name: ProfileInfo
    nameWithType: ProfileInfo
    fullName: ProfileInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileInfoCollection.Count
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Count
  nameWithType: ProfileInfoCollection.Count
  fullName: System.Web.Profile.ProfileInfoCollection.Count
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ProfileInfoCollection.GetEnumerator()
  fullName: System.Web.Profile.ProfileInfoCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
  fullName: System.Web.Profile.ProfileInfoCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileInfoCollection.Item(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Item(String)
  nameWithType: ProfileInfoCollection.Item(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ProfileInfoCollection.Remove(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Remove(String)
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ProfileInfoCollection.SetReadOnly()
  fullName: System.Web.Profile.ProfileInfoCollection.SetReadOnly()
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
  fullName: System.Web.Profile.ProfileInfoCollection.SyncRoot
- uid: System.Web.Profile.ProfileInfoCollection.#ctor*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection.ProfileInfoCollection
- uid: System.Web.Profile.ProfileInfoCollection.Add*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Add
  nameWithType: ProfileInfoCollection.Add
- uid: System.Web.Profile.ProfileInfoCollection.Clear*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Clear
  nameWithType: ProfileInfoCollection.Clear
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProfileInfoCollection.CopyTo
- uid: System.Web.Profile.ProfileInfoCollection.Count*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Count
  nameWithType: ProfileInfoCollection.Count
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ProfileInfoCollection.GetEnumerator
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
- uid: System.Web.Profile.ProfileInfoCollection.Item*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Item
  nameWithType: ProfileInfoCollection.Item
- uid: System.Web.Profile.ProfileInfoCollection.Remove*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Remove
  nameWithType: ProfileInfoCollection.Remove
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ProfileInfoCollection.SetReadOnly
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
