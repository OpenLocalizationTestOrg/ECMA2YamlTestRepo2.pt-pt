### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WmiWebEventProvider
  id: WmiWebEventProvider
  children:
  - System.Web.Management.WmiWebEventProvider.#ctor
  - System.Web.Management.WmiWebEventProvider.Flush
  - System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WmiWebEventProvider.Shutdown
  langs:
  - csharp
  name: WmiWebEventProvider
  nameWithType: WmiWebEventProvider
  fullName: System.Web.Management.WmiWebEventProvider
  type: Class
  summary: "Implementa um fornecedor de evento que mapeia os eventos de monitorização de estado de funcionamento do ASP.NET para eventos de Windows Management Instrumentation (WMI)."
  remarks: "ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n ASP.NET uses this class to map health-monitoring events to WMI events. To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the WmiWebEventProvider class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.  \n  \n The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the WmiWebEventProvider class and mapped into WMI events. The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\\Microsoft.NET\\Framework\\\\*BuildNumber*. For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](http://msdn.microsoft.com/en-us/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.  \n  \n> [!NOTE]\n>  The WmiWebEventProvider class and the health event types to monitor are already configured by default. The only thing you need to do is to define the rule for all the health events. Remember that the health events are not dispatched to the WmiWebEventProvider provider by default.  \n  \n [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._2_1.vb)]\n [!code-cs[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._2_1.cs)]  \n  \n The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the WmiWebEventProvider provider to process all health-monitoring events.  \n  \n```  \n<healthMonitoring>  \n  <rules>  \n    <add   \n      name=\"Using Wmi\"  \n      eventName=\"All Events\"   \n      provider=\"WmiWebEventProvider\"   \n      profile=\"Critical\"/>  \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WmiWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: WmiWebEventProvider()
  nameWithType: WmiWebEventProvider.WmiWebEventProvider()
  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Management.WmiWebEventProvider&quot;> </xref> classe."
  remarks: "Este construtor é utilizado internamente pelo sistema de monitorização de estado de funcionamento ASP.NET. Nunca irá utilizá-la para criar uma instância de <xref:System.Web.Management.TraceWebEventProvider>classe, mas pode chamar este construtor quando implementar o seu próprio tipo de fornecedor que herda esta classe.</xref:System.Web.Management.TraceWebEventProvider>"
  syntax:
    content: public WmiWebEventProvider ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: WmiWebEventProvider.Flush()
  fullName: System.Web.Management.WmiWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Remove todos os eventos da memória intermédia do fornecedor."
  remarks: "Quando se chama este método, todos os eventos na memória intermédia do fornecedor imediatamente são removidos, independentemente da quanto tempo decorrido desde a última escrita ou eventos quantos são na memória intermédia. A hora da última operação de escrita é reposta para a hora da ação flushing. Chamar este método quando não está ativado o mecanismo de buffering não tem qualquer efeito."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Define os valores iniciais para este objeto."
  remarks: "ASP.NET chama o método de inicialização após chamar o <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A>construtor.</xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> Este método é chamado para inicializar o <xref:System.Web.Management.WmiWebEventProvider>classe com as definições de configuração e o nome especificado no ficheiro de configuração.</xref:System.Web.Management.WmiWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "O nome utilizado no ficheiro de configuração para identificar este fornecedor."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> objeto que especifica os atributos atribuídos para este fornecedor no ficheiro de configuração."
  overload: System.Web.Management.WmiWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Processa o evento foi transmitido para o fornecedor."
  remarks: "Este é o método que a monitorização de estado de funcionamento do ASP.NET chama para iniciar o processamento do evento."
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "O <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> objeto ao processo."
  overload: System.Web.Management.WmiWebEventProvider.ProcessEvent*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O evento não foi gerado."
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: WmiWebEventProvider.Shutdown()
  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Executa tarefas associadas a encerrar o fornecedor."
  remarks: "Chamadas ASP.NET o <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>método quando termina o domínio de aplicação que aloja a aplicação Web.</xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> O método é chamado para efetuar tarefas que irão permitir que a aplicação terminar corretamente."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Management.WmiWebEventProvider.#ctor
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: WmiWebEventProvider()
  nameWithType: WmiWebEventProvider.WmiWebEventProvider()
  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()
- uid: System.Web.Management.WmiWebEventProvider.Flush
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: WmiWebEventProvider.Flush()
  fullName: System.Web.Management.WmiWebEventProvider.Flush()
- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.WmiWebEventProvider.Shutdown
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: WmiWebEventProvider.Shutdown()
  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()
- uid: System.Web.Management.WmiWebEventProvider.#ctor*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: WmiWebEventProvider
  nameWithType: WmiWebEventProvider.WmiWebEventProvider
- uid: System.Web.Management.WmiWebEventProvider.Flush*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: WmiWebEventProvider.Flush
- uid: System.Web.Management.WmiWebEventProvider.Initialize*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: WmiWebEventProvider.Initialize
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: WmiWebEventProvider.ProcessEvent
- uid: System.Web.Management.WmiWebEventProvider.Shutdown*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: WmiWebEventProvider.Shutdown
