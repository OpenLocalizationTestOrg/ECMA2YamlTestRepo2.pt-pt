### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.ModelItemCollection
  id: ModelItemCollection
  children:
  - System.Activities.Presentation.Model.ModelItemCollection.#ctor
  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.Clear
  - System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.Count
  - System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  - System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  - System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  - System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  - System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  - System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: ModelItemCollection
  nameWithType: ModelItemCollection
  fullName: System.Activities.Presentation.Model.ModelItemCollection
  type: Class
  summary: "Representa uma coleção de itens de modelo que pode ser acedida individualmente por índice."
  remarks: "Caso sejam feitas alterações à coleção de itens durante um âmbito de edição, tal como dentro de uma operação de arrastar e largar o <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A>propriedade não será atualizada até que o âmbito de edição seja concluída.</xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A>"
  syntax:
    content: 'public abstract class ModelItemCollection : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged'
  inheritance:
  - System.Object
  - System.Activities.Presentation.Model.ModelItem
  implements:
  - System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.IList
  - System.Collections.Specialized.INotifyCollectionChanged
  inheritedMembers:
  - System.Activities.Presentation.Model.ModelItem.Attributes
  - System.Activities.Presentation.Model.ModelItem.BeginEdit
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.Content
  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  - System.Activities.Presentation.Model.ModelItem.ItemType
  - System.Activities.Presentation.Model.ModelItem.Name
  - System.Activities.Presentation.Model.ModelItem.Parent
  - System.Activities.Presentation.Model.ModelItem.Parents
  - System.Activities.Presentation.Model.ModelItem.Properties
  - System.Activities.Presentation.Model.ModelItem.PropertyChanged
  - System.Activities.Presentation.Model.ModelItem.Root
  - System.Activities.Presentation.Model.ModelItem.Source
  - System.Activities.Presentation.Model.ModelItem.Sources
  - System.Activities.Presentation.Model.ModelItem.ToString
  - System.Activities.Presentation.Model.ModelItem.View
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: ModelItemCollection()
  nameWithType: ModelItemCollection.ModelItemCollection()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Cria uma nova instância do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: protected ModelItemCollection ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  id: Add(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Add(ModelItem)
  nameWithType: ModelItemCollection.Add(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Adiciona um item de modelo ao fim do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract void Add (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "O item de modelo para adicionar à coleção."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: ModelItemCollection.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Adiciona um item de modelo ao fim do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  remarks: "O objeto será armazenado como <xref:System.Activities.Presentation.Model.ModelItem>.</xref:System.Activities.Presentation.Model.ModelItem>"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto a adicionar à coleção."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <code>value</code> wrapped in a <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear
  id: Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ModelItemCollection.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Remove todos os elementos do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract void Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: ModelItemCollection.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ocorre quando a coleção é alterado."
  syntax:
    content: public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  id: Contains(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Contains(ModelItem)
  nameWithType: ModelItemCollection.Contains(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Determina se o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> contém o elemento especificado."
  syntax:
    content: public abstract bool Contains (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "O valor para localizar na coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> contém um elemento que tem o valor especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ModelItemCollection.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Determina se o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> contém o elemento especificado."
  syntax:
    content: public abstract bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O valor para localizar na coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> contém um elemento que tem o valor especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  id: CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: CopyTo(ModelItem[],Int32)
  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Copia os conteúdos da coleção para a matriz fornecida."
  syntax:
    content: public abstract void CopyTo (System.Activities.Presentation.Model.ModelItem[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Activities.Presentation.Model.ModelItem[]
      description: "A matriz de copiar a coleção para."
    - id: arrayIndex
      type: System.Int32
      description: "O índice na matriz para iniciar a cópia em."
  overload: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>arrayIndex</code>está fora do intervalo, ou não existe espaço suficiente na matriz para manter o conteúdo da coleção."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count
  id: Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: ModelItemCollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Devolve a contagem de itens na coleção."
  remarks: "Este valor não for atualizado durante um <xref:System.Activities.Presentation.EditingContext>sessão.</xref:System.Activities.Presentation.EditingContext> Se um objeto é adicionado o <xref:System.Activities.Presentation.Model.ModelItemCollection>durante uma sessão, o valor da contagem não será atualizado até a sessão sai.</xref:System.Activities.Presentation.Model.ModelItemCollection>"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "Devolve o <xref:System.Int32>contagem de itens na coleção.</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ModelItemCollection.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um enumerador que itera através de <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}
      description: "Devolve um &lt;xref:System.Collections.Generic.IEnumerator%601&gt; para o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  id: IndexOf(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IndexOf(ModelItem)
  nameWithType: ModelItemCollection.IndexOf(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Devolve o índice baseado em zero da primeira ocorrência de um valor de <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract int IndexOf (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "O objeto localizar na coleção."
    return:
      type: System.Int32
      description: "O índice baseado em zero da primeira ocorrência de <code> item </code> dentro de todo o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>, se encontrado; caso contrário, –1."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  id: Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Insert(Int32,ModelItem)
  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Insere um elemento para a <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> no índice especificado."
  syntax:
    content: public abstract void Insert (int index, System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero que `item` devem ser inseridos."
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "O item de modelo para inserir."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: ModelItemCollection.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Insere um elemento para a <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> no índice especificado."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero que `value` devem ser inseridos."
    - id: value
      type: System.Object
      description: "O objeto a inserir."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <code>value</code> wrapped in a <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um valor que indica se a coleção tem um tamanho fixo."
  remarks: "Devolve a implementação predefinida `true` se a coleção é só de leitura."
  syntax:
    content: protected virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção tem um tamanho fixo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um valor que indica se a coleção é só de leitura."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção não pode ser modificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um valor que indica se o acesso à coleção está sincronizado (seguros para threads)."
  syntax:
    content: protected virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso à coleção é sincronizado (seguros para threads); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ModelItemCollection.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém ou define o item no índice especificado na coleção."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da coleção."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  id: ItemProperty
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: ItemProperty
  nameWithType: ModelItemCollection.ItemProperty
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  type: Field
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Identifica a propriedade de dependência do Item."
  remarks: "A propriedade do Item representa todos os itens na coleção e está definida como tipo <xref:System.Activities.Presentation.Model.ModelItem>.</xref:System.Activities.Presentation.Model.ModelItem> A propriedade do Item aponta para o <xref:System.Activities.Presentation.Model.ModelItemCollection>propriamente dito.</xref:System.Activities.Presentation.Model.ModelItemCollection>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ItemProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  id: Move(System.Int32,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Move(Int32,Int32)
  nameWithType: ModelItemCollection.Move(Int32,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Move um item na coleção para um índice diferente."
  syntax:
    content: public abstract void Move (int fromIndex, int toIndex);
    parameters:
    - id: fromIndex
      type: System.Int32
      description: "O índice do item a ser movida antes da mudança."
    - id: toIndex
      type: System.Int32
      description: "O índice do item depois de esta ser movida."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Move*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O <code> fromIndex </code> ou <code> toIndex </code> é negativo ou maior que ou igual a <xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>.</xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  id: Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Remove(ModelItem)
  nameWithType: ModelItemCollection.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Remove o <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> da coleção."
  syntax:
    content: public abstract bool Remove (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "The <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> foi removido da coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ModelItemCollection.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Remove o valor da coleção."
  syntax:
    content: public abstract bool Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor foi removido da coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ModelItemCollection.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Remove o item no índice especificado."
  syntax:
    content: public abstract void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do item."
  overload: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um objeto que pode ser utilizado para sincronizar o acesso à coleção."
  syntax:
    content: protected virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "Devolve um <xref:System.Object>.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Copia os elementos do <xref:System.Collections.ICollection>para um <xref:System.Array>, começando num determinado <xref:System.Array>índice.</xref:System.Array> </xref:System.Array> </xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Unidimensional <xref:System.Array>que é o destino dos elementos copiados <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Array> O <xref:System.Array>tem de ter a indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice baseado em zero `array` em que copiar começa."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém o número de elementos contidos na coleção."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Devolve um <xref:System.Int32>valor que é o número de elementos contidos na coleção.</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "O número de elementos contidos no <xref:System.Collections.ICollection>é sincronizado (seguros para threads).</xref:System.Collections.ICollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso à <xref:System.Collections.ICollection>é sincronizado (seguros para threads); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um objeto que pode ser utilizado para sincronizar o acesso ao <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Devolve um <xref:System.Object>que podem ser utilizados para sincronizar o acesso ao <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Devolve um enumerador que itera através de uma coleção."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Devolve um <xref:System.Collections.IEnumerator>que podem ser utilizados para iterar através da coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Adiciona um item de modelo ao fim do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto a adicionar à coleção."
    return:
      type: System.Int32
      description: "Devolve o índice do objeto adicionado recentemente."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ModelItemCollection.System.Collections.IList.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Remove todos os itens <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Determina se o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> contém o elemento especificado."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto localizar no <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> contém um elemento que tem o valor especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Determina o índice de um item específico no <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Localizar no <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Int32
      description: "Devolve o <xref:System.Int32>índice da <code> value </code> se encontrado na lista; caso contrário, -1.</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Insere um elemento para a <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> no índice especificado."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero que `value` devem ser inseridos."
    - id: value
      type: System.Object
      description: "O objeto a inserir."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um valor que indica se o <xref:System.Collections.IList>tem um tamanho fixo.</xref:System.Collections.IList>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Collections.IList>tem fixa tamanho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um valor que indica se o <xref:System.Collections.IList>é só de leitura.</xref:System.Collections.IList>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Collections.IList>é só de leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém ou define o elemento no índice especificado."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero do elemento para obter ou definir."
    return:
      type: System.Object
      description: "O elemento no índice especificado."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Remove a primeira ocorrência de um objeto específico da <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  remarks: "Em coleções de elementos contíguas, tais como listas, os elementos que se seguem o elemento removido mover para cima para ocupam o vacated lugar para cima. Se a coleção está indexada, os índices de elementos que são movidos também são atualizados. Este comportamento não é aplicável a coleções onde os elementos são, essencialmente, agrupados em registos, tais como uma tabela hash. Se `value` não se encontra no <xref:System.Collections.IList>, a <xref:System.Collections.IList>permanecem inalterados e sem exceção é emitida.</xref:System.Collections.IList> </xref:System.Collections.IList>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para remover <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Remove o <xref:System.Collections.IList>item no índice especificado.</xref:System.Collections.IList>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero do item a remover."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: System.Activities.Presentation.Model.ModelItem
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ModelItemCollection()
  nameWithType: ModelItemCollection.ModelItemCollection()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add(ModelItem)
  nameWithType: ModelItemCollection.Add(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add(Object)
  nameWithType: ModelItemCollection.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Clear()
  nameWithType: ModelItemCollection.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()
- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: ModelItemCollection.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains(ModelItem)
  nameWithType: ModelItemCollection.Contains(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: ModelItemCollection.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CopyTo(ModelItem[],Int32)
  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)
- uid: System.Activities.Presentation.Model.ModelItem[]
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem[]
  spec.csharp:
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Count
  nameWithType: ModelItemCollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ModelItemCollection.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ModelItem>
  nameWithType: IEnumerator<ModelItem>
  fullName: System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IndexOf(ModelItem)
  nameWithType: ModelItemCollection.IndexOf(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert(Int32,ModelItem)
  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: ModelItemCollection.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ModelItemCollection.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ItemProperty
  nameWithType: ModelItemCollection.ItemProperty
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Move(Int32,Int32)
  nameWithType: ModelItemCollection.Move(Int32,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove(ModelItem)
  nameWithType: ModelItemCollection.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: ModelItemCollection.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ModelItemCollection.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ModelItemCollection.System.Collections.IList.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ModelItemCollection
  nameWithType: ModelItemCollection.ModelItemCollection
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add
  nameWithType: ModelItemCollection.Add
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Clear
  nameWithType: ModelItemCollection.Clear
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains
  nameWithType: ModelItemCollection.Contains
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: ModelItemCollection.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Count
  nameWithType: ModelItemCollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ModelItemCollection.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IndexOf
  nameWithType: ModelItemCollection.IndexOf
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert
  nameWithType: ModelItemCollection.Insert
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Item
  nameWithType: ModelItemCollection.Item
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Move
  nameWithType: ModelItemCollection.Move
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove
  nameWithType: ModelItemCollection.Remove
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ModelItemCollection.RemoveAt
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ModelItemCollection.System.Collections.IList.Add
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ModelItemCollection.System.Collections.IList.Clear
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ModelItemCollection.System.Collections.IList.Contains
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ModelItemCollection.System.Collections.IList.Insert
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ModelItemCollection.System.Collections.IList.Item
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ModelItemCollection.System.Collections.IList.Remove
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt
