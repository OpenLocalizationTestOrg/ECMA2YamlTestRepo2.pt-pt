### YamlMime:ManagedReference
items:
- uid: System.Messaging.IMessageFormatter
  id: IMessageFormatter
  children:
  - System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.IMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: IMessageFormatter
  nameWithType: IMessageFormatter
  fullName: System.Messaging.IMessageFormatter
  type: Interface
  summary: "Serializa ou deserializes objetos a partir do corpo de uma mensagem de colocação de mensagens em fila."
  remarks: "Quando uma aplicação envia uma mensagem para a fila utilizando uma instância do <xref:System.Messaging.MessageQueue>classe, o formatador serializa o objeto (que pode ser uma instância de qualquer classe) para uma transmissão em fluxo e insere-lo no corpo da mensagem.</xref:System.Messaging.MessageQueue> Ao ler a partir de uma fila utilizando um <xref:System.Messaging.MessageQueue>o formatador deserializes os dados da mensagem para a <xref:System.Messaging.Message.Body%2A>propriedade de <xref:System.Messaging.Message>.</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> </xref:System.Messaging.MessageQueue>       <xref:System.Messaging.BinaryMessageFormatter>e <xref:System.Messaging.ActiveXMessageFormatter>forneça o débito mais rápido do que o <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> </xref:System.Messaging.ActiveXMessageFormatter></xref:System.Messaging.BinaryMessageFormatter> O <xref:System.Messaging.ActiveXMessageFormatter>permite a interoperabilidade com aplicações de colocação de mensagens do Visual Basic 6.0.</xref:System.Messaging.ActiveXMessageFormatter> O <xref:System.Messaging.XmlMessageFormatter>é aproximadamente ligado essenciais, o que significa que o servidor e o cliente podem versão o tipo que seja enviado e recebido de forma independente.</xref:System.Messaging.XmlMessageFormatter>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))]

      public interface IMessageFormatter : ICloneable
  implements:
  - System.ICloneable
  platform:
  - net462
- uid: System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: IMessageFormatter.CanRead(Message)
  fullName: System.Messaging.IMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Quando implementada numa classe, determina se o formatador pode anular a serialização o conteúdo da mensagem."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "O <xref href=&quot;System.Messaging.Message&quot;> </xref> inspecionar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o formatador pode anular a serialização da mensagem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.IMessageFormatter.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.IMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: IMessageFormatter.Read(Message)
  fullName: System.Messaging.IMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Quando implementada numa classe, lê o conteúdo da mensagem especificada e cria um objeto que contém os dados da mensagem."
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "O <xref href=&quot;System.Messaging.Message&quot;> </xref> para anular a serialização."
    return:
      type: System.Object
      description: "A mensagem de serialização anulada."
  overload: System.Messaging.IMessageFormatter.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.IMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: IMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.IMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Quando implementada numa classe, serializa um objeto para o corpo da mensagem."
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "O <xref href=&quot;System.Messaging.Message&quot;> </xref> que irá conter o objeto serializado."
    - id: obj
      type: System.Object
      description: "O objeto a ser serializado para a mensagem."
  overload: System.Messaging.IMessageFormatter.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: IMessageFormatter.CanRead(Message)
  fullName: System.Messaging.IMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.IMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: IMessageFormatter.Read(Message)
  fullName: System.Messaging.IMessageFormatter.Read(Message)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: IMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.IMessageFormatter.Write(Message,Object)
- uid: System.Messaging.IMessageFormatter.CanRead*
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: IMessageFormatter.CanRead
- uid: System.Messaging.IMessageFormatter.Read*
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Read
  nameWithType: IMessageFormatter.Read
- uid: System.Messaging.IMessageFormatter.Write*
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Write
  nameWithType: IMessageFormatter.Write
