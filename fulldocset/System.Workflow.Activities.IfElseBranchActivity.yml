### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.IfElseBranchActivity
  id: IfElseBranchActivity
  children:
  - System.Workflow.Activities.IfElseBranchActivity.#ctor
  - System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)
  - System.Workflow.Activities.IfElseBranchActivity.Condition
  - System.Workflow.Activities.IfElseBranchActivity.ConditionProperty
  langs:
  - csharp
  name: IfElseBranchActivity
  nameWithType: IfElseBranchActivity
  fullName: System.Workflow.Activities.IfElseBranchActivity
  type: Class
  summary: "Represents a branch of an <xref href=&quot;System.Workflow.Activities.IfElseActivity&quot;></xref>. This class cannot be inherited."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The <xref:System.Workflow.ComponentModel.ActivityCondition> of each branch is determined before the branch is run. The first IfElseBranchActivity in the <xref:System.Workflow.Activities.IfElseActivity> that evaluates to `true` is run."
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.IfElseBranchDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.IfElseBranchActivity), "Resources.DecisionBranch.bmp")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.IfElseBranchValidator))]

      public sealed class IfElseBranchActivity : System.Workflow.Activities.SequenceActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements: []
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.IfElseBranchActivity
  langs:
  - csharp
  name: IfElseBranchActivity()
  nameWithType: IfElseBranchActivity.IfElseBranchActivity()
  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.IfElseBranchActivity&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example shows how to create two new instances of the <xref:System.Workflow.Activities.IfElseBranchActivity> class.  This code example is part of the Compensation SDK Sample from the PurchaseOrder.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Compensation](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \n  \n [!code-cs[wf_samples#38](~/add/codesnippet/csharp/wf_snippets/snippets.cs#38)]\n [!code-vb[wf_samples#38](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#38)]"
  syntax:
    content: public IfElseBranchActivity ();
    parameters: []
  overload: System.Workflow.Activities.IfElseBranchActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.IfElseBranchActivity
  langs:
  - csharp
  name: IfElseBranchActivity(String)
  nameWithType: IfElseBranchActivity.IfElseBranchActivity(String)
  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.IfElseBranchActivity&quot;></xref> class using the name of the activity."
  syntax:
    content: public IfElseBranchActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "The user-defined name of the activity."
  overload: System.Workflow.Activities.IfElseBranchActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.IfElseBranchActivity.Condition
  id: Condition
  parent: System.Workflow.Activities.IfElseBranchActivity
  langs:
  - csharp
  name: Condition
  nameWithType: IfElseBranchActivity.Condition
  fullName: System.Workflow.Activities.IfElseBranchActivity.Condition
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets or sets an <xref href=&quot;System.Workflow.ComponentModel.ActivityCondition&quot;></xref> object reference for the current branch activity. The evaluation of this condition returns a value that indicates whether this branch should be run."
  remarks: "This property is optional on the last <xref:System.Workflow.Activities.IfElseBranchActivity> in the <xref:System.Workflow.Activities.IfElseActivity> and required in other cases."
  example:
  - "The following code example shows how to set the Condition property. This code assumes that `Available` is of type <xref:System.Workflow.Activities.IfElseBranchActivity>. This code example is part of the Compensation SDK Sample from the PurchaseOrder.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Compensation](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \n  \n [!code-cs[wf_samples#39](~/add/codesnippet/csharp/wf_snippets/snippets.cs#39)]\n [!code-vb[wf_samples#39](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#39)]"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityCondition Condition { get; set; }
    return:
      type: System.Workflow.ComponentModel.ActivityCondition
      description: "An <xref href=&quot;System.Workflow.ComponentModel.ActivityCondition&quot;></xref> that returns a value that indicates whether this branch should be run."
  overload: System.Workflow.Activities.IfElseBranchActivity.Condition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty
  id: ConditionProperty
  parent: System.Workflow.Activities.IfElseBranchActivity
  langs:
  - csharp
  name: ConditionProperty
  nameWithType: IfElseBranchActivity.ConditionProperty
  fullName: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Represents the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> that targets the <xref:System.Workflow.Activities.IfElseBranchActivity.Condition*> property."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor
  parent: System.Workflow.Activities.IfElseBranchActivity
  isExternal: false
  name: IfElseBranchActivity()
  nameWithType: IfElseBranchActivity.IfElseBranchActivity()
  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity()
- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)
  parent: System.Workflow.Activities.IfElseBranchActivity
  isExternal: false
  name: IfElseBranchActivity(String)
  nameWithType: IfElseBranchActivity.IfElseBranchActivity(String)
  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.IfElseBranchActivity.Condition
  parent: System.Workflow.Activities.IfElseBranchActivity
  isExternal: false
  name: Condition
  nameWithType: IfElseBranchActivity.Condition
  fullName: System.Workflow.Activities.IfElseBranchActivity.Condition
- uid: System.Workflow.ComponentModel.ActivityCondition
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCondition
  nameWithType: ActivityCondition
  fullName: System.Workflow.ComponentModel.ActivityCondition
- uid: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty
  parent: System.Workflow.Activities.IfElseBranchActivity
  isExternal: false
  name: ConditionProperty
  nameWithType: IfElseBranchActivity.ConditionProperty
  fullName: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor*
  parent: System.Workflow.Activities.IfElseBranchActivity
  isExternal: false
  name: IfElseBranchActivity
  nameWithType: IfElseBranchActivity.IfElseBranchActivity
- uid: System.Workflow.Activities.IfElseBranchActivity.Condition*
  parent: System.Workflow.Activities.IfElseBranchActivity
  isExternal: false
  name: Condition
  nameWithType: IfElseBranchActivity.Condition
