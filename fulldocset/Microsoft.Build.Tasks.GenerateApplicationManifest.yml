### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest
  id: GenerateApplicationManifest
  children:
  - Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  - Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  - Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType
  - Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  - Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  - Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  - Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  - Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  - Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  - Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  - Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  - Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  - Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  - Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  - Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  - Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs
  langs:
  - csharp
  name: GenerateApplicationManifest
  nameWithType: GenerateApplicationManifest
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest
  type: Class
  summary: "Implements the `GenerateApplicationManifest` task. Use the `GenerateApplicationManifest` element in the project file to create and execute this task. For usage and parameter information, see [GenerateApplicationManifest Task](~/add/includes/ajax-current-ext-md.md)."
  remarks: "`EntryPoint` is an optional <xref:Microsoft.Build.Framework.ITaskItem>`[]` parameter that indicates the entry point for the generated manifest assembly. For a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] deployment manifest, this input specifies the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application manifest.  \n  \n In [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], the [GenerateApplicationManifest Task](../Topic/GenerateApplicationManifest%20Task.md) requires an `EntryPoint` when an application manifest is generated. (Assembly or native manifests do not require an `EntryPoint`.) This requirement is enforced by the build error \"MSB3185: EntryPoint not specified for manifest.\"  \n  \n In [!INCLUDE[vs_orcas_long](~/add/includes/vs-orcas-long-md.md)], [!INCLUDE[vstecmsbuild](~/add/includes/vstecmsbuild-md.md)] does not issue this error when the `EntryPoint` task parameter is not specified. Instead, the \\<customHostSpecified> tag is inserted as a child of the \\<entryPoint> tag, for example, as follows.  \n  \n```  \n<entryPoint xmlns=\"urn:schemas-   \n  microsoft-com:asm.v2\">  \n    <co.v1:customHostSpecified />  \n</entryPoint>  \n```  \n  \n You can add DLL dependencies to the application manifest by using the following steps:  \n  \n1.  Resolve the references in the assembly by using a call to <xref:Microsoft.Build.Tasks.ResolveAssemblyReference>.  \n  \n2.  Pass the output of the previous task and the assembly itself to <xref:Microsoft.Build.Tasks.ResolveManifestFiles>.  \n  \n3.  Pass the dependencies by using the `Dependencies` parameter to GenerateApplicationManifest."
  syntax:
    content: 'public sealed class GenerateApplicationManifest : Microsoft.Build.Tasks.GenerateManifestBase'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.GenerateManifestBase
  implements: []
  inheritedMembers:
  - Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyFromItem(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyNameFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)
  - Microsoft.Build.Tasks.GenerateManifestBase.AddEntryPointFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)
  - Microsoft.Build.Tasks.GenerateManifestBase.AddFileFromItem(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName
  - Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion
  - Microsoft.Build.Tasks.GenerateManifestBase.Description
  - Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint
  - Microsoft.Build.Tasks.GenerateManifestBase.Execute
  - Microsoft.Build.Tasks.GenerateManifestBase.FindFileFromItem(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Tasks.GenerateManifestBase.InputManifest
  - Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath
  - Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest
  - Microsoft.Build.Tasks.GenerateManifestBase.Platform
  - Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture
  - Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker
  - Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion
  - Microsoft.Build.Tasks.GenerateManifestBase.ValidateOutput
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.Log
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: GenerateApplicationManifest()
  nameWithType: GenerateApplicationManifest.GenerateApplicationManifest()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GenerateApplicationManifest()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Build.Tasks.GenerateApplicationManifest&quot;></xref> class."
  syntax:
    content: public GenerateApplicationManifest ();
    parameters: []
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  id: ClrVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ClrVersion
  nameWithType: GenerateApplicationManifest.ClrVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the minimum version of the Common Language Runtime (CLR) required by the application."
  remarks: "By default, the value is the CLR version in use by the build system. If the task is generating a native manifest, this property is ignored."
  syntax:
    content: public string ClrVersion { get; set; }
    return:
      type: System.String
      description: "The minimum version of the CLR required by the application."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  id: ConfigFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ConfigFile
  nameWithType: GenerateApplicationManifest.ConfigFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the task item that contains the application configuration file."
  remarks: "If the task is generating a native manifest, this property is ignored."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem ConfigFile { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "The task item that contains the application configuration file."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  id: Dependencies
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Dependencies
  nameWithType: GenerateApplicationManifest.Dependencies
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets an item list that defines the set of dependent assemblies for the generated manifest."
  remarks: "Each item may be further described by item metadata to indicate additional deployment state and the kind of dependence."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] Dependencies { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "An item list of dependent assembly names."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  id: ErrorReportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ErrorReportUrl
  nameWithType: GenerateApplicationManifest.ErrorReportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the URL of the Web page that is displayed in dialog boxes during ClickOnce installations."
  remarks: "Specifies a Web page to be displayed in dialog boxes that are displayed during ClickOnce installations."
  syntax:
    content: public string ErrorReportUrl { get; set; }
    return:
      type: System.String
      description: "A string value that represents the URL of a Web page."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  id: FileAssociations
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: FileAssociations
  nameWithType: GenerateApplicationManifest.FileAssociations
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets a list of one or more file type that are associated with the ClickOnce deployment manifest. File associations only valid only when [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 3.5 or later is targeted."
  remarks: "File types can be custom. The following is an example of a [\\<fileAssociation> Element (ClickOnce Application)](../Topic/%3CfileAssociation%3E%20Element%20\\(ClickOnce%20Application\\).md):  \n  \n```  \n<FileAssociation Include=\".nyt\">  \n    <ProgId>NewYorkTimes.Document</ProgId>  \n    <DefaultIcon>nyt.ico</DefaultIcon>  \n    <Description>New York Times Reader document</Description>  \n</FileAssociation>  \n```"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] FileAssociations { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "A list of file types that are associated with the generated manifest."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  id: Files
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Files
  nameWithType: GenerateApplicationManifest.Files
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the full paths of files to include in the manifest."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] Files { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Paths to files that are included in the manifest."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Files*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType
  id: GetObjectType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: GetObjectType()
  nameWithType: GenerateApplicationManifest.GetObjectType()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override Type GetObjectType ();
    parameters: []
    return:
      type: System.Type
      description: "To be added."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  id: HostInBrowser
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: HostInBrowser
  nameWithType: GenerateApplicationManifest.HostInBrowser
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets whether the application is hosted in a browser (as are WPF Web Browser Applications)."
  remarks: "For project types other than WPF Web Browser Applications, set HostInBrowser to `false` (the default value).       When you deploy a WPF Web Browser Application, you must set the HostInBrowser property to `true`. This causes the `<hostInBrowser>` tag to be added to the generated application manifest, enabling ClickOnce to deploy projects for browser-hosted applications, which contain .xbap files.       You also have to make the application available online only by setting <xref:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install%2A> to `false`. If this condition is not met, you will receive [MSBuild Error MSB3116](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool HostInBrowser { get; set; }
    return:
      type: System.Boolean
      description: "A Boolean value that indicates whether the application being deployed will be hosted in a browser (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>), or not (<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>). <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> only applies to WPF Web Browser Applications."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  id: IconFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: IconFile
  nameWithType: GenerateApplicationManifest.IconFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the application&quot;s icon file."
  remarks: "The application icon is expressed in the generated application manifest and is used on the **Start** menu and in the **Uninstall or change a program** dialog box. If this input is not specified, a default icon is used. If the task is generating a native manifest, this property is ignored."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem IconFile { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "The icon file to use for the application."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  id: IsolatedComReferences
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: IsolatedComReferences
  nameWithType: GenerateApplicationManifest.IsolatedComReferences
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets COM components to isolate in the generated manifest."
  remarks: "This property lets you isolate COM components for &quot;Registration Free COM&quot; deployment. It works by auto-generating a manifest that has standard COM registration definitions. The COM components must be registered on the build computer."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] IsolatedComReferences { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The COM components to isolate in the generated manifest."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  id: ManifestType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ManifestType
  nameWithType: GenerateApplicationManifest.ManifestType
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the type of manifest to generate."
  remarks: "This property can have the following values:      -   `Native`      -   `ClickOnce`       If this property is not specified, the task defaults to `ClickOnce`."
  syntax:
    content: public string ManifestType { get; set; }
    return:
      type: System.String
      description: "The kind of manifest to generate."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  id: OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: OnManifestLoaded(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestLoaded(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Manifest)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override bool OnManifestLoaded (Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest);
    parameters:
    - id: manifest
      type: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  id: OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: OnManifestResolved(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestResolved(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Manifest)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override bool OnManifestResolved (Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest);
    parameters:
    - id: manifest
      type: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  id: OSVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: OSVersion
  nameWithType: GenerateApplicationManifest.OSVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the operating system (OS) version that is the minimum required by the application."
  remarks: "For example, the value &quot;5.1.2600.0&quot; indicates that the operating system is Windows XP. If this property is not specified, the value &quot;4.10.0.0&quot; is used. This indicates Windows 98 Second Edition, which is the minimum supported operating system for the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].       If the task is generating a native manifest, this input is ignored."
  syntax:
    content: public string OSVersion { get; set; }
    return:
      type: System.String
      description: "The OS version that is the minimum required by the application."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  id: Product
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Product
  nameWithType: GenerateApplicationManifest.Product
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Specifies the `ProductName` property in the project file."
  remarks: "This property corresponds to the `ProductName` property in the project file. The default value is `null`. If `ProductName` is null and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `true`, the RegisteredOrganization value in the registry is written to the application manifest. If RegisteredOrganization is also null, the assembly name is used."
  syntax:
    content: public string Product { get; set; }
    return:
      type: System.String
      description: "A string value that corresponds to the `ProductName` property in the project file."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Product*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  id: Publisher
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: Publisher
  nameWithType: GenerateApplicationManifest.Publisher
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Specifies the `PublisherName` property in the project file."
  remarks: "This property corresponds to the `PublisherName` property in the project file. The default value is `null`. If `PublisherName` is null and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `true`, the assembly name is written to the application manifest."
  syntax:
    content: public string Publisher { get; set; }
    return:
      type: System.String
      description: "A string value that corresponds to the `PublisherName` property in the project file."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  id: RequiresMinimumFramework35SP1
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: RequiresMinimumFramework35SP1
  nameWithType: GenerateApplicationManifest.RequiresMinimumFramework35SP1
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets whether the application requires the .NET Framework 3.5 SP1."
  syntax:
    content: public bool RequiresMinimumFramework35SP1 { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the application requires .NET Framework 3.5 SP1; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> otherwise."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  id: SuiteName
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: SuiteName
  nameWithType: GenerateApplicationManifest.SuiteName
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the name of the folder on the **Start** menu where the application is located after ClickOnce deployment."
  syntax:
    content: public string SuiteName { get; set; }
    return:
      type: System.String
      description: "A string that represents the name of a **Start** menu folder."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  id: SupportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: SupportUrl
  nameWithType: GenerateApplicationManifest.SupportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Specifies the `SupportUrl` property in the project file."
  remarks: "This property corresponds to the `SupportUrl` property in the project file. The default value is **null**. If `SupportUrl` is null and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `true`, an empty string is written to the application manifest."
  syntax:
    content: public string SupportUrl { get; set; }
    return:
      type: System.String
      description: "A string value that corresponds to the `SupportUrl` property in the project file."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  id: TargetFrameworkProfile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: TargetFrameworkProfile
  nameWithType: GenerateApplicationManifest.TargetFrameworkProfile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the target framework profile."
  syntax:
    content: public string TargetFrameworkProfile { get; set; }
    return:
      type: System.String
      description: "Returns the target framework profile."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  id: TargetFrameworkSubset
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: TargetFrameworkSubset
  nameWithType: GenerateApplicationManifest.TargetFrameworkSubset
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the name of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] subset to target."
  syntax:
    content: public string TargetFrameworkSubset { get; set; }
    return:
      type: System.String
      description: "The name of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] subset."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  id: TrustInfoFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: TrustInfoFile
  nameWithType: GenerateApplicationManifest.TrustInfoFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets an XML document that specifies the application security."
  remarks: "The root element in the XML document must be a trustInfo node in the asm.v2 namespace. If the task is generating a native manifest, this property is ignored."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem TrustInfoFile { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "The XML document that specifies the application security."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  id: UseApplicationTrust
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: UseApplicationTrust
  nameWithType: GenerateApplicationManifest.UseApplicationTrust
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Specifies whether the <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Product*>, <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher*>, and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*> properties are written to the application manifest."
  remarks: "The <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Product%2A>, <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher%2A>, and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl%2A> properties default to `null`. These properties are only used if UseApplicationTrust is `true`; if so, the values of these properties are written to the corresponding tags in the application manifest.       If UseApplicationTrust is `false` (the default value), these properties are ignored."
  syntax:
    content: public bool UseApplicationTrust { get; set; }
    return:
      type: System.Boolean
      description: "A Boolean value that indicates whether the <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Product*>, <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher*>, and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*> properties are written to the application manifest (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>). If the value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, these properties are ignored."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs
  id: ValidateInputs
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  langs:
  - csharp
  name: ValidateInputs()
  nameWithType: GenerateApplicationManifest.ValidateInputs()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  syntax:
    content: protected override bool ValidateInputs ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.GenerateManifestBase
  isExternal: false
  name: Microsoft.Build.Tasks.GenerateManifestBase
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GenerateApplicationManifest()
  nameWithType: GenerateApplicationManifest.GenerateApplicationManifest()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GenerateApplicationManifest()
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ClrVersion
  nameWithType: GenerateApplicationManifest.ClrVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ConfigFile
  nameWithType: GenerateApplicationManifest.ConfigFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Dependencies
  nameWithType: GenerateApplicationManifest.Dependencies
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ErrorReportUrl
  nameWithType: GenerateApplicationManifest.ErrorReportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: FileAssociations
  nameWithType: GenerateApplicationManifest.FileAssociations
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Files
  nameWithType: GenerateApplicationManifest.Files
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Files
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GetObjectType()
  nameWithType: GenerateApplicationManifest.GetObjectType()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: HostInBrowser
  nameWithType: GenerateApplicationManifest.HostInBrowser
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IconFile
  nameWithType: GenerateApplicationManifest.IconFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IsolatedComReferences
  nameWithType: GenerateApplicationManifest.IsolatedComReferences
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ManifestType
  nameWithType: GenerateApplicationManifest.ManifestType
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestLoaded(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestLoaded(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Manifest)
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  isExternal: false
  name: Manifest
  nameWithType: Manifest
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestResolved(Manifest)
  nameWithType: GenerateApplicationManifest.OnManifestResolved(Manifest)
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Manifest)
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OSVersion
  nameWithType: GenerateApplicationManifest.OSVersion
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Product
  nameWithType: GenerateApplicationManifest.Product
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Product
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Publisher
  nameWithType: GenerateApplicationManifest.Publisher
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: RequiresMinimumFramework35SP1
  nameWithType: GenerateApplicationManifest.RequiresMinimumFramework35SP1
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SuiteName
  nameWithType: GenerateApplicationManifest.SuiteName
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SupportUrl
  nameWithType: GenerateApplicationManifest.SupportUrl
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkProfile
  nameWithType: GenerateApplicationManifest.TargetFrameworkProfile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkSubset
  nameWithType: GenerateApplicationManifest.TargetFrameworkSubset
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TrustInfoFile
  nameWithType: GenerateApplicationManifest.TrustInfoFile
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: UseApplicationTrust
  nameWithType: GenerateApplicationManifest.UseApplicationTrust
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ValidateInputs()
  nameWithType: GenerateApplicationManifest.ValidateInputs()
  fullName: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs()
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GenerateApplicationManifest
  nameWithType: GenerateApplicationManifest.GenerateApplicationManifest
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ClrVersion
  nameWithType: GenerateApplicationManifest.ClrVersion
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ConfigFile
  nameWithType: GenerateApplicationManifest.ConfigFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Dependencies
  nameWithType: GenerateApplicationManifest.Dependencies
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ErrorReportUrl
  nameWithType: GenerateApplicationManifest.ErrorReportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: FileAssociations
  nameWithType: GenerateApplicationManifest.FileAssociations
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Files*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Files
  nameWithType: GenerateApplicationManifest.Files
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: GetObjectType
  nameWithType: GenerateApplicationManifest.GetObjectType
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: HostInBrowser
  nameWithType: GenerateApplicationManifest.HostInBrowser
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IconFile
  nameWithType: GenerateApplicationManifest.IconFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: IsolatedComReferences
  nameWithType: GenerateApplicationManifest.IsolatedComReferences
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ManifestType
  nameWithType: GenerateApplicationManifest.ManifestType
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestLoaded
  nameWithType: GenerateApplicationManifest.OnManifestLoaded
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OnManifestResolved
  nameWithType: GenerateApplicationManifest.OnManifestResolved
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: OSVersion
  nameWithType: GenerateApplicationManifest.OSVersion
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Product*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Product
  nameWithType: GenerateApplicationManifest.Product
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: Publisher
  nameWithType: GenerateApplicationManifest.Publisher
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: RequiresMinimumFramework35SP1
  nameWithType: GenerateApplicationManifest.RequiresMinimumFramework35SP1
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SuiteName
  nameWithType: GenerateApplicationManifest.SuiteName
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: SupportUrl
  nameWithType: GenerateApplicationManifest.SupportUrl
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkProfile
  nameWithType: GenerateApplicationManifest.TargetFrameworkProfile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TargetFrameworkSubset
  nameWithType: GenerateApplicationManifest.TargetFrameworkSubset
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: TrustInfoFile
  nameWithType: GenerateApplicationManifest.TrustInfoFile
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: UseApplicationTrust
  nameWithType: GenerateApplicationManifest.UseApplicationTrust
- uid: Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs*
  parent: Microsoft.Build.Tasks.GenerateApplicationManifest
  isExternal: false
  name: ValidateInputs
  nameWithType: GenerateApplicationManifest.ValidateInputs
