### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.WindowPattern
  id: WindowPattern
  children:
  - System.Windows.Automation.WindowPattern.Cached
  - System.Windows.Automation.WindowPattern.CanMaximizeProperty
  - System.Windows.Automation.WindowPattern.CanMinimizeProperty
  - System.Windows.Automation.WindowPattern.Close
  - System.Windows.Automation.WindowPattern.Current
  - System.Windows.Automation.WindowPattern.IsModalProperty
  - System.Windows.Automation.WindowPattern.IsTopmostProperty
  - System.Windows.Automation.WindowPattern.Pattern
  - System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)
  - System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)
  - System.Windows.Automation.WindowPattern.WindowClosedEvent
  - System.Windows.Automation.WindowPattern.WindowInteractionStateProperty
  - System.Windows.Automation.WindowPattern.WindowOpenedEvent
  - System.Windows.Automation.WindowPattern.WindowVisualStateProperty
  langs:
  - csharp
  name: WindowPattern
  nameWithType: WindowPattern
  fullName: System.Windows.Automation.WindowPattern
  type: Class
  summary: "Represents a control that provides fundamental window-based functionality within a traditional graphical user interface (GUI)."
  remarks: "Examples of controls that support this control pattern include top-level application windows, [!INCLUDE[TLA#tla_mdi](~/add/includes/tlasharptla-mdi-md.md)] child windows, modal dialogs and balloon help windows."
  syntax:
    content: 'public class WindowPattern : System.Windows.Automation.BasePattern'
  inheritance:
  - System.Object
  - System.Windows.Automation.BasePattern
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.Cached
  id: Cached
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: Cached
  nameWithType: WindowPattern.Cached
  fullName: System.Windows.Automation.WindowPattern.Cached
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Gets the cached [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for this <xref href=&quot;System.Windows.Automation.WindowPattern&quot;></xref>."
  remarks: "Cached property values must have been previously requested using a <xref:System.Windows.Automation.CacheRequest>. Use <xref:System.Windows.Automation.WindowPattern.Current%2A> to get the current value of a property.       For information on the properties available and their use, see <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>."
  syntax:
    content: public System.Windows.Automation.WindowPattern.WindowPatternInformation Cached { get; }
    return:
      type: System.Windows.Automation.WindowPattern.WindowPatternInformation
      description: "A structure containing the cached [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for the control pattern."
  overload: System.Windows.Automation.WindowPattern.Cached*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The requested property is not in the cache."
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.CanMaximizeProperty
  id: CanMaximizeProperty
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: CanMaximizeProperty
  nameWithType: WindowPattern.CanMaximizeProperty
  fullName: System.Windows.Automation.WindowPattern.CanMaximizeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize*> property."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-vb[UIAWindowPattern_snip#100](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#100)]\n [!code-cs[UIAWindowPattern_snip#100](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CanMaximizeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.CanMinimizeProperty
  id: CanMinimizeProperty
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: CanMinimizeProperty
  nameWithType: WindowPattern.CanMinimizeProperty
  fullName: System.Windows.Automation.WindowPattern.CanMinimizeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize*> property."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-vb[UIAWindowPattern_snip#100](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#100)]\n [!code-cs[UIAWindowPattern_snip#100](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CanMinimizeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.Close
  id: Close
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: Close()
  nameWithType: WindowPattern.Close()
  fullName: System.Windows.Automation.WindowPattern.Close()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Attempts to close the current window."
  remarks: "When called on a split pane control, this method will close the pane and remove the associated split. This method may also close all other panes depending on implementation."
  example:
  - "In the following example, a <xref:System.Windows.Automation.WindowPattern>control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and is subsequently used to close the <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAWindowPattern_snip#101](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#101)]\n [!code-cs[UIAWindowPattern_snip#101](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#101)]  \n[!code-vb[UIAWindowPattern_snip#102](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#102)]\n[!code-cs[UIAWindowPattern_snip#102](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#102)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Automation.WindowPattern.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The control is unable to perform the requested action."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "When the control is no longer available."
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.Current
  id: Current
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: Current
  nameWithType: WindowPattern.Current
  fullName: System.Windows.Automation.WindowPattern.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Gets the current [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for this <xref href=&quot;System.Windows.Automation.WindowPattern&quot;></xref>."
  remarks: "This pattern must be from an <xref:System.Windows.Automation.AutomationElement> with an <xref:System.Windows.Automation.AutomationElementMode> reference in order to get current values. If the <xref:System.Windows.Automation.AutomationElement> was obtained using <xref:System.Windows.Automation.AutomationElementMode>, it contains only cached data, and attempting to get the current value of any property raises an exception. Use <xref:System.Windows.Automation.WindowPattern.Cached%2A> to get the cached value of a property that was previously specified using a <xref:System.Windows.Automation.CacheRequest>.       For information on the properties available and their use, see <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>."
  syntax:
    content: public System.Windows.Automation.WindowPattern.WindowPatternInformation Current { get; }
    return:
      type: System.Windows.Automation.WindowPattern.WindowPatternInformation
      description: "A structure containing the current [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for the control pattern."
  overload: System.Windows.Automation.WindowPattern.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.IsModalProperty
  id: IsModalProperty
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: IsModalProperty
  nameWithType: WindowPattern.IsModalProperty
  fullName: System.Windows.Automation.WindowPattern.IsModalProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal*> property."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-vb[UIAWindowPattern_snip#100](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#100)]\n [!code-cs[UIAWindowPattern_snip#100](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsModalProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.IsTopmostProperty
  id: IsTopmostProperty
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: IsTopmostProperty
  nameWithType: WindowPattern.IsTopmostProperty
  fullName: System.Windows.Automation.WindowPattern.IsTopmostProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost*> property."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-vb[UIAWindowPattern_snip#100](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#100)]\n [!code-cs[UIAWindowPattern_snip#100](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTopmostProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.Pattern
  id: Pattern
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: Pattern
  nameWithType: WindowPattern.Pattern
  fullName: System.Windows.Automation.WindowPattern.Pattern
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the <xref href=&quot;System.Windows.Automation.WindowPattern&quot;></xref> control pattern."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.       The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>."
  example:
  - "In the following example, a <xref:System.Windows.Automation.WindowPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAWindowPattern_snip#101](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#101)]\n [!code-cs[UIAWindowPattern_snip#101](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;
    return:
      type: System.Windows.Automation.AutomationPattern
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)
  id: SetWindowVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: SetWindowVisualState(WindowVisualState)
  nameWithType: WindowPattern.SetWindowVisualState(WindowVisualState)
  fullName: System.Windows.Automation.WindowPattern.SetWindowVisualState(WindowVisualState)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Changes the <xref href=&quot;System.Windows.Automation.WindowVisualState&quot;></xref> of the window."
  remarks: ''
  example:
  - "In the following example, a <xref:System.Windows.Automation.WindowPattern>control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and is subsequently used to specify the visual state of the <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAWindowPattern_snip#101](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#101)]\n [!code-cs[UIAWindowPattern_snip#101](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#101)]  \n[!code-vb[UIAWindowPattern_snip#103](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#103)]\n[!code-cs[UIAWindowPattern_snip#103](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#103)]"
  syntax:
    content: public void SetWindowVisualState (System.Windows.Automation.WindowVisualState state);
    parameters:
    - id: state
      type: System.Windows.Automation.WindowVisualState
      description: "The requested <xref href=&quot;System.Windows.Automation.WindowVisualState&quot;></xref> of the window."
  overload: System.Windows.Automation.WindowPattern.SetWindowVisualState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A control does not support a requested behavior."
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)
  id: WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: WaitForInputIdle(Int32)
  nameWithType: WindowPattern.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.WindowPattern.WaitForInputIdle(Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first."
  remarks: "This method is typically used in conjunction with the handling of a <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.       The implementation is dependent on the underlying application framework; therefore this method may return some time after the window is ready for user input. The calling code should not rely on this method to ascertain exactly when the window has become idle."
  example:
  - "In the following example, a <xref:System.Windows.Automation.WindowPattern>control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and uses WaitForInputIdle to confirm the element is ready for user interaction within a reasonable amount of time.  \n  \n [!code-vb[UIAWindowPattern_snip#101](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#101)]\n [!code-cs[UIAWindowPattern_snip#101](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#101)]"
  syntax:
    content: public bool WaitForInputIdle (int milliseconds);
    parameters:
    - id: milliseconds
      type: System.Int32
      description: "The amount of time, in milliseconds, to wait for the associated process to become idle. The maximum is <xref:System.Int32>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the window has entered the idle state; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the timeout occurred."
  overload: System.Windows.Automation.WindowPattern.WaitForInputIdle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The parameter passed in is not a valid number."
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.WindowClosedEvent
  id: WindowClosedEvent
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: WindowClosedEvent
  nameWithType: WindowPattern.WindowClosedEvent
  fullName: System.Windows.Automation.WindowPattern.WindowClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the event that is raised when a window is closed."
  remarks: "A client application may need to listen for WindowClosedEvent from a cached object since a window is removed from the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] control view structure immediately upon being closed.       This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, event listeners are declared and an <xref:System.Windows.Automation.AutomationEventHandler> delegate is specified for <xref:System.Windows.Automation.WindowPattern.WindowOpenedEvent> and WindowClosedEvent events.  \n  \n [!code-vb[UIAWindowPattern_snip#104](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#104)]\n [!code-cs[UIAWindowPattern_snip#104](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#104)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent WindowClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.WindowInteractionStateProperty
  id: WindowInteractionStateProperty
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: WindowInteractionStateProperty
  nameWithType: WindowPattern.WindowInteractionStateProperty
  fullName: System.Windows.Automation.WindowPattern.WindowInteractionStateProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState*> property."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-vb[UIAWindowPattern_snip#100](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#100)]\n [!code-cs[UIAWindowPattern_snip#100](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty WindowInteractionStateProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.WindowOpenedEvent
  id: WindowOpenedEvent
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: WindowOpenedEvent
  nameWithType: WindowPattern.WindowOpenedEvent
  fullName: System.Windows.Automation.WindowPattern.WindowOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the event that is raised when a window is opened."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, event listeners are declared and an <xref:System.Windows.Automation.AutomationEventHandler> delegate is specified for WindowOpenedEvent and <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> events.  \n  \n [!code-vb[UIAWindowPattern_snip#104](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#104)]\n [!code-cs[UIAWindowPattern_snip#104](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#104)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent WindowOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowPattern.WindowVisualStateProperty
  id: WindowVisualStateProperty
  parent: System.Windows.Automation.WindowPattern
  langs:
  - csharp
  name: WindowVisualStateProperty
  nameWithType: WindowPattern.WindowVisualStateProperty
  fullName: System.Windows.Automation.WindowPattern.WindowVisualStateProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifies the <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState*> property."
  remarks: "This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>."
  example:
  - "In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-vb[UIAWindowPattern_snip#100](~/add/codesnippet/visualbasic/UIAWindowPattern_snip/UIAWindowPattern_snippets.vb#100)]\n [!code-cs[UIAWindowPattern_snip#100](~/add/codesnippet/csharp/UIAWindowPattern_snip/UIAWindowPattern_snippets.cs#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty WindowVisualStateProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Automation.BasePattern
  isExternal: false
  name: System.Windows.Automation.BasePattern
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.WindowPattern.Cached
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: Cached
  nameWithType: WindowPattern.Cached
  fullName: System.Windows.Automation.WindowPattern.Cached
- uid: System.Windows.Automation.WindowPattern.WindowPatternInformation
  parent: System.Windows.Automation
  isExternal: false
  name: WindowPattern+WindowPatternInformation
  nameWithType: WindowPattern+WindowPatternInformation
  fullName: System.Windows.Automation.WindowPattern+WindowPatternInformation
- uid: System.Windows.Automation.WindowPattern.CanMaximizeProperty
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: CanMaximizeProperty
  nameWithType: WindowPattern.CanMaximizeProperty
  fullName: System.Windows.Automation.WindowPattern.CanMaximizeProperty
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.WindowPattern.CanMinimizeProperty
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: CanMinimizeProperty
  nameWithType: WindowPattern.CanMinimizeProperty
  fullName: System.Windows.Automation.WindowPattern.CanMinimizeProperty
- uid: System.Windows.Automation.WindowPattern.Close
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: Close()
  nameWithType: WindowPattern.Close()
  fullName: System.Windows.Automation.WindowPattern.Close()
- uid: System.Windows.Automation.WindowPattern.Current
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: Current
  nameWithType: WindowPattern.Current
  fullName: System.Windows.Automation.WindowPattern.Current
- uid: System.Windows.Automation.WindowPattern.IsModalProperty
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: IsModalProperty
  nameWithType: WindowPattern.IsModalProperty
  fullName: System.Windows.Automation.WindowPattern.IsModalProperty
- uid: System.Windows.Automation.WindowPattern.IsTopmostProperty
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: IsTopmostProperty
  nameWithType: WindowPattern.IsTopmostProperty
  fullName: System.Windows.Automation.WindowPattern.IsTopmostProperty
- uid: System.Windows.Automation.WindowPattern.Pattern
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: Pattern
  nameWithType: WindowPattern.Pattern
  fullName: System.Windows.Automation.WindowPattern.Pattern
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: SetWindowVisualState(WindowVisualState)
  nameWithType: WindowPattern.SetWindowVisualState(WindowVisualState)
  fullName: System.Windows.Automation.WindowPattern.SetWindowVisualState(WindowVisualState)
- uid: System.Windows.Automation.WindowVisualState
  parent: System.Windows.Automation
  isExternal: false
  name: WindowVisualState
  nameWithType: WindowVisualState
  fullName: System.Windows.Automation.WindowVisualState
- uid: System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: WaitForInputIdle(Int32)
  nameWithType: WindowPattern.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.WindowPattern.WaitForInputIdle(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.WindowPattern.WindowClosedEvent
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: WindowClosedEvent
  nameWithType: WindowPattern.WindowClosedEvent
  fullName: System.Windows.Automation.WindowPattern.WindowClosedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.WindowPattern.WindowInteractionStateProperty
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: WindowInteractionStateProperty
  nameWithType: WindowPattern.WindowInteractionStateProperty
  fullName: System.Windows.Automation.WindowPattern.WindowInteractionStateProperty
- uid: System.Windows.Automation.WindowPattern.WindowOpenedEvent
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: WindowOpenedEvent
  nameWithType: WindowPattern.WindowOpenedEvent
  fullName: System.Windows.Automation.WindowPattern.WindowOpenedEvent
- uid: System.Windows.Automation.WindowPattern.WindowVisualStateProperty
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: WindowVisualStateProperty
  nameWithType: WindowPattern.WindowVisualStateProperty
  fullName: System.Windows.Automation.WindowPattern.WindowVisualStateProperty
- uid: System.Windows.Automation.WindowPattern.Cached*
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: Cached
  nameWithType: WindowPattern.Cached
- uid: System.Windows.Automation.WindowPattern.Close*
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: Close
  nameWithType: WindowPattern.Close
- uid: System.Windows.Automation.WindowPattern.Current*
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: Current
  nameWithType: WindowPattern.Current
- uid: System.Windows.Automation.WindowPattern.SetWindowVisualState*
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: SetWindowVisualState
  nameWithType: WindowPattern.SetWindowVisualState
- uid: System.Windows.Automation.WindowPattern.WaitForInputIdle*
  parent: System.Windows.Automation.WindowPattern
  isExternal: false
  name: WaitForInputIdle
  nameWithType: WindowPattern.WaitForInputIdle
