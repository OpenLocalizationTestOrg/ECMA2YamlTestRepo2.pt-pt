### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  id: IInteractiveChannelInitializer
  children:
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  langs:
  - csharp
  name: IInteractiveChannelInitializer
  nameWithType: IInteractiveChannelInitializer
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  type: Interface
  summary: "Define os métodos que permitem que uma aplicação de cliente apresentar uma interface de utilizador para recolher informações de identidade antes de criar o canal."
  remarks: "Implemente a interface IInteractiveChannelInitializer para ativar uma aplicação de cliente apresentar uma interface de utilizador que permite ao utilizador da aplicação criar ou selecionar as credenciais antes de abrir um canal.       Para implementar IInteractiveChannelInitializer, execute os seguintes passos no <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>  Pedir ao utilizador e obter um <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName> adequado      2.  Adicionar um objeto de parâmetro de canal personalizado para a coleção devolvida pelo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>método do <xref:System.ServiceModel.IClientChannel>objeto com um parâmetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Este objeto de parâmetro do canal é utilizado pelo personalizado <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>para estabelecer os tokens de segurança para o canal.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Devolva.       Para inserir IInteractiveChannelInitializer: 1.  Substitua o <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>método de <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName>classe.</xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> </xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>      2.  Este método, determine se o ponto final requer um IInteractiveChannelInitializer e se Sim, adicionar IInteractiveChannelInitializer para o <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>coleção.</xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>       Existem duas formas de programadores de aplicações podem tornar a utilização de um IInteractiveChannelInitializer inserida. A aplicação cliente pode chamar o <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(ou uma versão assíncrona) antes de abrir o canal (o *explícita* abordagem) ou chamar simplesmente a primeira operação (o *implícita* abordagem).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>       Se utilizar a abordagem implícita, a aplicação tem de chamar a primeira operação num <xref:System.ServiceModel.ClientBase%601>ou <xref:System.ServiceModel.IClientChannel>extensão.</xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ClientBase%601> Se chama tudo o que não seja a primeira operação, é emitida uma exceção.       Se utilizar a abordagem explícita, a aplicação tem de efetuar os seguintes passos por ordem: 1.  Chamar uma <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(ou uma versão assíncrona).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>      2.  Quando os inicializadores de ter devolvido, chame o <xref:System.ServiceModel.ICommunicationObject.Open%2A>método no <xref:System.ServiceModel.IClientChannel>objeto ou no <xref:System.ServiceModel.IClientChannel>objeto devolvido do <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ICommunicationObject.Open%2A>      3.  Chame operações.       Recomenda-se esse controlo de aplicações de produção qualidade do processo de interface de utilizador por adotar a abordagem explícita.       As aplicações que utilizam a abordagem implícita invocam Os inicializadores de interface de utilizador, mas se o utilizador da aplicação não responder dentro do período de tempo limite de envio do enlace, é emitida uma exceção quando devolve a interface de utilizador."
  syntax:
    content: public interface IInteractiveChannelInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Uma chamada assíncrona para começar a utilizar uma interface de utilizador para obter informações de credencial."
  remarks: "Para implementar <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, execute os seguintes passos no BeginDisplayInitializationUI: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>  Pedir ao utilizador de que forma julgar e obter um <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName> adequado      2.  Adicionar um objeto de parâmetro de canal personalizado para a coleção devolvida pelo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>método do <xref:System.ServiceModel.IClientChannel>objeto com um parâmetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Este objeto de parâmetro do canal é utilizado pelo personalizado <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>para estabelecer os tokens de segurança para o canal.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Devolva."
  syntax:
    content: public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);
    parameters:
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "O canal de cliente."
    - id: callback
      type: System.AsyncCallback
      description: "O objeto de chamada de retorno."
    - id: state
      type: System.Object
      description: "Quaisquer dados de estado."
    return:
      type: System.IAsyncResult
      description: "O &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; a utilizar para chamar novamente quando o processamento foi concluído."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Chamado quando a <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>terminou.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>"
  syntax:
    content: public void EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O &lt;xref:System.IAsyncResult?displayProperty=fullName&gt;."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI
