### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ImageMap
  id: ImageMap
  children:
  - System.Web.UI.WebControls.ImageMap.#ctor
  - System.Web.UI.WebControls.ImageMap.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.ImageMap.Click
  - System.Web.UI.WebControls.ImageMap.Enabled
  - System.Web.UI.WebControls.ImageMap.HotSpotMode
  - System.Web.UI.WebControls.ImageMap.HotSpots
  - System.Web.UI.WebControls.ImageMap.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ImageMap.OnClick(System.Web.UI.WebControls.ImageMapEventArgs)
  - System.Web.UI.WebControls.ImageMap.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.ImageMap.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.ImageMap.SaveViewState
  - System.Web.UI.WebControls.ImageMap.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.ImageMap.Target
  - System.Web.UI.WebControls.ImageMap.TrackViewState
  langs:
  - csharp
  name: ImageMap
  nameWithType: ImageMap
  fullName: System.Web.UI.WebControls.ImageMap
  type: Class
  summary: "Creates a control that displays an image on a page. When a hot spot region defined within the ImageMap control is clicked, the control either generates a postback to the server or navigates to a specified URL."
  remarks: "In this topic:      -   [Introduction](#introduction)      -   [Accessibility](#accessibility)      -   [Declarative Syntax](#declarative_syntax)      <a name=&quot;introduction&quot;></a>    ## Introduction    Use the ImageMap control to create an image that contains defined hot spot regions. When a user clicks a hot spot region, the control can either generate a postback to the server or navigate to a specified URL. For example, you can use this control to display a map of a geographical region. When a user clicks a specific region on the map, the control navigates to a URL that provides additional data about the selected region. You can also use this control to generate a postback to the server and run specific code based on the hot spot region that was clicked. For example, you can use an ImageMap control to capture user responses such as votes. When a user clicks the hot spot region defined for yes votes, code is called to record a yes response in a database. When a user clicks on the hot spot region defined for no votes, a no response is recorded. You can also mix these two scenarios within a single ImageMap control. For example, you can specify one hot spot region to navigate to a URL and another hot spot region to post back to the server.       Use the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property to specify the path to the image to display for the ImageMap control. You can define any number of <xref:System.Web.UI.WebControls.HotSpot> objects within an ImageMap control. You can use the <xref:System.Web.UI.WebControls.CircleHotSpot>, <xref:System.Web.UI.WebControls.RectangleHotSpot>, and <xref:System.Web.UI.WebControls.PolygonHotSpot> classes to define hot spot regions. Alternatively, you can derive from the abstract <xref:System.Web.UI.WebControls.HotSpot> class to define your own custom hot spot object.       There are two ways to specify the behavior of a <xref:System.Web.UI.WebControls.HotSpot> object in an ImageMap control when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. You can use either the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the ImageMap control or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property on an individual <xref:System.Web.UI.WebControls.HotSpot> object. These properties are set using one of the <xref:System.Web.UI.WebControls.HotSpotMode> enumeration values. If both properties are set, the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property specified on each individual <xref:System.Web.UI.WebControls.HotSpot> object takes precedence over the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the ImageMap control.       To navigate to a URL, set either the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property to `HotSpotMode.Navigate`. Use the <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> property to specify the URL to navigate to.       To generate a postback to the server, set either the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property to `HotSpotMode.Postback`. Use the <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> property to specify a name for the hot spot region. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data when a postback event occurs. When a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, the <xref:System.Web.UI.WebControls.ImageMap.Click> event is raised. To programmatically control the actions performed when a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, provide an event handler for the <xref:System.Web.UI.WebControls.ImageMap.Click> event.       To cause all <xref:System.Web.UI.WebControls.HotSpot> objects in an ImageMap control to have the same behavior, use the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property to specify the behavior. Then, either set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to `HotSpotMode.NotSet` or do not specify a value for the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property.       To specify different behaviors for <xref:System.Web.UI.WebControls.HotSpot> objects in an ImageMap, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to either `HotSpotMode.Navigate` or `HotSpotMode.PostBack`.      > [!NOTE] >  If an ImageMap control&quot;s <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property on any of the <xref:System.Web.UI.WebControls.HotSpot> objects it contains is set to `HotSpotMode.NotSet` or is not set to a value, by default the behavior is `HotSpotMode.Navigate`.      <a name=&quot;accessibility&quot;></a>    ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:ImageMap       AccessKey=&quot;string&quot;       AlternateText=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CssClass=&quot;string&quot;       DescriptionUrl=&quot;uri&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       HotSpotMode=&quot;NotSet|Navigate|PostBack|Inactive&quot;       ID=&quot;string&quot;       ImageAlign=&quot;NotSet|Left|Right|Baseline|Top|Middle|Bottom|           AbsBottom|AbsMiddle|TextTop&quot;       ImageUrl=&quot;uri&quot;       OnClick=&quot;Click event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Target=&quot;string&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >               <asp:CircleHotSpot                   AccessKey=&quot;string&quot;                   AlternateText=&quot;string&quot;                   HotSpotMode=&quot;NotSet|Navigate|PostBack|Inactive&quot;                   NavigateUrl=&quot;uri&quot;                   PostBackValue=&quot;string&quot;                   Radius=&quot;integer&quot;                   TabIndex=&quot;integer&quot;                   Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                   X=&quot;integer&quot;                   Y=&quot;integer&quot;               />               <asp:PolygonHotSpot                   AccessKey=&quot;string&quot;                   AlternateText=&quot;string&quot;                   Coordinates=&quot;string&quot;                   HotSpotMode=&quot;NotSet|Navigate|PostBack|Inactive&quot;                   NavigateUrl=&quot;uri&quot;                   PostBackValue=&quot;string&quot;                   TabIndex=&quot;integer&quot;                   Target=&quot;string|_blank|_parent|_search|_self|_top&quot;               />               <asp:RectangleHotSpot                   AccessKey=&quot;string&quot;                   AlternateText=&quot;string&quot;                   Bottom=&quot;integer&quot;                   HotSpotMode=&quot;NotSet|Navigate|PostBack|Inactive&quot;                   Left=&quot;integer&quot;                   NavigateUrl=&quot;uri&quot;                   PostBackValue=&quot;string&quot;                   Right=&quot;integer&quot;                   TabIndex=&quot;integer&quot;                   Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                   Top=&quot;integer&quot;               />   </asp:ImageMap>   ```"
  example:
  - "The following code example demonstrates how to declaratively create an ImageMap control that contains two <xref:System.Web.UI.WebControls.CircleHotSpot> objects. The <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property is set to `HotSpotMode.Navigate`, which causes the page to navigate to the specified URL each time a user clicks one of the circle hot spot regions. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMapClass1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ImageMapClass1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_21_1.aspx)]  \n  \n The following code example demonstrates how to declaratively create an ImageMap control that contains two <xref:System.Web.UI.WebControls.RectangleHotSpot> objects. The <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property is set to `HotSpotMode.PostBack`, which causes the page to post back to the server each time a user clicks one of the hot spot regions. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-cs[ImageMapClass2#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_21_2.aspx)]\n [!code-vb[ImageMapClass2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_21_2.aspx)]  \n  \n The following code example demonstrates how to create an ImageMap control that contains hot spots with different behaviors. The background area is a defined as a single <xref:System.Web.UI.WebControls.RectangleHotSpot> that posts back to the server. Three <xref:System.Web.UI.WebControls.RectangleHotSpot> objects are defined in the same region. Each of these hot spots looks like a button and navigates to a URL. When an ImageMap control is clicked in a region where two hot spots overlap, the hot spot that is declared first has precedence. In this example, the button hot spots are declared first and the background hot spot that contains them is declared last. Therefore, the user gets the behavior of the button <xref:System.Web.UI.WebControls.RectangleHotSpot> object, not the background <xref:System.Web.UI.WebControls.RectangleHotSpot> object, when the user clicks a button hot spot. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMapClass3#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_21_3.aspx)]\n [!code-cs[ImageMapClass3#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_21_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("HotSpots")]

      [System.Web.UI.ParseChildren(true, "HotSpots")]

      [System.Web.UI.SupportsEventValidation]

      public class ImageMap : System.Web.UI.WebControls.Image, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Image
  implements:
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.Image.AlternateText
  - System.Web.UI.WebControls.Image.DescriptionUrl
  - System.Web.UI.WebControls.Image.Font
  - System.Web.UI.WebControls.Image.GenerateEmptyAlternateText
  - System.Web.UI.WebControls.Image.ImageAlign
  - System.Web.UI.WebControls.Image.ImageUrl
  - System.Web.UI.WebControls.Image.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Image.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: ImageMap()
  nameWithType: ImageMap.ImageMap()
  fullName: System.Web.UI.WebControls.ImageMap.ImageMap()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.ImageMap> class."
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add it to a page.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_225_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_225_1.aspx)]"
  syntax:
    content: public ImageMap ();
    parameters: []
  overload: System.Web.UI.WebControls.ImageMap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: ImageMap.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.ImageMap.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adds the HTML attributes and styles of an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control to be rendered to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>."
  remarks: "This method is used primarily by control developers to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> output stream for an <xref:System.Web.UI.WebControls.ImageMap> control. This method overrides <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=fullName>."
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that represents the output stream to render HTML content on the client."
  overload: System.Web.UI.WebControls.ImageMap.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.Click
  id: Click
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: Click
  nameWithType: ImageMap.Click
  fullName: System.Web.UI.WebControls.ImageMap.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Occurs when a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object in an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control is clicked."
  remarks: "The Click event is raised when a <xref:System.Web.UI.WebControls.HotSpot> object in an <xref:System.Web.UI.WebControls.ImageMap> control is clicked. To allow a <xref:System.Web.UI.WebControls.HotSpot> to raise the Click event, you must first set either the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the <xref:System.Web.UI.WebControls.ImageMap> control or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property on the <xref:System.Web.UI.WebControls.HotSpot> object to `HotSpotMode.Postback`.       To programmatically control the actions performed when a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, provide an event handler for the Click event that contains the code to run when the event is raised.       Raising an event invokes the event handler through a delegate. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to create an <xref:System.Web.UI.WebControls.ImageMap> control that contains two <xref:System.Web.UI.WebControls.RectangleHotSpot> objects. The <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property is set to `HotSpotMode.PostBack`, which causes the page to post back to the server each time a user clicks one of the hot spot regions. The `VoteMap_Clicked` event handler handles the click event for the <xref:System.Web.UI.WebControls.ImageMap> control. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.MobileControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-cs[ImageMapClass2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_6_1.aspx)]\n [!code-vb[ImageMapClass2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_6_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ImageMapEventHandler Click;
    return:
      type: System.Web.UI.WebControls.ImageMapEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: Enabled
  nameWithType: ImageMap.Enabled
  fullName: System.Web.UI.WebControls.ImageMap.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether the control can respond to user interaction."
  remarks: "With the Enabled property, you can enable or disable the <xref:System.Web.UI.WebControls.ImageMap> control at run time."
  syntax:
    content: public override bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control is to respond to user clicks; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageMap.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.HotSpotMode
  id: HotSpotMode
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: HotSpotMode
  nameWithType: ImageMap.HotSpotMode
  fullName: System.Web.UI.WebControls.ImageMap.HotSpotMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the default behavior for the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> objects of an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control when the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> objects are clicked."
  remarks: "Use the HotSpotMode property to specify the default click behavior of the <xref:System.Web.UI.WebControls.HotSpot> objects within an <xref:System.Web.UI.WebControls.ImageMap> control. This property is set using one of the <xref:System.Web.UI.WebControls.HotSpotMode> enumeration values. The following table lists the possible values.      |Item|Description|   |----------|-----------------|   |`Inactive`|The <xref:System.Web.UI.WebControls.HotSpot> object does not have any behavior.|   |`NotSet`|The <xref:System.Web.UI.WebControls.HotSpot> object uses the behavior set by the <xref:System.Web.UI.WebControls.ImageMap> control&quot;s HotSpotMode property. If the <xref:System.Web.UI.WebControls.ImageMap> control does not define the behavior, the <xref:System.Web.UI.WebControls.HotSpot> objects all navigate to a URL.|   |`Navigate`|The <xref:System.Web.UI.WebControls.HotSpot> objects navigate to a URL.|   |`PostBack`|The <xref:System.Web.UI.WebControls.HotSpot> objects generate a postback to the server.|       You can specify a <xref:System.Web.UI.WebControls.HotSpot> object&quot;s behavior using either the HotSpotMode property of the <xref:System.Web.UI.WebControls.ImageMap> control or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property of each individual <xref:System.Web.UI.WebControls.HotSpot> object. If both properties are set, the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property specified on each individual <xref:System.Web.UI.WebControls.HotSpot> object takes precedence over the HotSpotMode property on the <xref:System.Web.UI.WebControls.ImageMap> control.       When you set the HotSpotMode property of the <xref:System.Web.UI.WebControls.ImageMap> control, note that the `HotSpotMode.NotSet` and `HotSpotMode.Navigate` values have the same behavior: both navigate to a URL. When you specify `HotSpotMode.NotSet` for the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property of an individual <xref:System.Web.UI.WebControls.HotSpot> object, that <xref:System.Web.UI.WebControls.HotSpot> determines its behavior from the value of the HotSpotMode property of the <xref:System.Web.UI.WebControls.ImageMap> control.       If you specify `HotSpotMode.Navigate` for the HotSpotMode property, the page navigates to a URL when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. Use the <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> property to specify the URL to navigate to.       If you specify `HotSpotMode.PostBack` for the HotSpotMode property, the page generates a postback to the server when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. Use the <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> property to specify the name of the hot spot region. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data when a postback event occurs. When a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, the <xref:System.Web.UI.WebControls.ImageMap.Click> event is raised. To programmatically control the actions performed when a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, provide an event handler for the <xref:System.Web.UI.WebControls.ImageMap.Click> event.       If you specify `HotSpotMode.Inactive` for the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property, the <xref:System.Web.UI.WebControls.HotSpot> object does not have any behavior when it is clicked. You can use this value to create an inactive hot spot within a larger active hot spot. This option is provided to allow you to create more complex hot spot zones within an <xref:System.Web.UI.WebControls.ImageMap> control.       To create an inactive area within an active hot spot, you must specify the inactive hot spot before the active hot spot in the <xref:System.Web.UI.WebControls.ImageMap> control. For example, the following <xref:System.Web.UI.WebControls.ImageMap> defines an active ring by specifying an inactive circular hot spot within a larger active circular hot spot:      ```   <asp:ImageMap ID=&quot;SaturnImage&quot;           ImageUrl=&quot;~/saturn.PNG&quot;           runat=&quot;server&quot; OnClick=&quot;SaturnImage_Click&quot;>       <asp:CircleHotSpot AlternateText=&quot;planet&quot; HotSpotMode=PostBack             PostBackValue=&quot;planet&quot; Radius=40 X=100 Y=100 />          <asp:CircleHotSpot HotSpotMode=Inactive              Radius=60 X=100 Y=100 />       <asp:CircleHotSpot AlternateText=&quot;rings&quot; HotSpotMode=PostBack             PostBackValue=&quot;rings&quot; Radius=80 X=100 Y=100 />   </asp:ImageMap>   ```       To cause all <xref:System.Web.UI.WebControls.HotSpot> objects in an <xref:System.Web.UI.WebControls.ImageMap> control to have the same behavior, use the HotSpotMode property on the <xref:System.Web.UI.WebControls.ImageMap> control to specify the behavior. Then, either set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to `HotSpotMode.NotSet` or do not specify a value for the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property.       To specify different behaviors for <xref:System.Web.UI.WebControls.HotSpot> objects in an <xref:System.Web.UI.WebControls.ImageMap> control, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to either `HotSpotMode.Navigate`, `HotSpotMode.PostBack`, or `HotSpotMode.Inactive`.      > [!NOTE] >  If an <xref:System.Web.UI.WebControls.ImageMap> control&quot;s HotSpotMode property or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A?displayProperty=fullName> property on any of the <xref:System.Web.UI.WebControls.HotSpot> objects it contains is either set to `HotSpotMode.NotSet` or not set to a value, by default the behavior is `HotSpotMode.Navigate`."
  example:
  - "The following code example demonstrates how to declaratively create an <xref:System.Web.UI.WebControls.ImageMap> control that contains two <xref:System.Web.UI.WebControls.RectangleHotSpot> objects. The HotSpotMode property is set to `HotSpotMode.PostBack`, which causes the page to post back to the server each time a user clicks one of the hot spot regions. The <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is not set on each of the <xref:System.Web.UI.WebControls.RectangleHotSpot> objects because they get their behavior from the HotSpotMode property. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.HotSpotMode1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_438_1.aspx)]\n [!code-cs[ImageMap.HotSpotMode1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_438_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HotSpotMode HotSpotMode { get; set; }
    return:
      type: System.Web.UI.WebControls.HotSpotMode
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.HotSpotMode&quot;></xref> enumeration values. The default is <xref uid=&quot;langword_csharp_NotSet&quot; name=&quot;NotSet&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageMap.HotSpotMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified type is not one of the <xref href=&quot;System.Web.UI.WebControls.HotSpotMode&quot;></xref> enumeration values."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.HotSpots
  id: HotSpots
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: HotSpots
  nameWithType: ImageMap.HotSpots
  fullName: System.Web.UI.WebControls.ImageMap.HotSpots
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a collection of <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> objects that represents the defined hot spot regions in an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control."
  remarks: "Use the HotSpots property to programmatically manage the hot spot regions in an <xref:System.Web.UI.WebControls.ImageMap> control. You can use the HotSpots property to add, insert, remove, and retrieve <xref:System.Web.UI.WebControls.HotSpot> objects. For more information, see <xref:System.Web.UI.WebControls.HotSpotCollection>."
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. The HotSpots property is used to access the <xref:System.Web.UI.WebControls.HotSpotCollection> for the <xref:System.Web.UI.WebControls.ImageMap> control and add the <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1193_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1193_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.HotSpotCollection HotSpots { get; }
    return:
      type: System.Web.UI.WebControls.HotSpotCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;></xref> object that represents the defined hot spot regions in an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control."
  overload: System.Web.UI.WebControls.ImageMap.HotSpots*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ImageMap.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ImageMap.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restores view-state information for the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control from a previous page request that was saved by the <xref:System.Web.UI.WebControls.ImageMap.SaveViewState*> method."
  remarks: "This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.  However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "An <xref:System.Object> that represents the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control to restore."
  overload: System.Web.UI.WebControls.ImageMap.LoadViewState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code> is not a valid <xref:System.Web.UI.Control.ViewState*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.OnClick(System.Web.UI.WebControls.ImageMapEventArgs)
  id: OnClick(System.Web.UI.WebControls.ImageMapEventArgs)
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: OnClick(ImageMapEventArgs)
  nameWithType: ImageMap.OnClick(ImageMapEventArgs)
  fullName: System.Web.UI.WebControls.ImageMap.OnClick(ImageMapEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises the <xref href=&quot;System.Web.UI.WebControls.ImageMap.Click&quot;></xref> event for the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control."
  remarks: "The <xref:System.Web.UI.WebControls.ImageMap.Click> event is raised when a <xref:System.Web.UI.WebControls.HotSpot> object in an <xref:System.Web.UI.WebControls.ImageMap> control is clicked. To allow a <xref:System.Web.UI.WebControls.HotSpot> to raise the <xref:System.Web.UI.WebControls.ImageMap.Click> event, you must first set either the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the <xref:System.Web.UI.WebControls.ImageMap> control or the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property on the <xref:System.Web.UI.WebControls.HotSpot> object to `HotSpotMode.Postback`.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnClick (System.Web.UI.WebControls.ImageMapEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ImageMapEventArgs
      description: "An argument of type <xref href=&quot;System.Web.UI.WebControls.ImageMapEventArgs&quot;></xref> that contains the event data."
  overload: System.Web.UI.WebControls.ImageMap.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: ImageMap.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageMap.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises events for the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control when a form is posted back to the server."
  remarks: "The page passes the value of the `eventArgument` parameter to the RaisePostBackEvent method of the <xref:System.Web.UI.WebControls.ImageMap> control. The <xref:System.Web.UI.WebControls.ImageMap> raises a <xref:System.Web.UI.WebControls.ImageMap.Click> event for the <xref:System.Web.UI.WebControls.HotSpot> object that was clicked."
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "The argument for the event."
  overload: System.Web.UI.WebControls.ImageMap.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ImageMap.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.ImageMap.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sends the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control content to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object, which writes the content to render on the client."
  remarks: "This method is used primarily by control developers. When developing a custom server control derived from the <xref:System.Web.UI.WebControls.ImageMap> control, you can override this method to generate content for the <xref:System.Web.UI.WebControls.ImageMap>."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object that receives the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control content."
  overload: System.Web.UI.WebControls.ImageMap.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ImageMap.SaveViewState()
  fullName: System.Web.UI.WebControls.ImageMap.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves any changes to an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control&quot;s view-state that have occurred since the time the page was posted back to the server."
  remarks: "This method is used primarily by control developers.       View state is the accumulation of the values of a server control&quot;s properties. These values are automatically placed in the server control&quot;s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property&quot;s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).       When view state is saved, this string object is returned to the client as a variable that is stored in an `Hidden` HTML element. When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control&quot;s `ViewState` property. For more information, see [ASP.NET State Management Overview](../Topic/ASP.NET%20State%20Management%20Overview.md)."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Returns the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control&quot;s current view state. If there is no view state associated with the control, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageMap.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: ImageMap.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageMap.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent*>."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.ImageMap.RaisePostBackEvent%2A?displayProperty=fullName> method to raise an event for the <xref:System.Web.UI.WebControls.ImageMap> control when a form is posted back to the server.       The IPostBackEventHandler.RaisePostBackEvent method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ImageMap> instance is cast to an <xref:System.Web.UI.IPostBackEventHandler> interface."
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "The argument for the event."
  overload: System.Web.UI.WebControls.ImageMap.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.Target
  id: Target
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: Target
  nameWithType: ImageMap.Target
  fullName: System.Web.UI.WebControls.ImageMap.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the target window or frame that displays the Web page content linked to when the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control is clicked."
  remarks: "Use the Target property to specify the frame or window that displays the Web page r when the <xref:System.Web.UI.WebControls.ImageMap> control is clicked. The Web page is specified by setting the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.       The Target property is used when the value of the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property is `HotSpotMode.Navigate`; it is ignored when the value of the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property is `HotSpotMode.PostBack`.       If the Target property is not set, the browser or window with focus refreshes when the <xref:System.Web.UI.WebControls.ImageMap> control is clicked.      > [!NOTE] >  The Target property renders as a `target` attribute. The `target` attribute on `anchor` elements is not allowed in the XHTML 1.1 document type definition. Do not set the Target property if the rendered output for the <xref:System.Web.UI.WebControls.ImageMap> must be XHTML 1.1-compliant. For more information, see [XHTML Standards in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md).   >    >  When creating accessible Web pages, it is strongly recommended that you avoid using the Target property to target another window. For more information, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual string Target { get; set; }
    return:
      type: System.String
      description: "The target window or frame that displays the specified Web page when the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control is clicked. Values must begin with a letter in the range of A through Z (case-insensitive), except for the following special values, which begin with an underscore:       <table><tbody><tr><td><xref uid=&quot;langword_csharp__blank &quot; name=&quot;_blank &quot; href=&quot;&quot;></xref></td><td> Renders the content in a new window without frames.       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent &quot; name=&quot;_parent &quot; href=&quot;&quot;></xref></td><td> Renders the content in the immediate frameset parent.       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> Renders the content in the search pane.       </td></tr><tr><td><xref uid=&quot;langword_csharp__self &quot; name=&quot;_self &quot; href=&quot;&quot;></xref></td><td> Renders the content in the frame with focus.       </td></tr><tr><td><xref uid=&quot;langword_csharp__top &quot; name=&quot;_top &quot; href=&quot;&quot;></xref></td><td> Renders the content in the full window without frames.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Check your browser documentation to determine if the <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref> value is supported.  For example, Microsoft Internet Explorer 5.0 and later support the <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref> target value.      </div>       The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ImageMap.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageMap.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ImageMap
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ImageMap.TrackViewState()
  fullName: System.Web.UI.WebControls.ImageMap.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tracks view-state changes to the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control so they can be stored in the control&quot;s <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object. This object is accessible through the &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; property."
  remarks: "This method is called automatically by ASP.NET when the <xref:System.Web.UI.WebControls.ImageMap> control is initialized."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ImageMap.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Image
  isExternal: false
  name: System.Web.UI.WebControls.Image
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.ImageMap.#ctor
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: ImageMap()
  nameWithType: ImageMap.ImageMap()
  fullName: System.Web.UI.WebControls.ImageMap.ImageMap()
- uid: System.Web.UI.WebControls.ImageMap.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: ImageMap.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.ImageMap.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.ImageMap.Click
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: Click
  nameWithType: ImageMap.Click
  fullName: System.Web.UI.WebControls.ImageMap.Click
- uid: System.Web.UI.WebControls.ImageMapEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ImageMapEventHandler
  nameWithType: ImageMapEventHandler
  fullName: System.Web.UI.WebControls.ImageMapEventHandler
- uid: System.Web.UI.WebControls.ImageMap.Enabled
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: Enabled
  nameWithType: ImageMap.Enabled
  fullName: System.Web.UI.WebControls.ImageMap.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ImageMap.HotSpotMode
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: HotSpotMode
  nameWithType: ImageMap.HotSpotMode
  fullName: System.Web.UI.WebControls.ImageMap.HotSpotMode
- uid: System.Web.UI.WebControls.HotSpotMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HotSpotMode
  nameWithType: HotSpotMode
  fullName: System.Web.UI.WebControls.HotSpotMode
- uid: System.Web.UI.WebControls.ImageMap.HotSpots
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: HotSpots
  nameWithType: ImageMap.HotSpots
  fullName: System.Web.UI.WebControls.ImageMap.HotSpots
- uid: System.Web.UI.WebControls.HotSpotCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HotSpotCollection
  nameWithType: HotSpotCollection
  fullName: System.Web.UI.WebControls.HotSpotCollection
- uid: System.Web.UI.WebControls.ImageMap.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ImageMap.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ImageMap.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ImageMap.OnClick(System.Web.UI.WebControls.ImageMapEventArgs)
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: OnClick(ImageMapEventArgs)
  nameWithType: ImageMap.OnClick(ImageMapEventArgs)
  fullName: System.Web.UI.WebControls.ImageMap.OnClick(ImageMapEventArgs)
- uid: System.Web.UI.WebControls.ImageMapEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ImageMapEventArgs
  nameWithType: ImageMapEventArgs
  fullName: System.Web.UI.WebControls.ImageMapEventArgs
- uid: System.Web.UI.WebControls.ImageMap.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: ImageMap.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageMap.RaisePostBackEvent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ImageMap.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ImageMap.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.ImageMap.Render(HtmlTextWriter)
- uid: System.Web.UI.WebControls.ImageMap.SaveViewState
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: SaveViewState()
  nameWithType: ImageMap.SaveViewState()
  fullName: System.Web.UI.WebControls.ImageMap.SaveViewState()
- uid: System.Web.UI.WebControls.ImageMap.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: ImageMap.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageMap.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.ImageMap.Target
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: Target
  nameWithType: ImageMap.Target
  fullName: System.Web.UI.WebControls.ImageMap.Target
- uid: System.Web.UI.WebControls.ImageMap.TrackViewState
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: TrackViewState()
  nameWithType: ImageMap.TrackViewState()
  fullName: System.Web.UI.WebControls.ImageMap.TrackViewState()
- uid: System.Web.UI.WebControls.ImageMap.#ctor*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: ImageMap
  nameWithType: ImageMap.ImageMap
- uid: System.Web.UI.WebControls.ImageMap.AddAttributesToRender*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: AddAttributesToRender
  nameWithType: ImageMap.AddAttributesToRender
- uid: System.Web.UI.WebControls.ImageMap.Enabled*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: Enabled
  nameWithType: ImageMap.Enabled
- uid: System.Web.UI.WebControls.ImageMap.HotSpotMode*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: HotSpotMode
  nameWithType: ImageMap.HotSpotMode
- uid: System.Web.UI.WebControls.ImageMap.HotSpots*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: HotSpots
  nameWithType: ImageMap.HotSpots
- uid: System.Web.UI.WebControls.ImageMap.LoadViewState*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: LoadViewState
  nameWithType: ImageMap.LoadViewState
- uid: System.Web.UI.WebControls.ImageMap.OnClick*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: OnClick
  nameWithType: ImageMap.OnClick
- uid: System.Web.UI.WebControls.ImageMap.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: ImageMap.RaisePostBackEvent
- uid: System.Web.UI.WebControls.ImageMap.Render*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: Render
  nameWithType: ImageMap.Render
- uid: System.Web.UI.WebControls.ImageMap.SaveViewState*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: SaveViewState
  nameWithType: ImageMap.SaveViewState
- uid: System.Web.UI.WebControls.ImageMap.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: ImageMap.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.ImageMap.Target*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: Target
  nameWithType: ImageMap.Target
- uid: System.Web.UI.WebControls.ImageMap.TrackViewState*
  parent: System.Web.UI.WebControls.ImageMap
  isExternal: false
  name: TrackViewState
  nameWithType: ImageMap.TrackViewState
