### YamlMime:ManagedReference
items:
- uid: System.Data.DataRowCollection
  id: DataRowCollection
  children:
  - System.Data.DataRowCollection.Add(System.Data.DataRow)
  - System.Data.DataRowCollection.Add(System.Object[])
  - System.Data.DataRowCollection.Clear
  - System.Data.DataRowCollection.Contains(System.Object)
  - System.Data.DataRowCollection.Contains(System.Object[])
  - System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  - System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  - System.Data.DataRowCollection.Count
  - System.Data.DataRowCollection.Find(System.Object)
  - System.Data.DataRowCollection.Find(System.Object[])
  - System.Data.DataRowCollection.GetEnumerator
  - System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  - System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  - System.Data.DataRowCollection.Item(System.Int32)
  - System.Data.DataRowCollection.Remove(System.Data.DataRow)
  - System.Data.DataRowCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataRowCollection
  nameWithType: DataRowCollection
  fullName: System.Data.DataRowCollection
  type: Class
  summary: "Representa uma coleção de linhas para um <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "O DataRowCollection é um componente principal do <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Enquanto o <xref:System.Data.DataColumnCollection>define o esquema da tabela, o DataRowCollection contém os dados reais da tabela, onde cada <xref:System.Data.DataRow>no DataRowCollection representa uma única linha.</xref:System.Data.DataRow> </xref:System.Data.DataColumnCollection>       Pode chamar o <xref:System.Data.DataRowCollection.Add%2A>e <xref:System.Data.DataRowCollection.Remove%2A>métodos para inserir e eliminar <xref:System.Data.DataRow>objetos a partir de DataRowCollection.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection.Add%2A> Também pode chamar o <xref:System.Data.DataRowCollection.Find%2A>método para procurar <xref:System.Data.DataRow>objetos que contenham valores específicos em colunas de chave primárias, e o <xref:System.Data.DataRowCollection.Contains%2A>método para procurar dados baseada em carateres para único palavras ou frases reconhecíveis.</xref:System.Data.DataRowCollection.Contains%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>       Para outras operações, tais como a ordenação ou filtragem DataRowCollection, utilize métodos em associados a DataRowCollection <xref:System.Data.DataTable>.</xref:System.Data.DataTable>"
  example:
  - "The first example in this section prints the value of column 1 for every row in a DataRowCollection. The second example adds a new row created by using the <xref:System.Data.DataTable.NewRow%2A> method to the DataRowCollection.  \n  \n [!code-cs[Classic WebData DataRowCollection Example#1](~/add/codesnippet/csharp/t-system.data.datarowcol_1.cs)]\n [!code-vb[Classic WebData DataRowCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datarowcol_1.vb)]"
  syntax:
    content: 'public sealed class DataRowCollection : System.Data.InternalDataCollectionBase'
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRowCollection.Add(System.Data.DataRow)
  id: Add(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Add(DataRow)
  nameWithType: DataRowCollection.Add(DataRow)
  fullName: System.Data.DataRowCollection.Add(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adiciona especificado <xref href=&quot;System.Data.DataRow&quot;> </xref> para o <xref href=&quot;System.Data.DataRowCollection&quot;> </xref> objeto."
  remarks: "Para criar um novo <xref:System.Data.DataRow>tem de utilizar o <xref:System.Data.DataTable.NewRow%2A>método de <xref:System.Data.DataTable>classe.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> </xref:System.Data.DataRow> Quando utiliza o <xref:System.Data.DataTable.NewRow%2A>método, um novo <xref:System.Data.DataRow>objeto é devolvido utilizando o esquema do elemento principal <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow> </xref:System.Data.DataTable.NewRow%2A> Depois de criar o <xref:System.Data.DataRow>objeto e definir os valores para cada uma das respetivas colunas, utilize o método Add para adicionar o objeto à coleção.</xref:System.Data.DataRow>       Gera uma exceção se o utilizador gera uma exceção no <xref:System.Data.DataTable.RowChanging>eventos.</xref:System.Data.DataTable.RowChanging> Se ocorrer uma exceção, a linha não é adicionada à tabela."
  example:
  - "The following example uses the Add method to add a new <xref:System.Data.DataRow> to a <xref:System.Data.DataRowCollection> object.  \n  \n [!code-cs[Classic WebData DataRowCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_2_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_2_1.vb)]"
  syntax:
    content: public void Add (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "The <xref href=&quot;System.Data.DataRow&quot;></xref> to add."
  overload: System.Data.DataRowCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A linha é nula."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A linha pertence a outra tabela ou já pertence a esta tabela."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "A adição invalida uma restrição."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "A adição tenta colocar um valor nulo num <xref href=&quot;System.Data.DataColumn&quot;> </xref> onde <xref:System.Data.DataColumn.AllowDBNull*>é falso.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRowCollection.Add(System.Object[])
  id: Add(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Add(Object[])
  nameWithType: DataRowCollection.Add(Object[])
  fullName: System.Data.DataRowCollection.Add(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cria uma linha utilizando valores especificados e adiciona-o para o <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: "Se um <xref:System.Data.DataColumn>objeto tem respetivo <xref:System.Data.DataColumn.AutoIncrement%2A>definido em True, null deve ser transmitido ao obter o valor predefinido para essa coluna.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn>       Exceções também podem ocorrer se gerar uma exceção durante a um <xref:System.Data.DataTable.ColumnChanging>ou <xref:System.Data.DataTable.RowChanging>eventos.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging> Se ocorrer uma exceção, a linha não é adicionada à tabela."
  example:
  - "The following example uses the <xref:System.Data.DataRowCollection.Add%2A> method to create and add a new <xref:System.Data.DataRow> object to a <xref:System.Data.DataRowCollection>.  \n  \n [!code-cs[Classic WebData DataRowCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_5_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_5_1.vb)]"
  syntax:
    content: public System.Data.DataRow Add (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "A matriz de valores que são utilizados para criar a nova linha."
    return:
      type: System.Data.DataRow
      description: "Nenhum."
  overload: System.Data.DataRowCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A matriz é maior do que o número de colunas na tabela."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Um valor não corresponde ao respetivo tipo de coluna correspondentes."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Adicionar a linha invalida uma restrição."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "A tentar colocar um valor nulo numa coluna onde <xref:System.Data.DataColumn.AllowDBNull*>é falso.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRowCollection.Clear
  id: Clear
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRowCollection.Clear()
  fullName: System.Data.DataRowCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Limpa a recolha de todas as linhas."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataRowCollection.Clear*
  exceptions:
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> é aplicada ao <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: DataRowCollection.Contains(Object)
  fullName: System.Data.DataRowCollection.Contains(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um valor que indica se a chave primária de qualquer linha na coleção contém o valor especificado."
  remarks: "Utilizar o método Contains, o <xref:System.Data.DataTable>objeto ao qual o <xref:System.Data.DataRowCollection>objeto pertence a tem de ter, pelo menos, uma coluna designada como uma coluna de chave primária.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> Consulte o <xref:System.Data.DataTable.PrimaryKey%2A>propriedade para obter mais informações sobre como criar uma coluna de chave primária.</xref:System.Data.DataTable.PrimaryKey%2A>       Assim que tiver determinado que uma linha contém o valor especificado, pode utilizar o <xref:System.Data.DataRowCollection.Find%2A>método para devolver o específicos <xref:System.Data.DataRow>objeto que tem o valor.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>"
  example:
  - "The following Visual Basic example uses the Contains method to determine whether a <xref:System.Data.DataRowCollection> object contains a specific value.  \n  \n [!code-vb[Classic WebData DataRowCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_7_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "O valor da chave primária para testar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção contiver um <xref href=&quot;System.Data.DataRow&quot;> </xref> com o valor de chave primária especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.Contains*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "A tabela não tem uma chave primária."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Contains(System.Object[])
  id: Contains(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Contains(Object[])
  nameWithType: DataRowCollection.Contains(Object[])
  fullName: System.Data.DataRowCollection.Contains(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um valor que indica se as colunas de chave primárias do qualquer linha na coleção contém os valores especificados na matriz de objetos."
  remarks: "Para utilizar o <xref:System.Data.DataRowCollection.Contains%2A>método com uma matriz de valores, o <xref:System.Data.DataTable>objeto ao qual o <xref:System.Data.DataRowCollection>objeto pertence tem tem uma matriz de colunas designado como chaves primárias.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection.Contains%2A> Consulte o <xref:System.Data.DataTable.PrimaryKey%2A>propriedade para obter mais informações sobre como criar uma matriz de colunas chave primárias.</xref:System.Data.DataTable.PrimaryKey%2A> O número de elementos de matriz tem de corresponder ao número de colunas de chave primárias no <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Assim que tiver determinado que uma linha contém o valor especificado, utilize o <xref:System.Data.DataRowCollection.Find%2A>método para devolver o específicos <xref:System.Data.DataRow>objeto que tem o valor.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>"
  example:
  - "The following Visual Basic example uses the <xref:System.Data.DataRowCollection.Contains%2A> method to find a particular row in a <xref:System.Data.DataRowCollection> object. The example creates an array of values, one element for each primary key in the table, and then passes the array to the method to return a `true` or `false`.  \n  \n [!code-vb[Classic WebData DataRowCollection.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_4_1.vb)]"
  syntax:
    content: public bool Contains (object[] keys);
    parameters:
    - id: keys
      type: System.Object[]
      description: "Uma matriz de valores de chave primárias para testar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.DataRowCollection&quot;> </xref> contém um <xref href=&quot;System.Data.DataRow&quot;> </xref> com os valores de chave especificados; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.Contains*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "A tabela não tem uma chave primária."
  platform:
  - net462
- uid: System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataRowCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataRowCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia todos os <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos da coleção para a matriz especificada, que começa com o índice de matriz de destino indicado."
  syntax:
    content: public override void CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "A matriz unidimensional que é o destino dos elementos copiada a partir de <xref uid=&quot;langword_csharp_DataRowCollection&quot; name=&quot;DataRowCollection&quot; href=&quot;&quot;> </xref>. A matriz tem de ter a indexação com base em zero."
    - id: index
      type: System.Int32
      description: "O índice baseado em zero na matriz em que copiar começa."
  overload: System.Data.DataRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  id: CopyTo(System.Data.DataRow[],System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: CopyTo(DataRow[],Int32)
  nameWithType: DataRowCollection.CopyTo(DataRow[],Int32)
  fullName: System.Data.DataRowCollection.CopyTo(DataRow[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia todos os <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos da coleção para a matriz especificada, que começa com o índice de matriz de destino indicado."
  syntax:
    content: public void CopyTo (System.Data.DataRow[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "A matriz unidimensional que é o destino dos elementos copiada a partir de <xref uid=&quot;langword_csharp_DataRowCollection&quot; name=&quot;DataRowCollection&quot; href=&quot;&quot;> </xref>. A matriz tem de ter a indexação com base em zero."
    - id: index
      type: System.Int32
      description: "O índice baseado em zero na matriz em que copiar começa."
  overload: System.Data.DataRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Count
  id: Count
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataRowCollection.Count
  fullName: System.Data.DataRowCollection.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o número total de <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos nesta coleção."
  syntax:
    content: public override int Count { get; }
    return:
      type: System.Int32
      description: "O número total de <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos nesta coleção."
  overload: System.Data.DataRowCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Find(System.Object)
  id: Find(System.Object)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Find(Object)
  nameWithType: DataRowCollection.Find(Object)
  fullName: System.Data.DataRowCollection.Find(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém a linha especificada pelo valor de chave primária."
  remarks: "Para utilizar o `Find` método, o <xref:System.Data.DataTable>objeto ao qual o <xref:System.Data.DataRowCollection>objeto pertence tem de ter, pelo menos, uma coluna designada como uma coluna de chave primária.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> Consulte o <xref:System.Data.DataTable.PrimaryKey%2A>propriedade para obter mais informações sobre como criar uma coluna de chave primária.</xref:System.Data.DataTable.PrimaryKey%2A>"
  example:
  - "The following example uses the Find method to find the primary key value \"2\" in a collection of <xref:System.Data.DataRow> objects. The method returns the specific <xref:System.Data.DataRow> object letting you change its values, as needed.  \n  \n [!code-vb[Classic WebData DataRowCollection.Find Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_0_1.vb)]\n [!code-cs[Classic WebData DataRowCollection.Find Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_0_1.cs)]"
  syntax:
    content: public System.Data.DataRow Find (object key);
    parameters:
    - id: key
      type: System.Object
      description: "O valor da chave primário do <xref href=&quot;System.Data.DataRow&quot;> </xref> localizar."
    return:
      type: System.Data.DataRow
      description: "A <xref href=&quot;System.Data.DataRow&quot;> </xref> que contém o valor de chave primária especificado; caso contrário, o valor de um valor nulo se o valor de chave primária não existe no <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  overload: System.Data.DataRowCollection.Find*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "A tabela não tem uma chave primária."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Find(System.Object[])
  id: Find(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Find(Object[])
  nameWithType: DataRowCollection.Find(Object[])
  fullName: System.Data.DataRowCollection.Find(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém a linha que contém os valores de chaves principais especificados."
  remarks: "Para utilizar o <xref:System.Data.DataRowCollection.Find%2A>método, o <xref:System.Data.DataTable>objeto ao qual o <xref:System.Data.DataRowCollection>objeto pertence tem de ter, pelo menos, uma coluna designada como uma coluna de chave primária.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection.Find%2A> Quando duas ou mais linhas tem o mesmo valor de chave primária, a primeira linha encontrada é devolvida. Isto ocorre quando <xref:System.Data.DataSet.EnforceConstraints%2A>está definido como false.</xref:System.Data.DataSet.EnforceConstraints%2A> Consulte o <xref:System.Data.DataTable.PrimaryKey%2A>propriedade para obter mais informações sobre como criar um <xref:System.Data.DataTable.PrimaryKey%2A>coluna ou uma matriz de <xref:System.Data.DataColumn>objetos quando a tabela tem mais do que uma chave primária.</xref:System.Data.DataColumn> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataTable.PrimaryKey%2A>"
  example:
  - "The following example uses the values of an array to find a specific row in a collection of <xref:System.Data.DataRow> objects. The method assumes that a <xref:System.Data.DataTable> exists with three primary key columns. After creating an array of the values, the code uses the <xref:System.Data.DataRowCollection.Find%2A> method with the array to get the particular object that you want.  \n  \n [!code-cs[Classic WebData DataRowCollection.Find1 Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_6_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Find1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_6_1.vb)]"
  syntax:
    content: public System.Data.DataRow Find (object[] keys);
    parameters:
    - id: keys
      type: System.Object[]
      description: "Uma matriz de valores de chave primárias para localizar. O tipo da matriz é <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.DataRow
      description: "A <xref href=&quot;System.Data.DataRow&quot;> </xref> especificado um objeto que contém os valores de chaves primários; caso contrário, o valor de um valor nulo se o valor de chave primária não existe no <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  overload: System.Data.DataRowCollection.Find*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Nenhuma linha corresponde a esse valor de índice."
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "A tabela não tem uma chave primária."
  platform:
  - net462
- uid: System.Data.DataRowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataRowCollection.GetEnumerator()
  fullName: System.Data.DataRowCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um <xref:System.Collections.IEnumerator>para esta coleção.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>para esta coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataRowCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  id: IndexOf(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: IndexOf(DataRow)
  nameWithType: DataRowCollection.IndexOf(DataRow)
  fullName: System.Data.DataRowCollection.IndexOf(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o índice especificado da <xref href=&quot;System.Data.DataRow&quot;> </xref> objeto."
  syntax:
    content: public int IndexOf (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "O <xref uid=&quot;langword_csharp_DataRow&quot; name=&quot;DataRow&quot; href=&quot;&quot;> </xref> para procurar."
    return:
      type: System.Int32
      description: "O índice baseado em zero da linha ou -1 se a linha não foi encontrada na coleção."
  overload: System.Data.DataRowCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  id: InsertAt(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: InsertAt(DataRow,Int32)
  nameWithType: DataRowCollection.InsertAt(DataRow,Int32)
  fullName: System.Data.DataRowCollection.InsertAt(DataRow,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Insere uma nova linha na coleção na localização especificada."
  remarks: "A localização especificada pela InsertAt é refletida by the order of linhas o <xref:System.Data.DataRowCollection>apenas.</xref:System.Data.DataRowCollection> Se mais de uma linha é devolvida num <xref:System.Data.DataRow>matriz, a linha inserida não pode ser devolvida na localização especificada pela InsertAt.</xref:System.Data.DataRow> Por exemplo, o <xref:System.Data.DataTable.Rows%2A>propriedade devolve a linha na posição especificada insert.</xref:System.Data.DataTable.Rows%2A> <xref:System.Data.DataTable.Select%2A>e <xref:System.Data.DataRow.GetChildRows%2A>não pode.</xref:System.Data.DataRow.GetChildRows%2A></xref:System.Data.DataTable.Select%2A> Quando escreve o conteúdo <xref:System.Data.DataRowCollection>como XML, por exemplo <xref:System.Data.DataSet.WriteXml%2A>as linhas são escritas, de acordo com a ordem especificada por <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataSet.WriteXml%2A> </xref:System.Data.DataRowCollection>       Se o valor especificado para o `pos` parâmetro é superior ao número de linhas na coleção, a nova linha é adicionada ao fim."
  syntax:
    content: public void InsertAt (System.Data.DataRow row, int pos);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "The <xref href=&quot;System.Data.DataRow&quot;></xref> to add."
    - id: pos
      type: System.Int32
      description: "A localização (baseado em zero) na coleção onde pretende adicionar o <xref uid=&quot;langword_csharp_DataRow&quot; name=&quot;DataRow&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRowCollection.Item(Int32)
  fullName: System.Data.DataRowCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém a linha no índice especificado."
  remarks: "Utilize o <xref:System.Data.DataRowCollection.Contains%2A>método para determinar se um valor específico existe na coluna chave de uma linha.</xref:System.Data.DataRowCollection.Contains%2A>"
  example:
  - "The following example prints the value of column 1 of each row in a <xref:System.Data.DataRowCollection>.  \n  \n [!code-vb[Classic WebData DataRowCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarowcol_1.vb)]\n [!code-cs[Classic WebData DataRowCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datarowcol_1.cs)]"
  syntax:
    content: public System.Data.DataRow this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da linha a devolver."
    return:
      type: System.Data.DataRow
      description: "Especificado <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRowCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O valor de índice é superior ao número de itens na coleção."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Remove(System.Data.DataRow)
  id: Remove(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Remove(DataRow)
  nameWithType: DataRowCollection.Remove(DataRow)
  fullName: System.Data.DataRowCollection.Remove(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o especificado <xref href=&quot;System.Data.DataRow&quot;> </xref> da coleção."
  remarks: "Quando uma linha é removida, todos os dados nessa linha é perdido. Também pode chamar o <xref:System.Data.DataRow.Delete%2A>método o <xref:System.Data.DataRow>Marcar de classe para apenas uma linha para remoção.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Delete%2A> Chamar `Remove` é a mesma chamada <xref:System.Data.DataRow.Delete%2A>e, em seguida, ao chamar <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.Delete%2A>       Remover não deve ser chamado num ciclo foreach ao repetir um <xref:System.Data.DataRowCollection>objeto.</xref:System.Data.DataRowCollection> Remover modifica o estado da coleção.       Também pode utilizar o <xref:System.Data.DataRowCollection.Clear%2A>método para remover todos os membros da coleção em simultâneo.</xref:System.Data.DataRowCollection.Clear%2A>"
  example:
  - "The following example uses the Remove method to delete a found row in a <xref:System.Data.DataRowCollection> object. The example first uses the <xref:System.Data.DataRowCollection.Contains%2A> method to determine whether the rows collection contains a row. If it does, the <xref:System.Data.DataRowCollection.Find%2A> method is used to find the specific row, and the Remove method is then used to remove the row.  \n  \n [!code-vb[Classic WebData DataRowCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_1_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "O <xref href=&quot;System.Data.DataRow&quot;> </xref> para remover."
  overload: System.Data.DataRowCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRowCollection.RemoveAt(Int32)
  fullName: System.Data.DataRowCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove a linha no índice especificado da coleção."
  remarks: "Quando uma linha é removida, todos os dados nessa linha é perdido. Também pode chamar o <xref:System.Data.DataRow.Delete%2A>método o <xref:System.Data.DataRow>Marcar de classe para apenas uma linha para remoção.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Delete%2A> Chamar `RemoveAt` é a mesma chamada <xref:System.Data.DataRow.Delete%2A>e, em seguida, ao chamar <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.Delete%2A>       Pode utilizar o <xref:System.Data.DataRowCollection.Clear%2A>método para remover todos os membros da coleção em simultâneo.</xref:System.Data.DataRowCollection.Clear%2A>"
  example:
  - "The following example removes the last row in a <xref:System.Data.DataRowCollection> by calling the RemoveAt method.  \n  \n [!code-vb[Classic WebData DataRowCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_3_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice da linha para remover."
  overload: System.Data.DataRowCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.Data.MissingPrimaryKeyException
  parent: System.Data
  isExternal: false
  name: MissingPrimaryKeyException
  nameWithType: MissingPrimaryKeyException
  fullName: System.Data.MissingPrimaryKeyException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRowCollection.Add(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add(DataRow)
  nameWithType: DataRowCollection.Add(DataRow)
  fullName: System.Data.DataRowCollection.Add(DataRow)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRowCollection.Add(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add(Object[])
  nameWithType: DataRowCollection.Add(Object[])
  fullName: System.Data.DataRowCollection.Add(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRowCollection.Clear
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRowCollection.Clear()
  fullName: System.Data.DataRowCollection.Clear()
- uid: System.Data.DataRowCollection.Contains(System.Object)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: DataRowCollection.Contains(Object)
  fullName: System.Data.DataRowCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataRowCollection.Contains(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains(Object[])
  nameWithType: DataRowCollection.Contains(Object[])
  fullName: System.Data.DataRowCollection.Contains(Object[])
- uid: System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataRowCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataRowCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo(DataRow[],Int32)
  nameWithType: DataRowCollection.CopyTo(DataRow[],Int32)
  fullName: System.Data.DataRowCollection.CopyTo(DataRow[],Int32)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRowCollection.Count
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Count
  nameWithType: DataRowCollection.Count
  fullName: System.Data.DataRowCollection.Count
- uid: System.Data.DataRowCollection.Find(System.Object)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find(Object)
  nameWithType: DataRowCollection.Find(Object)
  fullName: System.Data.DataRowCollection.Find(Object)
- uid: System.Data.DataRowCollection.Find(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find(Object[])
  nameWithType: DataRowCollection.Find(Object[])
  fullName: System.Data.DataRowCollection.Find(Object[])
- uid: System.Data.DataRowCollection.GetEnumerator
  parent: System.Data.DataRowCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataRowCollection.GetEnumerator()
  fullName: System.Data.DataRowCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: IndexOf(DataRow)
  nameWithType: DataRowCollection.IndexOf(DataRow)
  fullName: System.Data.DataRowCollection.IndexOf(DataRow)
- uid: System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: InsertAt(DataRow,Int32)
  nameWithType: DataRowCollection.InsertAt(DataRow,Int32)
  fullName: System.Data.DataRowCollection.InsertAt(DataRow,Int32)
- uid: System.Data.DataRowCollection.Item(System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRowCollection.Item(Int32)
  fullName: System.Data.DataRowCollection.Item(Int32)
- uid: System.Data.DataRowCollection.Remove(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Remove(DataRow)
  nameWithType: DataRowCollection.Remove(DataRow)
  fullName: System.Data.DataRowCollection.Remove(DataRow)
- uid: System.Data.DataRowCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRowCollection.RemoveAt(Int32)
  fullName: System.Data.DataRowCollection.RemoveAt(Int32)
- uid: System.Data.DataRowCollection.Add*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add
  nameWithType: DataRowCollection.Add
- uid: System.Data.DataRowCollection.Clear*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Clear
  nameWithType: DataRowCollection.Clear
- uid: System.Data.DataRowCollection.Contains*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains
  nameWithType: DataRowCollection.Contains
- uid: System.Data.DataRowCollection.CopyTo*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRowCollection.CopyTo
- uid: System.Data.DataRowCollection.Count*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Count
  nameWithType: DataRowCollection.Count
- uid: System.Data.DataRowCollection.Find*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find
  nameWithType: DataRowCollection.Find
- uid: System.Data.DataRowCollection.GetEnumerator*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataRowCollection.GetEnumerator
- uid: System.Data.DataRowCollection.IndexOf*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRowCollection.IndexOf
- uid: System.Data.DataRowCollection.InsertAt*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: InsertAt
  nameWithType: DataRowCollection.InsertAt
- uid: System.Data.DataRowCollection.Item*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Item
  nameWithType: DataRowCollection.Item
- uid: System.Data.DataRowCollection.Remove*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Remove
  nameWithType: DataRowCollection.Remove
- uid: System.Data.DataRowCollection.RemoveAt*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRowCollection.RemoveAt
