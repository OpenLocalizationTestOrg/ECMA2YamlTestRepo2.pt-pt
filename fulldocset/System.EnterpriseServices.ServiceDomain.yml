### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ServiceDomain
  id: ServiceDomain
  children:
  - System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  - System.EnterpriseServices.ServiceDomain.Leave
  langs:
  - csharp
  name: ServiceDomain
  nameWithType: ServiceDomain
  fullName: System.EnterpriseServices.ServiceDomain
  type: Class
  summary: "Permite que um segmento de código identificado por <> </> *> e <> </> *> para executar no seu próprio contexto e comportar-se como se fosse um método que é chamado um objeto criado no contexto. Esta classe não pode ser herdada."
  remarks: "O <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>métodos utilizados pares para coloque o código que, em seguida, pode utilizar os serviços do COM+.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> Código que é colocado entre chamadas para <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>é executado no seu próprio contexto e funciona como se fosse um método que é chamado um objeto criado no contexto.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> O <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>podem ser aninhados em pares.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> É até o utilizador para se certificar de que são equilibrados pares de chamadas para que cada chamada para <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>corresponde a uma chamada anterior para <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</xref:System.EnterpriseServices.ServiceDomain.Enter%2A> </xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ServiceDomain
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  id: Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Cria o contexto especificado pelo <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> de objeto e envia-a para a pilha de contexto para se tornar o contexto atual."
  remarks: "Introduza cria pela primeira vez um contexto configurado como especificado pelo <xref:System.EnterpriseServices.ServiceConfig>objeto que é transmitido como o `cfg` parâmetro.</xref:System.EnterpriseServices.ServiceConfig> As políticas no lado do cliente e o servidor, em seguida, são acionadas como se tivesse Ocorreu uma chamada de método. O contexto de nova, em seguida, é feito por uma pilha de contexto e torna-se o contexto atual. Devido à sua estrutura eficiente e porque não existem threads de empacotamento de referências está envolvido, utilizar Enter e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>envolve significativamente reduzida sobrecarga comparado com uma chamada de método equivalente.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: public static void Enter (System.EnterpriseServices.ServiceConfig cfg);
    parameters:
    - id: cfg
      type: System.EnterpriseServices.ServiceConfig
      description: "A <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> que contém as informações de configuração para os serviços a ser utilizado dentro de código incluído."
  overload: System.EnterpriseServices.ServiceDomain.Enter*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>Não é suportado na plataforma atual."
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Leave
  id: Leave
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Aciona o servidor e, em seguida, as políticas do lado do cliente, como se foram devolver uma chamada de método. O contexto atual, em seguida, é popped da pilha de contexto e o contexto que estava a ser executado quando <xref:System.EnterpriseServices.ServiceDomain.Enter*>foi chamado torna-se o contexto atual.</xref:System.EnterpriseServices.ServiceDomain.Enter*>"
  syntax:
    content: public static System.EnterpriseServices.TransactionStatus Leave ();
    parameters: []
    return:
      type: System.EnterpriseServices.TransactionStatus
      description: "Um do <xref href=&quot;System.EnterpriseServices.TransactionStatus&quot;> </xref> valores."
  overload: System.EnterpriseServices.ServiceDomain.Leave*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>Não é suportado na plataforma atual."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
- uid: System.EnterpriseServices.ServiceConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: ServiceConfig
  nameWithType: ServiceConfig
  fullName: System.EnterpriseServices.ServiceConfig
- uid: System.EnterpriseServices.ServiceDomain.Leave
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
- uid: System.EnterpriseServices.TransactionStatus
  parent: System.EnterpriseServices
  isExternal: false
  name: TransactionStatus
  nameWithType: TransactionStatus
  fullName: System.EnterpriseServices.TransactionStatus
- uid: System.EnterpriseServices.ServiceDomain.Enter*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter
  nameWithType: ServiceDomain.Enter
- uid: System.EnterpriseServices.ServiceDomain.Leave*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave
  nameWithType: ServiceDomain.Leave
