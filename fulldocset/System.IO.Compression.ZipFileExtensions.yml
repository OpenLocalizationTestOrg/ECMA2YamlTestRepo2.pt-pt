### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipFileExtensions
  id: ZipFileExtensions
  children:
  - System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  - System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  - System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  - System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  langs:
  - csharp
  name: ZipFileExtensions
  nameWithType: ZipFileExtensions
  fullName: System.IO.Compression.ZipFileExtensions
  type: Class
  summary: "Provides extension methods for the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> and <xref href=&quot;System.IO.Compression.ZipArchiveEntry&quot;></xref> classes."
  remarks: "The ZipFileExtensions class contains only static methods that extend the <xref:System.IO.Compression.ZipArchive> and <xref:System.IO.Compression.ZipArchiveEntry> classes. You do not create an instance of the ZipFileExtensions class; instead, you use these methods from instances of <xref:System.IO.Compression.ZipArchive> or <xref:System.IO.Compression.ZipArchiveEntry>.       To use the extension methods, you must reference the `System.IO.Compression.FileSystem` assembly in your project. The `System.IO.Compression.FileSystem` assembly is not available in [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. Therefore, the ZipFileExtensions and <xref:System.IO.Compression.ZipFile> classes (both of which are in the `System.IO.Compression.FileSystem` assembly) are not available in [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you work with compressed files by using the methods in <xref:System.IO.Compression.ZipArchive>, <xref:System.IO.Compression.ZipArchiveEntry>, <xref:System.IO.Compression.DeflateStream>, and <xref:System.IO.Compression.GZipStream>.       The ZipFileExtensions class contains three methods that extend <xref:System.IO.Compression.ZipArchive>:      -   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>      -   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>      -   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>       The ZipFileExtensions class contains two methods that extend <xref:System.IO.Compression.ZipArchiveEntry>:      -   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>      -   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file, and extract the contents of the archive to a directory.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/t-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/t-system.io.compression._0_1.vb)]  \n  \n The following example shows how to iterate through the contents of a zip archive and extract files that have a .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._0_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._0_2.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public static class ZipFileExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  id: CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: CreateEntryFromFile(ZipArchive,String,String)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "Archives a file by compressing it and adding it to the zip archive."
  remarks: "The new entry in the archive contains the contents of the file specified by `sourceFileName`. If an entry with the specified name (`entryName`) already exists in the archive, a second entry is created with an identical name. The <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> property of the entry is set to the last time the file on the file system was changed."
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/2ae78e9a-102e-41b0-a8a5-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/2ae78e9a-102e-41b0-a8a5-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);
    parameters:
    - id: destination
      type: System.IO.Compression.ZipArchive
      description: "The zip archive to add the file to."
    - id: sourceFileName
      type: System.String
      description: "The path to the file to be archived. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory."
    - id: entryName
      type: System.String
      description: "The name of the entry to create in the zip archive."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "A wrapper for the new entry in the zip archive."
  overload: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code> is <xref:System.String>, contains only white space, or contains at least one invalid character.       -or-       <code>entryName</code> is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code> or <code>entryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "In <code>sourceFileName</code>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceFileName</code> is invalid (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The file specified by <code>sourceFileName</code> cannot be opened."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>sourceFileName</code> specifies a directory.       -or-       The caller does not have the required permission to access the file specified by <code>sourceFileName</code>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "The file specified by <code>sourceFileName</code> is not found."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>sourceFileName</code> parameter is in an invalid format.       -or-       The zip archive does not support writing."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive has been disposed."
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  id: CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "Archives a file by compressing it using the specified compression level and adding it to the zip archive."
  remarks: "The new entry in the archive contains the contents of the file specified by `sourceFileName`. If an entry with the specified name (`entryName`) already exists in the archive, a second entry is created with an identical name. The <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> property of the entry is set to the last time the file on the file system was changed."
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file, and specify the compression level.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#4](~/add/codesnippet/csharp/75299a50-40f3-40da-b38c-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#4](~/add/codesnippet/visualbasic/75299a50-40f3-40da-b38c-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: destination
      type: System.IO.Compression.ZipArchive
      description: "The zip archive to add the file to."
    - id: sourceFileName
      type: System.String
      description: "The path to the file to be archived. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory."
    - id: entryName
      type: System.String
      description: "The name of the entry to create in the zip archive."
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "A wrapper for the new entry in the zip archive."
  overload: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code> is <xref:System.String>, contains only white space, or contains at least one invalid character.       -or-       <code>entryName</code> is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code> or <code>entryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceFileName</code> is invalid (for example, it is on an unmapped drive)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "In <code>sourceFileName</code>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The file specified by <code>sourceFileName</code> cannot be opened."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>sourceFileName</code> specifies a directory.       -or-       The caller does not have the required permission to access the file specified by <code>sourceFileName</code>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "The file specified by <code>sourceFileName</code> is not found."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>sourceFileName</code> parameter is in an invalid format.       -or-       The zip archive does not support writing."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive has been disposed."
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  id: ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: ExtractToDirectory(ZipArchive,String)
  nameWithType: ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "Extracts all the files in the zip archive to a directory on the file system."
  remarks: "This method creates the directory specified by `destinationDirectoryName`. If the destination directory already exists, this method does not overwrite it; it throws an <xref:System.IO.IOException> exception. The method also creates subdirectories that reflect the hierarchy in the zip archive. If an error occurs during extraction, the archive remains partially extracted. Each extracted file has the same relative path to the directory specified by `destinationDirectoryName` as its source entry has to the root of the archive."
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file, and extract the archive to a new directory. In order to compiler this code example, you must reference the `System.IO.Compression` and `System.IO.Compression.FileSystem` assemblies in your project.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/4accbbec-99e5-4a5c-a5ba-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/4accbbec-99e5-4a5c-a5ba-_1.vb)]"
  syntax:
    content: public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);
    parameters:
    - id: source
      type: System.IO.Compression.ZipArchive
      description: "The zip archive to extract files from."
    - id: destinationDirectoryName
      type: System.String
      description: "The path to the directory to place the extracted files in. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory."
  overload: System.IO.Compression.ZipFileExtensions.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code> is <xref:System.String>, contains only white space, or contains at least one invalid character."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "The specified path exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The specified path is invalid (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The directory specified by <code>destinationDirectoryName</code> already exists.       -or-       The name of an entry in the archive is <xref:System.String>, contains only white space, or contains at least one invalid character.       -or-       Extracting an entry from the archive would create a file that is outside the directory specified by <code>destinationDirectoryName</code>. (For example, this might happen if the entry name contains parent directory accessors.)       -or-       Two or more entries in the archive have the same name."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "The caller does not have the required permission to write to the destination directory."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code> contains an invalid format."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "An archive entry cannot be found or is corrupt.       -or-       An archive entry was compressed by using a compression method that is not supported."
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  id: ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: ExtractToFile(ZipArchiveEntry,String)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "Extracts an entry in the zip archive to a file."
  remarks: "If the destination file already exists, this method does not overwrite it; it throws an <xref:System.IO.IOException> exception. To overwrite an existing file, use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> method overload instead.       The last write time of the file is set to the last time the entry in the zip archive was changed; this value is stored in the <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> property.       You cannot use this method to extract a directory; use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> method instead."
  example:
  - "The following example shows how to iterate through the contents of a zip archive file and extract files that have a .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/8bd2b877-de70-46a7-bd7b-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/8bd2b877-de70-46a7-bd7b-_1.vb)]"
  syntax:
    content: public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);
    parameters:
    - id: source
      type: System.IO.Compression.ZipArchiveEntry
      description: "The zip archive entry to extract a file from."
    - id: destinationFileName
      type: System.String
      description: "The path of the file to create from the contents of the entry. You can  specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory."
  overload: System.IO.Compression.ZipFileExtensions.ExtractToFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>destinationFileName</code> specifies a directory."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The specified path is invalid (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationFileName</code> already exists.       -or-       An I/O error occurred.       -or-       The entry is currently open for writing.       -or-       The entry has been deleted from the archive."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "The caller does not have the required permission to create the new file."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The entry is missing from the archive, or is corrupt and cannot be read.       -or-       The entry has been compressed by using a compression method that is not supported."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive that this entry belongs to has been disposed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationFileName</code> is in an invalid format.       -or-       The zip archive for this entry was opened in <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> mode, which does not permit the retrieval of entries."
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  id: ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: ExtractToFile(ZipArchiveEntry,String,Boolean)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "Extracts an entry in the zip archive to a file, and optionally overwrites an existing file that has the same name."
  remarks: "The last write time of the file is set to the last time the entry in the zip archive was changed; this value is stored in the <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> property.       You cannot use this method to extract a directory; use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> method instead."
  example:
  - "The following example shows how to iterate through the contents of a zip archive file, and extract files that have a .txt extension. It overwrites an existing file that has the same name in the destination folder. In order to compiler this code example, you must reference the `System.IO.Compression` and `System.IO.Compression.FileSystem` assemblies in your project.  \n  \n [!code-vb[System.IO.Compression.ZipArchive#2](~/add/codesnippet/visualbasic/8c3e1507-3ebb-41ad-8fc8-_1.vb)]\n [!code-cs[System.IO.Compression.ZipArchive#2](~/add/codesnippet/csharp/8c3e1507-3ebb-41ad-8fc8-_1.cs)]"
  syntax:
    content: public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);
    parameters:
    - id: source
      type: System.IO.Compression.ZipArchiveEntry
      description: "The zip archive entry to extract a file from."
    - id: destinationFileName
      type: System.String
      description: "The path of the file to create from the contents of the entry. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to overwrite an existing file that has the same name as the destination file; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IO.Compression.ZipFileExtensions.ExtractToFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>destinationFileName</code> specifies a directory."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "The specified path is invalid (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationFileName</code> already exists and <code>overwrite</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       An I/O error occurred.       -or-       The entry is currently open for writing.       -or-       The entry has been deleted from the archive."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "The caller does not have the required permission to create the new file."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The entry is missing from the archive or is corrupt and cannot be read.       -or-       The entry has been compressed by using a compression method that is not supported."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive that this entry belongs to has been disposed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationFileName</code> is in an invalid format.       -or-       The zip archive for this entry was opened in <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> mode, which does not permit the retrieval of entries."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: CreateEntryFromFile(ZipArchive,String,String)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
- uid: System.IO.Compression.ZipArchiveEntry
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToDirectory(ZipArchive,String)
  nameWithType: ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToFile(ZipArchiveEntry,String)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToFile(ZipArchiveEntry,String,Boolean)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile*
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: CreateEntryFromFile
  nameWithType: ZipFileExtensions.CreateEntryFromFile
- uid: System.IO.Compression.ZipFileExtensions.ExtractToDirectory*
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToDirectory
  nameWithType: ZipFileExtensions.ExtractToDirectory
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile*
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToFile
  nameWithType: ZipFileExtensions.ExtractToFile
