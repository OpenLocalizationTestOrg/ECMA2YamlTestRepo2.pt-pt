### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MultiView
  id: MultiView
  children:
  - System.Web.UI.WebControls.MultiView.#ctor
  - System.Web.UI.WebControls.MultiView.ActiveViewChanged
  - System.Web.UI.WebControls.MultiView.ActiveViewIndex
  - System.Web.UI.WebControls.MultiView.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.MultiView.CreateControlCollection
  - System.Web.UI.WebControls.MultiView.EnableTheming
  - System.Web.UI.WebControls.MultiView.GetActiveView
  - System.Web.UI.WebControls.MultiView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.MultiView.NextViewCommandName
  - System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)
  - System.Web.UI.WebControls.MultiView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.MultiView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.MultiView.PreviousViewCommandName
  - System.Web.UI.WebControls.MultiView.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.WebControls.MultiView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.MultiView.SaveControlState
  - System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)
  - System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName
  - System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName
  - System.Web.UI.WebControls.MultiView.Views
  langs:
  - csharp
  name: MultiView
  nameWithType: MultiView
  fullName: System.Web.UI.WebControls.MultiView
  type: Class
  summary: "Represents a control that acts as a container for a group of <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> controls."
  remarks: "In this topic:      -   [Introduction](#introduction)      -   [Declarative Syntax](#declarative_syntax)      <a name=&quot;introduction&quot;></a>    ## Introduction    The MultiView control is a container for a group of <xref:System.Web.UI.WebControls.View> controls. It allows you to define a group of <xref:System.Web.UI.WebControls.View> controls, where each <xref:System.Web.UI.WebControls.View> control contains child controls. Your application can then render a specific <xref:System.Web.UI.WebControls.View> control to the client based on criteria such as user identity, user preferences, and information passed in a query-string parameter. You can also use the MultiView control to create wizards. In this scenario, each <xref:System.Web.UI.WebControls.View> control contained in a MultiView control represents a different step or page in the wizard. You should also use this control to develop multiple-screen applications for mobile devices. This control provides the same functionality as the ASP.NET mobile <xref:System.Web.UI.MobileControls.Form> control in .NET Framework version 1.1.       Only one <xref:System.Web.UI.WebControls.View> control at a time can be defined as the active view within a MultiView control. When a <xref:System.Web.UI.WebControls.View> control is defined as the active view, the child controls that it contains are rendered to the client. You can use either the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property or the <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> method to define the active view. If the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property is empty, the MultiView control does not render any content to the client. If the active view is set to a <xref:System.Web.UI.WebControls.View> that does not exist within the MultiView control, an <xref:System.ArgumentOutOfRangeException> is raised at run time.       You can define the active view declaratively or programmatically. Setting the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property declaratively when you define the MultiView control causes the <xref:System.Web.UI.WebControls.View> control that is set as the active view to render to the client the first time the MultiView control is called. The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property declaratively.      ```   <asp:MultiView id=&quot;MultiView1&quot; ActiveViewIndex=0 runat=&quot;Server&quot;>    ```       Setting the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property programmatically, or calling the <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> method, allows the application to determine which <xref:System.Web.UI.WebControls.View> control to render to the client at run time based on criteria such as a user&quot;s identity or preferences.       To allow users to navigate between <xref:System.Web.UI.WebControls.View> controls within a MultiView control, you can add a <xref:System.Web.UI.WebControls.LinkButton> or <xref:System.Web.UI.WebControls.Button> control to each <xref:System.Web.UI.WebControls.View> control. To take advantage of the MultiView control&quot;s automatic updating of the currently active <xref:System.Web.UI.WebControls.View>, set the `CommandName` property on the button or link button to the value of one of the following command-name fields that corresponds to the desired navigation behavior: <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName>, or <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName>.      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:MultiView       ActiveViewIndex=&quot;integer&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnActiveViewChanged=&quot;ActiveViewChanged event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Visible=&quot;True|False&quot;   >               <asp:TemplatedWizardStep                   AllowReturn=&quot;True|False&quot;                   ContentTemplateContainer=&quot;string&quot;                   EnableTheming=&quot;True|False&quot;                   EnableViewState=&quot;True|False&quot;                   ID=&quot;string&quot;                   OnActivate=&quot;Activate event handler&quot;                   OnDataBinding=&quot;DataBinding event handler&quot;                   OnDeactivate=&quot;Deactivate event handler&quot;                   OnDisposed=&quot;Disposed event handler&quot;                   OnInit=&quot;Init event handler&quot;                   OnLoad=&quot;Load event handler&quot;                   OnPreRender=&quot;PreRender event handler&quot;                   OnUnload=&quot;Unload event handler&quot;                   runat=&quot;server&quot;                   SkinID=&quot;string&quot;                   StepType=&quot;Auto|Complete|Finish|Start|Step&quot;                   Title=&quot;string&quot;                   Visible=&quot;True|False&quot;   >                           <ContentTemplate>                               <!-- child controls -->                           </ContentTemplate>                           <CustomNavigationTemplate>                               <!-- child controls -->                           </CustomNavigationTemplate>               </asp:TemplatedWizardStep>               <asp:View                   EnableTheming=&quot;True|False&quot;                   EnableViewState=&quot;True|False&quot;                   ID=&quot;string&quot;                   OnActivate=&quot;Activate event handler&quot;                   OnDataBinding=&quot;DataBinding event handler&quot;                   OnDeactivate=&quot;Deactivate event handler&quot;                   OnDisposed=&quot;Disposed event handler&quot;                   OnInit=&quot;Init event handler&quot;                   OnLoad=&quot;Load event handler&quot;                   OnPreRender=&quot;PreRender event handler&quot;                   OnUnload=&quot;Unload event handler&quot;                   runat=&quot;server&quot;                   SkinID=&quot;string&quot;                   Visible=&quot;True|False&quot;               />               <asp:WizardStep                   AllowReturn=&quot;True|False&quot;                   EnableTheming=&quot;True|False&quot;                   EnableViewState=&quot;True|False&quot;                   ID=&quot;string&quot;                   OnActivate=&quot;Activate event handler&quot;                   OnDataBinding=&quot;DataBinding event handler&quot;                   OnDeactivate=&quot;Deactivate event handler&quot;                   OnDisposed=&quot;Disposed event handler&quot;                   OnInit=&quot;Init event handler&quot;                   OnLoad=&quot;Load event handler&quot;                   OnPreRender=&quot;PreRender event handler&quot;                   OnUnload=&quot;Unload event handler&quot;                   runat=&quot;server&quot;                   SkinID=&quot;string&quot;                   StepType=&quot;Auto|Complete|Finish|Start|Step&quot;                   Title=&quot;string&quot;                   Visible=&quot;True|False&quot;               />   </asp:MultiView>   ```"
  example:
  - "The following code example demonstrates how to use a MultiView control to create a basic survey. Each <xref:System.Web.UI.WebControls.View> control is a separate survey question. When the user clicks the **Previous** button on any page, the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property is decremented to navigate to the previous <xref:System.Web.UI.WebControls.View> control. When the user clicks the **Next** button on any page, the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property is incremented to navigate to the next <xref:System.Web.UI.WebControls.View> control.  \n  \n> [!NOTE]\n>  The following code samples use the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MultiView.ActiveViewIndex Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_405_1.aspx)]\n [!code-cs[MultiView.ActiveViewIndex Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_405_1.aspx)]  \n  \n The following code example demonstrates how to create a basic MultiView control that contains three <xref:System.Web.UI.WebControls.View> controls. The view that the user selects from the list box is set to the active view and displayed to the user. For a more detailed example of the MultiView control, see the other code examples provided in this topic.  \n  \n [!code-vb[MultiView Class Example 2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_405_2.aspx)]  \n  \n The following code example demonstrates how to create a MultiView control that contains three <xref:System.Web.UI.WebControls.View> controls. A <xref:System.Web.UI.WebControls.View> control does not have any style properties. Therefore, each <xref:System.Web.UI.WebControls.View> control contains a <xref:System.Web.UI.WebControls.Panel> control to allow styles to be set on the <xref:System.Web.UI.WebControls.View> control. The first time the page is loaded, the `DefaultView` is set as the active view using the <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> method. Each <xref:System.Web.UI.WebControls.View> control contains link buttons to allow the user to navigate to different views.  \n  \n [!code-vb[MultiView Class Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_405_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("ActiveViewChanged")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MultiViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.MultiViewControlBuilder))]

      [System.Web.UI.ParseChildren(typeof(System.Web.UI.WebControls.View))]

      [System.Web.UI.ToolboxData("<{0}:MultiView runat="server"></{0}:MultiView>")]

      public class MultiView : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: MultiView()
  nameWithType: MultiView.MultiView()
  fullName: System.Web.UI.WebControls.MultiView.MultiView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.MultiView> class."
  syntax:
    content: public MultiView ();
    parameters: []
  overload: System.Web.UI.WebControls.MultiView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.ActiveViewChanged
  id: ActiveViewChanged
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: ActiveViewChanged
  nameWithType: MultiView.ActiveViewChanged
  fullName: System.Web.UI.WebControls.MultiView.ActiveViewChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Occurs when the active <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control of a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control changes between posts to the server."
  remarks: "The ActiveViewChanged event is raised when the active <xref:System.Web.UI.WebControls.View> control within a <xref:System.Web.UI.WebControls.MultiView> control changes between posts to the server.       For more information about handling events, see [How to: Consume Events in a Web Forms Application](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to specify and code an event handler for the ActiveViewChanged event of a <xref:System.Web.UI.WebControls.MultiView> control. When the active view changes, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control on the page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[MultiView.ActiveViewChanged Event Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[MultiView.ActiveViewChanged Event Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_42_1.aspx)]"
  syntax:
    content: public event EventHandler ActiveViewChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.ActiveViewIndex
  id: ActiveViewIndex
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: ActiveViewIndex
  nameWithType: MultiView.ActiveViewIndex
  fullName: System.Web.UI.WebControls.MultiView.ActiveViewIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the index of the active <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control within a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "Use the ActiveViewIndex property to set a <xref:System.Web.UI.WebControls.View> control within a <xref:System.Web.UI.WebControls.MultiView> control as the active view. You can also use this property to return the index of the <xref:System.Web.UI.WebControls.View> control that is currently set as the active view. The index of a <xref:System.Web.UI.WebControls.View> control is determined by the order in which it is declared within a <xref:System.Web.UI.WebControls.MultiView> control. For example, the first <xref:System.Web.UI.WebControls.View> control declared within a <xref:System.Web.UI.WebControls.MultiView> control has an index of 0.       Only one <xref:System.Web.UI.WebControls.View> control at a time can be defined as active within a <xref:System.Web.UI.WebControls.MultiView> control. The <xref:System.Web.UI.WebControls.View> control that is set to the ActiveViewIndex property will be rendered to the client. If the ActiveViewIndex property is set to a <xref:System.Web.UI.WebControls.View> that does not exist within the <xref:System.Web.UI.WebControls.MultiView> control, a <xref:System.ArgumentOutOfRangeException> is raised at run time. If the property is empty, the <xref:System.Web.UI.WebControls.MultiView> control does not render any content to the client.       You can set the ActiveViewIndex property either declaratively at development time or programmatically at run time. Setting the ActiveViewIndex property declaratively when you define the <xref:System.Web.UI.WebControls.MultiView> control causes the <xref:System.Web.UI.WebControls.View> control that is set as the active view to render to the client the first time the <xref:System.Web.UI.WebControls.MultiView> control is called. Setting the ActiveViewIndex property programmatically allows the application to determine which <xref:System.Web.UI.WebControls.View> control to render to the client at run time based on criteria such as a user&quot;s identity or their preferences.       Alternately, you can use the <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> and <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> methods to set or get the active view within the <xref:System.Web.UI.WebControls.MultiView> control."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.MultiView> control to create a basic survey. Each <xref:System.Web.UI.WebControls.View> control is a separate survey question. When the user clicks the **Previous** button on any page, the ActiveViewIndex property is decremented to navigate to the previous <xref:System.Web.UI.WebControls.View> control. When the user clicks the **Next** button on any page, the ActiveViewIndex property is incremented to navigate to the next <xref:System.Web.UI.WebControls.View> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MultiView.ActiveViewIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_972_1.aspx)]\n [!code-cs[MultiView.ActiveViewIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_972_1.aspx)]"
  syntax:
    content: public virtual int ActiveViewIndex { get; set; }
    return:
      type: System.Int32
      description: "The zero-based index of the active <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control within a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control. The default is -1, indicating that no view is set as active."
  overload: System.Web.UI.WebControls.MultiView.ActiveViewIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified index was set to less than -1, or greater than or equal to the number of items on the list."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: MultiView.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.MultiView.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Notifies the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control that an XML or HTML element was parsed, and adds the element to the <xref href=&quot;System.Web.UI.WebControls.ViewCollection&quot;></xref> collection of the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "This method overrides the base class implementation to allow only <xref:System.Web.UI.WebControls.View> controls to be added to the <xref:System.Web.UI.WebControls.ViewCollection>."
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "An <xref:System.Object> that represents the parsed element."
  overload: System.Web.UI.WebControls.MultiView.AddParsedSubObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The specified <xref:System.Object> is not a <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: MultiView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.MultiView.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates a <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> to hold the child controls of the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "This method overrides the base implementation to always return a <xref:System.Web.UI.WebControls.ViewCollection> to contain the <xref:System.Web.UI.WebControls.View> controls of the current <xref:System.Web.UI.WebControls.MultiView> control."
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ViewCollection&quot;></xref> to contain the <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> controls of the current <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  overload: System.Web.UI.WebControls.MultiView.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: EnableTheming
  nameWithType: MultiView.EnableTheming
  fullName: System.Web.UI.WebControls.MultiView.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether themes apply to the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "The EnableTheming property indicates whether themes are enabled for the <xref:System.Web.UI.WebControls.MultiView> control. The EnableTheming property also affects whether themes are enabled for the controls contained in its <xref:System.Web.UI.Control.Controls%2A> collection. When the EnableTheming property is `true`, the application&quot;s theme directory is searched for control skins to apply. If no skin for the particular control exists in the theme directory, a skin is not applied. When the EnableTheming property is `false`, the theme directory is not searched and the contents of the <xref:System.Web.UI.Control.SkinID%2A> property are not used.       A control can override the EnableTheming value set by its parent control or the containing page. For example, if a <xref:System.Web.UI.WebControls.MultiView> control has EnableTheming set to `false`, you can selectively apply themes to individual <xref:System.Web.UI.WebControls.View> controls contained within the <xref:System.Web.UI.WebControls.MultiView> control by setting the <xref:System.Web.UI.Control.EnableTheming%2A> property to `true` on the individual child controls."
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if themes are to be used; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.MultiView.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.GetActiveView
  id: GetActiveView
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: GetActiveView()
  nameWithType: MultiView.GetActiveView()
  fullName: System.Web.UI.WebControls.MultiView.GetActiveView()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns the current active <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control within a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "Use this method to return the <xref:System.Web.UI.WebControls.View> control within a <xref:System.Web.UI.WebControls.MultiView> control that is currently set as the active view. This method returns a <xref:System.Web.UI.WebControls.View> control and therefore can be used to access the properties of the active view. For example, `MultiView1.GetActiveView.ID` returns the value of the <xref:System.Web.UI.Control.ID%2A> property of the current active view in MultiView1.       Alternately, you can use the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property to get or set the zero-based index of the current active view in a <xref:System.Web.UI.WebControls.MultiView> control. This property can be accessed either declaratively or programmatically."
  example:
  - "The following example demonstrates how to create a <xref:System.Web.UI.WebControls.MultiView> control that contains three <xref:System.Web.UI.WebControls.View> controls. When the <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> event is raised, the GetActiveView method is used to return the current active view and display it in a <xref:System.Web.UI.WebControls.Label> control on the page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[MultiView.ActiveViewChanged Event Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_87_1.aspx)]\n [!code-vb[MultiView.ActiveViewChanged Event Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_87_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.View GetActiveView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.View
      description: "A <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control that represents the active view within a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  overload: System.Web.UI.WebControls.MultiView.GetActiveView*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex*> property is not set to a valid <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control within the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: MultiView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.MultiView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Loads the current state of the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  syntax:
    content: protected override void LoadControlState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that represents the state of the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  overload: System.Web.UI.WebControls.MultiView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.NextViewCommandName
  id: NextViewCommandName
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: NextViewCommandName
  nameWithType: MultiView.NextViewCommandName
  fullName: System.Web.UI.WebControls.MultiView.NextViewCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Represents the command name associated with the next <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control to display in a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control. This field is read-only."
  remarks: "Use the NextViewCommandName field to represent the &quot;NextView&quot; command name.       You can use the value of this field to take advantage of the <xref:System.Web.UI.WebControls.MultiView> control&quot;s automatic updating of the active <xref:System.Web.UI.WebControls.View> control. For example, if a <xref:System.Web.UI.WebControls.View> control contains a <xref:System.Web.UI.WebControls.Button> control that navigates to the previous <xref:System.Web.UI.WebControls.View>, you can set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to the value of the NextViewCommandName field, which is &quot;NextView&quot;. This causes the <xref:System.Web.UI.WebControls.MultiView> control to automatically decrement the value of the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property when the button is clicked."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.MultiView> control to create a basic survey. Each <xref:System.Web.UI.WebControls.View> control is a separate survey question. The <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> and NextViewCommandName fields are used to provide automatic navigation between the previous and next <xref:System.Web.UI.WebControls.View> controls in the survey.  \n  \n [!code-vb[MultiView.NextViewCommandName#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_0_1.aspx)]\n [!code-cs[MultiView.NextViewCommandName#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_0_1.aspx)]"
  syntax:
    content: public static readonly string NextViewCommandName;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)
  id: OnActiveViewChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: OnActiveViewChanged(EventArgs)
  nameWithType: MultiView.OnActiveViewChanged(EventArgs)
  fullName: System.Web.UI.WebControls.MultiView.OnActiveViewChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises the <xref href=&quot;System.Web.UI.WebControls.MultiView.ActiveViewChanged&quot;></xref> event of a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "The <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> event is raised when the active <xref:System.Web.UI.WebControls.View> control within a <xref:System.Web.UI.WebControls.MultiView> control changes between posts to the server, and you can provide a custom handler for this event.       Raising an event invokes the event handler through a delegate. For more information, see [How to: Consume Events in a Web Forms Application](~/add/includes/ajax-current-ext-md.md).       The OnActiveViewChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> event of a <xref:System.Web.UI.WebControls.MultiView> control. When the active view changes, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control on the page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[MultiView.ActiveViewChanged Event Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_82_1.aspx)]\n [!code-vb[MultiView.ActiveViewChanged Event Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_82_1.aspx)]"
  syntax:
    content: protected virtual void OnActiveViewChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains the event data."
  overload: System.Web.UI.WebControls.MultiView.OnActiveViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: MultiView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.MultiView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the event for the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control is passed to the page&quot;s UI server control hierarchy."
  remarks: "A <xref:System.Web.UI.WebControls.MultiView> control contains <xref:System.Web.UI.WebControls.View> controls that raise events. This method overrides the base implementation to handle navigation between <xref:System.Web.UI.WebControls.View> controls."
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "The source of the event."
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> object that contains the event data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the event has been canceled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.MultiView.OnBubbleEvent*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control cannot find the <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> specified in the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument*> property of <code>e</code>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "The <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument*> property of <code>e</code> cannot be parsed as an integer."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: MultiView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.MultiView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises the <xref href=&quot;System.Web.UI.Control.Init&quot;></xref> event."
  remarks: "When notified by this method, a <xref:System.Web.UI.WebControls.MultiView> control must perform any initialization steps that are required to create and set up an instance. In this stage of the server control&quot;s lifecycle, the control&quot;s view state has yet to be populated. You cannot access another server control when this method is called, even if it is a child or parent of this control. Other server controls are not certain to be created and ready for access."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> object that contains the event data."
  overload: System.Web.UI.WebControls.MultiView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.PreviousViewCommandName
  id: PreviousViewCommandName
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: PreviousViewCommandName
  nameWithType: MultiView.PreviousViewCommandName
  fullName: System.Web.UI.WebControls.MultiView.PreviousViewCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Represents the command name associated with the previous <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control to display in a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control. This field is read-only."
  remarks: "Use the PreviousViewCommandName field to represent the &quot;PrevView&quot; command name.       You can use the value of this field to take advantage of the <xref:System.Web.UI.WebControls.MultiView> control&quot;s automatic updating of the active <xref:System.Web.UI.WebControls.View> control. For example, if a <xref:System.Web.UI.WebControls.View> control contains a <xref:System.Web.UI.WebControls.Button> control that navigates to the next <xref:System.Web.UI.WebControls.View>, you can set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to the value of the PreviousViewCommandName field, which is &quot;PrevView&quot;. This causes the <xref:System.Web.UI.WebControls.MultiView> control to automatically increment the value of the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property when the button is clicked."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.MultiView> control to create a basic survey. Each <xref:System.Web.UI.WebControls.View> control is a separate survey question. The PreviousViewCommandName and <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> fields are used to provide automatic navigation between the previous and next <xref:System.Web.UI.WebControls.View> controls in the survey.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MultiView.NextViewCommandName#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_4_1.aspx)]\n [!code-cs[MultiView.NextViewCommandName#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_4_1.aspx)]"
  syntax:
    content: public static readonly string PreviousViewCommandName;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.RemovedControl(System.Web.UI.Control)
  id: RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: RemovedControl(Control)
  nameWithType: MultiView.RemovedControl(Control)
  fullName: System.Web.UI.WebControls.MultiView.RemovedControl(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Called after a <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control is removed from the <xref:System.Web.UI.Control.Controls*> collection of a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "The <xref:System.Web.UI.Control.RemovedControl%2A> method is called immediately after a <xref:System.Web.UI.WebControls.View> control is removed from the <xref:System.Web.UI.Control.Controls%2A> collection of a <xref:System.Web.UI.WebControls.MultiView> control."
  syntax:
    content: protected override void RemovedControl (System.Web.UI.Control ctl);
    parameters:
    - id: ctl
      type: System.Web.UI.Control
      description: "The <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control that has been removed."
  overload: System.Web.UI.WebControls.MultiView.RemovedControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: MultiView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.MultiView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Writes the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control content to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object, for display on the client."
  remarks: "The Render method is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.MultiView> control.       The Render method writes the rendered content of the active view to the client using the supplied <xref:System.Web.UI.HtmlTextWriter>. You can set the active view in a <xref:System.Web.UI.WebControls.MultiView> control using the <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> method or the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property. You can determine which one of the <xref:System.Web.UI.WebControls.View> controls in the <xref:System.Web.UI.WebControls.MultiView.Views%2A> collection is the active view, if any, by using the <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> method or the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property.       If an active view is set for the <xref:System.Web.UI.WebControls.MultiView> control, the active <xref:System.Web.UI.WebControls.View> control is used to render content for that view and its child controls. If an active view is not set for the <xref:System.Web.UI.WebControls.MultiView> control, no content is rendered to the <xref:System.Web.UI.HtmlTextWriter>."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that represents the output stream to render HTML content on the client."
  overload: System.Web.UI.WebControls.MultiView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: MultiView.SaveControlState()
  fullName: System.Web.UI.WebControls.MultiView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the current state of the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the state of the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control. If there is no state associated with the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.MultiView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)
  id: SetActiveView(System.Web.UI.WebControls.View)
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: SetActiveView(View)
  nameWithType: MultiView.SetActiveView(View)
  fullName: System.Web.UI.WebControls.MultiView.SetActiveView(View)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sets the specified <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control to the active view within a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "Use this method to set a <xref:System.Web.UI.WebControls.View> control within a <xref:System.Web.UI.WebControls.MultiView> control as the active view. Only one <xref:System.Web.UI.WebControls.View> control at a time can be defined as active within a <xref:System.Web.UI.WebControls.MultiView> control. The <xref:System.Web.UI.WebControls.View> control that is set as the active view is rendered to the client. If a <xref:System.Web.UI.WebControls.View> control that does not exist within the <xref:System.Web.UI.WebControls.MultiView> control is set as active, an exception is raised at run time. If no <xref:System.Web.UI.WebControls.View> control is set as the active view, the <xref:System.Web.UI.WebControls.MultiView> control does not render any content to the client.       Using the SetActiveView method to programmatically set the active view allows the application to determine which <xref:System.Web.UI.WebControls.View> control to render to the client at run time based on criteria such as a user&quot;s identity and preferences.       Alternately, you can use the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property to get or set the zero-based index of the current active view in a <xref:System.Web.UI.WebControls.MultiView> control. This property can be accessed either declaratively or programmatically."
  example:
  - "The following example demonstrates how to create a <xref:System.Web.UI.WebControls.MultiView> control that contains three <xref:System.Web.UI.WebControls.View> controls. The first time the page is loaded, the `DefaultView` is set as the active view using the SetActiveView method. Each <xref:System.Web.UI.WebControls.View> control contains link buttons to allow the user to navigate to different views.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MultiView Class Example#1](~/add/codesnippet/visualbasic/76c9fa12-8df1-431a-a4f3-_1.aspx)]"
  syntax:
    content: public void SetActiveView (System.Web.UI.WebControls.View view);
    parameters:
    - id: view
      type: System.Web.UI.WebControls.View
      description: "A <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control to set as the active view within a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  overload: System.Web.UI.WebControls.MultiView.SetActiveView*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The specified <code>view</code> parameter value was not contained in the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName
  id: SwitchViewByIDCommandName
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: SwitchViewByIDCommandName
  nameWithType: MultiView.SwitchViewByIDCommandName
  fullName: System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Represents the command name associated with changing the active <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control in a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control, based on a specified <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> id. This field is read-only."
  remarks: "Use the SwitchViewByIDCommandName field to represent the &quot;SwitchViewByID&quot; command name.       You can use the value of this field to take advantage of the <xref:System.Web.UI.WebControls.MultiView> control&quot;s automatic updating of the active <xref:System.Web.UI.WebControls.View> control. For example, if a <xref:System.Web.UI.WebControls.View> control contains a <xref:System.Web.UI.WebControls.Button> control that navigates to the first <xref:System.Web.UI.WebControls.View> when clicked, you can set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to the value of the SwitchViewByIDCommandName field, which is &quot;SwitchViewByID&quot;. Set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to the ID of the first <xref:System.Web.UI.WebControls.View> in the <xref:System.Web.UI.WebControls.MultiView> control, such as &quot;Page1&quot;. This causes the <xref:System.Web.UI.WebControls.MultiView> control to automatically set &quot;Page1&quot; as the active <xref:System.Web.UI.WebControls.View> when the button is clicked."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.MultiView> control to create a basic survey. Each <xref:System.Web.UI.WebControls.View> control is a separate survey question. The <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> and <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> fields are used to provide automatic navigation between the previous and next <xref:System.Web.UI.WebControls.View> controls in the survey. If the user clicks the **Retake Survey** button in the last <xref:System.Web.UI.WebControls.View> of the survey, the SwitchViewByIDCommandName field is used along with a command argument of \"Page1\" to redirect the user back to the first <xref:System.Web.UI.WebControls.View> of the survey.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MultiView.NextViewCommandName#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_8_1.aspx)]\n [!code-cs[MultiView.NextViewCommandName#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_8_1.aspx)]"
  syntax:
    content: public static readonly string SwitchViewByIDCommandName;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName
  id: SwitchViewByIndexCommandName
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: SwitchViewByIndexCommandName
  nameWithType: MultiView.SwitchViewByIndexCommandName
  fullName: System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Represents the command name associated with changing the active <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> control in a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control based on a specified <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> index. This field is read-only."
  remarks: "Use the SwitchViewByIndexCommandName field to represent the &quot;SwitchViewByIndex&quot; command name.       You can use the value of this field to take advantage of the <xref:System.Web.UI.WebControls.MultiView> control&quot;s automatic updating of the active <xref:System.Web.UI.WebControls.View> control. For example, if a <xref:System.Web.UI.WebControls.View> control contains a <xref:System.Web.UI.WebControls.Button> control that navigates to the first <xref:System.Web.UI.WebControls.View> when clicked, you can set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to the value of the SwitchViewByIndexCommandName field, which is &quot;SwitchViewByIndex&quot;. Set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to the index of the first <xref:System.Web.UI.WebControls.View> in the <xref:System.Web.UI.WebControls.MultiView> control, which is 0. This causes the <xref:System.Web.UI.WebControls.MultiView> control to automatically set the <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> property to 0 when the button is clicked."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.MultiView> control to create a basic survey. Each <xref:System.Web.UI.WebControls.View> control is a separate survey question. The <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> and <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> fields are used to provide automatic navigation between the previous and next <xref:System.Web.UI.WebControls.View> controls in the survey. If the user clicks the **Retake Survey** button in the last <xref:System.Web.UI.WebControls.View> of the survey, the SwitchViewByIndexCommandName field is used along with a command argument of 0 to redirect the user back to the first <xref:System.Web.UI.WebControls.View> of the survey.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[MultiView.SwitchViewByIndexCommandName#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_2_1.aspx)]\n [!code-vb[MultiView.SwitchViewByIndexCommandName#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_2_1.aspx)]"
  syntax:
    content: public static readonly string SwitchViewByIndexCommandName;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MultiView.Views
  id: Views
  parent: System.Web.UI.WebControls.MultiView
  langs:
  - csharp
  name: Views
  nameWithType: MultiView.Views
  fullName: System.Web.UI.WebControls.MultiView.Views
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the collection of <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> controls in the <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control."
  remarks: "Use this property to programmatically manage the <xref:System.Web.UI.WebControls.View> controls in a <xref:System.Web.UI.WebControls.MultiView> control."
  example:
  - "The following example demonstrates how to programmatically add <xref:System.Web.UI.WebControls.View> controls to a <xref:System.Web.UI.WebControls.MultiView> control. After each <xref:System.Web.UI.WebControls.View> control is created, the `MultiView.Views.Add()` syntax is used to add the <xref:System.Web.UI.WebControls.View> control to the <xref:System.Web.UI.WebControls.ViewCollection> collection of the <xref:System.Web.UI.WebControls.MultiView> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MultiView.Views Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1214_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.ViewCollection Views { get; }
    return:
      type: System.Web.UI.WebControls.ViewCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ViewCollection&quot;></xref> that represents a collection of <xref href=&quot;System.Web.UI.WebControls.View&quot;></xref> controls within a <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.MultiView.Views*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Web.UI.WebControls.MultiView.#ctor
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: MultiView()
  nameWithType: MultiView.MultiView()
  fullName: System.Web.UI.WebControls.MultiView.MultiView()
- uid: System.Web.UI.WebControls.MultiView.ActiveViewChanged
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: ActiveViewChanged
  nameWithType: MultiView.ActiveViewChanged
  fullName: System.Web.UI.WebControls.MultiView.ActiveViewChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.MultiView.ActiveViewIndex
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: ActiveViewIndex
  nameWithType: MultiView.ActiveViewIndex
  fullName: System.Web.UI.WebControls.MultiView.ActiveViewIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MultiView.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: MultiView.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.MultiView.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.MultiView.CreateControlCollection
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: CreateControlCollection()
  nameWithType: MultiView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.MultiView.CreateControlCollection()
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.MultiView.EnableTheming
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: EnableTheming
  nameWithType: MultiView.EnableTheming
  fullName: System.Web.UI.WebControls.MultiView.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MultiView.GetActiveView
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: GetActiveView()
  nameWithType: MultiView.GetActiveView()
  fullName: System.Web.UI.WebControls.MultiView.GetActiveView()
- uid: System.Web.UI.WebControls.View
  parent: System.Web.UI.WebControls
  isExternal: false
  name: View
  nameWithType: View
  fullName: System.Web.UI.WebControls.View
- uid: System.Web.UI.WebControls.MultiView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: MultiView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.MultiView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.MultiView.NextViewCommandName
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: NextViewCommandName
  nameWithType: MultiView.NextViewCommandName
  fullName: System.Web.UI.WebControls.MultiView.NextViewCommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: OnActiveViewChanged(EventArgs)
  nameWithType: MultiView.OnActiveViewChanged(EventArgs)
  fullName: System.Web.UI.WebControls.MultiView.OnActiveViewChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.MultiView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: MultiView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.MultiView.OnBubbleEvent(Object,EventArgs)
- uid: System.Web.UI.WebControls.MultiView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: MultiView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.MultiView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.MultiView.PreviousViewCommandName
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: PreviousViewCommandName
  nameWithType: MultiView.PreviousViewCommandName
  fullName: System.Web.UI.WebControls.MultiView.PreviousViewCommandName
- uid: System.Web.UI.WebControls.MultiView.RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: RemovedControl(Control)
  nameWithType: MultiView.RemovedControl(Control)
  fullName: System.Web.UI.WebControls.MultiView.RemovedControl(Control)
- uid: System.Web.UI.WebControls.MultiView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: MultiView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.MultiView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.MultiView.SaveControlState
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: SaveControlState()
  nameWithType: MultiView.SaveControlState()
  fullName: System.Web.UI.WebControls.MultiView.SaveControlState()
- uid: System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: SetActiveView(View)
  nameWithType: MultiView.SetActiveView(View)
  fullName: System.Web.UI.WebControls.MultiView.SetActiveView(View)
- uid: System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: SwitchViewByIDCommandName
  nameWithType: MultiView.SwitchViewByIDCommandName
  fullName: System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName
- uid: System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: SwitchViewByIndexCommandName
  nameWithType: MultiView.SwitchViewByIndexCommandName
  fullName: System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName
- uid: System.Web.UI.WebControls.MultiView.Views
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: Views
  nameWithType: MultiView.Views
  fullName: System.Web.UI.WebControls.MultiView.Views
- uid: System.Web.UI.WebControls.ViewCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ViewCollection
  nameWithType: ViewCollection
  fullName: System.Web.UI.WebControls.ViewCollection
- uid: System.Web.UI.WebControls.MultiView.#ctor*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: MultiView
  nameWithType: MultiView.MultiView
- uid: System.Web.UI.WebControls.MultiView.ActiveViewIndex*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: ActiveViewIndex
  nameWithType: MultiView.ActiveViewIndex
- uid: System.Web.UI.WebControls.MultiView.AddParsedSubObject*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: AddParsedSubObject
  nameWithType: MultiView.AddParsedSubObject
- uid: System.Web.UI.WebControls.MultiView.CreateControlCollection*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: CreateControlCollection
  nameWithType: MultiView.CreateControlCollection
- uid: System.Web.UI.WebControls.MultiView.EnableTheming*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: EnableTheming
  nameWithType: MultiView.EnableTheming
- uid: System.Web.UI.WebControls.MultiView.GetActiveView*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: GetActiveView
  nameWithType: MultiView.GetActiveView
- uid: System.Web.UI.WebControls.MultiView.LoadControlState*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: LoadControlState
  nameWithType: MultiView.LoadControlState
- uid: System.Web.UI.WebControls.MultiView.OnActiveViewChanged*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: OnActiveViewChanged
  nameWithType: MultiView.OnActiveViewChanged
- uid: System.Web.UI.WebControls.MultiView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: MultiView.OnBubbleEvent
- uid: System.Web.UI.WebControls.MultiView.OnInit*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: OnInit
  nameWithType: MultiView.OnInit
- uid: System.Web.UI.WebControls.MultiView.RemovedControl*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: RemovedControl
  nameWithType: MultiView.RemovedControl
- uid: System.Web.UI.WebControls.MultiView.Render*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: Render
  nameWithType: MultiView.Render
- uid: System.Web.UI.WebControls.MultiView.SaveControlState*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: SaveControlState
  nameWithType: MultiView.SaveControlState
- uid: System.Web.UI.WebControls.MultiView.SetActiveView*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: SetActiveView
  nameWithType: MultiView.SetActiveView
- uid: System.Web.UI.WebControls.MultiView.Views*
  parent: System.Web.UI.WebControls.MultiView
  isExternal: false
  name: Views
  nameWithType: MultiView.Views
