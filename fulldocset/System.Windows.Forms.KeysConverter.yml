### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeysConverter
  id: KeysConverter
  children:
  - System.Windows.Forms.KeysConverter.#ctor
  - System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  - System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: KeysConverter
  nameWithType: KeysConverter
  fullName: System.Windows.Forms.KeysConverter
  type: Class
  summary: "Provides a <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> to convert <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> objects to and from other representations."
  remarks: "Most commonly, the KeysConverter type converter is used to convert <xref:System.Windows.Forms.Keys> instances to and from their corresponding localized <xref:System.String> representations."
  example:
  - "The following code example demonstrates how to use the KeysConverter class to convert a <xref:System.Windows.Forms.Keys> to a <xref:System.String>. This example assumes that you have a <xref:System.Windows.Forms.TextBox> named `TextBox1` on a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SystemWindowsFormsKeys#1](~/add/codesnippet/csharp/KeysConverterCS/Form1.cs#1)]\n [!code-vb[SystemWindowsFormsKeys#1](~/add/codesnippet/visualbasic/KeysConverterVB/Form1.vb#1)]"
  syntax:
    content: 'public class KeysConverter : System.ComponentModel.TypeConverter, System.Collections.IComparer'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements:
  - System.Collections.IComparer
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: KeysConverter()
  nameWithType: KeysConverter.KeysConverter()
  fullName: System.Windows.Forms.KeysConverter.KeysConverter()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes an instance of the <xref href=&quot;System.Windows.Forms.KeysConverter&quot;></xref> class."
  remarks: "This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.KeysConverter> class.       Typically, you do not directly create an instance of a <xref:System.Windows.Forms.KeysConverter>. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."
  syntax:
    content: public KeysConverter ();
    parameters: []
  overload: System.Windows.Forms.KeysConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context."
  remarks: "The CanConvertFrom method is specialized to return `true` if the `sourceType` parameter is of type <xref:System.String> or <xref:System.Enum> array; otherwise, it defers evaluation to the base implementation of this method."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: sourceType
      type: System.Type
      description: "The <xref:System.Type> to convert from."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the conversion can be performed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.KeysConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context."
  remarks: "The CanConvertTo method is specialized to return `true` if the `destinationType` parameter is of type <xref:System.Enum> array; otherwise, it defers evaluation to the base implementation of this method."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: destinationType
      type: System.Type
      description: "The <xref:System.Type> to convert to."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the conversion can be performed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.KeysConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: Compare(Object,Object)
  nameWithType: KeysConverter.Compare(Object,Object)
  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Compares two key values for equivalence."
  remarks: "This method uses <xref:System.String.Compare%2A?displayProperty=fullName> to compare the two objects."
  syntax:
    content: public int Compare (object a, object b);
    parameters:
    - id: a
      type: System.Object
      description: "An <xref:System.Object> that represents the first key to compare."
    - id: b
      type: System.Object
      description: "An <xref:System.Object> that represents the second key to compare."
    return:
      type: System.Int32
      description: "An integer indicating the relationship between the two parameters.       <table><thead><tr><th> Value Type       </th><th> Condition       </th></tr></thead><tbody><tr><td> A negative integer.       </td><td><code>a</code> is less than <code>b</code>.       </td></tr><tr><td> zero       </td><td><code>a</code> equals <code>b</code>.       </td></tr><tr><td> A positive integer.       </td><td><code>a</code> is greater than <code>b</code>.       </td></tr></tbody></table>"
  overload: System.Windows.Forms.KeysConverter.Compare*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converts the specified object to the converter&quot;s native type."
  remarks: "The ConvertFrom method is specialized to convert objects of type <xref:System.String> or <xref:System.Enum> array. In this case, it will return an object of type <xref:System.Windows.Forms.Keys>. Otherwise, it defers evaluation to the base implementation of this method."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref uid=&quot;langword_csharp_ITypeDescriptorContext&quot; name=&quot;ITypeDescriptorContext&quot; href=&quot;&quot;></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;></xref> object to provide locale information."
    - id: value
      type: System.Object
      description: "The object to convert."
    return:
      type: System.Object
      description: "An object that represents the converted <code>value</code>."
  overload: System.Windows.Forms.KeysConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "An invalid key combination was supplied.       -or-       An invalid key name was supplied."
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converts the specified object to the specified destination type."
  remarks: "The ConvertTo method is specialized to convert objects of type <xref:System.Windows.Forms.Keys> or <xref:System.Int32>. In this case, it will return an object of type <xref:System.String>. Otherwise, it defers evaluation to the base implementation of this method."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> to provide locale information."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to convert."
    - id: destinationType
      type: System.Type
      description: "The <xref:System.Type> to convert the object to."
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the converted <code>value</code>."
  overload: System.Windows.Forms.KeysConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a collection of standard values for the data type that this type converter is designed for when provided with a format context."
  remarks: "The collection returned contains the values of the keys that can be converted."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, which can be empty if the data type does not support a standard set of values."
  overload: System.Windows.Forms.KeysConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines if the list of standard values returned from <xref uid=&quot;langword_csharp_GetStandardValues&quot; name=&quot;GetStandardValues&quot; href=&quot;&quot;></xref> is an exclusive list using the specified <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref>."
  remarks: "The `context` parameter is not used in the standard implementation of this method.       If the list is exclusive, then no other values are valid, such as in an <xref:System.Enum> data type. If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A> provides."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the collection returned from <xref:System.Windows.Forms.KeysConverter.GetStandardValues*> is an exhaustive list of possible values; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if other values are possible. The default implementation for this method always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether this object supports a standard set of values that can be picked from a list."
  remarks: "The `context` parameter is not used in the standard implementation of this method."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "Always returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Forms.KeysConverter.#ctor
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: KeysConverter()
  nameWithType: KeysConverter.KeysConverter()
  fullName: System.Windows.Forms.KeysConverter.KeysConverter()
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: Compare(Object,Object)
  nameWithType: KeysConverter.Compare(Object,Object)
  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Windows.Forms.KeysConverter.#ctor*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: KeysConverter
  nameWithType: KeysConverter.KeysConverter
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: KeysConverter.CanConvertFrom
- uid: System.Windows.Forms.KeysConverter.CanConvertTo*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: KeysConverter.CanConvertTo
- uid: System.Windows.Forms.KeysConverter.Compare*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: Compare
  nameWithType: KeysConverter.Compare
- uid: System.Windows.Forms.KeysConverter.ConvertFrom*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: KeysConverter.ConvertFrom
- uid: System.Windows.Forms.KeysConverter.ConvertTo*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertTo
  nameWithType: KeysConverter.ConvertTo
- uid: System.Windows.Forms.KeysConverter.GetStandardValues*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: KeysConverter.GetStandardValues
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: KeysConverter.GetStandardValuesExclusive
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: KeysConverter.GetStandardValuesSupported
