### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  id: IClientResponseChannelSinkStack
  children:
  - System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  - System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(System.Exception)
  - System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)
  langs:
  - csharp
  name: IClientResponseChannelSinkStack
  nameWithType: IClientResponseChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  type: Interface
  summary: "Provides the stack functionality for a stack of client response channel sinks that must be invoked during an asynchronous message response decoding."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IClientResponseChannelSinkStack
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  langs:
  - csharp
  name: AsyncProcessResponse(ITransportHeaders,Stream)
  nameWithType: IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Requests asynchronous processing of a method call on the sinks in the current sink stack."
  remarks: "The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>."
  syntax:
    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);
    parameters:
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "The headers retrieved from the server response stream."
    - id: stream
      type: System.IO.Stream
      description: "The stream coming back from the transport sink."
  overload: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "The current sink stack is empty."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(System.Exception)
  id: DispatchException(System.Exception)
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  langs:
  - csharp
  name: DispatchException(Exception)
  nameWithType: IClientResponseChannelSinkStack.DispatchException(Exception)
  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(Exception)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Dispatches the specified exception on the reply sink."
  remarks: "The DispatchException method dispatches the specified exception to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown."
  syntax:
    content: public void DispatchException (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "The exception to dispatch to the server."
  overload: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)
  id: DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  langs:
  - csharp
  name: DispatchReplyMessage(IMessage)
  nameWithType: IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)
  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Dispatches the specified reply message on the reply sink."
  remarks: "The DispatchReplyMessage method dispatches the specified message to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown."
  syntax:
    content: public void DispatchReplyMessage (System.Runtime.Remoting.Messaging.IMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "The <xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;></xref> to dispatch."
  overload: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  isExternal: false
  name: AsyncProcessResponse(ITransportHeaders,Stream)
  nameWithType: IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.ITransportHeaders
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ITransportHeaders
  nameWithType: ITransportHeaders
  fullName: System.Runtime.Remoting.Channels.ITransportHeaders
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(System.Exception)
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  isExternal: false
  name: DispatchException(Exception)
  nameWithType: IClientResponseChannelSinkStack.DispatchException(Exception)
  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  isExternal: false
  name: DispatchReplyMessage(IMessage)
  nameWithType: IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)
  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse*
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  isExternal: false
  name: AsyncProcessResponse
  nameWithType: IClientResponseChannelSinkStack.AsyncProcessResponse
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException*
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  isExternal: false
  name: DispatchException
  nameWithType: IClientResponseChannelSinkStack.DispatchException
- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage*
  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  isExternal: false
  name: DispatchReplyMessage
  nameWithType: IClientResponseChannelSinkStack.DispatchReplyMessage
