### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IDataSource
  id: IDataSource
  children:
  - System.Web.UI.IDataSource.DataSourceChanged
  - System.Web.UI.IDataSource.GetView(System.String)
  - System.Web.UI.IDataSource.GetViewNames
  langs:
  - csharp
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
  type: Interface
  summary: "Representa uma origem de dados abstrato que vincular controlos vinculados a dados a."
  remarks: "ASP.NET suporta uma arquitetura de enlace de dados de controlo que permite que os controlos de servidor Web vincular a dados de forma consistente. Controlos de servidor Web que vincular a dados são referidos como controlos vinculados a dados e as classes que o facilitam a que o enlace são denominados controlos de origem de dados. Controlos de origem de dados podem representar qualquer origem de dados: base de dados relacional, um ficheiro, um fluxo, um objecto de negócio e assim sucessivamente. Origem de dados controla presentes dados de forma consistente para controlos vinculados a dados, independentemente de origem ou o formato dos dados subjacentes.       Implementar a interface IDataSource quando pretender implementar o suas próprias controlo de origem de dados personalizado do ASP.NET.       Qualquer classe que implementa a interface IDataSource é um controlo de origem de dados. A interface IDataSource serve como a base para a origem de dados do ASP.NET todos os controlos e define um dos conceitos de arquitetura de enlace de dados fundamentais com os dois métodos: o <xref:System.Web.UI.IDataSource.GetView%2A>método e o <xref:System.Web.UI.IDataSource.GetViewNames%2A>método.</xref:System.Web.UI.IDataSource.GetViewNames%2A> </xref:System.Web.UI.IDataSource.GetView%2A> Este conceito é que todos os controlos de origem de dados suportam uma ou mais vistas nomeadas os seus dados. O objeto de vista de origem de dados é semelhante para o <xref:System.Data.DataView>abstração no <xref:System.Data>espaço de nomes: um dados-que podem ser ligadas, personalizada de vista de dados para ordenação, filtragem e outras operações de dados que define a vista.</xref:System.Data> </xref:System.Data.DataView> O núcleo, uma origem de dados faz nada de controlar mais de obter as vistas de dados.       Um controlo de origem de dados pode ter um ou mais objetos de vista de origem de dados associado. Alguns dados de origem controlos, incluindo os que representam, tais como bases de dados relacionais <xref:System.Web.UI.WebControls.SqlDataSource>e <xref:System.Web.UI.WebControls.AccessDataSource>, suporta apenas uma vista.</xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Outros dados de origem controlos, incluindo controlos de origem de dados hierárquica, como <xref:System.Web.UI.WebControls.SiteMapDataSource>, suporta várias vistas.</xref:System.Web.UI.WebControls.SiteMapDataSource> A vista de origem de dados define as capacidades de uma origem de dados e as operações que suporta.       Em resumo, controlos de origem de dados implementa a interface IDataSource, uma ou mais vistas nomeadas nos dados que representam e sempre suportam a obtenção de dados da origem de dados que representam o suporte. Controlos de origem de dados obtêm sempre os dados a pedido, tal como quando `DataBind` denomina-se num controlo vinculada por dados."
  example:
  - "The following code example demonstrates how a class can implement the methods defined by the IDataSource interface to provide data to data-bound controls. The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.idatasou_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.idatasou_1.vb)]"
  syntax:
    content: public interface IDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando um controlo de origem de dados foi alterado de alguma forma que afeta os controlos vinculados a dados."
  remarks: "O evento DataSourceChanged é desencadeado quando as propriedades de um controlo vinculado a dados ou os dados subjacentes foi alterado de alguma forma que afeta os enlaces de dados entre um controlo vinculado a dados e os respetivos dados. Por exemplo, o evento é gerado se um ficheiro de nome de propriedade, tais como o <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>propriedade, é alterado num controlo de origem de dados baseada em ficheiros.</xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a vista de origem de dados com o nome associada ao controlo de origem de dados."
  remarks: "Classes de controlo de origem de dados podem suportar um ou mais vistas nos respetivos dados subjacentes. Estas vistas são representadas por instâncias de <xref:System.Web.UI.DataSourceView>classe.</xref:System.Web.UI.DataSourceView> A vista de origem de dados define as capacidades de um controlo de origem de dados e efetua o trabalho necessário para obter os dados do arquivo de dados subjacente e efetuar operações como a ordenação, inserir, eliminar e a atualização.       Classes de controlo que implementem a <xref:System.Web.UI.IDataSource>interface implementa o método de GetView para devolver objetos de vista com tipo seguro associados com a classe</xref:System.Web.UI.IDataSource> de origem de dados"
  example:
  - "The following code example demonstrates how a data source control class that implements the <xref:System.Web.UI.IDataSource> interface implements the GetView method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.idatasou_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_0_1.vb)]"
  syntax:
    content: public System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "O nome da vista para obter."
    return:
      type: System.Web.UI.DataSourceView
      description: "Devolve o nomeado <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> associados a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>."
  overload: System.Web.UI.IDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma coleção de nomes que representa a lista de objetos de vista associados a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> interface."
  remarks: "Classes de controlo de origem de dados podem suportar uma ou mais vistas nomeadas os respetivos dados subjacentes. O método GetViewNames devolve um conjunto de nomes de vista atualmente associados com a instância de controlo de origem de dados. Os chamadores podem itere através da coleção de nomes de vista e obter individuais <xref:System.Web.UI.DataSourceView>objetos com o <xref:System.Web.UI.IDataSource.GetView%2A>método.</xref:System.Web.UI.IDataSource.GetView%2A> </xref:System.Web.UI.DataSourceView>       As classes que implementam o <xref:System.Web.UI.IDataSource>implementa interface o método GetViewNames para devolver uma coleção de nomes que representa a origem de dados de ver objetos atualmente associados com a classe de controlo de origem de dados</xref:System.Web.UI.IDataSource> de controlo de origem de dados"
  example:
  - "The following code example demonstrates how a data source control that implements the <xref:System.Web.UI.IDataSource> interface implements the GetViewNames method, returning an <xref:System.Collections.ICollection> collection of names. Because the data source supports only one view, the method returns a collection of one element using the default name for the view. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/csharp/m-system.web.ui.idatasou_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_1_1.vb)]"
  syntax:
    content: public System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém os nomes das vistas associadas a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.IDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IDataSource.DataSourceChanged
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IDataSource.GetView(System.String)
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IDataSource.GetViewNames
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.IDataSource.GetView*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView
  nameWithType: IDataSource.GetView
- uid: System.Web.UI.IDataSource.GetViewNames*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: IDataSource.GetViewNames
