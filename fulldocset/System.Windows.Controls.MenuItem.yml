### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.MenuItem
  id: MenuItem
  children:
  - System.Windows.Controls.MenuItem.#ctor
  - System.Windows.Controls.MenuItem.Checked
  - System.Windows.Controls.MenuItem.CheckedEvent
  - System.Windows.Controls.MenuItem.Click
  - System.Windows.Controls.MenuItem.ClickEvent
  - System.Windows.Controls.MenuItem.Command
  - System.Windows.Controls.MenuItem.CommandParameter
  - System.Windows.Controls.MenuItem.CommandParameterProperty
  - System.Windows.Controls.MenuItem.CommandProperty
  - System.Windows.Controls.MenuItem.CommandTarget
  - System.Windows.Controls.MenuItem.CommandTargetProperty
  - System.Windows.Controls.MenuItem.GetContainerForItemOverride
  - System.Windows.Controls.MenuItem.HandlesScrolling
  - System.Windows.Controls.MenuItem.Icon
  - System.Windows.Controls.MenuItem.IconProperty
  - System.Windows.Controls.MenuItem.InputGestureText
  - System.Windows.Controls.MenuItem.InputGestureTextProperty
  - System.Windows.Controls.MenuItem.IsCheckable
  - System.Windows.Controls.MenuItem.IsCheckableProperty
  - System.Windows.Controls.MenuItem.IsChecked
  - System.Windows.Controls.MenuItem.IsCheckedProperty
  - System.Windows.Controls.MenuItem.IsEnabledCore
  - System.Windows.Controls.MenuItem.IsHighlighted
  - System.Windows.Controls.MenuItem.IsHighlightedProperty
  - System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)
  - System.Windows.Controls.MenuItem.IsPressed
  - System.Windows.Controls.MenuItem.IsPressedProperty
  - System.Windows.Controls.MenuItem.IsSubmenuOpen
  - System.Windows.Controls.MenuItem.IsSubmenuOpenProperty
  - System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation
  - System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty
  - System.Windows.Controls.MenuItem.ItemContainerTemplateSelector
  - System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty
  - System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.Controls.MenuItem.OnApplyTemplate
  - System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.MenuItem.OnClick
  - System.Windows.Controls.MenuItem.OnCreateAutomationPeer
  - System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)
  - System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)
  - System.Windows.Controls.MenuItem.Role
  - System.Windows.Controls.MenuItem.RoleProperty
  - System.Windows.Controls.MenuItem.SeparatorStyleKey
  - System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)
  - System.Windows.Controls.MenuItem.StaysOpenOnClick
  - System.Windows.Controls.MenuItem.StaysOpenOnClickProperty
  - System.Windows.Controls.MenuItem.SubmenuClosed
  - System.Windows.Controls.MenuItem.SubmenuClosedEvent
  - System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey
  - System.Windows.Controls.MenuItem.SubmenuItemTemplateKey
  - System.Windows.Controls.MenuItem.SubmenuOpened
  - System.Windows.Controls.MenuItem.SubmenuOpenedEvent
  - System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey
  - System.Windows.Controls.MenuItem.TopLevelItemTemplateKey
  - System.Windows.Controls.MenuItem.Unchecked
  - System.Windows.Controls.MenuItem.UncheckedEvent
  - System.Windows.Controls.MenuItem.UsesItemContainerTemplate
  - System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty
  langs:
  - csharp
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Controls.MenuItem
  type: Class
  summary: "Representa um item selecionável dentro de um <xref href=&quot;System.Windows.Controls.Menu&quot;> </xref>."
  remarks: "MenuItem é um <xref:System.Windows.Controls.HeaderedItemsControl>, que significa que o cabeçalho e a coleção de objetos pode ser de qualquer tipo (como cadeia, a imagem ou o painel).</xref:System.Windows.Controls.HeaderedItemsControl> Para obter mais informações, consulte a <xref:System.Windows.Controls.HeaderedItemsControl>classe.</xref:System.Windows.Controls.HeaderedItemsControl>       Um MenuItem pode ter os submenus. O submenu do MenuItem é constituído por objetos dentro do <xref:System.Windows.Controls.ItemCollection>de um MenuItem.</xref:System.Windows.Controls.ItemCollection>  É comum para um MenuItem conter outros objetos MenuItem para criar os submenus aninhados.       Um MenuItem pode ter uma das várias funções:-podem ser selecionada para invocar um comando.      -Pode ser um separador de outros itens de menu.      -Pode ser um cabeçalho para um submenu.      -Pode ser seleccionada ou desmarcada.      > [!NOTE] > Por predefinição, <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>de um MenuItem está definido como <xref:System.Windows.HorizontalAlignment?displayProperty=fullName>.</xref:System.Windows.HorizontalAlignment?displayProperty=fullName> </xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> A posição horizontal da predefinição de um <xref:System.Windows.Controls.StackPanel>é <xref:System.Windows.HorizontalAlignment?displayProperty=fullName>.</xref:System.Windows.HorizontalAlignment?displayProperty=fullName> </xref:System.Windows.Controls.StackPanel> Se definir o <xref:System.Windows.FrameworkElement.Width%2A>propriedade de um MenuItem através de um <xref:System.Windows.Controls.StackPanel>, predefinido do painel pilha é aplicado e centra-se o item.</xref:System.Windows.Controls.StackPanel> </xref:System.Windows.FrameworkElement.Width%2A>       Identificadores de TheMenuItem o <xref:System.Windows.UIElement.MouseDown>eventos, por isso, se ligar a um processador de eventos para <xref:System.Windows.UIElement.MouseDown>, o processador nunca será chamado.</xref:System.Windows.UIElement.MouseDown> </xref:System.Windows.UIElement.MouseDown>  Para adicionar o seus próprios processador, subscrever o <xref:System.Windows.UIElement.PreviewMouseDown>eventos ou subscrever <xref:System.Windows.UIElement.MouseDown>chamando <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>com `handledEventsToo` definido como `true`.</xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> </xref:System.Windows.UIElement.MouseDown> </xref:System.Windows.UIElement.PreviewMouseDown>      ## Personalizar o MenuItem controlo para aplicar as mesmas definições de propriedade para controlos de MenuItem de múltiplas, utilize o <xref:System.Windows.FrameworkElement.Style%2A>propriedade.</xref:System.Windows.FrameworkElement.Style%2A> Pode modificar a predefinição <xref:System.Windows.Controls.ControlTemplate>para lhe dar controlo um aspeto exclusivo.</xref:System.Windows.Controls.ControlTemplate> Para obter mais informações sobre como criar um <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar o aspeto de um controlo existente, criando um ControlTemplate](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Controls.ControlTemplate>  Para ver as partes e Estados que são específicos para o MenuItem, consulte [Menu estilos e modelos](~/add/includes/ajax-current-ext-md.md).       Propriedades de dependência para este controlo podem ser definidas pelo estilo de predefinido do controlo.  Se uma propriedade é definida por um estilo predefinido, a propriedade poderá alterar o valor predefinido do quando o controlo é apresentado na aplicação. O estilo predefinido é determinado pelo qual tema de ambiente de trabalho é utilizado quando a aplicação está em execução.  Para obter mais informações, consulte [predefinido o WPF temas](http://go.microsoft.com/fwlink/?LinkID=158252).      > [!NOTE] > Definir uma propriedade visual apenas terá um efeito se essa propriedade ambos presentes no modelo de predefinido do controlo de MenuItem e é definida através da utilização de um. Pode encontrar uma lista de propriedades visuais na secção &quot;Alterar o Visual estrutura de um controlo&quot; [personalizar o aspeto de um controlo existente, criando um ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)."
  example:
  - "The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>. The <xref:System.Windows.Controls.Menu> contains MenuItem objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.  \n  \n [!code-xml[MenuItemCommandsAndEvents#1](~/add/codesnippet/xaml/MenuItemCommandsAndEvents/Window1.xaml#1)]  \n  \n [!code-cs[MenuItemCommandsAndEvents#2](~/add/codesnippet/csharp/MenuItemCommandsAndEvents/Window1.xaml.cs#2)]\n [!code-vb[MenuItemCommandsAndEvents#2](~/add/codesnippet/visualbasic/MenuItemCommandsAndEvents/Window1.xaml.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)]

      [System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))]

      [System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))]

      public class MenuItem : System.Windows.Controls.HeaderedItemsControl, System.Windows.Input.ICommandSource
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  - System.Windows.Controls.Control
  - System.Windows.Controls.ItemsControl
  - System.Windows.Controls.HeaderedItemsControl
  implements:
  - System.Windows.Input.ICommandSource
  inheritedMembers:
  - System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)
  - System.Windows.Controls.Control.Background
  - System.Windows.Controls.Control.BackgroundProperty
  - System.Windows.Controls.Control.BorderBrush
  - System.Windows.Controls.Control.BorderBrushProperty
  - System.Windows.Controls.Control.BorderThickness
  - System.Windows.Controls.Control.BorderThicknessProperty
  - System.Windows.Controls.Control.FontFamily
  - System.Windows.Controls.Control.FontFamilyProperty
  - System.Windows.Controls.Control.FontSize
  - System.Windows.Controls.Control.FontSizeProperty
  - System.Windows.Controls.Control.FontStretch
  - System.Windows.Controls.Control.FontStretchProperty
  - System.Windows.Controls.Control.FontStyle
  - System.Windows.Controls.Control.FontStyleProperty
  - System.Windows.Controls.Control.FontWeight
  - System.Windows.Controls.Control.FontWeightProperty
  - System.Windows.Controls.Control.Foreground
  - System.Windows.Controls.Control.ForegroundProperty
  - System.Windows.Controls.Control.HorizontalContentAlignment
  - System.Windows.Controls.Control.HorizontalContentAlignmentProperty
  - System.Windows.Controls.Control.IsTabStop
  - System.Windows.Controls.Control.IsTabStopProperty
  - System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)
  - System.Windows.Controls.Control.MouseDoubleClick
  - System.Windows.Controls.Control.MouseDoubleClickEvent
  - System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)
  - System.Windows.Controls.Control.Padding
  - System.Windows.Controls.Control.PaddingProperty
  - System.Windows.Controls.Control.PreviewMouseDoubleClick
  - System.Windows.Controls.Control.PreviewMouseDoubleClickEvent
  - System.Windows.Controls.Control.TabIndex
  - System.Windows.Controls.Control.TabIndexProperty
  - System.Windows.Controls.Control.Template
  - System.Windows.Controls.Control.TemplateProperty
  - System.Windows.Controls.Control.VerticalContentAlignment
  - System.Windows.Controls.Control.VerticalContentAlignmentProperty
  - System.Windows.Controls.HeaderedItemsControl.HasHeader
  - System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty
  - System.Windows.Controls.HeaderedItemsControl.Header
  - System.Windows.Controls.HeaderedItemsControl.HeaderProperty
  - System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat
  - System.Windows.Controls.HeaderedItemsControl.HeaderStringFormatProperty
  - System.Windows.Controls.HeaderedItemsControl.HeaderTemplate
  - System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty
  - System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector
  - System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty
  - System.Windows.Controls.HeaderedItemsControl.LogicalChildren
  - System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)
  - System.Windows.Controls.HeaderedItemsControl.OnHeaderStringFormatChanged(System.String,System.String)
  - System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)
  - System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)
  - System.Windows.Controls.HeaderedItemsControl.ToString
  - System.Windows.Controls.ItemsControl.AddChild(System.Object)
  - System.Windows.Controls.ItemsControl.AddText(System.String)
  - System.Windows.Controls.ItemsControl.AlternationCount
  - System.Windows.Controls.ItemsControl.AlternationCountProperty
  - System.Windows.Controls.ItemsControl.AlternationIndexProperty
  - System.Windows.Controls.ItemsControl.BeginInit
  - System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)
  - System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)
  - System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)
  - System.Windows.Controls.ItemsControl.DisplayMemberPath
  - System.Windows.Controls.ItemsControl.DisplayMemberPathProperty
  - System.Windows.Controls.ItemsControl.EndInit
  - System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)
  - System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)
  - System.Windows.Controls.ItemsControl.GroupStyle
  - System.Windows.Controls.ItemsControl.GroupStyleSelector
  - System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty
  - System.Windows.Controls.ItemsControl.HasItems
  - System.Windows.Controls.ItemsControl.HasItemsProperty
  - System.Windows.Controls.ItemsControl.IsGrouping
  - System.Windows.Controls.ItemsControl.IsGroupingProperty
  - System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)
  - System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive
  - System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty
  - System.Windows.Controls.ItemsControl.IsTextSearchEnabled
  - System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty
  - System.Windows.Controls.ItemsControl.ItemBindingGroup
  - System.Windows.Controls.ItemsControl.ItemBindingGroupProperty
  - System.Windows.Controls.ItemsControl.ItemContainerGenerator
  - System.Windows.Controls.ItemsControl.ItemContainerStyle
  - System.Windows.Controls.ItemsControl.ItemContainerStyleProperty
  - System.Windows.Controls.ItemsControl.ItemContainerStyleSelector
  - System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty
  - System.Windows.Controls.ItemsControl.Items
  - System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)
  - System.Windows.Controls.ItemsControl.ItemsPanel
  - System.Windows.Controls.ItemsControl.ItemsPanelProperty
  - System.Windows.Controls.ItemsControl.ItemsSource
  - System.Windows.Controls.ItemsControl.ItemsSourceProperty
  - System.Windows.Controls.ItemsControl.ItemStringFormat
  - System.Windows.Controls.ItemsControl.ItemStringFormatProperty
  - System.Windows.Controls.ItemsControl.ItemTemplate
  - System.Windows.Controls.ItemsControl.ItemTemplateProperty
  - System.Windows.Controls.ItemsControl.ItemTemplateSelector
  - System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty
  - System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)
  - System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)
  - System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)
  - System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)
  - System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)
  - System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)
  - System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)
  - System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)
  - System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)
  - System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)
  - System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle
  - System.Windows.Controls.ItemsControl.ShouldSerializeItems
  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear
  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)
  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)
  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)
  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)
  - System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.ActualHeight
  - System.Windows.FrameworkElement.ActualHeightProperty
  - System.Windows.FrameworkElement.ActualWidth
  - System.Windows.FrameworkElement.ActualWidthProperty
  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkElement.ApplyTemplate
  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkElement.BindingGroup
  - System.Windows.FrameworkElement.BindingGroupProperty
  - System.Windows.FrameworkElement.BringIntoView
  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)
  - System.Windows.FrameworkElement.ContextMenu
  - System.Windows.FrameworkElement.ContextMenuClosing
  - System.Windows.FrameworkElement.ContextMenuClosingEvent
  - System.Windows.FrameworkElement.ContextMenuOpening
  - System.Windows.FrameworkElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkElement.ContextMenuProperty
  - System.Windows.FrameworkElement.Cursor
  - System.Windows.FrameworkElement.CursorProperty
  - System.Windows.FrameworkElement.DataContext
  - System.Windows.FrameworkElement.DataContextChanged
  - System.Windows.FrameworkElement.DataContextProperty
  - System.Windows.FrameworkElement.DefaultStyleKey
  - System.Windows.FrameworkElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkElement.FindName(System.String)
  - System.Windows.FrameworkElement.FindResource(System.Object)
  - System.Windows.FrameworkElement.FlowDirection
  - System.Windows.FrameworkElement.FlowDirectionProperty
  - System.Windows.FrameworkElement.FocusVisualStyle
  - System.Windows.FrameworkElement.FocusVisualStyleProperty
  - System.Windows.FrameworkElement.ForceCursor
  - System.Windows.FrameworkElement.ForceCursorProperty
  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.FrameworkElement.GetTemplateChild(System.String)
  - System.Windows.FrameworkElement.GetUIParentCore
  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)
  - System.Windows.FrameworkElement.Height
  - System.Windows.FrameworkElement.HeightProperty
  - System.Windows.FrameworkElement.HorizontalAlignment
  - System.Windows.FrameworkElement.HorizontalAlignmentProperty
  - System.Windows.FrameworkElement.InheritanceBehavior
  - System.Windows.FrameworkElement.Initialized
  - System.Windows.FrameworkElement.InputScope
  - System.Windows.FrameworkElement.InputScopeProperty
  - System.Windows.FrameworkElement.IsInitialized
  - System.Windows.FrameworkElement.IsLoaded
  - System.Windows.FrameworkElement.Language
  - System.Windows.FrameworkElement.LanguageProperty
  - System.Windows.FrameworkElement.LayoutTransform
  - System.Windows.FrameworkElement.LayoutTransformProperty
  - System.Windows.FrameworkElement.Loaded
  - System.Windows.FrameworkElement.LoadedEvent
  - System.Windows.FrameworkElement.Margin
  - System.Windows.FrameworkElement.MarginProperty
  - System.Windows.FrameworkElement.MaxHeight
  - System.Windows.FrameworkElement.MaxHeightProperty
  - System.Windows.FrameworkElement.MaxWidth
  - System.Windows.FrameworkElement.MaxWidthProperty
  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)
  - System.Windows.FrameworkElement.MinHeight
  - System.Windows.FrameworkElement.MinHeightProperty
  - System.Windows.FrameworkElement.MinWidth
  - System.Windows.FrameworkElement.MinWidthProperty
  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkElement.Name
  - System.Windows.FrameworkElement.NameProperty
  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OverridesDefaultStyle
  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkElement.Parent
  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)
  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkElement.RequestBringIntoView
  - System.Windows.FrameworkElement.RequestBringIntoViewEvent
  - System.Windows.FrameworkElement.Resources
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)
  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElement.ShouldSerializeResources
  - System.Windows.FrameworkElement.ShouldSerializeStyle
  - System.Windows.FrameworkElement.ShouldSerializeTriggers
  - System.Windows.FrameworkElement.SizeChanged
  - System.Windows.FrameworkElement.SizeChangedEvent
  - System.Windows.FrameworkElement.SourceUpdated
  - System.Windows.FrameworkElement.Style
  - System.Windows.FrameworkElement.StyleProperty
  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkElement.Tag
  - System.Windows.FrameworkElement.TagProperty
  - System.Windows.FrameworkElement.TargetUpdated
  - System.Windows.FrameworkElement.TemplatedParent
  - System.Windows.FrameworkElement.ToolTip
  - System.Windows.FrameworkElement.ToolTipClosing
  - System.Windows.FrameworkElement.ToolTipClosingEvent
  - System.Windows.FrameworkElement.ToolTipOpening
  - System.Windows.FrameworkElement.ToolTipOpeningEvent
  - System.Windows.FrameworkElement.ToolTipProperty
  - System.Windows.FrameworkElement.Triggers
  - System.Windows.FrameworkElement.TryFindResource(System.Object)
  - System.Windows.FrameworkElement.Unloaded
  - System.Windows.FrameworkElement.UnloadedEvent
  - System.Windows.FrameworkElement.UnregisterName(System.String)
  - System.Windows.FrameworkElement.UpdateDefaultStyle
  - System.Windows.FrameworkElement.UseLayoutRounding
  - System.Windows.FrameworkElement.UseLayoutRoundingProperty
  - System.Windows.FrameworkElement.VerticalAlignment
  - System.Windows.FrameworkElement.VerticalAlignmentProperty
  - System.Windows.FrameworkElement.VisualChildrenCount
  - System.Windows.FrameworkElement.Width
  - System.Windows.FrameworkElement.WidthProperty
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Windows.Controls.MenuItem.MenuItem()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> classe."
  syntax:
    content: public MenuItem ();
    parameters: []
  overload: System.Windows.Controls.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.Checked
  id: Checked
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: System.Windows.Controls.MenuItem.Checked
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ocorre quando um item de menu é selecionado."
  remarks: "<a name=&quot;routedEventInfo_Checked&quot;></a># # Encaminhados informações sobre eventos |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.CheckedEvent>|   | Estratégia de encaminhamento | Bubbling |   | Delegado | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.MenuItem.CheckedEvent>"
  example:
  - "The following example demonstrates handling the Checked event.  \n  \n [!code-xml[MenuItemCommandsAndEvents#3](~/add/codesnippet/xaml/MenuItemCommandsAndEvents/Window1.xaml#3)]  \n  \n [!code-cs[MenuItemCommandsAndEvents#4](~/add/codesnippet/csharp/MenuItemCommandsAndEvents/Window1.xaml.cs#4)]\n [!code-vb[MenuItemCommandsAndEvents#4](~/add/codesnippet/visualbasic/MenuItemCommandsAndEvents/Window1.xaml.vb#4)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler Checked;
    return:
      type: System.Windows.RoutedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.CheckedEvent
  id: CheckedEvent
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: CheckedEvent
  nameWithType: MenuItem.CheckedEvent
  fullName: System.Windows.Controls.MenuItem.CheckedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref href=&quot;System.Windows.Controls.MenuItem.Checked&quot;> </xref> evento encaminhado."
  syntax:
    content: public static readonly System.Windows.RoutedEvent CheckedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.Click
  id: Click
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: Click
  nameWithType: MenuItem.Click
  fullName: System.Windows.Controls.MenuItem.Click
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ocorre quando um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é clicado."
  remarks: "O evento de clique não ocorre se o <xref:System.Windows.Controls.MenuItem>tem um submenu.</xref:System.Windows.Controls.MenuItem>      <a name=&quot;routedEventInfo_Click&quot;></a># # Encaminhados informações sobre eventos |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.ClickEvent>|   | Estratégia de encaminhamento | Bubbling |   | Delegado | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.MenuItem.ClickEvent>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>. The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and Click events.  \n  \n [!code-xml[MenuItemCommandsAndEvents#1](~/add/codesnippet/xaml/MenuItemCommandsAndEvents/Window1.xaml#1)]  \n  \n [!code-cs[MenuItemCommandsAndEvents#2](~/add/codesnippet/csharp/MenuItemCommandsAndEvents/Window1.xaml.cs#2)]\n [!code-vb[MenuItemCommandsAndEvents#2](~/add/codesnippet/visualbasic/MenuItemCommandsAndEvents/Window1.xaml.vb#2)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler Click;
    return:
      type: System.Windows.RoutedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.ClickEvent
  id: ClickEvent
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: ClickEvent
  nameWithType: MenuItem.ClickEvent
  fullName: System.Windows.Controls.MenuItem.ClickEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref href=&quot;System.Windows.Controls.MenuItem.Click&quot;> </xref> evento encaminhado."
  remarks: "Este evento corresponde a um clique do botão esquerdo do rato."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ClickEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.Command
  id: Command
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: Command
  nameWithType: MenuItem.Command
  fullName: System.Windows.Controls.MenuItem.Command
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define o comando associado ao item de menu."
  remarks: "Esta propriedade é utilizada para associar um comando um determinado <xref:System.Windows.Controls.MenuItem>instância.</xref:System.Windows.Controls.MenuItem> O exemplo seguinte associa a **cópia** comando com uma <xref:System.Windows.Controls.MenuItem>e automaticamente fornece o texto de entrada gesto **Ctrl + C**.</xref:System.Windows.Controls.MenuItem> O exemplo não define o <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>propriedade, mas o <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>para o <xref:System.Windows.Controls.MenuItem>é &quot;Copiar&quot; no tempo de execução.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> </xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>  Pode especificar outro cabeçalho para o <xref:System.Windows.Controls.MenuItem>se pretende que seja diferente.</xref:System.Windows.Controls.MenuItem> Para obter informações sobre como ligar para o comando pretendido, consulte [adicionar um comando a um MenuItem](http://msdn.microsoft.com/en-us/013d68a0-5373-4a68-bd91-5de574307370).       [!code-xml[MenuItems_snip #MenuItemCommand](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#menuitemcommand) ] um comando é gerado quando um <xref:System.Windows.Controls.MenuItem>é clicado — apenas após a <xref:System.Windows.Controls.MenuItem.Click>eventos.</xref:System.Windows.Controls.MenuItem.Click> </xref:System.Windows.Controls.MenuItem> O comando é gerado no elemento de acordo com as prioridades seguintes: 1.  Se <xref:System.Windows.Controls.MenuItem.CommandTarget%2A>está definido no <xref:System.Windows.Controls.MenuItem>, que o elemento é utilizado.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.MenuItem.CommandTarget%2A>      2.  <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>De um <xref:System.Windows.Controls.ContextMenu>que contenha <xref:System.Windows.Controls.MenuItem>.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>      3.  O destino de foco de janela principal que contém um <xref:System.Windows.Controls.Menu>.</xref:System.Windows.Controls.Menu>      4.  O <xref:System.Windows.Controls.MenuItem>que foi clicado.</xref:System.Windows.Controls.MenuItem>      <a name=&quot;dependencyPropertyInfo_Command&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.CommandProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.CommandProperty>"
  example:
  - "The following examples show how to use the command property to associate commands with menu items.  \n  \n [!code-xml[MenuEvent#8](~/add/codesnippet/xaml/MenuEvent.Menus/Pane1.xaml#8)]  \n  \n [!code-cs[MenuEvent#9](~/add/codesnippet/csharp/MenuEvent.Menus/Pane1.xaml.cs#9)]"
  syntax:
    content: public System.Windows.Input.ICommand Command { get; set; }
    return:
      type: System.Windows.Input.ICommand
      description: "O comando associado a <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>.  A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.CommandParameter
  id: CommandParameter
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: CommandParameter
  nameWithType: MenuItem.CommandParameter
  fullName: System.Windows.Controls.MenuItem.CommandParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define o parâmetro para passar para o <xref:System.Windows.Controls.MenuItem.Command*>propriedade de um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>.</xref:System.Windows.Controls.MenuItem.Command*>"
  remarks: "<a name=&quot;dependencyPropertyInfo_CommandParameter&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.CommandParameterProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.CommandParameterProperty>"
  syntax:
    content: public object CommandParameter { get; set; }
    return:
      type: System.Object
      description: "O parâmetro para passar para o <xref:System.Windows.Controls.MenuItem.Command*>propriedade de um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>.</xref:System.Windows.Controls.MenuItem.Command*> A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.CommandParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.CommandParameterProperty
  id: CommandParameterProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: CommandParameterProperty
  nameWithType: MenuItem.CommandParameterProperty
  fullName: System.Windows.Controls.MenuItem.CommandParameterProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.CommandParameter*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.CommandParameter*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CommandParameterProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.CommandProperty
  id: CommandProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: CommandProperty
  nameWithType: MenuItem.CommandProperty
  fullName: System.Windows.Controls.MenuItem.CommandProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.Command*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.Command*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CommandProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.CommandTarget
  id: CommandTarget
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: CommandTarget
  nameWithType: MenuItem.CommandTarget
  fullName: System.Windows.Controls.MenuItem.CommandTarget
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define o elemento de destino no qual a emitir o comando especificado."
  remarks: "A propriedade CommandTarget Especifica o elemento em que ocorre o comando. Se não for definido CommandTarget, o elemento que tem o foco do teclado receberá o comando.      <a name=&quot;dependencyPropertyInfo_CommandTarget&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.CommandTargetProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.CommandTargetProperty>"
  syntax:
    content: public System.Windows.IInputElement CommandTarget { get; set; }
    return:
      type: System.Windows.IInputElement
      description: "O elemento no qual a emitir o comando especificado. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.CommandTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.CommandTargetProperty
  id: CommandTargetProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: CommandTargetProperty
  nameWithType: MenuItem.CommandTargetProperty
  fullName: System.Windows.Controls.MenuItem.CommandTargetProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.CommandTarget*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.CommandTarget*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CommandTargetProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.GetContainerForItemOverride
  id: GetContainerForItemOverride
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: GetContainerForItemOverride()
  nameWithType: MenuItem.GetContainerForItemOverride()
  fullName: System.Windows.Controls.MenuItem.GetContainerForItemOverride()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Cria ou identifica o elemento utilizado para apresentar um item especificado."
  syntax:
    content: protected override System.Windows.DependencyObject GetContainerForItemOverride ();
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: "O elemento utilizado para apresentar um item especificado."
  overload: System.Windows.Controls.MenuItem.GetContainerForItemOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.HandlesScrolling
  id: HandlesScrolling
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: HandlesScrolling
  nameWithType: MenuItem.HandlesScrolling
  fullName: System.Windows.Controls.MenuItem.HandlesScrolling
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém se o controlo suporta deslocamento."
  remarks: "Se o controlo tem um <xref:System.Windows.Controls.ScrollViewer>no seu estilo e tem um teclado personalizado deslocamento comportamento, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A>deverá devolver `true`.</xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> </xref:System.Windows.Controls.ScrollViewer>"
  syntax:
    content: protected override bool HandlesScrolling { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Windows.Controls.MenuItem.HandlesScrolling*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.Icon
  id: Icon
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: Icon
  nameWithType: MenuItem.Icon
  fullName: System.Windows.Controls.MenuItem.Icon
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define o ícone que aparece num <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>."
  remarks: "Muitos <xref:System.Windows.Controls.Menu>controlos tem mais do que apenas o texto a <xref:System.Windows.Controls.MenuItem>elementos.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> Muitas vezes, existem ícones, marca de verificação, Aceleradores e setas para indicar os submenus.      <a name=&quot;dependencyPropertyInfo_Icon&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.IconProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.IconProperty>"
  example:
  - "The following example creates a menu item with an icon.  \n  \n [!code-xml[MenuItems_snip#MenuItemIcon](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#menuitemicon)]"
  syntax:
    content: public object Icon { get; set; }
    return:
      type: System.Object
      description: "O ícone que aparece num <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.Icon*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IconProperty
  id: IconProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IconProperty
  nameWithType: MenuItem.IconProperty
  fullName: System.Windows.Controls.MenuItem.IconProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.Icon*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.Icon*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IconProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.InputGestureText
  id: InputGestureText
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: InputGestureText
  nameWithType: MenuItem.InputGestureText
  fullName: System.Windows.Controls.MenuItem.InputGestureText
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Define o texto que descreve um gesto de entrada que ligará para o comando associado para o item especificado."
  remarks: "Esta propriedade não associou o gesto de entrada com o item de menu; Basta adiciona texto para o item de menu. A aplicação deve processar a entrada do utilizador para realizar a ação.  Para obter informações sobre como associar um comando de um item de menu, consulte <xref:System.Windows.Controls.MenuItem.Command%2A>.</xref:System.Windows.Controls.MenuItem.Command%2A>      <a name=&quot;dependencyPropertyInfo_InputGestureText&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.InputGestureTextProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.InputGestureTextProperty>"
  example:
  - "The following examples show how to use the InputGestureText property to assign keyboard shortcuts text to menu items.  \n  \n [!code-xml[MenuEvent#6](~/add/codesnippet/xaml/MenuEvent.Menus/Pane1.xaml#6)]  \n  \n [!code-cs[MenuEvent#7](~/add/codesnippet/csharp/MenuEvent.Menus/Pane1.xaml.cs#7)]"
  syntax:
    content: public string InputGestureText { get; set; }
    return:
      type: System.String
      description: "O texto que descreve o gesto de entrada, tais como **Ctrl + C** para o **cópia** comando. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Windows.Controls.MenuItem.InputGestureText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.InputGestureTextProperty
  id: InputGestureTextProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: InputGestureTextProperty
  nameWithType: MenuItem.InputGestureTextProperty
  fullName: System.Windows.Controls.MenuItem.InputGestureTextProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.InputGestureText*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.InputGestureText*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty InputGestureTextProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsCheckable
  id: IsCheckable
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsCheckable
  nameWithType: MenuItem.IsCheckable
  fullName: System.Windows.Controls.MenuItem.IsCheckable
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém um valor que indica se um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> podem ser verificadas."
  remarks: "<a name=&quot;dependencyPropertyInfo_IsCheckable&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.IsCheckableProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.IsCheckableProperty>"
  example:
  - "The following example shows how to make <xref:System.Windows.Controls.MenuItem> controls that are checked when a user clicks them.  \n  \n [!code-xml[MenuEvent#11](~/add/codesnippet/xaml/MenuEvent.Menus/Pane1.xaml#11)]"
  syntax:
    content: public bool IsCheckable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o item de menu pode ser verificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.  A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.IsCheckable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsCheckableProperty
  id: IsCheckableProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsCheckableProperty
  nameWithType: MenuItem.IsCheckableProperty
  fullName: System.Windows.Controls.MenuItem.IsCheckableProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.IsCheckable*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.IsCheckable*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsCheckableProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsChecked
  id: IsChecked
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsChecked
  nameWithType: MenuItem.IsChecked
  fullName: System.Windows.Controls.MenuItem.IsChecked
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> está marcada."
  remarks: "<a name=&quot;dependencyPropertyInfo_IsChecked&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.IsCheckedProperty>|   | Definir propriedades de metadados `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Journal%2A> </xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A> </xref:System.Windows.Controls.MenuItem.IsCheckedProperty>"
  example:
  - "The following example shows how the IsChecked property can be used to place a check mark in front of a menu item.  \n  \n [!code-xml[MenuStyles#6](~/add/codesnippet/xaml/p-system.windows.control_358_1.xaml)]\n [!code-xml[MenuStyles#6](~/add/codesnippet/xaml/p-system.windows.control_358_1.xaml)]"
  syntax:
    content: public bool IsChecked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> está marcada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.IsChecked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsCheckedProperty
  id: IsCheckedProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsCheckedProperty
  nameWithType: MenuItem.IsCheckedProperty
  fullName: System.Windows.Controls.MenuItem.IsCheckedProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.IsChecked*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.IsChecked*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsCheckedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsEnabledCore
  id: IsEnabledCore
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsEnabledCore
  nameWithType: MenuItem.IsEnabledCore
  fullName: System.Windows.Controls.MenuItem.IsEnabledCore
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém um valor que indica se o <xref:System.Windows.ContentElement.IsEnabled*>propriedade é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> para o item de menu actual.</xref:System.Windows.ContentElement.IsEnabled*>"
  syntax:
    content: protected override bool IsEnabledCore { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> pode ser selecionada; caso contrário,<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.MenuItem.IsEnabledCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsHighlighted
  id: IsHighlighted
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsHighlighted
  nameWithType: MenuItem.IsHighlighted
  fullName: System.Windows.Controls.MenuItem.IsHighlighted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém um valor que indica se um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é realçado."
  remarks: "Iniciando com o .NET Framework versão 3.0 Service Pack 1, a propriedade IsHighlighted tem um setter protegido. Para utilizar esta funcionalidade, a aplicação deve visar o .NET Framework versão 3.5.  Para obter mais informações, consulte [versões do .NET Framework e dependências](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsHighlighted&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.IsHighlightedProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.IsHighlightedProperty>"
  example:
  - "The following example shows how to determine whether a menu item is highlighted.  \n  \n [!code-cs[MenuItems_snip#MenuItemIsHighlighted](~/add/codesnippet/csharp/MenuItems_snip.Menus/Pane1.xaml.cs#menuitemishighlighted)]\n [!code-vb[MenuItems_snip#MenuItemIsHighlighted](~/add/codesnippet/visualbasic/menus/pane1.xaml.vb#menuitemishighlighted)]"
  syntax:
    content: public bool IsHighlighted { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é realçado, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.IsHighlighted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsHighlightedProperty
  id: IsHighlightedProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsHighlightedProperty
  nameWithType: MenuItem.IsHighlightedProperty
  fullName: System.Windows.Controls.MenuItem.IsHighlightedProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.IsHighlighted*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.IsHighlighted*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHighlightedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)
  id: IsItemItsOwnContainerOverride(System.Object)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsItemItsOwnContainerOverride(Object)
  nameWithType: MenuItem.IsItemItsOwnContainerOverride(Object)
  fullName: System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Determina se o item especificado é (ou é elegível para ser) a sua própria `ItemContainer`."
  syntax:
    content: protected override bool IsItemItsOwnContainerOverride (object item);
    parameters:
    - id: item
      type: System.Object
      description: "Item especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o item é o suas próprias `ItemContainer`; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsPressed
  id: IsPressed
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsPressed
  nameWithType: MenuItem.IsPressed
  fullName: System.Windows.Controls.MenuItem.IsPressed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém um valor que indica se um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é premido."
  remarks: "Iniciando com o .NET Framework versão 3.0 Service Pack 1, a propriedade IsPressed tem um setter protegido. Para utilizar esta funcionalidade, a aplicação deve visar o .NET Framework versão 3.5.  Para obter mais informações, consulte [versões do .NET Framework e dependências](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsPressed&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.IsPressedProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.IsPressedProperty>"
  example:
  - "The following example shows how to use the IsPressed property in a menu item style. When the menu item is pressed, the style of its foreground, text size, and text style change.  \n  \n [!code-xml[MenuItemsStyle_snip#MenuItemsIsPressed](~/add/codesnippet/xaml/MenuStyles/MyApp.xaml#menuitemsispressed)]"
  syntax:
    content: public bool IsPressed { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é premido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.IsPressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsPressedProperty
  id: IsPressedProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsPressedProperty
  nameWithType: MenuItem.IsPressedProperty
  fullName: System.Windows.Controls.MenuItem.IsPressedProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.IsPressed*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.IsPressed*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsPressedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsSubmenuOpen
  id: IsSubmenuOpen
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsSubmenuOpen
  nameWithType: MenuItem.IsSubmenuOpen
  fullName: System.Windows.Controls.MenuItem.IsSubmenuOpen
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define um valor que indica se a submenu do <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> está aberta."
  remarks: "Quando IsSubmenuOpen está definida como `true`, captura do rato está definida como o <xref:System.Windows.Controls.MenuItem>e a respetiva subárvore.</xref:System.Windows.Controls.MenuItem>      <a name=&quot;dependencyPropertyInfo_IsSubmenuOpen&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty>|   | Definir propriedades de metadados `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|</xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A> </xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty>"
  example:
  - "The following example shows how to open a submenu of a <xref:System.Windows.Controls.MenuItem>.  In this example, the <xref:System.Windows.Controls.MenuItem> called `fileMenu` contains a <xref:System.Windows.Controls.MenuItem> called `recentFiles` that has a submenu. When `fileMenu` is opened, the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event is raised and the `FileMenu_Opened` event handler opens the submenu of `recentFiles`.  \n  \n [!code-xml[MenuItems_snip#IsSubMenuOpenMenu](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#issubmenuopenmenu)]  \n  \n [!code-cs[MenuItems_snip#IsSubMenuOpen](~/add/codesnippet/csharp/MenuItems_snip.Menus/Pane1.xaml.cs#issubmenuopen)]\n [!code-vb[MenuItems_snip#IsSubMenuOpen](~/add/codesnippet/visualbasic/menus/pane1.xaml.vb#issubmenuopen)]"
  syntax:
    content: public bool IsSubmenuOpen { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a submenu do <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é aberta, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.IsSubmenuOpen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsSubmenuOpenProperty
  id: IsSubmenuOpenProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsSubmenuOpenProperty
  nameWithType: MenuItem.IsSubmenuOpenProperty
  fullName: System.Windows.Controls.MenuItem.IsSubmenuOpenProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsSubmenuOpenProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation
  id: IsSuspendingPopupAnimation
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsSuspendingPopupAnimation
  nameWithType: MenuItem.IsSuspendingPopupAnimation
  fullName: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém o se um menu suspende animações no respetivo <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;> </xref> controlo."
  remarks: "<a name=&quot;dependencyPropertyInfo_IsSuspendingPopupAnimation&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty>"
  syntax:
    content: public bool IsSuspendingPopupAnimation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o menu deve suspender animações no respetivo pop-up; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty
  id: IsSuspendingPopupAnimationProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: IsSuspendingPopupAnimationProperty
  nameWithType: MenuItem.IsSuspendingPopupAnimationProperty
  fullName: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.ItemContainerTemplateSelector
  id: ItemContainerTemplateSelector
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: ItemContainerTemplateSelector
  nameWithType: MenuItem.ItemContainerTemplateSelector
  fullName: System.Windows.Controls.MenuItem.ItemContainerTemplateSelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define a lógica personalizada para escolher um modelo utilizado para apresentar a cada item."
  remarks: "Utilize um <xref:System.Windows.Controls.ItemContainerTemplateSelector>para escolher o item de diferentes contentores se os itens na sua coleção são o mesmo tipo e tem de fornecer a lógica personalizada para escolher o contentor do item.</xref:System.Windows.Controls.ItemContainerTemplateSelector>      <a name=&quot;dependencyPropertyInfo_ItemContainerTemplateSelector&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty>"
  syntax:
    content: public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }
    return:
      type: System.Windows.Controls.ItemContainerTemplateSelector
      description: "Um objeto personalizado que fornece a lógica e devolve um contentor do item."
  overload: System.Windows.Controls.MenuItem.ItemContainerTemplateSelector*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty
  id: ItemContainerTemplateSelectorProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: ItemContainerTemplateSelectorProperty
  nameWithType: MenuItem.ItemContainerTemplateSelectorProperty
  fullName: System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  id: OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: MenuItem.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnAccessKey(AccessKeyEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Responde quando o <xref:System.Windows.Controls.AccessText.AccessKey*>para este controlo é invocado.</xref:System.Windows.Controls.AccessText.AccessKey*>"
  syntax:
    content: protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.AccessKeyEventArgs
      description: "Os dados de eventos para o <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>eventos.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  overload: System.Windows.Controls.MenuItem.OnAccessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnApplyTemplate
  id: OnApplyTemplate
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnApplyTemplate()
  nameWithType: MenuItem.OnApplyTemplate()
  fullName: System.Windows.Controls.MenuItem.OnApplyTemplate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando a árvore do modelo é gerado."
  syntax:
    content: public override void OnApplyTemplate ();
    parameters: []
  overload: System.Windows.Controls.MenuItem.OnApplyTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)
  id: OnChecked(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnChecked(RoutedEventArgs)
  nameWithType: MenuItem.OnChecked(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnChecked(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando a <xref:System.Windows.Controls.MenuItem.IsChecked*>propriedade fica <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.MenuItem.IsChecked*> Este método gera o <xref href=&quot;System.Windows.Controls.MenuItem.Checked&quot;> </xref> evento encaminhado."
  remarks: "O controlo gera o <xref:System.Windows.Controls.MenuItem.Checked>evento chamando <xref:System.Windows.UIElement.RaiseEvent%2A>.</xref:System.Windows.UIElement.RaiseEvent%2A> </xref:System.Windows.Controls.MenuItem.Checked> Para obter mais informações, consulte [descrição geral de eventos encaminhados](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnChecked (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.Controls.MenuItem.Checked&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnChecked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnClick
  id: OnClick
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnClick()
  nameWithType: MenuItem.OnClick()
  fullName: System.Windows.Controls.MenuItem.OnClick()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é clicado e gera um <xref href=&quot;System.Windows.Controls.Primitives.ButtonBase.Click&quot;> </xref> eventos."
  remarks: "Se herdar de <xref:System.Windows.Controls.MenuItem>, certifique-se chamar a classe base para obter o comportamento seguinte.</xref:System.Windows.Controls.MenuItem>      -Ativando ou desativando do <xref:System.Windows.Controls.MenuItem.IsChecked%2A>propriedade.</xref:System.Windows.Controls.MenuItem.IsChecked%2A>      -Focar-se de que está a ser definido para o item de menu.      -Automatização invocar eventos.      - <xref:System.Windows.Controls.MenuItem.Click>eventos.</xref:System.Windows.Controls.MenuItem.Click>"
  syntax:
    content: protected virtual void OnClick ();
    parameters: []
  overload: System.Windows.Controls.MenuItem.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: MenuItem.OnCreateAutomationPeer()
  fullName: System.Windows.Controls.MenuItem.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Fornece um adequado <xref href=&quot;System.Windows.Automation.Peers.MenuItemAutomationPeer&quot;> </xref> implementação para este controlo, como parte do [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infraestrutura de automatização."
  syntax:
    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "A <xref href=&quot;System.Windows.Automation.Peers.MenuItemAutomationPeer&quot;></xref> for this <xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref>."
  overload: System.Windows.Controls.MenuItem.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: MenuItem.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Announces-se de que o teclado concentra-se neste elemento."
  syntax:
    content: protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.UIElement.GotFocus&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)
  id: OnInitialized(System.EventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnInitialized(EventArgs)
  nameWithType: MenuItem.OnInitialized(EventArgs)
  fullName: System.Windows.Controls.MenuItem.OnInitialized(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando a <xref:System.Windows.FrameworkElement.IsInitialized*>propriedade está definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e gera um <xref href=&quot;System.Windows.FrameworkElement.Initialized&quot;> </xref> eventos.</xref:System.Windows.FrameworkElement.IsInitialized*>"
  syntax:
    content: protected override void OnInitialized (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.FrameworkElement.Initialized&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnInitialized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: MenuItem.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o foco já não consta no ou dentro de um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>."
  syntax:
    content: protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.ContentElement.IsKeyboardFocusWithinChanged&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnItemsChanged(NotifyCollectionChangedEventArgs)
  nameWithType: MenuItem.OnItemsChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnItemsChanged(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando a <xref:System.Windows.Controls.ItemsControl.Items*>alterações de propriedade.</xref:System.Windows.Controls.ItemsControl.Items*>"
  syntax:
    content: protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);
    parameters:
    - id: e
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.Controls.ItemContainerGenerator.ItemsChanged&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnItemsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: MenuItem.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Responde ao <xref href=&quot;System.Windows.UIElement.KeyDown&quot;> </xref> eventos."
  syntax:
    content: protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.UIElement.KeyDown&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: MenuItem.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseEnter(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado sempre que o rato entra um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>."
  syntax:
    content: protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Os dados de eventos para o <xref:System.Windows.Input.Mouse.MouseEnter>eventos.</xref:System.Windows.Input.Mouse.MouseEnter>"
  overload: System.Windows.Controls.MenuItem.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: MenuItem.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseLeave(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado sempre que o rato deixa uma <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>."
  syntax:
    content: protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Os dados de eventos para o <xref:System.Windows.Input.Mouse.MouseLeave>eventos.</xref:System.Windows.Input.Mouse.MouseLeave>"
  overload: System.Windows.Controls.MenuItem.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o botão esquerdo do rato é premido."
  syntax:
    content: protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.UIElement.MouseLeftButtonDown&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o botão esquerdo do rato é libertado."
  syntax:
    content: protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.UIElement.MouseLeftButtonUp&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: MenuItem.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o rato passa sobre um item de menu."
  syntax:
    content: protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Os dados de eventos para o <xref:System.Windows.Input.Mouse.MouseMove>eventos.</xref:System.Windows.Input.Mouse.MouseMove>"
  overload: System.Windows.Controls.MenuItem.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o botão direito do rato é premido."
  syntax:
    content: protected override void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.UIElement.MouseRightButtonDown&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o botão direito do rato é libertado."
  syntax:
    content: protected override void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.UIElement.MouseRightButtonUp&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)
  id: OnSubmenuClosed(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnSubmenuClosed(RoutedEventArgs)
  nameWithType: MenuItem.OnSubmenuClosed(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnSubmenuClosed(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o submenu de um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> está fechado."
  remarks: ''
  example:
  - "This example shows how to use the OnSubmenuClosed method.  \n  \n [!code-cs[MenuItems_snip#SubmenuEventClosed2](~/add/codesnippet/csharp/MenuItems_snip.Menus/Pane1.xaml.cs#submenueventclosed2)]\n [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/add/codesnippet/visualbasic/menus/pane1.xaml.vb#submenueventclosed2)]"
  syntax:
    content: protected virtual void OnSubmenuClosed (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.Controls.MenuItem.SubmenuClosed&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnSubmenuClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)
  id: OnSubmenuOpened(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnSubmenuOpened(RoutedEventArgs)
  nameWithType: MenuItem.OnSubmenuOpened(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnSubmenuOpened(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o submenu de um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é aberto."
  remarks: ''
  example:
  - "This example shows how to use the OnSubmenuOpened method.  \n  \n [!code-cs[MenuItems_snip#SubmenuEventOpened2](~/add/codesnippet/csharp/MenuItems_snip.Menus/Pane1.xaml.cs#submenueventopened2)]\n [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/add/codesnippet/visualbasic/menus/pane1.xaml.vb#submenueventopened2)]"
  syntax:
    content: protected virtual void OnSubmenuOpened (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.Controls.MenuItem.SubmenuOpened&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnSubmenuOpened*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)
  id: OnUnchecked(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnUnchecked(RoutedEventArgs)
  nameWithType: MenuItem.OnUnchecked(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnUnchecked(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando a <xref:System.Windows.Controls.MenuItem.IsChecked*>propriedade fica <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.MenuItem.IsChecked*> Este método gera o <xref href=&quot;System.Windows.Controls.MenuItem.Unchecked&quot;> </xref> evento encaminhado."
  remarks: "O controlo gera o <xref:System.Windows.Controls.MenuItem.Unchecked>evento chamando <xref:System.Windows.UIElement.RaiseEvent%2A>.</xref:System.Windows.UIElement.RaiseEvent%2A> </xref:System.Windows.Controls.MenuItem.Unchecked> Para obter mais informações, consulte [descrição geral de eventos encaminhados](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnUnchecked (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Os dados de eventos para o <xref href=&quot;System.Windows.Controls.MenuItem.Unchecked&quot;> </xref> eventos."
  overload: System.Windows.Controls.MenuItem.OnUnchecked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)
  id: OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: MenuItem.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.Controls.MenuItem.OnVisualParentChanged(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Chamado quando o elemento principal do visual <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> alterações."
  syntax:
    content: protected override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);
    parameters:
    - id: oldParent
      type: System.Windows.DependencyObject
      description: "Valor antigo do principal do visual ou nulo se o visual não tinha um elemento principal."
  overload: System.Windows.Controls.MenuItem.OnVisualParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)
  id: PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: PrepareContainerForItemOverride(DependencyObject,Object)
  nameWithType: MenuItem.PrepareContainerForItemOverride(DependencyObject,Object)
  fullName: System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(DependencyObject,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Prepara o elemento especificado para mostrar o item especificado."
  remarks: "Preparar o elemento pode envolver aplicação estilos, definição enlaces e assim sucessivamente."
  syntax:
    content: protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Elemento utilizado para apresentar o item especificado."
    - id: item
      type: System.Object
      description: "Item especificado."
  overload: System.Windows.Controls.MenuItem.PrepareContainerForItemOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.Role
  id: Role
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: Role
  nameWithType: MenuItem.Role
  fullName: System.Windows.Controls.MenuItem.Role
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém um valor que indica a função de um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref>."
  remarks: "O valor da função depende da relação com o <xref:System.Windows.Controls.Menu>e outros <xref:System.Windows.Controls.MenuItem>objetos.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu>      <a name=&quot;dependencyPropertyInfo_Role&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.RoleProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.RoleProperty>"
  syntax:
    content: public System.Windows.Controls.MenuItemRole Role { get; }
    return:
      type: System.Windows.Controls.MenuItemRole
      description: "Um do <xref href=&quot;System.Windows.Controls.MenuItemRole&quot;> </xref> valores. A predefinição é <xref href=&quot;System.Windows.Controls.MenuItemRole&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.Role*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.RoleProperty
  id: RoleProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: RoleProperty
  nameWithType: MenuItem.RoleProperty
  fullName: System.Windows.Controls.MenuItem.RoleProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.Role*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.Role*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RoleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.SeparatorStyleKey
  id: SeparatorStyleKey
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: SeparatorStyleKey
  nameWithType: MenuItem.SeparatorStyleKey
  fullName: System.Windows.Controls.MenuItem.SeparatorStyleKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém a chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um <xref href=&quot;System.Windows.Controls.Separator&quot;> </xref>."
  remarks: "Utilize esta propriedade para alterar o estilo de um <xref:System.Windows.Controls.Separator>num menu.</xref:System.Windows.Controls.Separator>      <a name=&quot;xamlAttributeUsage_SeparatorStyleKey&quot;></a># # Utilização do atributo de XAML *objeto* *propriedade*= { **MenuItem.SeparatorStyleKey**}`&quot;`/>"
  example:
  - "The following example shows how to use this property to style a <xref:System.Windows.Controls.Separator> in a <xref:System.Windows.Controls.Menu>.  \n  \n [!code-xml[MenuStyles#4](~/add/codesnippet/xaml/p-system.windows.control_229_1.xaml)]\n [!code-xml[MenuStyles#4](~/add/codesnippet/xaml/p-system.windows.control_229_1.xaml)]"
  syntax:
    content: public static System.Windows.ResourceKey SeparatorStyleKey { get; }
    return:
      type: System.Windows.ResourceKey
      description: "A chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um <xref href=&quot;System.Windows.Controls.Separator&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.SeparatorStyleKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)
  id: ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: ShouldApplyItemContainerStyle(DependencyObject,Object)
  nameWithType: MenuItem.ShouldApplyItemContainerStyle(DependencyObject,Object)
  fullName: System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(DependencyObject,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Utilizado para determinar se pretende aplicar um estilo para o contentor do item."
  syntax:
    content: protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);
    parameters:
    - id: container
      type: System.Windows.DependencyObject
      description: "Contentor para os quais será aplicado o estilo."
    - id: item
      type: System.Object
      description: "Item ao qual pertence o contentor."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref> is not a <xref href=&quot;System.Windows.Controls.Separator&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.StaysOpenOnClick
  id: StaysOpenOnClick
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: StaysOpenOnClick
  nameWithType: MenuItem.StaysOpenOnClick
  fullName: System.Windows.Controls.MenuItem.StaysOpenOnClick
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define um valor que indica que o submenu em que esta <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> está localizada a não deve fechar quando este item é clicado."
  remarks: "<a name=&quot;dependencyPropertyInfo_StaysOpenOnClick&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty>"
  example:
  - "The following example uses the StaysOpenOnClick property to create an item in a submenu that does not close when the item is clicked.  \n  \n [!code-xml[MenuItems_snip#SubmenuStaysOpen](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#submenustaysopen)]"
  syntax:
    content: public bool StaysOpenOnClick { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a submenu na qual este <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> está localizada a não deve fechar quando este item é clicado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.MenuItem.StaysOpenOnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.StaysOpenOnClickProperty
  id: StaysOpenOnClickProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: StaysOpenOnClickProperty
  nameWithType: MenuItem.StaysOpenOnClickProperty
  fullName: System.Windows.Controls.MenuItem.StaysOpenOnClickProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.StaysOpenOnClick*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty StaysOpenOnClickProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.SubmenuClosed
  id: SubmenuClosed
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: SubmenuClosed
  nameWithType: MenuItem.SubmenuClosed
  fullName: System.Windows.Controls.MenuItem.SubmenuClosed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ocorre quando o estado do <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*>propriedade é alterado para <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*>"
  remarks: "<a name=&quot;routedEventInfo_SubmenuClosed&quot;></a># # Encaminhados informações sobre eventos |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent>|   | Estratégia de encaminhamento | Bubbling |   | Delegado | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent>"
  example:
  - "The following examples demonstrate calling and handling the SubmenuClosed event.  \n  \n [!code-xml[MenuItems_snip#SubmenuEvents1](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#submenuevents1)]  \n  \n [!code-cs[MenuItems_snip#SubmenuEventClosed2](~/add/codesnippet/csharp/MenuItems_snip.Menus/Pane1.xaml.cs#submenueventclosed2)]\n [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/add/codesnippet/visualbasic/menus/pane1.xaml.vb#submenueventclosed2)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler SubmenuClosed;
    return:
      type: System.Windows.RoutedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.SubmenuClosedEvent
  id: SubmenuClosedEvent
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: SubmenuClosedEvent
  nameWithType: MenuItem.SubmenuClosedEvent
  fullName: System.Windows.Controls.MenuItem.SubmenuClosedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref href=&quot;System.Windows.Controls.MenuItem.SubmenuClosed&quot;> </xref> evento encaminhado."
  syntax:
    content: public static readonly System.Windows.RoutedEvent SubmenuClosedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey
  id: SubmenuHeaderTemplateKey
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: SubmenuHeaderTemplateKey
  nameWithType: MenuItem.SubmenuHeaderTemplateKey
  fullName: System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém a chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um cabeçalho de um submenu."
  remarks: "Utilize esta propriedade para alterar o estilo de um <xref:System.Windows.Controls.MenuItem>cuja <xref:System.Windows.Controls.MenuItem.Role%2A>propriedade está definida como <xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName>.</xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName> </xref:System.Windows.Controls.MenuItem.Role%2A> </xref:System.Windows.Controls.MenuItem>      <a name=&quot;xamlAttributeUsage_SubmenuHeaderTemplateKey&quot;></a># # Utilização do atributo de XAML *objeto* *propriedade*= { **MenuItem.SubmenuHeaderTemplateKey**}`&quot;`/>"
  syntax:
    content: public static System.Windows.ResourceKey SubmenuHeaderTemplateKey { get; }
    return:
      type: System.Windows.ResourceKey
      description: "A chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um cabeçalho de um submenu."
  overload: System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.SubmenuItemTemplateKey
  id: SubmenuItemTemplateKey
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: SubmenuItemTemplateKey
  nameWithType: MenuItem.SubmenuItemTemplateKey
  fullName: System.Windows.Controls.MenuItem.SubmenuItemTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém a chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um submenu."
  remarks: "Utilize esta propriedade para alterar o estilo de um <xref:System.Windows.Controls.MenuItem>cuja <xref:System.Windows.Controls.MenuItem.Role%2A>propriedade está definida como <xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName>.</xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName> </xref:System.Windows.Controls.MenuItem.Role%2A> </xref:System.Windows.Controls.MenuItem>      <a name=&quot;xamlAttributeUsage_SubmenuItemTemplateKey&quot;></a># # Utilização do atributo de XAML *objeto* *propriedade*= { **MenuItem.SubmenuItemTemplateKey**}`&quot;`/>"
  syntax:
    content: public static System.Windows.ResourceKey SubmenuItemTemplateKey { get; }
    return:
      type: System.Windows.ResourceKey
      description: "A chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um submenu."
  overload: System.Windows.Controls.MenuItem.SubmenuItemTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.SubmenuOpened
  id: SubmenuOpened
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: SubmenuOpened
  nameWithType: MenuItem.SubmenuOpened
  fullName: System.Windows.Controls.MenuItem.SubmenuOpened
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ocorre quando o estado do <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*>propriedade é alterado para <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*>"
  remarks: "<a name=&quot;routedEventInfo_SubmenuOpened&quot;></a># # Encaminhados informações sobre eventos |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent>|   | Estratégia de encaminhamento | Bubbling |   | Delegado | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent>"
  example:
  - "The following examples demonstrate calling and handling the SubmenuOpened event.  \n  \n [!code-xml[MenuItems_snip#SubmenuEvents1](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#submenuevents1)]  \n  \n [!code-cs[MenuItems_snip#SubmenuEventOpened2](~/add/codesnippet/csharp/MenuItems_snip.Menus/Pane1.xaml.cs#submenueventopened2)]\n [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/add/codesnippet/visualbasic/menus/pane1.xaml.vb#submenueventopened2)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler SubmenuOpened;
    return:
      type: System.Windows.RoutedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.SubmenuOpenedEvent
  id: SubmenuOpenedEvent
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: SubmenuOpenedEvent
  nameWithType: MenuItem.SubmenuOpenedEvent
  fullName: System.Windows.Controls.MenuItem.SubmenuOpenedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref href=&quot;System.Windows.Controls.MenuItem.SubmenuOpened&quot;> </xref> evento encaminhado."
  syntax:
    content: public static readonly System.Windows.RoutedEvent SubmenuOpenedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey
  id: TopLevelHeaderTemplateKey
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: TopLevelHeaderTemplateKey
  nameWithType: MenuItem.TopLevelHeaderTemplateKey
  fullName: System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém a chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um cabeçalho de um menu de nível superior."
  remarks: "Utilize esta propriedade para alterar o estilo de um <xref:System.Windows.Controls.MenuItem>cuja <xref:System.Windows.Controls.MenuItem.Role%2A>propriedade está definida como <xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName>.</xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName> </xref:System.Windows.Controls.MenuItem.Role%2A> </xref:System.Windows.Controls.MenuItem>      <a name=&quot;xamlAttributeUsage_TopLevelHeaderTemplateKey&quot;></a># # Utilização do atributo de XAML *objeto* *propriedade*= { **MenuItem.TopLevelHeaderTemplateKey**}`&quot;`/>"
  syntax:
    content: public static System.Windows.ResourceKey TopLevelHeaderTemplateKey { get; }
    return:
      type: System.Windows.ResourceKey
      description: "A chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando o <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> é um cabeçalho de um menu de nível superior."
  overload: System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.TopLevelItemTemplateKey
  id: TopLevelItemTemplateKey
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: TopLevelItemTemplateKey
  nameWithType: MenuItem.TopLevelItemTemplateKey
  fullName: System.Windows.Controls.MenuItem.TopLevelItemTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém a chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando é um nível superior <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> que podem chamar comandos."
  remarks: "Utilize esta propriedade para alterar o estilo de um <xref:System.Windows.Controls.MenuItem>cuja <xref:System.Windows.Controls.MenuItem.Role%2A>propriedade está definida como <xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName>.</xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName> </xref:System.Windows.Controls.MenuItem.Role%2A> </xref:System.Windows.Controls.MenuItem>      <a name=&quot;xamlAttributeUsage_TopLevelItemTemplateKey&quot;></a># # Utilização do atributo de XAML *objeto* *propriedade*= { **MenuItem.TopLevelItemTemplateKey**}`&quot;`/>"
  syntax:
    content: public static System.Windows.ResourceKey TopLevelItemTemplateKey { get; }
    return:
      type: System.Windows.ResourceKey
      description: "A chave de recurso para um estilo aplicado a um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> quando é um nível superior <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> que podem chamar comandos."
  overload: System.Windows.Controls.MenuItem.TopLevelItemTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.Unchecked
  id: Unchecked
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: Unchecked
  nameWithType: MenuItem.Unchecked
  fullName: System.Windows.Controls.MenuItem.Unchecked
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ocorre quando um <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> está desmarcada."
  remarks: "<a name=&quot;routedEventInfo_Unchecked&quot;></a># # Encaminhados informações sobre eventos |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.UncheckedEvent>|   | Estratégia de encaminhamento | Bubbling |   | Delegado | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.MenuItem.UncheckedEvent>"
  example:
  - "The following example demonstrates handling the Unchecked event.  \n  \n [!code-xml[MenuItemCommandsAndEvents#3](~/add/codesnippet/xaml/MenuItemCommandsAndEvents/Window1.xaml#3)]  \n  \n [!code-cs[MenuItemCommandsAndEvents#4](~/add/codesnippet/csharp/MenuItemCommandsAndEvents/Window1.xaml.cs#4)]\n [!code-vb[MenuItemCommandsAndEvents#4](~/add/codesnippet/visualbasic/MenuItemCommandsAndEvents/Window1.xaml.vb#4)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler Unchecked;
    return:
      type: System.Windows.RoutedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.UncheckedEvent
  id: UncheckedEvent
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: UncheckedEvent
  nameWithType: MenuItem.UncheckedEvent
  fullName: System.Windows.Controls.MenuItem.UncheckedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref href=&quot;System.Windows.Controls.MenuItem.Unchecked&quot;> </xref> evento encaminhado."
  syntax:
    content: public static readonly System.Windows.RoutedEvent UncheckedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.UsesItemContainerTemplate
  id: UsesItemContainerTemplate
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: UsesItemContainerTemplate
  nameWithType: MenuItem.UsesItemContainerTemplate
  fullName: System.Windows.Controls.MenuItem.UsesItemContainerTemplate
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Obtém ou define um valor que indica se o menu seleciona os contentores de item diferentes, dependendo do tipo de item na colecção subjacente ou alguns outro heuristic."
  remarks: "Esta propriedade é útil se pretender criar um menu por enlace numa coleção.  O contentor de item é o elemento de IU que mostra o objeto numa coleção. Se pretender vincular a uma coleção para criar um menu que contém <xref:System.Windows.Controls.MenuItem>objetos e <xref:System.Windows.Controls.Separator>objetos, defina o <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A>propriedade para VERDADEIRO e criar um <xref:System.Windows.Controls.ItemContainerTemplate>para cada tipo de objeto na sua coleção.</xref:System.Windows.Controls.ItemContainerTemplate> </xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> </xref:System.Windows.Controls.Separator> </xref:System.Windows.Controls.MenuItem>  Cada <xref:System.Windows.Controls.ItemContainerTemplate>tem de conter um um <xref:System.Windows.Controls.MenuItem>ou um <xref:System.Windows.Controls.Separator>.</xref:System.Windows.Controls.Separator> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.ItemContainerTemplate>      <a name=&quot;dependencyPropertyInfo_UsesItemContainerTemplate&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty>"
  syntax:
    content: public bool UsesItemContainerTemplate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>o menu seleciona o item de diferentes contentores; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       A predefinição registada é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Para obter mais informações sobre o que podem influenciar o valor, consulte [precedência de valor de propriedade de dependência](~/add/includes/ajax-current-ext-md.md)."
  overload: System.Windows.Controls.MenuItem.UsesItemContainerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty
  id: UsesItemContainerTemplateProperty
  parent: System.Windows.Controls.MenuItem
  langs:
  - csharp
  name: UsesItemContainerTemplateProperty
  nameWithType: MenuItem.UsesItemContainerTemplateProperty
  fullName: System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Identifica o <xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplate*>propriedade de dependência.</xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplate*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Controls.HeaderedItemsControl
  isExternal: false
  name: System.Windows.Controls.HeaderedItemsControl
- uid: System.Windows.Controls.MenuItem.#ctor
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Windows.Controls.MenuItem.MenuItem()
- uid: System.Windows.Controls.MenuItem.Checked
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: System.Windows.Controls.MenuItem.Checked
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.Controls.MenuItem.CheckedEvent
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CheckedEvent
  nameWithType: MenuItem.CheckedEvent
  fullName: System.Windows.Controls.MenuItem.CheckedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Controls.MenuItem.Click
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Click
  nameWithType: MenuItem.Click
  fullName: System.Windows.Controls.MenuItem.Click
- uid: System.Windows.Controls.MenuItem.ClickEvent
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: ClickEvent
  nameWithType: MenuItem.ClickEvent
  fullName: System.Windows.Controls.MenuItem.ClickEvent
- uid: System.Windows.Controls.MenuItem.Command
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Command
  nameWithType: MenuItem.Command
  fullName: System.Windows.Controls.MenuItem.Command
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Controls.MenuItem.CommandParameter
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CommandParameter
  nameWithType: MenuItem.CommandParameter
  fullName: System.Windows.Controls.MenuItem.CommandParameter
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.MenuItem.CommandParameterProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CommandParameterProperty
  nameWithType: MenuItem.CommandParameterProperty
  fullName: System.Windows.Controls.MenuItem.CommandParameterProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.MenuItem.CommandProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CommandProperty
  nameWithType: MenuItem.CommandProperty
  fullName: System.Windows.Controls.MenuItem.CommandProperty
- uid: System.Windows.Controls.MenuItem.CommandTarget
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CommandTarget
  nameWithType: MenuItem.CommandTarget
  fullName: System.Windows.Controls.MenuItem.CommandTarget
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Controls.MenuItem.CommandTargetProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CommandTargetProperty
  nameWithType: MenuItem.CommandTargetProperty
  fullName: System.Windows.Controls.MenuItem.CommandTargetProperty
- uid: System.Windows.Controls.MenuItem.GetContainerForItemOverride
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: GetContainerForItemOverride()
  nameWithType: MenuItem.GetContainerForItemOverride()
  fullName: System.Windows.Controls.MenuItem.GetContainerForItemOverride()
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Controls.MenuItem.HandlesScrolling
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: HandlesScrolling
  nameWithType: MenuItem.HandlesScrolling
  fullName: System.Windows.Controls.MenuItem.HandlesScrolling
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.MenuItem.Icon
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Icon
  nameWithType: MenuItem.Icon
  fullName: System.Windows.Controls.MenuItem.Icon
- uid: System.Windows.Controls.MenuItem.IconProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IconProperty
  nameWithType: MenuItem.IconProperty
  fullName: System.Windows.Controls.MenuItem.IconProperty
- uid: System.Windows.Controls.MenuItem.InputGestureText
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: InputGestureText
  nameWithType: MenuItem.InputGestureText
  fullName: System.Windows.Controls.MenuItem.InputGestureText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.MenuItem.InputGestureTextProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: InputGestureTextProperty
  nameWithType: MenuItem.InputGestureTextProperty
  fullName: System.Windows.Controls.MenuItem.InputGestureTextProperty
- uid: System.Windows.Controls.MenuItem.IsCheckable
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsCheckable
  nameWithType: MenuItem.IsCheckable
  fullName: System.Windows.Controls.MenuItem.IsCheckable
- uid: System.Windows.Controls.MenuItem.IsCheckableProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsCheckableProperty
  nameWithType: MenuItem.IsCheckableProperty
  fullName: System.Windows.Controls.MenuItem.IsCheckableProperty
- uid: System.Windows.Controls.MenuItem.IsChecked
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsChecked
  nameWithType: MenuItem.IsChecked
  fullName: System.Windows.Controls.MenuItem.IsChecked
- uid: System.Windows.Controls.MenuItem.IsCheckedProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsCheckedProperty
  nameWithType: MenuItem.IsCheckedProperty
  fullName: System.Windows.Controls.MenuItem.IsCheckedProperty
- uid: System.Windows.Controls.MenuItem.IsEnabledCore
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsEnabledCore
  nameWithType: MenuItem.IsEnabledCore
  fullName: System.Windows.Controls.MenuItem.IsEnabledCore
- uid: System.Windows.Controls.MenuItem.IsHighlighted
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsHighlighted
  nameWithType: MenuItem.IsHighlighted
  fullName: System.Windows.Controls.MenuItem.IsHighlighted
- uid: System.Windows.Controls.MenuItem.IsHighlightedProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsHighlightedProperty
  nameWithType: MenuItem.IsHighlightedProperty
  fullName: System.Windows.Controls.MenuItem.IsHighlightedProperty
- uid: System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsItemItsOwnContainerOverride(Object)
  nameWithType: MenuItem.IsItemItsOwnContainerOverride(Object)
  fullName: System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(Object)
- uid: System.Windows.Controls.MenuItem.IsPressed
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsPressed
  nameWithType: MenuItem.IsPressed
  fullName: System.Windows.Controls.MenuItem.IsPressed
- uid: System.Windows.Controls.MenuItem.IsPressedProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsPressedProperty
  nameWithType: MenuItem.IsPressedProperty
  fullName: System.Windows.Controls.MenuItem.IsPressedProperty
- uid: System.Windows.Controls.MenuItem.IsSubmenuOpen
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsSubmenuOpen
  nameWithType: MenuItem.IsSubmenuOpen
  fullName: System.Windows.Controls.MenuItem.IsSubmenuOpen
- uid: System.Windows.Controls.MenuItem.IsSubmenuOpenProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsSubmenuOpenProperty
  nameWithType: MenuItem.IsSubmenuOpenProperty
  fullName: System.Windows.Controls.MenuItem.IsSubmenuOpenProperty
- uid: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsSuspendingPopupAnimation
  nameWithType: MenuItem.IsSuspendingPopupAnimation
  fullName: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation
- uid: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsSuspendingPopupAnimationProperty
  nameWithType: MenuItem.IsSuspendingPopupAnimationProperty
  fullName: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty
- uid: System.Windows.Controls.MenuItem.ItemContainerTemplateSelector
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: ItemContainerTemplateSelector
  nameWithType: MenuItem.ItemContainerTemplateSelector
  fullName: System.Windows.Controls.MenuItem.ItemContainerTemplateSelector
- uid: System.Windows.Controls.ItemContainerTemplateSelector
  parent: System.Windows.Controls
  isExternal: false
  name: ItemContainerTemplateSelector
  nameWithType: ItemContainerTemplateSelector
  fullName: System.Windows.Controls.ItemContainerTemplateSelector
- uid: System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: ItemContainerTemplateSelectorProperty
  nameWithType: MenuItem.ItemContainerTemplateSelectorProperty
  fullName: System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty
- uid: System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: MenuItem.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnAccessKey(AccessKeyEventArgs)
- uid: System.Windows.Input.AccessKeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyEventArgs
  nameWithType: AccessKeyEventArgs
  fullName: System.Windows.Input.AccessKeyEventArgs
- uid: System.Windows.Controls.MenuItem.OnApplyTemplate
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnApplyTemplate()
  nameWithType: MenuItem.OnApplyTemplate()
  fullName: System.Windows.Controls.MenuItem.OnApplyTemplate()
- uid: System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnChecked(RoutedEventArgs)
  nameWithType: MenuItem.OnChecked(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnChecked(RoutedEventArgs)
- uid: System.Windows.RoutedEventArgs
  parent: System.Windows
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.Controls.MenuItem.OnClick
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnClick()
  nameWithType: MenuItem.OnClick()
  fullName: System.Windows.Controls.MenuItem.OnClick()
- uid: System.Windows.Controls.MenuItem.OnCreateAutomationPeer
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: MenuItem.OnCreateAutomationPeer()
  fullName: System.Windows.Controls.MenuItem.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: MenuItem.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.Input.KeyboardFocusChangedEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventArgs
  nameWithType: KeyboardFocusChangedEventArgs
  fullName: System.Windows.Input.KeyboardFocusChangedEventArgs
- uid: System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnInitialized(EventArgs)
  nameWithType: MenuItem.OnInitialized(EventArgs)
  fullName: System.Windows.Controls.MenuItem.OnInitialized(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: MenuItem.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnItemsChanged(NotifyCollectionChangedEventArgs)
  nameWithType: MenuItem.OnItemsChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnItemsChanged(NotifyCollectionChangedEventArgs)
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: MenuItem.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Input.KeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
- uid: System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: MenuItem.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseEnter(MouseEventArgs)
- uid: System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: MenuItem.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseLeave(MouseEventArgs)
- uid: System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: MenuItem.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseMove(MouseEventArgs)
- uid: System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: MenuItem.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnSubmenuClosed(RoutedEventArgs)
  nameWithType: MenuItem.OnSubmenuClosed(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnSubmenuClosed(RoutedEventArgs)
- uid: System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnSubmenuOpened(RoutedEventArgs)
  nameWithType: MenuItem.OnSubmenuOpened(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnSubmenuOpened(RoutedEventArgs)
- uid: System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnUnchecked(RoutedEventArgs)
  nameWithType: MenuItem.OnUnchecked(RoutedEventArgs)
  fullName: System.Windows.Controls.MenuItem.OnUnchecked(RoutedEventArgs)
- uid: System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: MenuItem.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.Controls.MenuItem.OnVisualParentChanged(DependencyObject)
- uid: System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: PrepareContainerForItemOverride(DependencyObject,Object)
  nameWithType: MenuItem.PrepareContainerForItemOverride(DependencyObject,Object)
  fullName: System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(DependencyObject,Object)
- uid: System.Windows.Controls.MenuItem.Role
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Role
  nameWithType: MenuItem.Role
  fullName: System.Windows.Controls.MenuItem.Role
- uid: System.Windows.Controls.MenuItemRole
  parent: System.Windows.Controls
  isExternal: false
  name: MenuItemRole
  nameWithType: MenuItemRole
  fullName: System.Windows.Controls.MenuItemRole
- uid: System.Windows.Controls.MenuItem.RoleProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: RoleProperty
  nameWithType: MenuItem.RoleProperty
  fullName: System.Windows.Controls.MenuItem.RoleProperty
- uid: System.Windows.Controls.MenuItem.SeparatorStyleKey
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SeparatorStyleKey
  nameWithType: MenuItem.SeparatorStyleKey
  fullName: System.Windows.Controls.MenuItem.SeparatorStyleKey
- uid: System.Windows.ResourceKey
  parent: System.Windows
  isExternal: false
  name: ResourceKey
  nameWithType: ResourceKey
  fullName: System.Windows.ResourceKey
- uid: System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: ShouldApplyItemContainerStyle(DependencyObject,Object)
  nameWithType: MenuItem.ShouldApplyItemContainerStyle(DependencyObject,Object)
  fullName: System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(DependencyObject,Object)
- uid: System.Windows.Controls.MenuItem.StaysOpenOnClick
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: StaysOpenOnClick
  nameWithType: MenuItem.StaysOpenOnClick
  fullName: System.Windows.Controls.MenuItem.StaysOpenOnClick
- uid: System.Windows.Controls.MenuItem.StaysOpenOnClickProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: StaysOpenOnClickProperty
  nameWithType: MenuItem.StaysOpenOnClickProperty
  fullName: System.Windows.Controls.MenuItem.StaysOpenOnClickProperty
- uid: System.Windows.Controls.MenuItem.SubmenuClosed
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuClosed
  nameWithType: MenuItem.SubmenuClosed
  fullName: System.Windows.Controls.MenuItem.SubmenuClosed
- uid: System.Windows.Controls.MenuItem.SubmenuClosedEvent
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuClosedEvent
  nameWithType: MenuItem.SubmenuClosedEvent
  fullName: System.Windows.Controls.MenuItem.SubmenuClosedEvent
- uid: System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuHeaderTemplateKey
  nameWithType: MenuItem.SubmenuHeaderTemplateKey
  fullName: System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey
- uid: System.Windows.Controls.MenuItem.SubmenuItemTemplateKey
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuItemTemplateKey
  nameWithType: MenuItem.SubmenuItemTemplateKey
  fullName: System.Windows.Controls.MenuItem.SubmenuItemTemplateKey
- uid: System.Windows.Controls.MenuItem.SubmenuOpened
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuOpened
  nameWithType: MenuItem.SubmenuOpened
  fullName: System.Windows.Controls.MenuItem.SubmenuOpened
- uid: System.Windows.Controls.MenuItem.SubmenuOpenedEvent
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuOpenedEvent
  nameWithType: MenuItem.SubmenuOpenedEvent
  fullName: System.Windows.Controls.MenuItem.SubmenuOpenedEvent
- uid: System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: TopLevelHeaderTemplateKey
  nameWithType: MenuItem.TopLevelHeaderTemplateKey
  fullName: System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey
- uid: System.Windows.Controls.MenuItem.TopLevelItemTemplateKey
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: TopLevelItemTemplateKey
  nameWithType: MenuItem.TopLevelItemTemplateKey
  fullName: System.Windows.Controls.MenuItem.TopLevelItemTemplateKey
- uid: System.Windows.Controls.MenuItem.Unchecked
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Unchecked
  nameWithType: MenuItem.Unchecked
  fullName: System.Windows.Controls.MenuItem.Unchecked
- uid: System.Windows.Controls.MenuItem.UncheckedEvent
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: UncheckedEvent
  nameWithType: MenuItem.UncheckedEvent
  fullName: System.Windows.Controls.MenuItem.UncheckedEvent
- uid: System.Windows.Controls.MenuItem.UsesItemContainerTemplate
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: UsesItemContainerTemplate
  nameWithType: MenuItem.UsesItemContainerTemplate
  fullName: System.Windows.Controls.MenuItem.UsesItemContainerTemplate
- uid: System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: UsesItemContainerTemplateProperty
  nameWithType: MenuItem.UsesItemContainerTemplateProperty
  fullName: System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty
- uid: System.Windows.Controls.MenuItem.#ctor*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem.MenuItem
- uid: System.Windows.Controls.MenuItem.Command*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Command
  nameWithType: MenuItem.Command
- uid: System.Windows.Controls.MenuItem.CommandParameter*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CommandParameter
  nameWithType: MenuItem.CommandParameter
- uid: System.Windows.Controls.MenuItem.CommandTarget*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: CommandTarget
  nameWithType: MenuItem.CommandTarget
- uid: System.Windows.Controls.MenuItem.GetContainerForItemOverride*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: GetContainerForItemOverride
  nameWithType: MenuItem.GetContainerForItemOverride
- uid: System.Windows.Controls.MenuItem.HandlesScrolling*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: HandlesScrolling
  nameWithType: MenuItem.HandlesScrolling
- uid: System.Windows.Controls.MenuItem.Icon*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Icon
  nameWithType: MenuItem.Icon
- uid: System.Windows.Controls.MenuItem.InputGestureText*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: InputGestureText
  nameWithType: MenuItem.InputGestureText
- uid: System.Windows.Controls.MenuItem.IsCheckable*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsCheckable
  nameWithType: MenuItem.IsCheckable
- uid: System.Windows.Controls.MenuItem.IsChecked*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsChecked
  nameWithType: MenuItem.IsChecked
- uid: System.Windows.Controls.MenuItem.IsEnabledCore*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsEnabledCore
  nameWithType: MenuItem.IsEnabledCore
- uid: System.Windows.Controls.MenuItem.IsHighlighted*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsHighlighted
  nameWithType: MenuItem.IsHighlighted
- uid: System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsItemItsOwnContainerOverride
  nameWithType: MenuItem.IsItemItsOwnContainerOverride
- uid: System.Windows.Controls.MenuItem.IsPressed*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsPressed
  nameWithType: MenuItem.IsPressed
- uid: System.Windows.Controls.MenuItem.IsSubmenuOpen*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsSubmenuOpen
  nameWithType: MenuItem.IsSubmenuOpen
- uid: System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: IsSuspendingPopupAnimation
  nameWithType: MenuItem.IsSuspendingPopupAnimation
- uid: System.Windows.Controls.MenuItem.ItemContainerTemplateSelector*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: ItemContainerTemplateSelector
  nameWithType: MenuItem.ItemContainerTemplateSelector
- uid: System.Windows.Controls.MenuItem.OnAccessKey*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnAccessKey
  nameWithType: MenuItem.OnAccessKey
- uid: System.Windows.Controls.MenuItem.OnApplyTemplate*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnApplyTemplate
  nameWithType: MenuItem.OnApplyTemplate
- uid: System.Windows.Controls.MenuItem.OnChecked*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnChecked
  nameWithType: MenuItem.OnChecked
- uid: System.Windows.Controls.MenuItem.OnClick*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnClick
  nameWithType: MenuItem.OnClick
- uid: System.Windows.Controls.MenuItem.OnCreateAutomationPeer*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: MenuItem.OnCreateAutomationPeer
- uid: System.Windows.Controls.MenuItem.OnGotKeyboardFocus*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnGotKeyboardFocus
  nameWithType: MenuItem.OnGotKeyboardFocus
- uid: System.Windows.Controls.MenuItem.OnInitialized*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnInitialized
  nameWithType: MenuItem.OnInitialized
- uid: System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged
  nameWithType: MenuItem.OnIsKeyboardFocusWithinChanged
- uid: System.Windows.Controls.MenuItem.OnItemsChanged*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnItemsChanged
  nameWithType: MenuItem.OnItemsChanged
- uid: System.Windows.Controls.MenuItem.OnKeyDown*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnKeyDown
  nameWithType: MenuItem.OnKeyDown
- uid: System.Windows.Controls.MenuItem.OnMouseEnter*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseEnter
  nameWithType: MenuItem.OnMouseEnter
- uid: System.Windows.Controls.MenuItem.OnMouseLeave*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseLeave
  nameWithType: MenuItem.OnMouseLeave
- uid: System.Windows.Controls.MenuItem.OnMouseLeftButtonDown*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseLeftButtonDown
  nameWithType: MenuItem.OnMouseLeftButtonDown
- uid: System.Windows.Controls.MenuItem.OnMouseLeftButtonUp*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseLeftButtonUp
  nameWithType: MenuItem.OnMouseLeftButtonUp
- uid: System.Windows.Controls.MenuItem.OnMouseMove*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseMove
  nameWithType: MenuItem.OnMouseMove
- uid: System.Windows.Controls.MenuItem.OnMouseRightButtonDown*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseRightButtonDown
  nameWithType: MenuItem.OnMouseRightButtonDown
- uid: System.Windows.Controls.MenuItem.OnMouseRightButtonUp*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnMouseRightButtonUp
  nameWithType: MenuItem.OnMouseRightButtonUp
- uid: System.Windows.Controls.MenuItem.OnSubmenuClosed*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnSubmenuClosed
  nameWithType: MenuItem.OnSubmenuClosed
- uid: System.Windows.Controls.MenuItem.OnSubmenuOpened*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnSubmenuOpened
  nameWithType: MenuItem.OnSubmenuOpened
- uid: System.Windows.Controls.MenuItem.OnUnchecked*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnUnchecked
  nameWithType: MenuItem.OnUnchecked
- uid: System.Windows.Controls.MenuItem.OnVisualParentChanged*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: OnVisualParentChanged
  nameWithType: MenuItem.OnVisualParentChanged
- uid: System.Windows.Controls.MenuItem.PrepareContainerForItemOverride*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: PrepareContainerForItemOverride
  nameWithType: MenuItem.PrepareContainerForItemOverride
- uid: System.Windows.Controls.MenuItem.Role*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: Role
  nameWithType: MenuItem.Role
- uid: System.Windows.Controls.MenuItem.SeparatorStyleKey*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SeparatorStyleKey
  nameWithType: MenuItem.SeparatorStyleKey
- uid: System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: ShouldApplyItemContainerStyle
  nameWithType: MenuItem.ShouldApplyItemContainerStyle
- uid: System.Windows.Controls.MenuItem.StaysOpenOnClick*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: StaysOpenOnClick
  nameWithType: MenuItem.StaysOpenOnClick
- uid: System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuHeaderTemplateKey
  nameWithType: MenuItem.SubmenuHeaderTemplateKey
- uid: System.Windows.Controls.MenuItem.SubmenuItemTemplateKey*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: SubmenuItemTemplateKey
  nameWithType: MenuItem.SubmenuItemTemplateKey
- uid: System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: TopLevelHeaderTemplateKey
  nameWithType: MenuItem.TopLevelHeaderTemplateKey
- uid: System.Windows.Controls.MenuItem.TopLevelItemTemplateKey*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: TopLevelItemTemplateKey
  nameWithType: MenuItem.TopLevelItemTemplateKey
- uid: System.Windows.Controls.MenuItem.UsesItemContainerTemplate*
  parent: System.Windows.Controls.MenuItem
  isExternal: false
  name: UsesItemContainerTemplate
  nameWithType: MenuItem.UsesItemContainerTemplate
