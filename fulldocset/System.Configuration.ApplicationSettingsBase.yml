### YamlMime:ManagedReference
items:
- uid: System.Configuration.ApplicationSettingsBase
  id: ApplicationSettingsBase
  children:
  - System.Configuration.ApplicationSettingsBase.#ctor
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  - System.Configuration.ApplicationSettingsBase.Context
  - System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  - System.Configuration.ApplicationSettingsBase.Item(System.String)
  - System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  - System.Configuration.ApplicationSettingsBase.Properties
  - System.Configuration.ApplicationSettingsBase.PropertyChanged
  - System.Configuration.ApplicationSettingsBase.PropertyValues
  - System.Configuration.ApplicationSettingsBase.Providers
  - System.Configuration.ApplicationSettingsBase.Reload
  - System.Configuration.ApplicationSettingsBase.Reset
  - System.Configuration.ApplicationSettingsBase.Save
  - System.Configuration.ApplicationSettingsBase.SettingChanging
  - System.Configuration.ApplicationSettingsBase.SettingsKey
  - System.Configuration.ApplicationSettingsBase.SettingsLoaded
  - System.Configuration.ApplicationSettingsBase.SettingsSaving
  - System.Configuration.ApplicationSettingsBase.Upgrade
  langs:
  - csharp
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase
  fullName: System.Configuration.ApplicationSettingsBase
  type: Class
  summary: "Funciona como uma classe base para efetuar a derivação de classes concretas wrapper para implementar a funcionalidade de definições de aplicação nas aplicações de formulários de janela."
  remarks: "ApplicationSettingsBase adiciona as seguintes funcionalidades para o <xref:System.Configuration.SettingsBase>classe, que é utilizado por aplicações baseadas na Web:-a capacidade para detetar os atributos de uma classe de wrapper definições derivada,.</xref:System.Configuration.SettingsBase> ApplicationSettingsBase suporta o modelo declarativo utilizado para propriedades de classe de wrapper, conforme descrito mais à frente.      -Nível mais elevado <xref:System.Configuration.ApplicationSettingsBase.Save%2A>e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>métodos.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Save%2A>      -Eventos de validação adicionais que pode processar para garantir a correção de definições individuais.       Na arquitetura de definições da aplicação, para aceder a um grupo de propriedades de definições tem de derivar uma classe de wrapper concreto ApplicationSettingsBase. A classe de wrapper customizes ApplicationSettingsBase das seguintes formas: - para cada propriedade de definições para poderem ser acedidos, um correspondente tipos de dados inflexíveis público é adicionada uma propriedade para a classe de wrapper. Esta propriedade tem `get` e `set` os acessores de leitura/escrita para definições de aplicação, mas apenas um `get` acessor para as definições só de leitura.      -Appropriated atributos tem de ser aplicados a propriedades públicas da classe wrapper para indicar características da propriedade de definições, tais como o âmbito da definição (aplicação ou utilizador), se a definição deve suportar roaming, o valor predefinido para a definição, o fornecedor de definições a ser utilizada e assim sucessivamente. Cada propriedade é necessária especificar o respetivo âmbito, utilizando um <xref:System.Configuration.ApplicationScopedSettingAttribute>ou <xref:System.Configuration.UserScopedSettingAttribute>.</xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> Definições do âmbito de aplicação são só de leitura se a predefinição <xref:System.Configuration.LocalFileSettingsProvider>é utilizado.</xref:System.Configuration.LocalFileSettingsProvider>       A classe de ApplicationSettingsBase utiliza reflexão para detetar estes atributos em tempo de execução. A maioria destas informações obtém transmitido para a camada de fornecedor de definições, o que é responsável por armazenamento, o formato de persistência e assim sucessivamente.       Quando uma aplicação tem várias classes de wrapper de definições, cada classe define um *grupo de definições*. Cada grupo tem as seguintes características:-um grupo pode conter qualquer número ou tipo de definições de propriedade.      -Se o nome do grupo não for explicitamente definido pela classe de wrapper com decorating um <xref:System.Configuration.SettingsGroupNameAttribute>, em seguida, é gerado automaticamente um nome.</xref:System.Configuration.SettingsGroupNameAttribute>       Por predefinição, todas as aplicações baseados no cliente utilizam o <xref:System.Configuration.LocalFileSettingsProvider>para fornecer armazenamento.</xref:System.Configuration.LocalFileSettingsProvider> Se pretender um fornecedor de definições alternativo, em seguida, a classe de wrapper ou a propriedade tem de ser decorada com um <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> correspondente       Para obter mais informações sobre como utilizar as definições da aplicação, consulte [as definições de aplicação para Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively. All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.  \n  \n The form contains four child controls that have the following names and functions:  \n  \n-   A button named `btnBackColor` used to display the **Color** common dialog box.  \n  \n-   A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.  \n  \n-   A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.  \n  \n-   A textbox named `tbStatus` used to display status information about the program.  \n  \n Notice that after every execution of the application, an additional period character is appended to the title text of the form.  \n  \n This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`. Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.  \n  \n [!code-cpp[AppSettingsSample#1](~/add/codesnippet/cpp/t-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#1](~/add/codesnippet/csharp/t-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#1](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#1)]"
  syntax:
    content: 'public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe para o estado predefinido."
  remarks: "O construtor predefinido foi concebido para funcionar no pressuposto de que não existe nenhum componente associada com a classe de wrapper definições atual, que deriva de <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase>       Quando é criada uma instância de uma classe de wrapper, código herdado efetuará automaticamente as seguintes ações: 1.  Refletir sobre a classe.      2.  Para cada propriedade no wrapper de marcados com um `[UserScopedSettingAttribute]` ou `[ApplicationScopedSettingAttribute]`, um correspondente <xref:System.Configuration.SettingsProperty>é criado.</xref:System.Configuration.SettingsProperty>      3.  Cada <xref:System.Configuration.SettingsProperty>tem algumas do seu conjunto de propriedades com base nos outros atributos que são opcionalmente presentes nas propriedades do dispositivo de moldagem, tais como o valor predefinido ou o fornecedor de definições.</xref:System.Configuration.SettingsProperty>      4.  Todos os outros atributos são colocados simplesmente uma matriz de atributo, a <xref:System.Configuration.SettingsProperty.Attributes%2A>propriedade de <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.Attributes%2A>      5.  Todos os <xref:System.Configuration.SettingsProperty>objetos são adicionados a um <xref:System.Configuration.SettingsPropertyCollection>representado pela <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>propriedade de <xref:System.Configuration.ApplicationSettingsBase>classe.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.SettingsPropertyCollection> </xref:System.Configuration.SettingsProperty> Esta coleção é então passada para o <xref:System.Configuration.SettingsBase.Initialize%2A>método.</xref:System.Configuration.SettingsBase.Initialize%2A>       Como implícitas pelo passo 3 mencionada anteriormente, <xref:System.Configuration.ApplicationSettingsBase>nativamente funciona com vários atributos de propriedade, especificamente o seguinte: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>e <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> </xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.SettingsProviderAttribute> </xref:System.Configuration.ApplicationSettingsBase> Todos os outros atributos de definições simplesmente passam para o fornecedor subjacente apropriado."
  syntax:
    content: protected ApplicationSettingsBase ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe com o componente de proprietário fornecidos."
  remarks: "Este construtor é exactamente equivalente à <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>utilizando a invocação do construtor: `ApplicationSettingsBase(owner, String.Empty)` para obter informações sobre como reflexão é utilizado durante a instanciação de uma classe de wrapper, consulte a predefinição <xref:System.Configuration.ApplicationSettingsBase.%23ctor>construtor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor> </xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "O componente que irão funcionar como o proprietário do objeto de definições de aplicação."
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> utilizando a chave fornecida definições de classe."
  remarks: "Este construtor inicializa a <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>propriedade para o valor da `settingsKey` parâmetro.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Esta propriedade é útil em disambiguating várias instâncias da classe de wrapper definições no mesmo domínio de aplicação.       Para obter informações sobre como reflexão é utilizado durante a instanciação de uma classe de wrapper, consulte a predefinição <xref:System.Configuration.ApplicationSettingsBase.%23ctor>construtor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (string settingsKey);
    parameters:
    - id: settingsKey
      type: System.String
      description: "Um <xref:System.String>que identificam de forma separadas instâncias de classe de wrapper.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  id: '#ctor(System.ComponentModel.IComponent,System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> utilizando o componente de proprietário fornecidos e a chave de definições de classe."
  remarks: "O <xref:System.ComponentModel.IComponent>o objeto especificado pelo `owner` parâmetro atua como o proprietário da instância atual desta classe. as definições de aplicações</xref:System.ComponentModel.IComponent> Durante a inicialização da classe de wrapper definições derivado <xref:System.Configuration.ApplicationSettingsBase>, o site do proprietário é consultado relativamente às <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ApplicationSettingsBase> Se existir, é utilizada in preference to fornecedor de definições de nativo para todas as propriedades da classe de wrapper, tal como especificado pelo <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Este construtor inicializa a <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>propriedade para o valor da `settingsKey` parâmetro.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Esta propriedade é útil em disambiguating várias instâncias da classe de wrapper no mesmo domínio de aplicação.       Para obter informações sobre como reflexão é utilizado durante a instanciação de uma classe de wrapper, consulte a predefinição <xref:System.Configuration.ApplicationSettingsBase.%23ctor>construtor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "O componente que irão funcionar como o proprietário do objeto de definições de aplicação."
    - id: settingsKey
      type: System.String
      description: "Um <xref:System.String>que identificam de forma separadas instâncias de classe de wrapper.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Context
  id: Context
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém o contexto de definições de aplicação associado ao grupo de definições."
  remarks: "Cada classe de wrapper definições derivado <xref:System.Configuration.ApplicationSettingsBase>tem um contexto associado.</xref:System.Configuration.ApplicationSettingsBase> O contexto é passado para o fornecedor de definições para cada propriedade para identificar a forma como a propriedade é utilizada. Contexto, por conseguinte, funciona como uma sugestão para o ajudar o determinar a melhor forma de manter os valores de definições de aplicação associada do fornecedor de definições.       Por outro lado, a <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>propriedade ativa o fornecedor de definições para eliminar a ambiguidade de várias instâncias da classe de wrapper mesmo.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>"
  syntax:
    content: public override System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> associados ao grupo de definições."
  overload: System.Configuration.ApplicationSettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  id: GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Devolve o valor da propriedade nomeada definições para a versão anterior da mesma aplicação."
  remarks: "O método GetPreviousVersion, muitas vezes, é utilizado em conjunto com o <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>método quando migrar as definições da aplicação durante a instalação de uma nova versão de uma aplicação.</xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>"
  syntax:
    content: public object GetPreviousVersion (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "A <xref:System.String>que contém o nome da propriedade definições cujo valor é a ser devolvido.</xref:System.String>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém o valor especificado de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "A propriedade não existe. A contagem de propriedade é zero ou a propriedade não é possível encontrar no arquivo de dados."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor da propriedade de definições de aplicação especificada."
  remarks: "A propriedade do Item, também conhecido como o indexador regularmente é utilizada na classe de wrapper definições derivado <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Item está vinculado a propriedade da classe de wrapper pública para a propriedade de definições correspondente.       Item desencadeia eventos várias dependendo da operação a ser efetuada: - a primeira vez que é obtida, de uma propriedade de <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>o evento é gerado.</xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>      -Quando uma propriedade estiver definida, o <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>o evento é gerado.</xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> Se o processador não cancele o evento, em seguida, o valor da propriedade está definido e o <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>o evento é gerado.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "A <xref:System.String>que contém o nome da propriedade para aceder.</xref:System.String>"
    return:
      type: System.Object
      description: "Se encontrar, o valor da propriedade de definições denominado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ApplicationSettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Existem não existem propriedades associadas ao dispositivo de moldagem atual ou não foi possível encontrar a propriedade especificada."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Foi efetuada uma tentativa para definir uma propriedade só de leitura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "O valor fornecido é de um tipo incompatível com a propriedade de definições durante uma operação de definição."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível analisar o ficheiro de configuração."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.PropertyChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnPropertyChanged também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "A <xref:System.ComponentModel.PropertyChangedEventArgs>que contém os dados do evento.</xref:System.ComponentModel.PropertyChangedEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  id: OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingChanging&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSettingChanging também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.Configuration.SettingChangingEventArgs
      description: "A <xref href=&quot;System.Configuration.SettingChangingEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  id: OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSettingsLoaded também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.Configuration.SettingsLoadedEventArgs
      description: "A <xref href=&quot;System.Configuration.SettingsLoadedEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  id: OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsSaving&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSettingsSaving também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs>que contém os dados do evento.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Properties
  id: Properties
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém a coleção de propriedades das definições no wrapper de."
  remarks: "O `get` descritor de acesso da propriedade propriedades reflete através de metadados da classe de wrapper definições, que é derivado de <xref:System.Configuration.ApplicationSettingsBase>, para determinar dinamicamente o conjunto de propriedades de definições de aplicação disponível.</xref:System.Configuration.ApplicationSettingsBase>       O <xref:System.Configuration.ApplicationSettingsBase>classe nativamente reconhece determinadas características de uma definição de aplicação, tais como o respetivo nome, tipo de propriedade, o fornecedor de definições, valor predefinido, leem os únicos Estados e uma preferência de serialização.</xref:System.Configuration.ApplicationSettingsBase> Estas características são espelhadas como propriedades de <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> Todos os outros atributos da propriedade definições apenas passam para o fornecedor de definições associadas."
  syntax:
    content: public override System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> que contém todas as <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objetos utilizados no dispositivo de moldagem atual."
  overload: System.Configuration.ApplicationSettingsBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível encontrar o fornecedor de definições associadas ou falhou a instanciação do objeto."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  id: PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre depois do valor de uma propriedade de definições de aplicação é alterado."
  remarks: "O evento PropertyChanged é desencadeado quando uma propriedade de definições é alterada através de `set` acessor do <xref:System.Configuration.ApplicationSettingsBase.Item%2A>método, ou para cada propriedade que é restaurada quando é efetuada uma chamada para o <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>ou <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>métodos.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Item%2A>       Não há nenhum correspondente `PropertyChanging` evento para esta classe; em vez disso, consulte o <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>eventos.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging>"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém uma coleção de valores de propriedade."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> dos valores de propriedade."
  overload: System.Configuration.ApplicationSettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Providers
  id: Providers
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém a coleção de fornecedores de definições de aplicação utilizada pelo wrapper de."
  remarks: "O <xref:System.Configuration.SettingsProviderAttribute>determina o fornecedor da definição é utilizado por uma classe de wrapper definições ou uma propriedade de definição individual.</xref:System.Configuration.SettingsProviderAttribute> Se este atributo não for especificado, uma aplicação cliente utilizará <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public override System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "A <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> que contém todas as <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> objetos utilizados pelas propriedades de definições de wrapper de definições atuais."
  overload: System.Configuration.ApplicationSettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reload
  id: Reload
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Atualiza os valores de propriedade de definições de aplicação do armazenamento persistente."
  remarks: "O método de recarregamento limpa os valores de propriedade atualmente em cache, provocando um recarregar destes valores do armazenamento persistente, quando estes são acedidos posteriormente. Este método executa as ações seguintes:--limpa as propriedades atualmente em cache ao desmarcar a colecção representada pelo <xref:System.Configuration.SettingsBase.PropertyValues%2A>propriedade.</xref:System.Configuration.SettingsBase.PropertyValues%2A>      -Gera o <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>eventos para cada membro do <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>coleção.</xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>       Recarregar contrasta com <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>em que a primeira irá carregar o último conjunto de valores de definições de aplicação guardados, enquanto que esta irá carregar os valores predefinidos guardado.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  example:
  - "The following code example shows the Reload method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`. As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#6](~/add/codesnippet/cpp/m-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#6](~/add/codesnippet/csharp/m-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#6](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#6)]"
  syntax:
    content: public void Reload ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reset
  id: Reset
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Restaura os valores de definições de aplicação persistente para as respetivas propriedades correspondentes do predefinido."
  remarks: "O método de reposição substitui as propriedades de definições no âmbito do utilizador ao restaurar o valor atualmente persistente de cada definições da aplicação. Este método executa as ações seguintes:-chama o <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>método em cada fornecedor de definições que suporte este método opcional.</xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>      -Chama o <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>método para forçar uma atualização de definições de valores de propriedade.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>       <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>contrasta com reposição em que a primeira carregará o último conjunto de valores de definições de aplicação guardados, enquanto que esta irá carregar os valores predefinidos guardado.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>"
  example:
  - "The following code example shows the Reset method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`. As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#5](~/add/codesnippet/cpp/m-system.configuration.a_3_1.cpp)]\n [!code-cs[AppSettingsSample#5](~/add/codesnippet/csharp/m-system.configuration.a_3_1.cs)]\n [!code-vb[AppSettingsSample#5](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#5)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível analisar o ficheiro de configuração."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Save
  id: Save
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Armazena os valores atuais das propriedades de definições da aplicação."
  remarks: "O método de guardar escreve o valor atual de cada propriedade de definições ao seu arquivo de dados associado. Para cada propriedade, este método chama o <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>método no fornecedor de definições associadas.</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       Este método difere da implementação de classe base em que gera o <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>eventos antes dos valores são escritos.</xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>       Se as definições apenas definidas no âmbito de aplicação definições, guarde irá não tem qualquer efeito e não devolverem nenhum erro se a chamada com a predefinição <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider> <xref:System.Configuration.LocalFileSettingsProvider>apenas guarda as definições no âmbito do utilizador.</xref:System.Configuration.LocalFileSettingsProvider>      > [!IMPORTANT] > Não é não existe nenhum método de carregamento correspondente porque os valores das definições da aplicação são carregados automaticamente durante a inicialização da classe de wrapper. Em contrapartida, estes valores não são automaticamente guardados quando termina uma aplicação. Por conseguinte, tem de chamar explicitamente o método de guardar para manter os valores atuais das definições da aplicação. Isto é, normalmente realizado no <xref:System.Windows.Forms.Form.Closing>processador de eventos dos principais ou que contêm <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Closing>"
  example:
  - "The following code example shows the Save method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form. This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#3](~/add/codesnippet/cpp/m-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#3](~/add/codesnippet/csharp/m-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#3](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#3)]"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  id: SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre antes do valor de uma propriedade de definições de aplicação é alterado."
  remarks: "O evento SettingChanging ocorre antes de uma propriedade de valor de definição de aplicação é alterada através de <xref:System.Configuration.ApplicationSettingsBase.Item%2A>método.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Este evento não é desencadeado quando o <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>ou <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>métodos são denominados.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> Pode ser cancelada SettingChanging através da <xref:System.Configuration.SettingChangingEventArgs>classe de dados de eventos</xref:System.Configuration.SettingChangingEventArgs>       O evento SettingChanging é normalmente utilizada para processar validação imediata de uma propriedade de definições individuais. Para obter mais informações sobre a validação, consulte [como: validar as definições da aplicação](~/add/includes/ajax-current-ext-md.md).       Não há nenhum correspondente `SettingChanged` evento para esta classe; em vez disso, consulte o <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>eventos.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  example:
  - "The following code example shows the SettingChanging event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler displays the event information in a textbox named `tbStatus`. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#7](~/add/codesnippet/cpp/e-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#7](~/add/codesnippet/csharp/e-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#7](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#7)]"
  syntax:
    content: public event System.Configuration.SettingChangingEventHandler SettingChanging;
    return:
      type: System.Configuration.SettingChangingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  id: SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define a tecla de definições para o grupo de definições de aplicação."
  remarks: "A propriedade SettingsKey é fornecida para ativar o código de cliente e, em especial o fornecedor de definições, para eliminar a ambiguidade entre várias instâncias da mesma classe de definições da aplicação.       A menos que a classe de wrapper definições foi concebida para utilizar o padrão de singleton, podem existir várias instâncias da mesma classe de definições de aplicação numa única aplicação. O valor de SettingsKey deve ser definido de acordo com a forma como os valores de propriedade destinam-se a ser partilhado.      -Se as propriedades de definições do wrapper de destinam-se a ser partilhado entre todas as instâncias do wrapper de na mesma aplicação, em seguida, SettingsKey deve ter o mesmo valor em todas as instâncias. Este é o comportamento predefinido da <xref:System.Configuration.ApplicationSettingsBase>classe.</xref:System.Configuration.ApplicationSettingsBase>      -Se as propriedades de definições do wrapper de destinam-se a ser por instância, SettingsKey deve ter um valor exclusivo para cada instância. O <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>versão do construtor permite-lhe inicializar SettingsKey para uma cadeia exclusiva.</xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>       Em contrapartida, o <xref:System.Configuration.ApplicationSettingsBase.Context%2A>propriedade fornece sugestões para o fornecedor de definições para ativá-la manter valores de forma eficiente e ordenada.</xref:System.Configuration.ApplicationSettingsBase.Context%2A>       O <xref:System.Configuration.SettingChangingEventArgs>classe contém um semelhante <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>propriedade que ajuda a identificar a origem do <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>eventos.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging> </xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> </xref:System.Configuration.SettingChangingEventArgs>"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>que contém a chave de definições para o grupo de definições atuais.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.SettingsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  id: SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre depois das definições da aplicação são obtidas a partir do armazenamento."
  remarks: "O evento SettingsLoaded ocorre apenas após iniciais `get` acesso da propriedade de configuração primeiro utilizado, normalmente, através de <xref:System.Configuration.ApplicationSettingsBase.Item%2A>método.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Acede subsequente utiliza valores para a propriedade de definições que estão em cache localmente. O <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>métodos irão limpar os valores de todos os em cache, pelo que este evento é acionado novamente após o acesso de propriedade subsequentes.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;
    return:
      type: System.Configuration.SettingsLoadedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  id: SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre antes dos valores são guardados para o arquivo de dados."
  remarks: "O evento de SettingsSaving é gerado pelo <xref:System.Configuration.ApplicationSettingsBase.Save%2A>método antes de armazena as propriedades de definições de aplicação para o respetivo arquivo de dados associado.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> O processador de eventos associados pode cancelar este evento."
  example:
  - "The following code example shows the SettingsSaving event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler queries the user to save the current application settings property values. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#8](~/add/codesnippet/cpp/e-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#8](~/add/codesnippet/csharp/e-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#8](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#8)]"
  syntax:
    content: public event System.Configuration.SettingsSavingEventHandler SettingsSaving;
    return:
      type: System.Configuration.SettingsSavingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  id: Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Atualiza as definições de aplicação para refletir uma instalação mais recente da aplicação."
  remarks: "O método de atualização executa duas ações para garantir uma transição tranquila para uma nova versão de uma aplicação:-notifica todos os fornecedores de definições correspondentes de existência da aplicação atualizada através de uma chamada para as respetivas <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>método, partindo do princípio de que implementou o <xref:System.Configuration.IApplicationSettingsProvider>interface.</xref:System.Configuration.IApplicationSettingsProvider> </xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName> Esta ação não é efetuada se a classe de wrapper de definições está marcada com <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>      --Reloads os valores para todas as definições de aplicação.       Pode substituir o comportamento predefinido da atualização para implementar a atualizar ou intercalação comportamento personalizados. Utilize o <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>método obter valores individuais para uma definição para a versão anterior da aplicação.</xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> Exemplos de comportamento da atualização personalizado:-utilizando novas predefinições da política que substituem um ou mais dos valores especificados de utilizador anteriores ou predefinições anteriores.      -Especial tradução dos valores antigos para ser compatível com mais recente intervalos, um grupo de propriedade de diferentes definições e assim sucessivamente."
  syntax:
    content: public virtual void Upgrade ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível analisar o ficheiro de configuração."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
- uid: System.Configuration.ApplicationSettingsBase.Context
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
- uid: System.Configuration.SettingChangingEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventArgs
  nameWithType: SettingChangingEventArgs
  fullName: System.Configuration.SettingChangingEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
- uid: System.Configuration.SettingsLoadedEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventArgs
  nameWithType: SettingsLoadedEventArgs
  fullName: System.Configuration.SettingsLoadedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Configuration.ApplicationSettingsBase.Properties
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.ApplicationSettingsBase.Providers
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.ApplicationSettingsBase.Reload
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
- uid: System.Configuration.ApplicationSettingsBase.Reset
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
- uid: System.Configuration.ApplicationSettingsBase.Save
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
- uid: System.Configuration.SettingChangingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventHandler
  nameWithType: SettingChangingEventHandler
  fullName: System.Configuration.SettingChangingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
- uid: System.Configuration.SettingsLoadedEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventHandler
  nameWithType: SettingsLoadedEventHandler
  fullName: System.Configuration.SettingsLoadedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
- uid: System.Configuration.SettingsSavingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsSavingEventHandler
  nameWithType: SettingsSavingEventHandler
  fullName: System.Configuration.SettingsSavingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
- uid: System.Configuration.ApplicationSettingsBase.#ctor*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase
- uid: System.Configuration.ApplicationSettingsBase.Context*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion
  nameWithType: ApplicationSettingsBase.GetPreviousVersion
- uid: System.Configuration.ApplicationSettingsBase.Item*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item
  nameWithType: ApplicationSettingsBase.Item
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ApplicationSettingsBase.OnPropertyChanged
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging
  nameWithType: ApplicationSettingsBase.OnSettingChanging
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving
  nameWithType: ApplicationSettingsBase.OnSettingsSaving
- uid: System.Configuration.ApplicationSettingsBase.Properties*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.ApplicationSettingsBase.Providers*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
- uid: System.Configuration.ApplicationSettingsBase.Reload*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload
  nameWithType: ApplicationSettingsBase.Reload
- uid: System.Configuration.ApplicationSettingsBase.Reset*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset
  nameWithType: ApplicationSettingsBase.Reset
- uid: System.Configuration.ApplicationSettingsBase.Save*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save
  nameWithType: ApplicationSettingsBase.Save
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.Upgrade*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade
  nameWithType: ApplicationSettingsBase.Upgrade
