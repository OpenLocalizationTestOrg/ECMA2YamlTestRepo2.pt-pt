### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.TryCatch
  id: TryCatch
  children:
  - System.Activities.Statements.TryCatch.#ctor
  - System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.Statements.TryCatch.Catches
  - System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.TryCatch.Finally
  - System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.Statements.TryCatch.Try
  - System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Activities.Statements.TryCatch.Variables
  langs:
  - csharp
  name: TryCatch
  nameWithType: TryCatch
  fullName: System.Activities.Statements.TryCatch
  type: Class
  summary: "Contains activities to be executed by the workflow runtime in an exception handling block."
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a TryCatch activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public sealed class TryCatch : System.Activities.NativeActivity'
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: TryCatch()
  nameWithType: TryCatch.TryCatch()
  fullName: System.Activities.Statements.TryCatch.TryCatch()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Creates a new instance of the TryCatch class."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public TryCatch ();
    parameters: []
  overload: System.Activities.Statements.TryCatch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TryCatch.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.TryCatch.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "To be added."
  overload: System.Activities.Statements.TryCatch.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)
  id: Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: Cancel(NativeActivityContext)
  nameWithType: TryCatch.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.TryCatch.Cancel(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Cancel (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.TryCatch.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.Catches
  id: Catches
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: Catches
  nameWithType: TryCatch.Catches
  fullName: System.Activities.Statements.TryCatch.Catches
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "The collection of <xref uid=&quot;langword_csharp_Catch&quot; name=&quot;Catch&quot; href=&quot;&quot;></xref> elements to be checked when the <xref:System.Activities.Statements.TryCatch.Try*> activity throws an exception."
  remarks: "Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed."
  example:
  - "The following code sample demonstrates setting the Catches property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Statements.Catch> Catches { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.Catch}
      description: "The catch collection."
  overload: System.Activities.Statements.TryCatch.Catches*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: TryCatch.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.TryCatch.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.TryCatch.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.Finally
  id: Finally
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: Finally
  nameWithType: TryCatch.Finally
  fullName: System.Activities.Statements.TryCatch.Finally
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "The activity to be executed when the <xref:System.Activities.Statements.TryCatch.Try*> and any necessary activities in the <xref:System.Activities.Statements.TryCatch.Catches*> collection complete execution."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the Finally property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Activities.Activity Finally { get; set; }
    return:
      type: System.Activities.Activity
      description: "The activity that represents the Finally logic."
  overload: System.Activities.Statements.TryCatch.Finally*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: "To be added."
    - id: originalActivity
      type: System.Activities.Activity
      description: "To be added."
  overload: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.Try
  id: Try
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: Try
  nameWithType: TryCatch.Try
  fullName: System.Activities.Statements.TryCatch.Try
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "The activity first executed when the <xref href=&quot;System.Activities.Statements.TryCatch&quot;></xref> executes."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the Try property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Activities.Activity Try { get; set; }
    return:
      type: System.Activities.Activity
      description: "The activity."
  overload: System.Activities.Statements.TryCatch.Try*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: TryCatch.UpdateInstance(NativeActivityUpdateContext)
  fullName: System.Activities.Statements.TryCatch.UpdateInstance(NativeActivityUpdateContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);
    parameters:
    - id: updateContext
      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext
      description: "To be added."
  overload: System.Activities.Statements.TryCatch.UpdateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.TryCatch.Variables
  id: Variables
  parent: System.Activities.Statements.TryCatch
  langs:
  - csharp
  name: Variables
  nameWithType: TryCatch.Variables
  fullName: System.Activities.Statements.TryCatch.Variables
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "The collection of contained variables."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "The collection of variables."
  overload: System.Activities.Statements.TryCatch.Variables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.Activities.Statements.TryCatch.#ctor
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: TryCatch()
  nameWithType: TryCatch.TryCatch()
  fullName: System.Activities.Statements.TryCatch.TryCatch()
- uid: System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TryCatch.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.TryCatch.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: TryCatch.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.TryCatch.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.TryCatch.Catches
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Catches
  nameWithType: TryCatch.Catches
  fullName: System.Activities.Statements.TryCatch.Catches
- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.Catch}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Catch>
  nameWithType: Collection<Catch>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.Catch>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Statements.Catch>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Statements.Catch
    name: Catch
    nameWithType: Catch
    fullName: Catch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: TryCatch.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.TryCatch.Execute(NativeActivityContext)
- uid: System.Activities.Statements.TryCatch.Finally
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Finally
  nameWithType: TryCatch.Finally
  fullName: System.Activities.Statements.TryCatch.Finally
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Statements.TryCatch.Try
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Try
  nameWithType: TryCatch.Try
  fullName: System.Activities.Statements.TryCatch.Try
- uid: System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: TryCatch.UpdateInstance(NativeActivityUpdateContext)
  fullName: System.Activities.Statements.TryCatch.UpdateInstance(NativeActivityUpdateContext)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateContext
  nameWithType: NativeActivityUpdateContext
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext
- uid: System.Activities.Statements.TryCatch.Variables
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Variables
  nameWithType: TryCatch.Variables
  fullName: System.Activities.Statements.TryCatch.Variables
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.TryCatch.#ctor*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: TryCatch
  nameWithType: TryCatch.TryCatch
- uid: System.Activities.Statements.TryCatch.CacheMetadata*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: CacheMetadata
  nameWithType: TryCatch.CacheMetadata
- uid: System.Activities.Statements.TryCatch.Cancel*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Cancel
  nameWithType: TryCatch.Cancel
- uid: System.Activities.Statements.TryCatch.Catches*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Catches
  nameWithType: TryCatch.Catches
- uid: System.Activities.Statements.TryCatch.Execute*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Execute
  nameWithType: TryCatch.Execute
- uid: System.Activities.Statements.TryCatch.Finally*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Finally
  nameWithType: TryCatch.Finally
- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: TryCatch.OnCreateDynamicUpdateMap
- uid: System.Activities.Statements.TryCatch.Try*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Try
  nameWithType: TryCatch.Try
- uid: System.Activities.Statements.TryCatch.UpdateInstance*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: UpdateInstance
  nameWithType: TryCatch.UpdateInstance
- uid: System.Activities.Statements.TryCatch.Variables*
  parent: System.Activities.Statements.TryCatch
  isExternal: false
  name: Variables
  nameWithType: TryCatch.Variables
