### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage
  id: IConstructionCallMessage
  children:
  - System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType
  - System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName
  - System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator
  - System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes
  - System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties
  langs:
  - csharp
  name: IConstructionCallMessage
  nameWithType: IConstructionCallMessage
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage
  type: Interface
  summary: "Represents the construction call request of an object."
  remarks: "When the user creates an instance of a new client-activated object by calling `new` or <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> and before the thread returns to the user code, a IConstructionCallMessage is sent to the remote application. When the construction message arrives at the remote application, it is processed by a remoting activator (either the default one, or one that is specified in the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator%2A> property) and a new object is created. The remoting application then returns a <xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage> to the local application. The <xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage> contains an instance of <xref:System.Runtime.Remoting.ObjRef>, which packages information about the remote object. The remoting infrastructure converts the <xref:System.Runtime.Remoting.ObjRef> instance into a proxy to the remote object, which is returned to the user code."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IConstructionCallMessage : System.Runtime.Remoting.Messaging.IMethodCallMessage
  implements:
  - System.Runtime.Remoting.Messaging.IMethodCallMessage
  platform:
  - net462
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType
  id: ActivationType
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  langs:
  - csharp
  name: ActivationType
  nameWithType: IConstructionCallMessage.ActivationType
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Activation
  summary: "Gets the type of the remote object to activate."
  syntax:
    content: public Type ActivationType { get; }
    return:
      type: System.Type
      description: "The type of the remote object to activate."
  overload: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName
  id: ActivationTypeName
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  langs:
  - csharp
  name: ActivationTypeName
  nameWithType: IConstructionCallMessage.ActivationTypeName
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Activation
  summary: "Gets the full type name of the remote type to activate."
  syntax:
    content: public string ActivationTypeName { get; }
    return:
      type: System.String
      description: "The full type name of the remote type to activate."
  overload: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator
  id: Activator
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  langs:
  - csharp
  name: Activator
  nameWithType: IConstructionCallMessage.Activator
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Activation
  summary: "Gets or sets the activator that activates the remote object."
  remarks: "A chain of activators that are arranged in a hierarchy typically completes the various tasks that are involved in the activation process. If you intend to plug in a custom activator, then you should traverse the activator hierarchy and plug in your activator at the appropriate location. Use the <xref:System.Runtime.Remoting.Activation.IActivator.NextActivator%2A?displayProperty=fullName> property on the activator that is returned by the current property to traverse the chain of activators.       If you add your own activator into the message&quot;s activator chain on the client side, the activator may be serialized and transported to the server side, if deemed necessary. For this reason, custom activators should be fairly lightweight in terms of serialization requirements."
  syntax:
    content: public System.Runtime.Remoting.Activation.IActivator Activator { get; set; }
    return:
      type: System.Runtime.Remoting.Activation.IActivator
      description: "The activator that activates the remote object."
  overload: System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes
  id: CallSiteActivationAttributes
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  langs:
  - csharp
  name: CallSiteActivationAttributes
  nameWithType: IConstructionCallMessage.CallSiteActivationAttributes
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Activation
  summary: "Gets the call site activation attributes."
  remarks: "The CallSiteActivationAttributes indexer allows you to specify additional attributes to use during object activation. The user specifies the CallSiteActivationAttributes in the `activationAttributes` parameter to <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>."
  syntax:
    content: public object[] CallSiteActivationAttributes { get; }
    return:
      type: System.Object[]
      description: "The call site activation attributes."
  overload: System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties
  id: ContextProperties
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  langs:
  - csharp
  name: ContextProperties
  nameWithType: IConstructionCallMessage.ContextProperties
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Activation
  summary: "Gets a list of context properties that define the context in which the object is to be created."
  remarks: "A new object&quot;s context is generally chosen based on metadata attributes of the class. The context selection mechanism is extensible through custom attributes, also known as static context properties, which are compiled into the class metadata. When activating an object remotely, the ContextProperties contains the list of properties that were contributed by various attributes in the construction call message. These properties are used to create the context in which the server object is activated."
  syntax:
    content: public System.Collections.IList ContextProperties { get; }
    return:
      type: System.Collections.IList
      description: "A list of properties of the context in which to construct the object."
  overload: System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have infrastructure permission."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: ActivationType
  nameWithType: IConstructionCallMessage.ActivationType
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: ActivationTypeName
  nameWithType: IConstructionCallMessage.ActivationTypeName
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: Activator
  nameWithType: IConstructionCallMessage.Activator
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator
- uid: System.Runtime.Remoting.Activation.IActivator
  parent: System.Runtime.Remoting.Activation
  isExternal: false
  name: IActivator
  nameWithType: IActivator
  fullName: System.Runtime.Remoting.Activation.IActivator
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: CallSiteActivationAttributes
  nameWithType: IConstructionCallMessage.CallSiteActivationAttributes
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: ContextProperties
  nameWithType: IConstructionCallMessage.ContextProperties
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType*
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: ActivationType
  nameWithType: IConstructionCallMessage.ActivationType
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName*
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: ActivationTypeName
  nameWithType: IConstructionCallMessage.ActivationTypeName
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator*
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: Activator
  nameWithType: IConstructionCallMessage.Activator
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes*
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: CallSiteActivationAttributes
  nameWithType: IConstructionCallMessage.CallSiteActivationAttributes
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties*
  parent: System.Runtime.Remoting.Activation.IConstructionCallMessage
  isExternal: false
  name: ContextProperties
  nameWithType: IConstructionCallMessage.ContextProperties
