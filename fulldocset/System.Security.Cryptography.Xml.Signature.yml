### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Signature
  id: Signature
  children:
  - System.Security.Cryptography.Xml.Signature.#ctor
  - System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.Signature.GetXml
  - System.Security.Cryptography.Xml.Signature.Id
  - System.Security.Cryptography.Xml.Signature.KeyInfo
  - System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.Signature.ObjectList
  - System.Security.Cryptography.Xml.Signature.SignatureValue
  - System.Security.Cryptography.Xml.Signature.SignedInfo
  langs:
  - csharp
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
  type: Class
  summary: "Represents the <xref uid=&quot;langword_csharp_&lt;Signature&gt;&quot; name=&quot;&lt;Signature&gt;&quot; href=&quot;&quot;></xref> element of an XML signature."
  remarks: "The Signature class represents the <`Signature`> element of an XML signature defined by the XML digital signature specification. The <`Signature`> element is the root element of an XML digital signature. The <xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>, <xref:System.Security.Cryptography.Xml.Signature.SignatureValue%2A>, <xref:System.Security.Cryptography.Xml.Signature.KeyInfo%2A>, and <xref:System.Security.Cryptography.Xml.Signature.ObjectList%2A> properties encapsulate the subelements of the <`Signature`> element.       For more information about the <`Signature`> element, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the Signature class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CSharp/t-system.security.crypto_63_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/VisualBasic/t-system.security.crypto_63_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CPP/t-system.security.crypto_63_1.cpp)]  \n  \n The following code example uses the Signature class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CPP/t-system.security.crypto_63_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CSharp/t-system.security.crypto_63_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/VisualBasic/t-system.security.crypto_63_2.vb)]"
  syntax:
    content: public class Signature
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: Signature()
  nameWithType: Signature.Signature()
  fullName: System.Security.Cryptography.Xml.Signature.Signature()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see> class."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CSharp/m-system.security.crypto_70_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/VisualBasic/m-system.security.crypto_70_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CPP/m-system.security.crypto_70_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CPP/m-system.security.crypto_70_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CSharp/m-system.security.crypto_70_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/VisualBasic/m-system.security.crypto_70_2.vb)]"
  syntax:
    content: public Signature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Signature.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: Signature.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.Signature.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adds a <see cref=&quot;T:System.Security.Cryptography.Xml.DataObject&quot;></see> to the list of objects to be signed."
  remarks: "The AddObject method adds a <xref:System.Security.Cryptography.Xml.DataObject> object to a collection that is accessible using the <xref:System.Security.Cryptography.Xml.Signature.ObjectList%2A> property."
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "The  to be added to the list of objects to be signed."
  overload: System.Security.Cryptography.Xml.Signature.AddObject*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: GetXml()
  nameWithType: Signature.GetXml()
  fullName: System.Security.Cryptography.Xml.Signature.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the XML representation of the <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see>."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "To be added."
  overload: System.Security.Cryptography.Xml.Signature.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A> property is .       -or-       The <xref:System.Security.Cryptography.Xml.Signature.SignatureValue%2A> property is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.Id
  id: Id
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: Id
  nameWithType: Signature.Id
  fullName: System.Security.Cryptography.Xml.Signature.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the ID of the current <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see>."
  remarks: "Use the Id property to add a string ID to the XML representation of the current <xref:System.Security.Cryptography.Xml.Signature> element. The ID is used to reference the <xref:System.Security.Cryptography.Xml.Signature> from another location."
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "The ID of the current <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Signature.Id*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: KeyInfo
  nameWithType: Signature.KeyInfo
  fullName: System.Security.Cryptography.Xml.Signature.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <see cref=&quot;T:System.Security.Cryptography.Xml.KeyInfo&quot;></see> of the current <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see>."
  remarks: "The KeyInfo property uses a <xref:System.Security.Cryptography.Xml.KeyInfo> object to represent the <`KeyInfo`> element of an XML digital signature.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CSharp/p-system.security.crypto_0_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/VisualBasic/p-system.security.crypto_0_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CPP/p-system.security.crypto_0_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CPP/p-system.security.crypto_0_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CSharp/p-system.security.crypto_0_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/VisualBasic/p-system.security.crypto_0_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "The <see cref=&quot;T:System.Security.Cryptography.Xml.KeyInfo&quot;></see> of the current <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see>."
  overload: System.Security.Cryptography.Xml.Signature.KeyInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: Signature.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Signature.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Loads a <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see> state from an XML element."
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "The XML element from which to load the  state."
  overload: System.Security.Cryptography.Xml.Signature.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value parameter is ."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The value parameter does not contain a valid <xref:System.Security.Cryptography.Xml.Signature.SignatureValue%2A>.       -or-       The value parameter does not contain a valid <xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.ObjectList
  id: ObjectList
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: ObjectList
  nameWithType: Signature.ObjectList
  fullName: System.Security.Cryptography.Xml.Signature.ObjectList
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets a list of objects to be signed."
  remarks: "The ObjectList property uses a collection of <xref:System.Security.Cryptography.Xml.DataObject> objects to represent the <`Object`> tag of an XML digital signature.       You can also add a <xref:System.Security.Cryptography.Xml.DataObject> to this collection using the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public System.Collections.IList ObjectList { get; set; }
    return:
      type: System.Collections.IList
      description: "A list of objects to be signed."
  overload: System.Security.Cryptography.Xml.Signature.ObjectList*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: SignatureValue
  nameWithType: Signature.SignatureValue
  fullName: System.Security.Cryptography.Xml.Signature.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the value of the digital signature."
  remarks: "The SignatureValue property uses a byte array to represent the <`SignatureValue`> element of an XML digital signature contained within.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public byte[] SignatureValue { get; set; }
    return:
      type: System.Byte[]
      description: "A byte array that contains the value of the digital signature."
  overload: System.Security.Cryptography.Xml.Signature.SignatureValue*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.Xml.Signature.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: SignedInfo
  nameWithType: Signature.SignedInfo
  fullName: System.Security.Cryptography.Xml.Signature.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <see cref=&quot;T:System.Security.Cryptography.Xml.SignedInfo&quot;></see> of the current <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see>."
  remarks: "The SignedInfo property uses the <xref:System.Security.Cryptography.Xml.SignedInfo> class to represent the <`SignedInfo`> element of an XML digital signature contained within.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CSharp/p-system.security.crypto_93_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/VisualBasic/p-system.security.crypto_93_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/CPP/p-system.security.crypto_93_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CPP/p-system.security.crypto_93_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/CSharp/p-system.security.crypto_93_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/VisualBasic/p-system.security.crypto_93_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "The <see cref=&quot;T:System.Security.Cryptography.Xml.SignedInfo&quot;></see> of the current <see cref=&quot;T:System.Security.Cryptography.Xml.Signature&quot;></see>."
  overload: System.Security.Cryptography.Xml.Signature.SignedInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.Xml.Signature.#ctor
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Signature()
  nameWithType: Signature.Signature()
  fullName: System.Security.Cryptography.Xml.Signature.Signature()
- uid: System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: Signature.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.Signature.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.Signature.GetXml
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: GetXml()
  nameWithType: Signature.GetXml()
  fullName: System.Security.Cryptography.Xml.Signature.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Signature.Id
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Id
  nameWithType: Signature.Id
  fullName: System.Security.Cryptography.Xml.Signature.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Signature.KeyInfo
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: KeyInfo
  nameWithType: Signature.KeyInfo
  fullName: System.Security.Cryptography.Xml.Signature.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: Signature.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Signature.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.Signature.ObjectList
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: ObjectList
  nameWithType: Signature.ObjectList
  fullName: System.Security.Cryptography.Xml.Signature.ObjectList
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Security.Cryptography.Xml.Signature.SignatureValue
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignatureValue
  nameWithType: Signature.SignatureValue
  fullName: System.Security.Cryptography.Xml.Signature.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Signature.SignedInfo
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignedInfo
  nameWithType: Signature.SignedInfo
  fullName: System.Security.Cryptography.Xml.Signature.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.Signature.#ctor*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Signature
  nameWithType: Signature.Signature
- uid: System.Security.Cryptography.Xml.Signature.AddObject*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: AddObject
  nameWithType: Signature.AddObject
- uid: System.Security.Cryptography.Xml.Signature.GetXml*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: GetXml
  nameWithType: Signature.GetXml
- uid: System.Security.Cryptography.Xml.Signature.Id*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Id
  nameWithType: Signature.Id
- uid: System.Security.Cryptography.Xml.Signature.KeyInfo*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: KeyInfo
  nameWithType: Signature.KeyInfo
- uid: System.Security.Cryptography.Xml.Signature.LoadXml*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: LoadXml
  nameWithType: Signature.LoadXml
- uid: System.Security.Cryptography.Xml.Signature.ObjectList*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: ObjectList
  nameWithType: Signature.ObjectList
- uid: System.Security.Cryptography.Xml.Signature.SignatureValue*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignatureValue
  nameWithType: Signature.SignatureValue
- uid: System.Security.Cryptography.Xml.Signature.SignedInfo*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignedInfo
  nameWithType: Signature.SignedInfo
