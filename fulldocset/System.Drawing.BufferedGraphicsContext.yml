### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphicsContext
  id: BufferedGraphicsContext
  children:
  - System.Drawing.BufferedGraphicsContext.#ctor
  - System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Dispose
  - System.Drawing.BufferedGraphicsContext.Finalize
  - System.Drawing.BufferedGraphicsContext.Invalidate
  - System.Drawing.BufferedGraphicsContext.MaximumBuffer
  langs:
  - csharp
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext
  fullName: System.Drawing.BufferedGraphicsContext
  type: Class
  summary: "Fornece métodos para criação de memórias intermédias de gráficos que podem ser utilizadas para a memória intermédia duplo."
  remarks: "A classe de BufferedGraphicsContext permite-lhe implementar personalizado duplo colocação em memória intermédia para a sua gráficos. Gráficos que utilizam a memória intermédia duplo podem reduzir ou eliminar flicker é causado por uma superfície de apresentação de um novo desenho.      > [!NOTE] > A forma mais simples para utilizar a memória intermédia duplo é a definição de <xref:System.Windows.Forms.ControlStyles>controlar o sinalizador de estilo utilizando um controlo de <xref:System.Windows.Forms.Control.SetStyle%2A>método.</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> Definir o <xref:System.Windows.Forms.ControlStyles>sinalizador de estilos de controlo para um controlo redireciona todas as desenho para o controlo através de uma memória intermédia gráficos predefinida, sem necessidade de quaisquer códigos adicionais.</xref:System.Windows.Forms.ControlStyles> Este sinalizador está definido como `true` por predefinição.       A classe de BufferedGraphicsContext fornece métodos para criar e configurar uma memória intermédia de gráficos. O <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método cria uma <xref:System.Drawing.BufferedGraphics>, que é um wrapper para uma memória intermédia de gráficos que também fornece métodos que pode utilizar para escrever na memória intermédia e compor o respetivo conteúdo para um dispositivo de saída.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>       Pode obter o BufferedGraphicsContext para o domínio de aplicação atual da estática <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>propriedade.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> Para obter aplicações graficamente intensivas como animação, pode criar um BufferedGraphicsContext dedicado com o construtor, mas para a maioria das aplicações a <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>propriedade serão suficiente.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>       Para obter mais informações sobre implementações de colocação em memória intermédia personalizadas e de memória intermédia de gráficos de desenho, consulte [duplo gráficos colocado na memória intermédia](~/add/includes/ajax-current-ext-md.md) e [como: gerir manualmente gráficos colocado na memória intermédia](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to acquire the BufferedGraphicsContext for the current application domain. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#1](~/add/codesnippet/csharp/t-system.drawing.buffere_2_1.cs)]\n [!code-cpp[BufferingExamples#1](~/add/codesnippet/cpp/t-system.drawing.buffere_2_1.cpp)]\n [!code-vb[BufferingExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_2_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphicsContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  id: '#ctor'
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref> classe."
  remarks: "Para obter aplicações graficamente intensivas como animação, por vezes, pode melhorar o desempenho através da utilização de um dedicado <xref:System.Drawing.BufferedGraphicsContext>em vez da instância predefinida fornecida pelo <xref:System.Drawing.BufferedGraphicsManager>.</xref:System.Drawing.BufferedGraphicsManager> </xref:System.Drawing.BufferedGraphicsContext> Isto permite-lhe criar e gerir individualmente memórias intermédias de gráficos.      > [!NOTE] > Sempre deve chamar <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>Quando acabar de utilizar um <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> dedicado</xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>       Para obter mais informações sobre memórias intermédias de gráficos dedicado, consulte [como: gerir manualmente gráficos colocado na memória intermédia](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria uma memória intermédia de gráficos de tamanho especificado utilizando o formato de pixel de especificado <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Quando chamar o método de atribuir com um retângulo cujo tamanho excede o valor da <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>propriedade, um temporário <xref:System.Drawing.BufferedGraphicsContext>é criado para alocar a memória intermédia e fornecer um contexto temporário para a memória intermédia.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> A nova <xref:System.Drawing.BufferedGraphicsContext>é distinta do <xref:System.Drawing.BufferedGraphicsContext>para a aplicação de domínio e é eliminado automaticamente quando o <xref:System.Drawing.BufferedGraphics>devolvido por atribuir método é eliminado.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the Allocate method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#3](~/add/codesnippet/csharp/99d851e4-d9e2-4d32-8fa3-_1.cs)]\n [!code-cpp[BufferingExamples#3](~/add/codesnippet/cpp/99d851e4-d9e2-4d32-8fa3-_1.cpp)]\n [!code-vb[BufferingExamples#3](~/add/codesnippet/visualbasic/99d851e4-d9e2-4d32-8fa3-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetGraphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para corresponder ao formato de pixel para a memória intermédia novo para."
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que indica o tamanho da memória intermédia para criar."
    return:
      type: System.Drawing.BufferedGraphics
      description: "A <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> que pode ser utilizado para desenhar numa memória intermédia das dimensões especificadas."
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  id: Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria uma memória intermédia de gráficos de tamanho especificado utilizando o formato de pixel de especificado <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Quando chamar o <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método com um retângulo cujo tamanho excede o valor da <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>propriedade, um temporário <xref:System.Drawing.BufferedGraphicsContext>é criado para alocar a memória intermédia e fornecer um contexto temporário para a memória intermédia.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> A nova <xref:System.Drawing.BufferedGraphicsContext>é distinta do <xref:System.Drawing.BufferedGraphicsContext>para a aplicação de domínio e é eliminado automaticamente quando o <xref:System.Drawing.BufferedGraphics>devolvido pelo <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método é eliminado.</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#4](~/add/codesnippet/csharp/5334a85f-cb42-4a29-8bd2-_1.cs)]\n [!code-cpp[BufferingExamples#4](~/add/codesnippet/cpp/5334a85f-cb42-4a29-8bd2-_1.cpp)]\n [!code-vb[BufferingExamples#4](~/add/codesnippet/visualbasic/5334a85f-cb42-4a29-8bd2-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>a um contexto de dispositivo para corresponder ao formato de pixel da memória intermédia novo para.</xref:System.IntPtr>"
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que indica o tamanho da memória intermédia para criar."
    return:
      type: System.Drawing.BufferedGraphics
      description: "A <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> que pode ser utilizado para desenhar numa memória intermédia das dimensões especificadas."
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref>."
  remarks: "É possível chamar Dispose quando tiver terminado de utilizando <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> O método de Dispose deixa o <xref:System.Drawing.BufferedGraphicsContext>num Estado não utilizável.</xref:System.Drawing.BufferedGraphicsContext> Depois de chamar Dispose, tem de libertar todas as referências para o <xref:System.Drawing.BufferedGraphicsContext>para que o recoletor de lixo pode reclame a memória que a <xref:System.Drawing.BufferedGraphicsContext>foi occupying.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext> Para obter mais informações, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md) e [implementar um método eliminar](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada eliminar antes de libertar a última referência <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> Caso contrário, os recursos que está a utilizar serão não ser libertados até que o recoletor de lixo chama o <xref:System.Object.Finalize%2A>método de <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Object.Finalize%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Permite que um objeto para tentar libertar recursos e efetuar outras operações de limpeza antes de que reclamada a através da recolha de lixo."
  syntax:
    content: ~BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  id: Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disposes da memória intermédia gráficos atual, se uma memória intermédia foi alocada e ainda não foi eliminada."
  remarks: "Se a memória intermédia de gráficos está a ser utilizado, será marcada para disposal logo que é gratuito; caso contrário, este será eliminado imediatamente."
  syntax:
    content: public void Invalidate ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  id: MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o tamanho máximo da memória intermédia a utilizar."
  remarks: "Esta propriedade permite-lhe obter ou definir as dimensões máximas para uma memória intermédia que deve ser mantida na memória. Pode atribuir uma memória intermédia de qualquer tamanho, no entanto qualquer memória intermédia com maiores do que o tamanho de MaximumBuffer dimensões será utilizada temporariamente e, em seguida, é rejeitada quando o <xref:System.Drawing.BufferedGraphics>objeto é libertado.</xref:System.Drawing.BufferedGraphics>"
  example:
  - "The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#2](~/add/codesnippet/csharp/p-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#2](~/add/codesnippet/cpp/p-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#2](~/add/codesnippet/visualbasic/p-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public System.Drawing.Size MaximumBuffer { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> que indica o tamanho máximo das dimensões da memória intermédia."
  overload: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A altura ou a largura do tamanho é menor ou igual a zero."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
- uid: System.Drawing.BufferedGraphics
  parent: System.Drawing
  isExternal: false
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.BufferedGraphicsContext.#ctor*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext
- uid: System.Drawing.BufferedGraphicsContext.Allocate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate
  nameWithType: BufferedGraphicsContext.Allocate
- uid: System.Drawing.BufferedGraphicsContext.Dispose*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphicsContext.Dispose
- uid: System.Drawing.BufferedGraphicsContext.Finalize*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphicsContext.Finalize
- uid: System.Drawing.BufferedGraphicsContext.Invalidate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate
  nameWithType: BufferedGraphicsContext.Invalidate
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
