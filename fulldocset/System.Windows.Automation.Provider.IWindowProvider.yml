### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IWindowProvider
  id: IWindowProvider
  children:
  - System.Windows.Automation.Provider.IWindowProvider.Close
  - System.Windows.Automation.Provider.IWindowProvider.InteractionState
  - System.Windows.Automation.Provider.IWindowProvider.IsModal
  - System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  - System.Windows.Automation.Provider.IWindowProvider.Maximizable
  - System.Windows.Automation.Provider.IWindowProvider.Minimizable
  - System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  - System.Windows.Automation.Provider.IWindowProvider.VisualState
  - System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  langs:
  - csharp
  name: IWindowProvider
  nameWithType: IWindowProvider
  fullName: System.Windows.Automation.Provider.IWindowProvider
  type: Interface
  summary: "Expõe métodos e propriedades para suportar o acesso de cliente de automatização de IU para controlos que fornecem funcionalidades baseado no Windows fundamentais dentro de um tradicional [!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]."
  remarks: "Implementado num fornecedor de automatização de IU que tem de suportar o <xref:System.Windows.Automation.WindowPattern>padrão de controlo.</xref:System.Windows.Automation.WindowPattern>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("987df77b-db06-4d77-8f8a-86a9c3bb90b9")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IWindowProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Close
  id: Close
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Close()
  nameWithType: IWindowProvider.Close()
  fullName: System.Windows.Automation.Provider.IWindowProvider.Close()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Tentativas para fechar a janela de mensagens em fila."
  remarks: "Feche tem de devolver imediatamente sem bloquear.       Fechar gera o <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent>eventos.</xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent> Se for possível, o evento deve ser gerado depois do controlo foi concluída a ação associada.       Quando chamado num controlo de painel de divisão, este método irá fechar o painel e remova a divisão associada. Este método também poderá fechar todas as outras painéis, dependendo da implementação."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Automation.Provider.IWindowProvider.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando o controlo não é possível executar a ação pedida."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "Quando o elemento de destino já não está disponível (por exemplo, a janela foi fechada)."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  id: InteractionState
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
  fullName: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém o estado de interação da janela."
  syntax:
    content: public System.Windows.Automation.WindowInteractionState InteractionState { get; }
    return:
      type: System.Windows.Automation.WindowInteractionState
      description: "O <xref href=&quot;System.Windows.Automation.WindowInteractionState&quot;> </xref> do controlo."
  overload: System.Windows.Automation.Provider.IWindowProvider.InteractionState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal
  id: IsModal
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: IsModal
  nameWithType: IWindowProvider.IsModal
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsModal
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém um valor que especifica se a janela modal."
  syntax:
    content: public bool IsModal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a janela modal; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.IsModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  id: IsTopmost
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém um valor que especifica se a janela é o elemento mais superior a ordem z."
  syntax:
    content: public bool IsTopmost { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a janela for superior; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.IsTopmost*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  id: Maximizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém um valor que especifica se a janela pode maximizada."
  syntax:
    content: public bool Maximizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a janela pode ser maximizada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.Maximizable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  id: Minimizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém um valor que especifica se a janela pode ser minimizada."
  syntax:
    content: public bool Minimizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a janela pode ser minimizada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.Minimizable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  id: SetVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: SetVisualState(WindowVisualState)
  nameWithType: IWindowProvider.SetVisualState(WindowVisualState)
  fullName: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(WindowVisualState)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Altera o estado visual da janela. Por exemplo, minimiza ou maximiza-lo."
  syntax:
    content: public void SetVisualState (System.Windows.Automation.WindowVisualState state);
    parameters:
    - id: state
      type: System.Windows.Automation.WindowVisualState
      description: "Estado visual pedido da janela."
  overload: System.Windows.Automation.Provider.IWindowProvider.SetVisualState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando o controlo não suporta o comportamento de pedido."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState
  id: VisualState
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: VisualState
  nameWithType: IWindowProvider.VisualState
  fullName: System.Windows.Automation.Provider.IWindowProvider.VisualState
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém o estado visual da janela."
  syntax:
    content: public System.Windows.Automation.WindowVisualState VisualState { get; }
    return:
      type: System.Windows.Automation.WindowVisualState
      description: "O estado visual da janela."
  overload: System.Windows.Automation.Provider.IWindowProvider.VisualState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  id: WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: WaitForInputIdle(Int32)
  nameWithType: IWindowProvider.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Faz com que o código de chamada bloquear o para o período de tempo especificado ou até que o processo associado aciona um estado inativo, optando-concluir primeiro."
  remarks: "Este método é normalmente utilizado em conjunto com o processamento de um <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.</xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>       A implementação está dependente a estrutura subjacente da aplicação; Por conseguinte, este método pode devolver algum tempo depois da janela está pronta para a entrada do utilizador. O código de chamada não deverá confiar este método para ascertain exatamente quando a janela tornou-se inativo."
  syntax:
    content: public bool WaitForInputIdle (int milliseconds);
    parameters:
    - id: milliseconds
      type: System.Int32
      description: "A quantidade de tempo, em milissegundos, a aguardar que o processo associado fiquem inativos. O número máximo é <xref:System.Int32>.</xref:System.Int32>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a janela entrou no estado inativo; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o limite de tempo excedido."
  overload: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Quando o parâmetro transmitido não é um número válido."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Provider.IWindowProvider.Close
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Close()
  nameWithType: IWindowProvider.Close()
  fullName: System.Windows.Automation.Provider.IWindowProvider.Close()
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
  fullName: System.Windows.Automation.Provider.IWindowProvider.InteractionState
- uid: System.Windows.Automation.WindowInteractionState
  parent: System.Windows.Automation
  isExternal: false
  name: WindowInteractionState
  nameWithType: WindowInteractionState
  fullName: System.Windows.Automation.WindowInteractionState
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsModal
  nameWithType: IWindowProvider.IsModal
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsModal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Maximizable
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Minimizable
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: SetVisualState(WindowVisualState)
  nameWithType: IWindowProvider.SetVisualState(WindowVisualState)
  fullName: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(WindowVisualState)
- uid: System.Windows.Automation.WindowVisualState
  parent: System.Windows.Automation
  isExternal: false
  name: WindowVisualState
  nameWithType: WindowVisualState
  fullName: System.Windows.Automation.WindowVisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: VisualState
  nameWithType: IWindowProvider.VisualState
  fullName: System.Windows.Automation.Provider.IWindowProvider.VisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: WaitForInputIdle(Int32)
  nameWithType: IWindowProvider.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.Provider.IWindowProvider.Close*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Close
  nameWithType: IWindowProvider.Close
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsModal
  nameWithType: IWindowProvider.IsModal
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: SetVisualState
  nameWithType: IWindowProvider.SetVisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: VisualState
  nameWithType: IWindowProvider.VisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: WaitForInputIdle
  nameWithType: IWindowProvider.WaitForInputIdle
