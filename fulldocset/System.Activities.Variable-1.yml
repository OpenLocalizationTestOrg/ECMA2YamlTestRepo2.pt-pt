### YamlMime:ManagedReference
items:
- uid: System.Activities.Variable`1
  id: Variable`1
  children:
  - System.Activities.Variable`1.#ctor
  - System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  - System.Activities.Variable`1.#ctor(System.String)
  - System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  - System.Activities.Variable`1.#ctor(System.String,`0)
  - System.Activities.Variable`1.Default
  - System.Activities.Variable`1.Get(System.Activities.ActivityContext)
  - System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)
  - System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)
  - System.Activities.Variable`1.TypeCore
  langs:
  - csharp
  name: Variable<T>
  nameWithType: Variable<T>
  fullName: System.Activities.Variable<T>
  type: Class
  syntax:
    content: 'public sealed class Variable<T> : System.Activities.Variable'
    typeParameters:
    - id: T
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.LocationReference
  - System.Activities.Variable
  implements: []
  inheritedMembers:
  - System.Activities.LocationReference.Type
  - System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)
  - System.Activities.Variable.Modifiers
  - System.Activities.Variable.Name
  - System.Activities.Variable.NameCore
  - System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)
  platform:
  - net462
- uid: System.Activities.Variable`1.#ctor
  id: '#ctor'
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Variable()
  nameWithType: Variable<T>.Variable()
  fullName: System.Activities.Variable<T>.Variable()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public Variable ();
    parameters: []
  overload: System.Activities.Variable`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Variable(Expression<Func<ActivityContext,T>>)
  nameWithType: Variable<T>.Variable(Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.Variable<T>.Variable(Expression<Func<ActivityContext,T>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public Variable (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> defaultExpression);
    parameters:
    - id: defaultExpression
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
      description: "To be added."
  overload: System.Activities.Variable`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Variable(String)
  nameWithType: Variable<T>.Variable(String)
  fullName: System.Activities.Variable<T>.Variable(String)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public Variable (string name);
    parameters:
    - id: name
      type: System.String
      description: "To be added."
  overload: System.Activities.Variable`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  id: '#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Variable(String,Expression<Func<ActivityContext,T>>)
  nameWithType: Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public Variable (string name, System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> defaultExpression);
    parameters:
    - id: name
      type: System.String
      description: "To be added."
    - id: defaultExpression
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
      description: "To be added."
  overload: System.Activities.Variable`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.#ctor(System.String,`0)
  id: '#ctor(System.String,`0)'
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Variable(String,T)
  nameWithType: Variable<T>.Variable(String,T)
  fullName: System.Activities.Variable<T>.Variable(String,T)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public Variable (string name, T defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "To be added."
    - id: defaultValue
      type: T
      description: "To be added."
  overload: System.Activities.Variable`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.Default
  id: Default
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Default
  nameWithType: Variable<T>.Default
  fullName: System.Activities.Variable<T>.Default
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.Activity<T> Default { get; set; }
    return:
      type: System.Activities.Activity{T}
      description: "To be added."
  overload: System.Activities.Variable`1.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: Variable<T>.Get(ActivityContext)
  fullName: System.Activities.Variable<T>.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Activities.Variable`1.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: Variable<T>.GetLocation(ActivityContext)
  fullName: System.Activities.Variable<T>.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "To be added."
    return:
      type: System.Activities.Location`1
      description: "To be added."
  overload: System.Activities.Variable`1.GetLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)
  id: Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: Set(ActivityContext,T)
  nameWithType: Variable<T>.Set(ActivityContext,T)
  fullName: System.Activities.Variable<T>.Set(ActivityContext,T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public void Set (System.Activities.ActivityContext context, T value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "To be added."
    - id: value
      type: T
      description: "To be added."
  overload: System.Activities.Variable`1.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Variable`1.TypeCore
  id: TypeCore
  parent: System.Activities.Variable`1
  langs:
  - csharp
  name: TypeCore
  nameWithType: Variable<T>.TypeCore
  fullName: System.Activities.Variable<T>.TypeCore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override Type TypeCore { get; }
    return:
      type: System.Type
      description: "To be added."
  overload: System.Activities.Variable`1.TypeCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Variable
  isExternal: false
  name: System.Activities.Variable
- uid: System.Activities.Variable`1.#ctor
  parent: System.Activities.Variable`1
  isExternal: false
  name: Variable()
  nameWithType: Variable<T>.Variable()
  fullName: System.Activities.Variable<T>.Variable()
- uid: System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  parent: System.Activities.Variable`1
  isExternal: false
  name: Variable(Expression<Func<ActivityContext,T>>)
  nameWithType: Variable<T>.Variable(Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.Variable<T>.Variable(Expression<Func<ActivityContext,T>>)
- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<ActivityContext,T>>
  nameWithType: Expression<Func<ActivityContext,T>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<System.Activities.ActivityContext,T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.ActivityContext,T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityContext
    name: ActivityContext
    nameWithType: ActivityContext
    fullName: ActivityContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Variable`1.#ctor(System.String)
  parent: System.Activities.Variable`1
  isExternal: false
  name: Variable(String)
  nameWithType: Variable<T>.Variable(String)
  fullName: System.Activities.Variable<T>.Variable(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  parent: System.Activities.Variable`1
  isExternal: false
  name: Variable(String,Expression<Func<ActivityContext,T>>)
  nameWithType: Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)
- uid: System.Activities.Variable`1.#ctor(System.String,`0)
  parent: System.Activities.Variable`1
  isExternal: false
  name: Variable(String,T)
  nameWithType: Variable<T>.Variable(String,T)
  fullName: System.Activities.Variable<T>.Variable(String,T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Variable`1.Default
  parent: System.Activities.Variable`1
  isExternal: false
  name: Default
  nameWithType: Variable<T>.Default
  fullName: System.Activities.Variable<T>.Default
- uid: System.Activities.Activity{T}
  parent: System.Activities
  isExternal: false
  name: Activity<T>
  nameWithType: Activity<T>
  fullName: System.Activities.Activity<T>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: Activity<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Variable`1.Get(System.Activities.ActivityContext)
  parent: System.Activities.Variable`1
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: Variable<T>.Get(ActivityContext)
  fullName: System.Activities.Variable<T>.Get(ActivityContext)
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Variable`1
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: Variable<T>.GetLocation(ActivityContext)
  fullName: System.Activities.Variable<T>.GetLocation(ActivityContext)
- uid: System.Activities.Location`1
  parent: System.Activities
  isExternal: false
  name: Location<T>
  nameWithType: Location<T>
  fullName: System.Activities.Location<T>
- uid: System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.Variable`1
  isExternal: false
  name: Set(ActivityContext,T)
  nameWithType: Variable<T>.Set(ActivityContext,T)
  fullName: System.Activities.Variable<T>.Set(ActivityContext,T)
- uid: System.Activities.Variable`1.TypeCore
  parent: System.Activities.Variable`1
  isExternal: false
  name: TypeCore
  nameWithType: Variable<T>.TypeCore
  fullName: System.Activities.Variable<T>.TypeCore
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Variable`1.#ctor*
  parent: System.Activities.Variable`1
  isExternal: false
  name: Variable<T>
  nameWithType: Variable<T>.Variable<T>
- uid: System.Activities.Variable`1.Default*
  parent: System.Activities.Variable`1
  isExternal: false
  name: Default
  nameWithType: Variable<T>.Default
- uid: System.Activities.Variable`1.Get*
  parent: System.Activities.Variable`1
  isExternal: false
  name: Get
  nameWithType: Variable<T>.Get
- uid: System.Activities.Variable`1.GetLocation*
  parent: System.Activities.Variable`1
  isExternal: false
  name: GetLocation
  nameWithType: Variable<T>.GetLocation
- uid: System.Activities.Variable`1.Set*
  parent: System.Activities.Variable`1
  isExternal: false
  name: Set
  nameWithType: Variable<T>.Set
- uid: System.Activities.Variable`1.TypeCore*
  parent: System.Activities.Variable`1
  isExternal: false
  name: TypeCore
  nameWithType: Variable<T>.TypeCore
