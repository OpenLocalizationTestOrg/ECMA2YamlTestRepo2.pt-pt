### YamlMime:ManagedReference
items:
- uid: System.Windows.LogicalTreeHelper
  id: LogicalTreeHelper
  children:
  - System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  langs:
  - csharp
  name: LogicalTreeHelper
  nameWithType: LogicalTreeHelper
  fullName: System.Windows.LogicalTreeHelper
  type: Class
  summary: "Fornece métodos estáticos ajuda para consultar os objetos na árvore lógica."
  remarks: "A classe de LogicalTreeHelper fornece métodos que pode utilizar para devolver coleções subordinadas de objetos ou objetos específicos a partir de subnodes da árvore lógica. No entanto, a maioria das operações de árvore de objetos que são geralmente efetuadas também é exposta pelo semelhante métodos ou propriedades ou <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Por exemplo, experimente o seguinte: - em vez de contactar a estática <xref:System.Windows.LogicalTreeHelper.GetChildren%2A>método, que devolve um enumerador para o subordinado lógico objetos, utilizar a coleção dedicada exposta no modelo de conteúdo para esse objeto.</xref:System.Windows.LogicalTreeHelper.GetChildren%2A> Praticamente todos os objetos que suportem um modelo de conteúdo expõem algumas propriedade que contém a coleção de objetos subordinados e fornece suporte de interface de coleção diretamente essa coleção.      -Em vez de chamar a estática <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>método para obter um objeto subordinado especificando o respetivo nome, a chamada de <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>ou <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>método em objetos específicos.</xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>       LogicalTreeHelper é mais útil para cenários de análise onde estiverem em deslocação ou reduzir verticalmente o recursivamente árvore lógica através de vários níveis e pretende utilizar uma abordagem consistente para examinar os vários objetos principais ou subordinados. Neste caso, poderá aceder a uma mistura de modelos de conteúdo e utilizando o modelo de conteúdo mais APIs específicas poderia ser demasiado complexas."
  syntax:
    content: public static class LogicalTreeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  id: BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Tenta integrar o elemento de IU pedido na vista e gera o <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> eventos no destino para os resultados de relatório."
  remarks: "É normalmente mais conveniente chamar os métodos de instância <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName>ou <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName>em vez deste método estático utilitário.</xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName> O comportamento dos métodos de instância é equivalente ao comportamento do método estático.       Mesmo que o `current` elemento de IU fornecido era um <xref:System.Windows.FrameworkContentElement>, o evento resultante ainda for o mesmo <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>eventos, com o tipo de origem <xref:System.Windows.FrameworkContentElement>identificação ao verificar os dados de eventos do evento.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement>"
  syntax:
    content: public static void BringIntoView (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "O elemento de IU para assegurar a vista."
  overload: System.Windows.LogicalTreeHelper.BringIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  id: FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Tenta encontrar e devolver um objeto com o nome especificado. A pesquisa começa a partir do objeto especificado e continua em subnodes da árvore lógica."
  remarks: "Os métodos <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>e <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>são semelhantes superficially FindLogicalNode, mas operar pela lógica diferentes:-a direção de pesquisa para FindLogicalNode é para objetos subordinados (abaixo na árvore); a direção de pesquisa para o `FindName` métodos é para os objetos principais (cima na árvore).</xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>      -O `FindName` métodos são regidos pelo conceito de uma namescope XAML. Utilizar `FindName` são garantido que apenas um objeto com esse nome existe, porque o XAML namescopes impor exclusividade. Em contrapartida, FindLogicalNode ignora XAML namescope e poderá cruzada limites de namescope XAML durante a pesquisa. Como tal, não há nenhuma garantia de exclusividade do `elementName` nome quando são ultrapassados limites. Para mais informações sobre XAML namescopes, consulte [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);
    parameters:
    - id: logicalTreeNode
      type: System.Windows.DependencyObject
      description: "O objeto para iniciar a pesquisa do. Este objecto deve ser um <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> ou um <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    - id: elementName
      type: System.String
      description: "O nome do objeto localizar."
    return:
      type: System.Windows.DependencyObject
      description: "O objeto com o nome correspondente, caso encontre algum; Devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> não se foi encontrado nenhum nome correspondente na árvore lógica."
  overload: System.Windows.LogicalTreeHelper.FindLogicalNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  id: GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve a coleção de objetos de subordinados imediatos do objeto especificado, ao processar a árvore lógica."
  remarks: "Utilize este método de assinatura e do programa auxiliar principalmente quando não souber se `current` é um <xref:System.Windows.FrameworkElement>ou <xref:System.Windows.FrameworkContentElement>e são também não souber se de classe esse objeto suporta a sua própria coleção de modelo de conteúdo.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Se pode determinar o tipo de objeto que estiver a consultar, verifique a propriedade de conteúdo específica que sabe que existe desse tipo. Por exemplo, se souber que o objeto estiver a consultar é um <xref:System.Windows.Controls.ItemsControl>, verifique o <xref:System.Windows.Controls.ItemsControl.Items%2A>propriedade para obter uma coleção com tipo seguro, que tem suporte de interface de coleção e é provavelmente mais útil de um enumerador.</xref:System.Windows.Controls.ItemsControl.Items%2A> </xref:System.Windows.Controls.ItemsControl>"
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "O objeto a partir do qual pretende iniciar a árvore lógica de processamento. Espera-se que seja um <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> ou <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Collections.IEnumerable
      description: "A coleção enumeráveis de objetos de subordinados imediatos da árvore lógica do objeto especificado."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  id: GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve a coleção de objetos subordinados imediatos especificado <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref> ao processar a árvore lógica."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkContentElement
      description: "O objeto a partir do qual pretende iniciar a árvore lógica de processamento."
    return:
      type: System.Collections.IEnumerable
      description: "A coleção enumeráveis de objetos subordinados imediatos começando <code> current </code> na árvore lógica."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  id: GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve a coleção de objetos subordinados imediatos especificado <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> ao processar a árvore lógica."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "O objeto a partir do qual pretende iniciar a árvore lógica de processamento."
    return:
      type: System.Collections.IEnumerable
      description: "A coleção enumeráveis de objetos subordinados imediatos começando <code> current </code> na árvore lógica."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve o objeto principal do objeto especificado ao processar a árvore lógica."
  remarks: "Este método é simplesmente um wrapper que obtém a versão do tipo adequado (<xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement>) da <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName>ou <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName>propriedade; por isso, a menos que não é possível determinar o `current` tipo, poderá querer Verifique as propriedades da respetiva instância em vez disso.</xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>"
  syntax:
    content: public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "O objeto localizar o objeto principal. Espera-se que seja um <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> ou um <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Windows.DependencyObject
      description: "O objecto do pedido principal."
  overload: System.Windows.LogicalTreeHelper.GetParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
- uid: System.Windows.FrameworkContentElement
  parent: System.Windows
  isExternal: false
  name: FrameworkContentElement
  nameWithType: FrameworkContentElement
  fullName: System.Windows.FrameworkContentElement
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
- uid: System.Windows.LogicalTreeHelper.BringIntoView*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView
  nameWithType: LogicalTreeHelper.BringIntoView
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode
  nameWithType: LogicalTreeHelper.FindLogicalNode
- uid: System.Windows.LogicalTreeHelper.GetChildren*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren
  nameWithType: LogicalTreeHelper.GetChildren
- uid: System.Windows.LogicalTreeHelper.GetParent*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent
  nameWithType: LogicalTreeHelper.GetParent
