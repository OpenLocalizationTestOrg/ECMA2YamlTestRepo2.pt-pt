### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.IFieldTemplateFactory
  id: IFieldTemplateFactory
  children:
  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  langs:
  - csharp
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
  type: Interface
  summary: "Define uma interface implementada pela objetos que criar modelos de campo."
  remarks: "Esta classe tem de ser implementada pelo <xref:System.Web.DynamicData.FieldTemplateFactory>classe para criar um modelo de campo.</xref:System.Web.DynamicData.FieldTemplateFactory> Esta interface fornece métodos inicializar o <xref:System.Web.DynamicData.FieldTemplateFactory>e cria os modelos de campo.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public interface IFieldTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Cria uma instância de um modelo de campo utilizando o <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> classe, o <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref> classe e <xref:System.Web.DynamicData.MetaColumn.UIHint*>propriedade.</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  remarks: "Os modelos de campo de dados do ASP.NET dinâmico são controlos de utilizador do ASP.NET que mapeiam os controlos de dados para tipos de dados de um modelo de dados. Modelos de campo geralmente derivam <xref:System.Web.DynamicData.FieldTemplateUserControl>, a classe que permite o acesso a campos de dados, de colunas de dados e de metadados em modelos de dados.</xref:System.Web.DynamicData.FieldTemplateUserControl> Projetos de dados dinâmicos fornecem predefinido de modelos de campo, mas pode modificá-las ou criar modelos de campo personalizado. Quando imlemented, este método cria um modelo de campo com base na coluna de dados, o modo da coluna de dados e o <xref:System.Web.DynamicData.MetaColumn.UIHint%2A>propriedade.</xref:System.Web.DynamicData.MetaColumn.UIHint%2A> Especificar o `uiHint` parâmetro se pretender apresentar dados através de um modelo de campo personalizado."
  syntax:
    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Especifica a coluna de dados a utilizar para apresentar o modelo de campo."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Especifica o modo de visualização do modelo de campo."
    - id: uiHint
      type: System.String
      description: "Especifica o modelo de campo a utilizar."
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "Uma instância de um <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> quando implementado numa classe de objeto."
  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicializa uma <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> utilizando o modelo de dados especificada."
  remarks: "Dados dinâmicas do ASP.NET utilizam modelos de campo para apresentar os campos de dados individuais. Modelos de campo, normalmente, são implementados como controlos de utilizador que mapeiam os tipos de dados de um modelo de dados para campos individuais no controlo de dados. Este método inicializa o <xref:System.Web.DynamicData.FieldTemplateFactory>irá utilizar a classe, que é utilizado para criar modelos de campo com o modelo de dados do modelo de campo.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "Especifica o modelo de dados que utiliza o modelo de campo."
  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: IFieldTemplateFactory.Initialize
