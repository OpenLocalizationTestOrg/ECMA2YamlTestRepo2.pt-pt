### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecureConversationServiceCredential
  id: SecureConversationServiceCredential
  children:
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  langs:
  - csharp
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential
  type: Class
  summary: "Fornece definições de credencial para um serviço de conversação segura."
  remarks: "Conversações seguras envolvem a troca de várias mensagens e utilizam uma segurança contexto Token (SCT) para garantir a segurança. O SCT é partilhado entre as partes de comunicação para a duração de uma sessão de comunicações. Um serviço pode emitir dois tipos diferentes de SCTs:-o primeiro é uma SCT baseados em sessão que contém um id exclusivo. Mensagens executar apenas o id e o serviço mantém uma cache de estado de mapeamento mapeia entre os ids SCT e conteúdo (como afirmações, as chaves de segurança e assim sucessivamente). Um cliente bem behaved terá de enviar um cancelamento SCT para ajudar o otimizar os recursos de cache de serviço. Se instanciar esta classe chamando <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>com o `requireCancellation` igual do parâmetro `true`, é emitido a SCT desta forma.</xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>      -A segundo é um SCT autónomo que reside num cookie no cliente. Este SCT contém as informações de estado de todo, requer a gestão do Estado do serviço não nem de cancelamento SCT do cliente. Isto denomina-se um SCT &quot;modo de cookie&quot;. Dado que o SCT contém as informações de estado de todo, o tamanho é maior do que no caso de baseados em sessão. SCTs baseados em sessão, o serviço armazena grande parte as informações de estado. No entanto, porque é autónomo, este pode ser utilizado em toda a duração de serviço e persistir através de encerramento do serviço e reiniciar."
  syntax:
    content: public sealed class SecureConversationServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  id: SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém uma coleção do <xref:System.Type>afirmações para a serialização de cookie.</xref:System.Type>"
  remarks: "A serialização de afirmações para SCT cookies, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] utiliza <xref:System.Runtime.Serialization.DataContractSerializer>como predefinição.</xref:System.Runtime.Serialization.DataContractSerializer> Porque o recurso de afirmação extensível, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] permite-lhe fornecer uma lista de tipos de recursos conhecidos. Isto assiste o <xref:System.Runtime.Serialization.DataContractSerializer>durante a desserialização de declarações de cookie, para que as TI podem devolver os objetos de tipo seguro originais.</xref:System.Runtime.Serialization.DataContractSerializer>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#2](~/add/codesnippet/csharp/e8a69534-ad60-48be-9b2e-_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> SecurityContextClaimTypes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "Uma coleção do <xref:System.Type>afirmações para a serialização de cookie.</xref:System.Type>"
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  id: SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define um personalizado <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> para codificação e descodificação serialização de cookie."
  remarks: "No &quot;modo de cookie&quot;, um serviço emite o cliente de um token de contexto de segurança (SCT) sob a forma de um cookie para o cliente para que tenha de manter qualquer Estado de segurança. O cliente envia o cookie de volta na mensagem de pedido para que o serviço sabe como desproteger e certifique-se a mensagem de pedido. Porque o SCT, muitas vezes, é transmitido através de uma rede não segura, devem ser protegido.       Por predefinição, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] utiliza o <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>classe para proteger o cookie utilizando a API de proteção de dados (DPAPI).</xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> Para DPAPI funcionar no ambiente de Web farm, todos os serviços de back-end devem ser executado como a mesma conta de utilizador de domínio. Por outras palavras, se o serviço que Web alojado, o processo de trabalho de serviços de informação Internet (IIS) tem configurado para ser executado como um utilizador de domínio.       Esta propriedade permite-lhe utilizar uma personalizado <xref:System.ServiceModel.Security.SecurityStateEncoder>para encriptar e desencriptar o cookie e não dependem DPAPI.</xref:System.ServiceModel.Security.SecurityStateEncoder>"
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#1](~/add/codesnippet/csharp/72c1f567-836b-4b6f-bbcd-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "A <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> objeto que está a personalização de <xref href=&quot;System.ServiceModel.Security.DataProtectionSecurityStateEncoder&quot;> </xref>."
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecurityStateEncoder
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
