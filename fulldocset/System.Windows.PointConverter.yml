### YamlMime:ManagedReference
items:
- uid: System.Windows.PointConverter
  id: PointConverter
  children:
  - System.Windows.PointConverter.#ctor
  - System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: PointConverter
  nameWithType: PointConverter
  fullName: System.Windows.PointConverter
  type: Class
  summary: "Converte instâncias de outros tipos de e para um <xref href=&quot;System.Windows.Point&quot;> </xref>."
  remarks: "<a name=&quot;XAMLTextUsage_PointConverter&quot;></a># # Utilização de texto XAML"
  example:
  - "The following code example uses a PointConverter to convert a string into a <xref:System.Windows.Point>.  \n  \n [!code-cs[PointExamples_snip#PointConverterExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#pointconverterexample_csharp)]"
  syntax:
    content: 'public sealed class PointConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.PointConverter.#ctor
  id: '#ctor'
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: PointConverter()
  nameWithType: PointConverter.PointConverter()
  fullName: System.Windows.PointConverter.PointConverter()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.PointConverter&quot;> </xref> classe."
  syntax:
    content: public PointConverter ();
    parameters: []
  overload: System.Windows.PointConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se um objeto pode ser convertido de um tipo fornecido para uma instância de um <xref href=&quot;System.Windows.Point&quot;> </xref>."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Descreve as informações de contexto de um tipo."
    - id: sourceType
      type: System.Type
      description: "O tipo de origem que está a ser avaliado para conversão."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo pode ser convertido para um <xref href=&quot;System.Windows.Point&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.PointConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se uma instância de um <xref href=&quot;System.Windows.Point&quot;> </xref> pode ser convertido para um tipo diferente."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Descreve as informações de contexto de um tipo."
    - id: destinationType
      type: System.Type
      description: "Escreva o pretendido isto <xref href=&quot;System.Windows.Point&quot;> </xref> está a ser avaliado para conversão."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esta <xref href=&quot;System.Windows.Point&quot;> </xref> pode ser convertido para <code> destinationType </code>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.PointConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Tenta converter o objeto especificado para um <xref href=&quot;System.Windows.Point&quot;> </xref>."
  remarks: "Para determinar se é possível efectuar uma conversão sem realmente efetuar a conversão, utilize o <xref:System.Windows.PointConverter.CanConvertFrom%2A>método.</xref:System.Windows.PointConverter.CanConvertFrom%2A>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Fornece a nível contextual das informações necessárias para conversão."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Informações cultural respeitem durante a conversão."
    - id: value
      type: System.Object
      description: "O objecto que está a ser convertido."
    return:
      type: System.Object
      description: "O <xref href=&quot;System.Windows.Point&quot;> </xref> criados a partir de conversão <code> value </code>."
  overload: System.Windows.PointConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Emitida se o objeto especificado for NULL ou é um tipo que não é possível converter um <xref href=&quot;System.Windows.Point&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Tenta converter um <xref href=&quot;System.Windows.Point&quot;> </xref> para um tipo especificado."
  remarks: "Para determinar se é possível efectuar uma conversão sem realmente efetuar a conversão, utilize o <xref:System.Windows.PointConverter.CanConvertTo%2A>método.</xref:System.Windows.PointConverter.CanConvertTo%2A>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Fornece a nível contextual das informações necessárias para conversão."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Informações cultural respeitem durante a conversão."
    - id: value
      type: System.Object
      description: "O <xref href=&quot;System.Windows.Point&quot;> </xref> converter."
    - id: destinationType
      type: System.Type
      description: "O tipo para converter esta <xref href=&quot;System.Windows.Point&quot;> </xref> para."
    return:
      type: System.Object
      description: "O objeto criado a partir de converter este <xref href=&quot;System.Windows.Point&quot;> </xref>."
  overload: System.Windows.PointConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Se iniciadas <code> value </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou não é um <xref href=&quot;System.Windows.Point&quot;> </xref>, ou se o <code> destinationType </code> não é um dos tipos válidos para conversão."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.PointConverter.#ctor
  parent: System.Windows.PointConverter
  isExternal: false
  name: PointConverter()
  nameWithType: PointConverter.PointConverter()
  fullName: System.Windows.PointConverter.PointConverter()
- uid: System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.PointConverter.#ctor*
  parent: System.Windows.PointConverter
  isExternal: false
  name: PointConverter
  nameWithType: PointConverter.PointConverter
- uid: System.Windows.PointConverter.CanConvertFrom*
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: PointConverter.CanConvertFrom
- uid: System.Windows.PointConverter.CanConvertTo*
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: PointConverter.CanConvertTo
- uid: System.Windows.PointConverter.ConvertFrom*
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: PointConverter.ConvertFrom
- uid: System.Windows.PointConverter.ConvertTo*
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertTo
  nameWithType: PointConverter.ConvertTo
