### YamlMime:ManagedReference
items:
- uid: System.Windows.PointConverter
  id: PointConverter
  children:
  - System.Windows.PointConverter.#ctor
  - System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: PointConverter
  nameWithType: PointConverter
  fullName: System.Windows.PointConverter
  type: Class
  summary: "Converts instances of other types to and from a <see cref=&quot;T:System.Windows.Point&quot;></see>."
  remarks: "<a name=&quot;XAMLTextUsage_PointConverter&quot;></a>    ## XAML Text Usage"
  example:
  - "The following code example uses a PointConverter to convert a string into a <xref:System.Windows.Point>.  \n  \n [!code-cs[PointExamples_snip#PointConverterExample_csharp](~/add/codesnippet/CSharp/PointExamples_snip/PointExample.cs#pointconverterexample_csharp)]"
  syntax:
    content: 'public sealed class PointConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PointConverter.#ctor
  id: '#ctor'
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: PointConverter()
  nameWithType: PointConverter.PointConverter()
  fullName: System.Windows.PointConverter.PointConverter()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Windows.PointConverter&quot;></see> class."
  syntax:
    content: public PointConverter ();
    parameters: []
  overload: System.Windows.PointConverter.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether an object can be converted from a given type to an instance of a <see cref=&quot;T:System.Windows.Point&quot;></see>."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Describes the context information of a type."
    - id: sourceType
      type: System.Type
      description: "The type of the source that is being evaluated for conversion."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.PointConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether an instance of a <see cref=&quot;T:System.Windows.Point&quot;></see> can be converted to a different type."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Describes the context information of a type."
    - id: destinationType
      type: System.Type
      description: "The desired type this  is being evaluated for conversion."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.PointConverter.CanConvertTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Attempts to convert the specified object to a <see cref=&quot;T:System.Windows.Point&quot;></see>."
  remarks: "To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertFrom%2A> method."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Provides contextual information required for conversion."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Cultural information to respect during conversion."
    - id: value
      type: System.Object
      description: "The object being converted."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.PointConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Thrown if the specified object is NULL or is a type that cannot be converted to a ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PointConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Attempts to convert a <see cref=&quot;T:System.Windows.Point&quot;></see> to a specified type."
  remarks: "To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertTo%2A> method."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Provides contextual information required for conversion."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Cultural information to respect during conversion."
    - id: value
      type: System.Object
      description: "The  to convert."
    - id: destinationType
      type: System.Type
      description: "The type to convert this  to."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.PointConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Thrown if value is  or is not a , or if the destinationType is not one of the valid types for conversion."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Windows.PointConverter.#ctor
  parent: System.Windows.PointConverter
  isExternal: false
  name: PointConverter()
  nameWithType: PointConverter.PointConverter()
  fullName: System.Windows.PointConverter.PointConverter()
- uid: System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.PointConverter.#ctor*
  parent: System.Windows.PointConverter
  isExternal: false
  name: PointConverter
  nameWithType: PointConverter.PointConverter
- uid: System.Windows.PointConverter.CanConvertFrom*
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: PointConverter.CanConvertFrom
- uid: System.Windows.PointConverter.CanConvertTo*
  parent: System.Windows.PointConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: PointConverter.CanConvertTo
- uid: System.Windows.PointConverter.ConvertFrom*
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: PointConverter.ConvertFrom
- uid: System.Windows.PointConverter.ConvertTo*
  parent: System.Windows.PointConverter
  isExternal: false
  name: ConvertTo
  nameWithType: PointConverter.ConvertTo
