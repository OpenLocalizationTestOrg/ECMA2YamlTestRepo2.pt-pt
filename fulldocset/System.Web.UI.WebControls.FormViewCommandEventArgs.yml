### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs
  id: FormViewCommandEventArgs
  children:
  - System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  - System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  langs:
  - csharp
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.FormView.ItemCommand&quot;></xref> event."
  remarks: "The <xref:System.Web.UI.WebControls.FormView.ItemCommand> event is raised when a button within the <xref:System.Web.UI.WebControls.FormView> control is clicked. This allows you to provide an event-handling method that performs a custom routine whenever this event occurs.       Buttons within a <xref:System.Web.UI.WebControls.FormView> control can also invoke some of the built-in functionality of the control. To perform one of these operations, set the `CommandName` property of a button to one of the values in the following table.      |CommandName value|Description|   |-----------------------|-----------------|   |&quot;Cancel&quot;|Cancels an edit or insert operation and returns the <xref:System.Web.UI.WebControls.FormView> control to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property. Raises the <xref:System.Web.UI.WebControls.FormView.ModeChanged> and <xref:System.Web.UI.WebControls.FormView.ModeChanging> events.|   |&quot;Delete&quot;|Deletes the current record. Raises the <xref:System.Web.UI.WebControls.FormView.ItemDeleted> and <xref:System.Web.UI.WebControls.FormView.ItemDeleting> events.|   |&quot;Edit&quot;|Puts the <xref:System.Web.UI.WebControls.FormView> control in edit mode. Raises the <xref:System.Web.UI.WebControls.FormView.ModeChanged> and <xref:System.Web.UI.WebControls.FormView.ModeChanging> events.|   |&quot;Insert&quot;|Inserts the current record in the data source. Raises the <xref:System.Web.UI.WebControls.FormView.ItemInserted> and <xref:System.Web.UI.WebControls.FormView.ItemInserting> events.|   |&quot;New&quot;|Puts the <xref:System.Web.UI.WebControls.FormView> control in insert mode. Raises the <xref:System.Web.UI.WebControls.FormView.ModeChanged> and <xref:System.Web.UI.WebControls.FormView.ModeChanging> events.|   |&quot;Page&quot;|Performs a paging operation. Set the `CommandArgument` property of the button to &quot;First&quot;, &quot;Last&quot;, &quot;Next&quot;, &quot;Prev&quot;, or a page number to specify the type of paging operation to perform. Raises the <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> and <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> events.|   |&quot;Update&quot;|Updates the current record in the data source. Raises the <xref:System.Web.UI.WebControls.FormView.ItemUpdated> and <xref:System.Web.UI.WebControls.FormView.ItemUpdating> events.|       Although the <xref:System.Web.UI.WebControls.FormView.ItemCommand> event is raised when a button listed in the previous table is clicked, it is recommended that you use the events listed in the table for the operation.       A FormViewCommandEventArgs object is passed to the event-handling method, which allows you to determine the command name and command argument of the button clicked. To determine the command name and command argument, use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> and <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> properties, respectively. You can also access the button control that raised the event by using the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> property.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       For a list of initial property values for an instance of the FormViewCommandEventArgs class, see the <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.%23ctor%2A> constructor."
  example:
  - "The following example demonstrates how to use the FormViewCommandEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event to determine which button within a <xref:System.Web.UI.WebControls.FormView> control was clicked by the user.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: 'public class FormViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs'
  inheritance:
  - System.EventArgs
  - System.Web.UI.WebControls.CommandEventArgs
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  - System.Web.UI.WebControls.CommandEventArgs.CommandName
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  id: '#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)'
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  langs:
  - csharp
  name: FormViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.FormViewCommandEventArgs&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> class.       The following table shows the initial property values for an instance of <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|The value of the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property of the <xref:System.Web.UI.WebControls.CommandEventArgs> contained in the `originalArgs` parameter.|   |<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|The value of the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property of the <xref:System.Web.UI.WebControls.CommandEventArgs> contained in the `originalArgs` parameter.|   |<xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A>|The object contained in the `commandSource` parameter.|      > [!NOTE] >  This constructor is used primarily by control developers when raising events."
  syntax:
    content: public FormViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);
    parameters:
    - id: commandSource
      type: System.Object
      description: "The source of the command."
    - id: originalArgs
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref> that contains event data."
  overload: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  id: CommandSource
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  langs:
  - csharp
  name: CommandSource
  nameWithType: FormViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the control that raised the event."
  remarks: "Use the CommandSource property to access the properties of the control that raised the event. In the case of a <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> object, the control is the button that was clicked by the user."
  example:
  - "The following example demonstrates how to use the CommandSource property to access the properties of the button control that raised the <xref:System.Web.UI.WebControls.FormView.ItemCommand> event.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_419_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_419_1.aspx)]"
  syntax:
    content: public object CommandSource { get; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the control that raised the event."
  overload: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  id: Handled
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: FormViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that indicates whether the control has handled the event."
  remarks: "Set this property to `true` in the event handler to specify that the <xref:System.Web.UI.WebControls.FormView> control should not handle the event because you are handling it in your code."
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if data-bound event code was skipped or has finished; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: FormViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: FormViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: FormViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs.FormViewCommandEventArgs
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource*
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: FormViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled*
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: FormViewCommandEventArgs.Handled
