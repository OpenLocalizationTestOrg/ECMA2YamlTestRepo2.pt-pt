### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  id: SecurityTokenSerializer
  children:
  - System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
  type: Class
  summary: "Representa uma classe que pode ler e escrever identificadores de chaves, cláusulas do identificador da chave e tokens de segurança."
  remarks: "Utilizar a classe de SecurityTokenSerializer para ler e escrever <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>, e <xref:System.IdentityModel.Tokens.SecurityToken>classes como XML.</xref:System.IdentityModel.Tokens.SecurityToken> </xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> </xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> A classe de SecurityTokenSerializer tem métodos para determinar se esta classe pode ler e escrever estas entidades e para, efetivamente, ler e escrevê-las. Para os tokens de segurança, estes métodos são <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A>e <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>"
  syntax:
    content: public abstract class SecurityTokenSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: SecurityTokenSerializer()
  nameWithType: SecurityTokenSerializer.SecurityTokenSerializer()
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.SecurityTokenSerializer()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> classe."
  syntax:
    content: protected SecurityTokenSerializer ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)
  id: CanReadKeyIdentifier(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanReadKeyIdentifier(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifier(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode ler o <xref uid=&quot;langword_csharp_&lt;KeyIdentifier&gt;&quot; name=&quot;&lt;KeyIdentifier&gt;&quot; href=&quot;&quot;> </xref> elemento referenciado pelo leitor de XML especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método CanReadKeyIdentifier o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A>"
  syntax:
    content: public bool CanReadKeyIdentifier (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando especificado <xref uid=&quot;langword_csharp_&lt;KeyIdentifier&gt;&quot; name=&quot;&lt;KeyIdentifier&gt;&quot; href=&quot;&quot;> </xref> elemento XML pode ser de leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode ler uma cláusula num <xref uid=&quot;langword_csharp_&lt;KeyIdentifier&gt;&quot; name=&quot;&lt;KeyIdentifier&gt;&quot; href=&quot;&quot;> </xref> elemento referenciado pelo leitor de XML especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método CanReadKeyIdentifierClause o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A>"
  syntax:
    content: public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>ler a cláusula do identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando a cláusula do identificador de chave especificado pode ser lidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode ler o <xref uid=&quot;langword_csharp_&lt;KeyIdentifier&gt;&quot; name=&quot;&lt;KeyIdentifier&gt;&quot; href=&quot;&quot;> </xref> elemento referenciado pelo leitor de XML especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método CanReadKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29>método chama o método de CanReadKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29>"
  syntax:
    content: protected abstract bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>ler a cláusula do identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando especificado <xref uid=&quot;langword_csharp_&lt;KeyIdentifier&gt;&quot; name=&quot;&lt;KeyIdentifier&gt;&quot; href=&quot;&quot;> </xref> elemento pode ser de leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)
  id: CanReadKeyIdentifierCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanReadKeyIdentifierCore(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode ler o <xref uid=&quot;langword_csharp_&lt;KeyIdentifier&gt;&quot; name=&quot;&lt;KeyIdentifier&gt;&quot; href=&quot;&quot;> </xref> elemento referenciado pelo leitor de XML especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método CanReadKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29>método chama o método de CanReadKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29>"
  syntax:
    content: protected abstract bool CanReadKeyIdentifierCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando a cláusula do identificador de chave especificado pode ser lidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode ler o token de segurança indicada pelo leitor de XML especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método CanReadToken o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A>"
  syntax:
    content: public bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o token de segurança.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando o token de segurança pode ser lidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)
  id: CanReadTokenCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanReadTokenCore(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadTokenCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode ler o token de segurança indicada pelo leitor de XML especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método CanReadTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29>método chama o método de CanReadTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29>"
  syntax:
    content: protected abstract bool CanReadTokenCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o token de segurança.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando o token de segurança pode ser lidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanWriteKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode escrever o identificador de chave especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método CanWriteKeyIdentifier o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>"
  syntax:
    content: public bool CanWriteKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador da chave para escrita."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando este serializador pode escrever o identificador de chave especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode escrever a cláusula do identificador de chave especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método CanWriteKeyIdentifierClause o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>"
  syntax:
    content: public bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa a cláusula do identificador da chave para escrita."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando este serializador pode escrever a cláusula do identificador de chave especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode escrever a cláusula do identificador de chave especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método CanWriteKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>método chama o método de CanWriteKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>"
  syntax:
    content: protected abstract bool CanWriteKeyIdentifierClauseCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa a cláusula do identificador da chave para escrita."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando este serializador pode escrever a cláusula do identificador de chave especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode escrever o identificador de chave especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método CanWriteKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>método chama o método de CanWriteKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>"
  syntax:
    content: protected abstract bool CanWriteKeyIdentifierCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador da chave para escrita."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando este serializador pode escrever o identificador de chave especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  id: CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanWriteToken(SecurityToken)
  nameWithType: SecurityTokenSerializer.CanWriteToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode escrever o token de segurança especificados para XML."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método CanWriteToken o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29>"
  syntax:
    content: public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> converter XML."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando o token de segurança pode ser escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: CanWriteTokenCore(SecurityToken)
  nameWithType: SecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Determina se este serializador pode escrever o token de segurança especificados para XML. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método CanWriteTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29>método chama o método de CanWriteTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29>"
  syntax:
    content: protected abstract bool CanWriteTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> converter XML."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando o token de segurança pode ser escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)
  id: ReadKeyIdentifier(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: ReadKeyIdentifier(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifier(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lê o identificador de chave especificado leitor de XML a utilizar."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método ReadKeyIdentifier o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador da chave que é de leitura."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lê a cláusula do identificador da chave a utilizar o leitor de XML especificada."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método ReadKeyIdentifierClause o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa o identificador da chave que é de leitura."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  id: ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: ReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lê a cláusula do identificador da chave a utilizar o leitor de XML especificada. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método ReadKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29>método chama o método de ReadKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29>"
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa o identificador da chave que é de leitura."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)
  id: ReadKeyIdentifierCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: ReadKeyIdentifierCore(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lê a cláusula do identificador da chave a utilizar o leitor de XML especificada. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método ReadKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29>método chama o método de ReadKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29>"
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o identificador da chave.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador da chave que é de leitura."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: ReadToken(XmlReader,SecurityTokenResolver)
  nameWithType: SecurityTokenSerializer.ReadToken(XmlReader,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(XmlReader,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lê o token de segurança indicada pelo leitor de XML especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método ReadToken o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o token de segurança.</xref:System.Xml.XmlReader>"
    - id: tokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o tipo de token de segurança."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token de segurança de leitura."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: ReadTokenCore(XmlReader,SecurityTokenResolver)
  nameWithType: SecurityTokenSerializer.ReadTokenCore(XmlReader,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(XmlReader,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lê o token de segurança indicada pelo leitor de XML especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método ReadTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>método chama o método de ReadTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityToken ReadTokenCore (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>para ler o token de segurança.</xref:System.Xml.XmlReader>"
    - id: tokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o tipo de token de segurança."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token de segurança de leitura."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: WriteKeyIdentifier(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifier(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Escreve o identificador de chave especificado utilizando o escritor XML especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método WriteKeyIdentifier o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>"
  syntax:
    content: public void WriteKeyIdentifier (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>ao escrever o identificador da chave.</xref:System.Xml.XmlWriter>"
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador da chave para escrita."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Escreve a cláusula do identificador de chave especificado utilizando o escritor XML especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método WriteKeyIdentifierClause o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>"
  syntax:
    content: public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>ao escrever a cláusula do identificador da chave.</xref:System.Xml.XmlWriter>"
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa a cláusula do identificador da chave para escrita."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Escreve a cláusula do identificador de chave especificado utilizando o escritor XML especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método WriteKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>método chama o método de WriteKeyIdentifierClauseCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>"
  syntax:
    content: protected abstract void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>ao escrever a cláusula do identificador da chave.</xref:System.Xml.XmlWriter>"
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa a cláusula do identificador da chave para escrita."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Escreve o identificador de chave especificado utilizando o escritor XML especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método WriteKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>método chama o método de WriteKeyIdentifierCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>"
  syntax:
    content: protected abstract void WriteKeyIdentifierCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>ao escrever o identificador da chave.</xref:System.Xml.XmlWriter>"
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador da chave para escrita."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenSerializer.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Escreve o token de segurança especificado utilizando o escritor XML especificado."
  remarks: "Classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> </xref:System.IdentityModel.Selectors.SecurityTokenSerializer> As chamadas de método WriteToken o <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>método.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>"
  syntax:
    content: public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>ao escrever o token de segurança.</xref:System.Xml.XmlWriter>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token de segurança para escrita."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  langs:
  - csharp
  name: WriteTokenCore(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenSerializer.WriteTokenCore(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Escreve o token de segurança especificado utilizando o escritor XML especificado. Chamado pela classe base."
  remarks: "As classes que derivam de <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe tem de substituir o método WriteTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> O <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>método chama o método de WriteTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>"
  syntax:
    content: protected abstract void WriteTokenCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>ao escrever o token de segurança.</xref:System.Xml.XmlWriter>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token de segurança para escrita."
  overload: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: SecurityTokenSerializer()
  nameWithType: SecurityTokenSerializer.SecurityTokenSerializer()
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.SecurityTokenSerializer()
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifier(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifier(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifierCore(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadTokenCore(XmlReader)
  nameWithType: SecurityTokenSerializer.CanReadTokenCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteToken(SecurityToken)
  nameWithType: SecurityTokenSerializer.CanWriteToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteTokenCore(SecurityToken)
  nameWithType: SecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifier(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifier(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifierCore(XmlReader)
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadToken(XmlReader,SecurityTokenResolver)
  nameWithType: SecurityTokenSerializer.ReadToken(XmlReader,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(XmlReader,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadTokenCore(XmlReader,SecurityTokenResolver)
  nameWithType: SecurityTokenSerializer.ReadTokenCore(XmlReader,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(XmlReader,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifier(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifier(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(XmlWriter,SecurityKeyIdentifier)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenSerializer.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteTokenCore(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenSerializer.WriteTokenCore(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifier
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifierClauseCore
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierClauseCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadKeyIdentifierCore
  nameWithType: SecurityTokenSerializer.CanReadKeyIdentifierCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadToken
  nameWithType: SecurityTokenSerializer.CanReadToken
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanReadTokenCore
  nameWithType: SecurityTokenSerializer.CanReadTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifier
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifierClause
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifierClauseCore
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteKeyIdentifierCore
  nameWithType: SecurityTokenSerializer.CanWriteKeyIdentifierCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteToken
  nameWithType: SecurityTokenSerializer.CanWriteToken
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: CanWriteTokenCore
  nameWithType: SecurityTokenSerializer.CanWriteTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifier
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifierClauseCore
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierClauseCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadKeyIdentifierCore
  nameWithType: SecurityTokenSerializer.ReadKeyIdentifierCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadToken
  nameWithType: SecurityTokenSerializer.ReadToken
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: ReadTokenCore
  nameWithType: SecurityTokenSerializer.ReadTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifier
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifierClauseCore
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierClauseCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteKeyIdentifierCore
  nameWithType: SecurityTokenSerializer.WriteKeyIdentifierCore
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteToken
  nameWithType: SecurityTokenSerializer.WriteToken
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenSerializer
  isExternal: false
  name: WriteTokenCore
  nameWithType: SecurityTokenSerializer.WriteTokenCore
