### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  id: WorkflowTerminatedEventArgs
  children:
  - System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  langs:
  - csharp
  name: WorkflowTerminatedEventArgs
  nameWithType: WorkflowTerminatedEventArgs
  fullName: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&quot;> </xref> eventos."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Uma instância de fluxo de trabalho pode ser terminada em um de três formas diferentes: o anfitrião pode chamar <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName>, um <xref:System.Workflow.ComponentModel.TerminateActivity>atividade pode ser invocada a partir de dentro da instância de fluxo de trabalho, ou o motor de execução do fluxo de trabalho pode terminar a instância devido a uma exceção não processada.</xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName> Quando a instância de fluxo de trabalho foi terminada, o motor de execução do fluxo de trabalho gera o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>eventos.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName> O anfitrião poderá subscrever este evento adicionando um processador de eventos para <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>"
  example:
  - "The following code example demonstrates an event handler method that takes WorkflowTerminatedEventArgs as a parameter. The `OnWorkflowTerminated` method is called when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event is raised. The code uses the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A> property get the message associated with the exception that caused the workflow to terminate.  \n  \n This code example is part of the Sequential Workflow with Parameters SDK Sample from the Program.cs file. For more information, see [Sequential Workflow with Parameters](http://msdn.microsoft.com/en-us/17157f2d-8fed-4848-a386-e4efa381b66b).  \n  \n [!code-cs[WF_Samples#193](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#193)]\n [!code-vb[WF_Samples#193](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#193)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowTerminatedEventArgs : System.Workflow.Runtime.WorkflowEventArgs
  inheritance:
  - System.EventArgs
  - System.Workflow.Runtime.WorkflowEventArgs
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  id: Exception
  parent: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: WorkflowTerminatedEventArgs.Exception
  fullName: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Obtém a exceção que causou a instância de fluxo de trabalho a ser terminada."
  remarks: "Quando a instância de fluxo de trabalho foi terminada devido a uma exceção não processada, exceção contém a exceção não processada.       Quando a instância de fluxo de trabalho é terminada por uma chamada de anfitrião para <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName>ou por um <xref:System.Workflow.ComponentModel.TerminateActivity>atividade, exceção contém um <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>que tenha o <xref:System.Exception.Message%2A>propriedade definida como uma descrição do motivo para a terminação.</xref:System.Exception.Message%2A> </xref:System.Workflow.ComponentModel.WorkflowTerminatedException> </xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName> Se o anfitrião termina a instância de fluxo de trabalho, fornece esta descrição no `string` parâmetro <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName> Se a instância de fluxo de trabalho foi terminada por um <xref:System.Workflow.ComponentModel.TerminateActivity>a descrição é fornecida pelo <xref:System.Workflow.ComponentModel.TerminateActivity.Error%2A?displayProperty=fullName>.</xref:System.Workflow.ComponentModel.TerminateActivity.Error%2A?displayProperty=fullName> </xref:System.Workflow.ComponentModel.TerminateActivity>      > [!NOTE] > Embora, no caso de um <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>evento que não é devido a uma exceção não processada, o motor de execução do fluxo de trabalho encapsula uma descrição do motivo para a terminação no <xref:System.Exception.Message%2A>propriedade de um <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>,-não necessariamente acionar esta excepção.</xref:System.Workflow.ComponentModel.WorkflowTerminatedException> </xref:System.Exception.Message%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how you can use the Exception property to obtain information about an exception that caused a workflow to terminate. The `OnWorkflowTerminated` method takes a <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> as a parameter. This method is called when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event is raised. The code uses the Exception property get the message associated with the exception that caused the workflow to terminate.  \n  \n This code example is part of the Sequential Workflow with Parameters SDK Sample from the Program.cs file. For more information, see [Sequential Workflow with Parameters](http://msdn.microsoft.com/en-us/17157f2d-8fed-4848-a386-e4efa381b66b).  \n  \n [!code-cs[WF_Samples#193](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#193)]\n [!code-vb[WF_Samples#193](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#193)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "O <xref:System.Exception>que causou a instância de fluxo de trabalho a ser terminada.</xref:System.Exception>"
  overload: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.WorkflowEventArgs
  isExternal: false
  name: System.Workflow.Runtime.WorkflowEventArgs
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  parent: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: WorkflowTerminatedEventArgs.Exception
  fullName: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception*
  parent: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: WorkflowTerminatedEventArgs.Exception
