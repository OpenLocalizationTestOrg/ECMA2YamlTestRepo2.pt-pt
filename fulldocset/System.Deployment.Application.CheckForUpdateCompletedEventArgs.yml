### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  id: CheckForUpdateCompletedEventArgs
  children:
  - System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion
  - System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired
  - System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
  - System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable
  - System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes
  langs:
  - csharp
  name: CheckForUpdateCompletedEventArgs
  nameWithType: CheckForUpdateCompletedEventArgs
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  type: Class
  summary: "Represents detailed update information obtained through a call to <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>."
  remarks: "With CheckForUpdateCompletedEventArgs, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all. The <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed on the computer. <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired%2A> expresses whether the latest available update is required of the user. Finally, <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes%2A> expresses the total size of the update."
  example:
  - "The following code example uses <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable%2A> to determine if there is a new application update, and <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired%2A> to determine whether to ask the user to install the update.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/t-system.deployment.appl_1_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: 'public class CheckForUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'
  inheritance:
  - System.ComponentModel.AsyncCompletedEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion
  id: AvailableVersion
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  langs:
  - csharp
  name: AvailableVersion
  nameWithType: CheckForUpdateCompletedEventArgs.AvailableVersion
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the version number of the latest uninstalled version."
  remarks: "You can use AvailableVersion to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change."
  syntax:
    content: public Version AvailableVersion { get; }
    return:
      type: System.Version
      description: "The <xref:System.Version> expressing the major, minor, build and revision numbers of the latest version."
  overload: System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired
  id: IsUpdateRequired
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  langs:
  - csharp
  name: IsUpdateRequired
  nameWithType: CheckForUpdateCompletedEventArgs.IsUpdateRequired
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets a value indicating whether the update must be installed."
  remarks: "When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want mark the update if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version."
  example:
  - "The following code example uses IsUpdateRequired to determine whether to ask the user to install the update, or to install it without prompting.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/2aa4f4df-e487-4c83-87b0-_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public bool IsUpdateRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the update is required; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
  id: MinimumRequiredVersion
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  langs:
  - csharp
  name: MinimumRequiredVersion
  nameWithType: CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the minimum version that the user must have installed on the computer."
  remarks: "Applications can miss required updates when a user takes on a special assignment or is away from the computer for weeks or months. Use       MinimumRequiredVersion to determine if the user has not upgraded the application in a while, and has missed one or more required updates."
  example:
  - "The following code example calls <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, and forces an application update if MinimumRequiredVersion is greater than <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.  \n  \n [!code-cs[ClickOnceAPI#10](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#10)]\n [!code-vb[ClickOnceAPI#10](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#10)]"
  syntax:
    content: public Version MinimumRequiredVersion { get; }
    return:
      type: System.Version
      description: "A <xref:System.Version> object expressing the earliest version that all users must install."
  overload: System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable
  id: UpdateAvailable
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  langs:
  - csharp
  name: UpdateAvailable
  nameWithType: CheckForUpdateCompletedEventArgs.UpdateAvailable
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets whether an uninstalled update is available."
  remarks: ''
  example:
  - "The following code example inspects UpdateAvailable to determine whether or not there is an update to install.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/847038a4-fd95-4e16-a133-_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public bool UpdateAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if new version of the application is available; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes
  id: UpdateSizeBytes
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  langs:
  - csharp
  name: UpdateSizeBytes
  nameWithType: CheckForUpdateCompletedEventArgs.UpdateSizeBytes
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Gets the size of the available update."
  syntax:
    content: public long UpdateSizeBytes { get; }
    return:
      type: System.Int64
      description: "An <xref:System.Int64> describing the size, in bytes, of the available update. If no update is available, returns 0."
  overload: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: AvailableVersion
  nameWithType: CheckForUpdateCompletedEventArgs.AvailableVersion
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: IsUpdateRequired
  nameWithType: CheckForUpdateCompletedEventArgs.IsUpdateRequired
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: MinimumRequiredVersion
  nameWithType: CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: UpdateAvailable
  nameWithType: CheckForUpdateCompletedEventArgs.UpdateAvailable
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: UpdateSizeBytes
  nameWithType: CheckForUpdateCompletedEventArgs.UpdateSizeBytes
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion*
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: AvailableVersion
  nameWithType: CheckForUpdateCompletedEventArgs.AvailableVersion
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired*
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: IsUpdateRequired
  nameWithType: CheckForUpdateCompletedEventArgs.IsUpdateRequired
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion*
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: MinimumRequiredVersion
  nameWithType: CheckForUpdateCompletedEventArgs.MinimumRequiredVersion
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable*
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: UpdateAvailable
  nameWithType: CheckForUpdateCompletedEventArgs.UpdateAvailable
- uid: System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes*
  parent: System.Deployment.Application.CheckForUpdateCompletedEventArgs
  isExternal: false
  name: UpdateSizeBytes
  nameWithType: CheckForUpdateCompletedEventArgs.UpdateSizeBytes
