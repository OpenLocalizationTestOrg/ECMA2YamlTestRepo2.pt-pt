### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeMethodReferenceExpression
  id: CodeMethodReferenceExpression
  children:
  - System.CodeDom.CodeMethodReferenceExpression.#ctor
  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  - System.CodeDom.CodeMethodReferenceExpression.MethodName
  - System.CodeDom.CodeMethodReferenceExpression.TargetObject
  - System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  langs:
  - csharp
  name: CodeMethodReferenceExpression
  nameWithType: CodeMethodReferenceExpression
  fullName: System.CodeDom.CodeMethodReferenceExpression
  type: Class
  summary: "Represents a reference to a method."
  remarks: "A CodeMethodReferenceExpression can be used to represent an expression of the form Object.Method.       The <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> property indicates the object that contains the method. The <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A> property indicates the name of the method.       A CodeMethodReferenceExpression is used with a <xref:System.CodeDom.CodeMethodInvokeExpression> to indicate the method to invoke, and with a <xref:System.CodeDom.CodeDelegateCreateExpression> to indicate the method to handle the event."
  example:
  - "The following code example uses a CodeMethodReferenceExpression to refer to a method:  \n  \n [!code-cs[CodeMethodReferenceExample#3](~/add/codesnippet/csharp/t-system.codedom.codemet_1_1.cs)]\n [!code-vb[CodeMethodReferenceExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codemet_1_1.vb)]\n [!code-cpp[CodeMethodReferenceExample#3](~/add/codesnippet/cpp/t-system.codedom.codemet_1_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeMethodReferenceExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression()
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;></xref> class."
  syntax:
    content: public CodeMethodReferenceExpression ();
    parameters: []
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  id: '#ctor(System.CodeDom.CodeExpression,System.String)'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression(CodeExpression,String)
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;></xref> class using the specified target object and method name."
  syntax:
    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName);
    parameters:
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref> that indicates the object to target."
    - id: methodName
      type: System.String
      description: "The name of the method to call."
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  id: '#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;></xref> class using the specified target object, method name, and generic type arguments."
  remarks: "The `typeParameters` parameter represents a collection of type references to be substituted for the type parameter references of the current generic method."
  example:
  - "The following code example shows the use of this constructor.  \n  \n [!code-cs[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/csharp/c13bd512-df02-4e88-9c27-_1.cs)]\n [!code-vb[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/visualbasic/c13bd512-df02-4e88-9c27-_1.vb)]\n [!code-cpp[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/cpp/c13bd512-df02-4e88-9c27-_1.cpp)]"
  syntax:
    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName, System.CodeDom.CodeTypeReference[] typeParameters);
    parameters:
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref> that indicates the object to target."
    - id: methodName
      type: System.String
      description: "The name of the method to call."
    - id: typeParameters
      type: System.CodeDom.CodeTypeReference[]
      description: "An array of <xref href=&quot;System.CodeDom.CodeTypeReference&quot;></xref> values that specify the <xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*> for this <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;></xref>."
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName
  id: MethodName
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets the name of the method to reference."
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "The name of the method to reference."
  overload: System.CodeDom.CodeMethodReferenceExpression.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  id: TargetObject
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets the expression that indicates the method to reference."
  syntax:
    content: public System.CodeDom.CodeExpression TargetObject { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref> that represents the method to reference."
  overload: System.CodeDom.CodeMethodReferenceExpression.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  id: TypeArguments
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets the type arguments for the current generic method reference expression."
  remarks: "The TypeArguments property represents a collection of type references to be substituted for the type parameter references of the current generic method."
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;></xref> containing the type arguments for the current code <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;></xref>."
  overload: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression()
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression(CodeExpression,String)
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
- uid: System.CodeDom.CodeTypeReference[]
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference[]
  spec.csharp:
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
