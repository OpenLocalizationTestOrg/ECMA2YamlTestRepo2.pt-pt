### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog
  id: AggregateCatalog
  children:
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  langs:
  - csharp
  name: AggregateCatalog
  nameWithType: AggregateCatalog
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog
  type: Class
  summary: "Um catálogo que combina os elementos de <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> objetos."
  remarks: >-
    > [!IMPORTANT]

    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.
  syntax:
    content: 'public class AggregateCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  implements:
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: AggregateCatalog()
  nameWithType: AggregateCatalog.AggregateCatalog()
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.AggregateCatalog()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> classe."
  syntax:
    content: public AggregateCatalog ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})'
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: AggregateCatalog(IEnumerable<ComposablePartCatalog>)
  nameWithType: AggregateCatalog.AggregateCatalog(IEnumerable<ComposablePartCatalog>)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.AggregateCatalog(IEnumerable<ComposablePartCatalog>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> classe com os catálogos especificados."
  syntax:
    content: public AggregateCatalog (System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ComposablePartCatalog> catalogs);
    parameters:
    - id: catalogs
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog}
      description: "Uma coleção de <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> objetos a adicionar ao <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> criar vazio <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref>."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>catalogs</code>contém um elemento que é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])'
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: AggregateCatalog(ComposablePartCatalog[])
  nameWithType: AggregateCatalog.AggregateCatalog(ComposablePartCatalog[])
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.AggregateCatalog(ComposablePartCatalog[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> classe com os catálogos especificados."
  syntax:
    content: public AggregateCatalog (System.ComponentModel.Composition.Primitives.ComposablePartCatalog[] catalogs);
    parameters:
    - id: catalogs
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog[]
      description: "Uma matriz de <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> objetos a adicionar ao <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref>."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>catalogs</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>catalogs</code>contém um elemento que é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs
  id: Catalogs
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: Catalogs
  nameWithType: AggregateCatalog.Catalogs
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém os catálogos subjacentes do <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> objeto."
  syntax:
    content: public System.Collections.Generic.ICollection<System.ComponentModel.Composition.Primitives.ComposablePartCatalog> Catalogs { get; }
    return:
      type: System.Collections.Generic.ICollection{System.ComponentModel.Composition.Primitives.ComposablePartCatalog}
      description: "Uma coleção de <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> objetos underlie o <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> objeto."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> objeto foi eliminado do."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed
  id: Changed
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: Changed
  nameWithType: AggregateCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ocorre quando o conteúdo a <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> objeto foram alterados."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changed;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing
  id: Changing
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: Changing
  nameWithType: AggregateCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ocorre quando o conteúdo a <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> objeto está a alterar."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changing;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AggregateCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> e opcionalmente liberta os recursos geridos."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: AggregateCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Devolve um enumerador que itera através do catálogo."
  syntax:
    content: public override System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
      description: "Um enumerador que pode ser utilizado para iterar através do catálogo."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: GetExports(ImportDefinition)
  nameWithType: AggregateCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(ImportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém as definições de exportação que correspondam à restrição expressa pela definição do especificado."
  syntax:
    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "As condições do <xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;> </xref> objetos a ser devolvido."
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
      description: "Uma coleção de &lt;xref:System.Tuple%602&gt; que contém o <xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;> </xref> objetos e respetivos associado <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos para objetos que correspondam à restrição especificada pelo <code> definition </code>."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog&quot;> </xref> objeto foi eliminado do."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>definition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: AggregateCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Gera o <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed&quot;> </xref> eventos."
  syntax:
    content: protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&quot;> </xref> objeto que contém os dados do evento."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  langs:
  - csharp
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: AggregateCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Gera o <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing&quot;> </xref> eventos."
  syntax:
    content: protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&quot;> </xref> objeto que contém os dados do evento."
  overload: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: AggregateCatalog()
  nameWithType: AggregateCatalog.AggregateCatalog()
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.AggregateCatalog()
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: AggregateCatalog(IEnumerable<ComposablePartCatalog>)
  nameWithType: AggregateCatalog.AggregateCatalog(IEnumerable<ComposablePartCatalog>)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.AggregateCatalog(IEnumerable<ComposablePartCatalog>)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ComposablePartCatalog>
  nameWithType: IEnumerable<ComposablePartCatalog>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ComposablePartCatalog>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.ComposablePartCatalog>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
    name: ComposablePartCatalog
    nameWithType: ComposablePartCatalog
    fullName: ComposablePartCatalog
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: AggregateCatalog(ComposablePartCatalog[])
  nameWithType: AggregateCatalog.AggregateCatalog(ComposablePartCatalog[])
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.AggregateCatalog(ComposablePartCatalog[])
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog[]
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog[]
  spec.csharp:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
    name: ComposablePartCatalog
    nameWithType: ComposablePartCatalog
    fullName: ComposablePartCatalog[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: Catalogs
  nameWithType: AggregateCatalog.Catalogs
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs
- uid: System.Collections.Generic.ICollection{System.ComponentModel.Composition.Primitives.ComposablePartCatalog}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ComposablePartCatalog>
  nameWithType: ICollection<ComposablePartCatalog>
  fullName: System.Collections.Generic.ICollection<System.ComponentModel.Composition.Primitives.ComposablePartCatalog>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.ComponentModel.Composition.Primitives.ComposablePartCatalog>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
    name: ComposablePartCatalog
    nameWithType: ComposablePartCatalog
    fullName: ComposablePartCatalog
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: Changed
  nameWithType: AggregateCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed
- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ComposablePartCatalogChangeEventArgs>
  nameWithType: EventHandler<ComposablePartCatalogChangeEventArgs>
  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    name: ComposablePartCatalogChangeEventArgs
    nameWithType: ComposablePartCatalogChangeEventArgs
    fullName: ComposablePartCatalogChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: Changing
  nameWithType: AggregateCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AggregateCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: GetEnumerator()
  nameWithType: AggregateCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ComposablePartDefinition>
  nameWithType: IEnumerator<ComposablePartDefinition>
  fullName: System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: GetExports(ImportDefinition)
  nameWithType: AggregateCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(ImportDefinition)
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: AggregateCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ComposablePartCatalogChangeEventArgs
  nameWithType: ComposablePartCatalogChangeEventArgs
  fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: AggregateCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor*
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: AggregateCatalog
  nameWithType: AggregateCatalog.AggregateCatalog
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs*
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: Catalogs
  nameWithType: AggregateCatalog.Catalogs
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose*
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: Dispose
  nameWithType: AggregateCatalog.Dispose
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator*
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: GetEnumerator
  nameWithType: AggregateCatalog.GetEnumerator
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports*
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: GetExports
  nameWithType: AggregateCatalog.GetExports
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged*
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: OnChanged
  nameWithType: AggregateCatalog.OnChanged
- uid: System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging*
  parent: System.ComponentModel.Composition.Hosting.AggregateCatalog
  isExternal: false
  name: OnChanging
  nameWithType: AggregateCatalog.OnChanging
