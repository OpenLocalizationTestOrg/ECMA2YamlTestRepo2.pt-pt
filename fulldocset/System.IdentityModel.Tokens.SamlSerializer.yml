### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlSerializer
  id: SamlSerializer
  children:
  - System.IdentityModel.Tokens.SamlSerializer.#ctor
  - System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)
  - System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
  type: Class
  summary: "Serializa e deserializes <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> objetos em e documentos XML."
  remarks: "Serialização de XML é o processo de conversão de um objeto propriedades e campos públicos para um série formato (neste caso, XML) de armazenamento ou de transporte. A anulação da serialização recria o objeto no seu estado original do XML.       A classe de SamlSerializer serializa e deserializes tokens de segurança SAML, que tem um formato extensível. Ao contrário de muitos outros tokens de segurança, <xref:System.IdentityModel.Tokens.SamlSecurityToken>tokens de segurança incluem elementos XML e atributos que podem ser personalizados para as necessidades de uma aplicação.</xref:System.IdentityModel.Tokens.SamlSecurityToken> Alguns dos pontos de extensibilidade para uma asserção SAML incluem o `<saml:Advice>`, `<saml:Condition>`, e `<saml:Statement>` elementos. Para obter mais detalhes sobre como substituir a forma como cada um destes elementos são lidos, consulte o <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, e <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>métodos.</xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public class SamlSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: SamlSerializer()
  nameWithType: SamlSerializer.SamlSerializer()
  fullName: System.IdentityModel.Tokens.SamlSerializer.SamlSerializer()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> classe."
  syntax:
    content: public SamlSerializer ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê as informações adicionais fornecidas pela autoridade de SAML dentro de um<xref uid=&quot;langword_csharp_ &lt;saml:Advice&gt;&quot; name=&quot; &lt;saml:Advice&gt;&quot; href=&quot;&quot;> </xref> elemento de uma asserção SAML utilizando o leitor de XML especificado."
  remarks: "O `<saml:Advice>` elemento dentro de uma asserção SAML é um ponto de extensão para SAML tokens. Para criar um serializador que pode ler os atributos personalizados, uma classe a partir de derivar <xref:System.IdentityModel.Tokens.SamlSerializer>e substitua o método LoadAdvice.</xref:System.IdentityModel.Tokens.SamlSerializer>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlAdvice LoadAdvice (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>para ler as informações adicionais fornecidas pela autoridade de SAML.</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;> </xref> que contém informações adicionais fornecidas pela autoridade de SAML dentro de um<xref uid=&quot;langword_csharp_ &lt;saml:Advice&gt;&quot; name=&quot; &lt;saml:Advice&gt;&quot; href=&quot;&quot;> </xref> elemento de uma asserção SAML."
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>é<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê uma asserção SAML do leitor XML especificado."
  remarks: "Uma asserção SAML está contida dentro de um `<saml:Assertion>` elemento.       O <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>método chama o método de LoadAssertion ler a asserção SAML.</xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlAssertion LoadAssertion (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>ler a asserção SAML.</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> que representa a asserção SAML."
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>é<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê um atributo do requerente de um token de segurança SAML utilizando o leitor de XML especificado."
  remarks: "Quando uma aplicação define seu próprio conjunto de atributos, que é possível porque os atributos SAML é um ponto de extensibilidade, um serializador que compreende como ler esses atributos é necessária. Um atributo SAML é diferente de um atributo XML. Um atributo SAML está contido dentro de um `<saml:Attribute>` elemento e pode conter qualquer um XML corretamente formado, não apenas um atributo. Para criar um serializador que pode ler os atributos personalizados, uma classe a partir de derivar <xref:System.IdentityModel.Tokens.SamlSerializer>e substitua o método LoadAttribute.</xref:System.IdentityModel.Tokens.SamlSerializer>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlAttribute LoadAttribute (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>ler os atributos.</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> que representa uma afirmação que é um atributo do requerente de um token de segurança SAML."
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê uma condição que deve ser levada em consideração ao avaliar a validade de uma asserção SAML utilizando o leitor de XML especificado."
  remarks: "Quando uma aplicação define o seu próprio conjunto de condições, o que é possível porque o `<saml:Condition>` elemento é um ponto de extensibilidade, é necessário um serializador que compreende como as condições de leitura. Para criar um serializador que pode ler os atributos personalizados, uma classe a partir de derivar <xref:System.IdentityModel.Tokens.SamlSerializer>e substitua o método LoadCondition.</xref:System.IdentityModel.Tokens.SamlSerializer>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlCondition LoadCondition (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>ler a condição SAML.</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
    return:
      type: System.IdentityModel.Tokens.SamlCondition
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;> </xref> que especifica uma condição que deve ser levada em consideração ao avaliar a validade de uma asserção SAML."
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê um conjunto de condições que devem ser levados em consideração ao avaliar a validade de uma asserção SAML utilizando o leitor de XML especificado."
  remarks: "O método LoadConditions lê os conteúdos de um `<saml:Conditions>` elemento."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlConditions LoadConditions (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>para ler as condições SAML.</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref> que especifica um conjunto de condições que devem ser levados em consideração ao avaliar a validade de uma asserção SAML."
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê uma instrução de SAML utilizando o leitor de XML especificado."
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>tokens de segurança especificar as afirmações utilizando asserções de SAML onde os detalhes das afirmações são especificados em declarações de SAML.</xref:System.IdentityModel.Tokens.SamlSecurityToken> A especificação de SAML define os seguintes tipos de instrução:- <xref:System.IdentityModel.Tokens.SamlAttributeStatement>- <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>- <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>- <xref:System.IdentityModel.Tokens.SamlSubjectStatement>LoadStatement o método lê as declarações de SAML listadas anteriormente.</xref:System.IdentityModel.Tokens.SamlSubjectStatement> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement> </xref:System.IdentityModel.Tokens.SamlAuthenticationStatement> </xref:System.IdentityModel.Tokens.SamlAttributeStatement> Quando instruções personalizadas são definidas e utilizadas por uma aplicação, crie um serializador para ler o conteúdo dos mesmos. Para criar o serializador personalizado, uma classe a partir de derivar <xref:System.IdentityModel.Tokens.SamlSerializer>e substitua o método LoadStatement.</xref:System.IdentityModel.Tokens.SamlSerializer> Instruções de SAML personalizadas estão contidas dentro de um `<saml:Statement>` elemento."
  example:
  - "<xref:System.IdentityModel.Tokens.SamlAttributeStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlSubjectStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlStatement>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlStatement LoadStatement (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>para ler a declaração de SAML.</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
    return:
      type: System.IdentityModel.Tokens.SamlStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;> </xref> que representa a instrução de SAML."
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)
  id: PopulateDictionary(System.Xml.IXmlDictionary)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: PopulateDictionary(IXmlDictionary)
  nameWithType: SamlSerializer.PopulateDictionary(IXmlDictionary)
  fullName: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(IXmlDictionary)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Substitui o conjunto de elementos XML e atributos que são reconhecidos por este serializador com o dicionário especificado de elementos e atributos predefinidos."
  remarks: "Utilize o método de PopulateDictionary quando personalizadas conjunto de elementos XML está definido para um dos pontos de extensibilidade de uma asserção SAML. Pontos de extensibilidade para uma asserção SAML incluem o `<saml:Advice>`, `<saml:Condition>`, e `<saml:Statement>` elementos. Para obter mais detalhes sobre como substituir a forma como cada um destes elementos são lidos, consulte o <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, e <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>métodos.</xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public void PopulateDictionary (System.Xml.IXmlDictionary dictionary);
    parameters:
    - id: dictionary
      type: System.Xml.IXmlDictionary
      description: "Um <xref:System.Xml.IXmlDictionary>que contém o conjunto de atributos e elementos XML.</xref:System.Xml.IXmlDictionary>"
  overload: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê um token de segurança SAML do leitor XML especificado."
  remarks: "As chamadas de método ReadToken o <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>método ler a asserção SAML.</xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlSecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>para ler o <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> token de segurança.</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
    return:
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> token de segurança."
  overload: System.IdentityModel.Tokens.SamlSerializer.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>é<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>reader</code>refere-se a um elemento XML que não contém uma assinatura digital."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  nameWithType: SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Escreve o token de segurança SAML especificado para o serializador XML especificado."
  remarks: "Utilizar o método de WriteToken para serializar um <xref:System.IdentityModel.Tokens.SamlSecurityToken>token de segurança.</xref:System.IdentityModel.Tokens.SamlSecurityToken> Para anular a serialização de um <xref:System.IdentityModel.Tokens.SamlSecurityToken>utilizar o <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>método.</xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public virtual void WriteToken (System.IdentityModel.Tokens.SamlSecurityToken token, System.Xml.XmlWriter writer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> escrever."
    - id: writer
      type: System.Xml.XmlWriter
      description: "Um <xref:System.Xml.XmlDictionaryWriter>ao escrever a instrução de autorização de SAML.</xref:System.Xml.XmlDictionaryWriter>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que seja capaz de escrita <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusulas."
  overload: System.IdentityModel.Tokens.SamlSerializer.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>token</code> is<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: SamlSerializer()
  nameWithType: SamlSerializer.SamlSerializer()
  fullName: System.IdentityModel.Tokens.SamlSerializer.SamlSerializer()
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlAdvice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAdvice
  nameWithType: SamlAdvice
  fullName: System.IdentityModel.Tokens.SamlAdvice
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlAssertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAssertion
  nameWithType: SamlAssertion
  fullName: System.IdentityModel.Tokens.SamlAssertion
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlAttribute
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttribute
  nameWithType: SamlAttribute
  fullName: System.IdentityModel.Tokens.SamlAttribute
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlCondition
  nameWithType: SamlCondition
  fullName: System.IdentityModel.Tokens.SamlCondition
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlConditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlConditions
  nameWithType: SamlConditions
  fullName: System.IdentityModel.Tokens.SamlConditions
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlStatement
  nameWithType: SamlStatement
  fullName: System.IdentityModel.Tokens.SamlStatement
- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: PopulateDictionary(IXmlDictionary)
  nameWithType: SamlSerializer.PopulateDictionary(IXmlDictionary)
  fullName: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(IXmlDictionary)
- uid: System.Xml.IXmlDictionary
  parent: System.Xml
  isExternal: true
  name: IXmlDictionary
  nameWithType: IXmlDictionary
  fullName: System.Xml.IXmlDictionary
- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityToken
  nameWithType: SamlSecurityToken
  fullName: System.IdentityModel.Tokens.SamlSecurityToken
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  nameWithType: SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer.SamlSerializer
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAdvice
  nameWithType: SamlSerializer.LoadAdvice
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAssertion
  nameWithType: SamlSerializer.LoadAssertion
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAttribute
  nameWithType: SamlSerializer.LoadAttribute
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadCondition
  nameWithType: SamlSerializer.LoadCondition
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadConditions
  nameWithType: SamlSerializer.LoadConditions
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadStatement
  nameWithType: SamlSerializer.LoadStatement
- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: PopulateDictionary
  nameWithType: SamlSerializer.PopulateDictionary
- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: ReadToken
  nameWithType: SamlSerializer.ReadToken
- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: WriteToken
  nameWithType: SamlSerializer.WriteToken
