### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcConnection
  id: OdbcConnection
  children:
  - System.Data.Odbc.OdbcConnection.#ctor
  - System.Data.Odbc.OdbcConnection.#ctor(System.String)
  - System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.BeginTransaction
  - System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  - System.Data.Odbc.OdbcConnection.Close
  - System.Data.Odbc.OdbcConnection.ConnectionString
  - System.Data.Odbc.OdbcConnection.ConnectionTimeout
  - System.Data.Odbc.OdbcConnection.CreateCommand
  - System.Data.Odbc.OdbcConnection.CreateDbCommand
  - System.Data.Odbc.OdbcConnection.Database
  - System.Data.Odbc.OdbcConnection.DataSource
  - System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcConnection.Driver
  - System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.Odbc.OdbcConnection.GetSchema
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  - System.Data.Odbc.OdbcConnection.InfoMessage
  - System.Data.Odbc.OdbcConnection.Open
  - System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  - System.Data.Odbc.OdbcConnection.ServerVersion
  - System.Data.Odbc.OdbcConnection.State
  - System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
  type: Class
  summary: "Representa uma ligação aberta para uma origem de dados."
  remarks: "Um objeto de OdbcConnection representa uma ligação exclusiva para uma origem de dados criada com uma cadeia de ligação ou o nome de origem de dados (DSN) de ODBC. Com um sistema de base de dados de cliente/servidor, é equivalente a uma ligação de rede para o servidor. Consoante as funcionalidades suportadas pelo controlador ODBC nativo, alguns métodos ou propriedades de um objecto OdbcConnection podem não estar disponíveis.       O objeto de OdbcConnection utiliza recursos nativos como identificadores de ambiente e a ligação de ODBC. Deve fechar sempre explicitamente quaisquer objetos OdbcConnection abra chamando <xref:System.Data.Odbc.OdbcConnection.Close%2A>ou **eliminar** antes do OdbcConnection objeto fica fora do âmbito, ou colocando a ligação dentro de um `Using` instrução.</xref:System.Data.Odbc.OdbcConnection.Close%2A> Não efetuar este procedimento mantém a libertar destes recursos nativo para recolha de lixo. -Pode libertá-los imediatamente. Isto, por sua vez, pode eventualmente fazer com que o controlador subjacente a ficar sem recursos ou a chegar um limite máximo. Isto resultou em falhas intermitentes. Por exemplo, podem ocorrer `Maximum Connections` -erros relacionados enquanto muitas ligações estão a aguardar a eliminar pelo garbage collector. Explicitamente fechar as ligações permite uma utilização mais eficiente dos recursos nativos, melhorando a escalabilidade e melhorar o desempenho global da aplicação.      > [!NOTE] > Para implementar aplicações de elevado desempenho, frequentemente tem de utilizar o agrupamento de ligação. No entanto, quando utiliza o .NET Framework Data Provider para ODBC, não é necessário ativar o agrupamento de ligações, porque o fornecedor gere isto automaticamente.       Se um do `Execute` métodos do <xref:System.Data.Odbc.OdbcCommand>classe faz com que um fatal <xref:System.Data.Odbc.OdbcException>(por exemplo, uma gravidade de SQL Server ao nível de 20 ou superior), pode fechar o OdbcConnection.</xref:System.Data.Odbc.OdbcException> </xref:System.Data.Odbc.OdbcCommand> No entanto, o utilizador pode reabrir a ligação e continuar.       Uma aplicação que cria uma instância do objeto OdbcConnection pode exigir todos os diretos e indiretos chamadores para tem permissão suficiente para o código por exigências de segurança declarativos ou imperativo de definição. OdbcConnection cria exigências de segurança utilizando o <xref:System.Data.Odbc.OdbcPermission>objeto.</xref:System.Data.Odbc.OdbcPermission> Os utilizadores podem Certifique-se de que o respetivo código tem permissões suficientes, utilizando o <xref:System.Data.Odbc.OdbcPermissionAttribute>objeto.</xref:System.Data.Odbc.OdbcPermissionAttribute> Os administradores e utilizadores também podem utilizar a ferramenta de política de segurança de acesso de código (Caspol.exe) para modificar a política de segurança no computador, utilizador e níveis de empresa. Para obter mais informações, consulte [segurança de acesso de código e ADO.NET](~/add/includes/ajax-current-ext-md.md).       Para obter mais informações sobre como lidar com mensagens de aviso e informativas da origem de dados, consulte [ligação eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcCommand> and an OdbcConnection. The OdbcConnection is opened and set as the <xref:System.Data.Odbc.OdbcCommand.Connection%2A> property. The example then calls <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OdbcConnection#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> classe."
  remarks: "Quando uma nova instância do <xref:System.Data.Odbc.OdbcConnection>é criada, o modo só de escrita e só de leitura propriedades forem definidas para os seguintes valores iniciais, exceto se especificamente definidos utilizando as respetivas palavras-chave associadas no <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>propriedade.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| uma cadeia vazia (&quot;&quot;) |   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| uma cadeia vazia (&quot;&quot;) |       Pode alterar o valor para estas propriedades utilizando apenas a <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>propriedade.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_9_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_9_1.vb)]"
  syntax:
    content: public OdbcConnection ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> classe com a cadeia de ligação especificada."
  remarks: "Quando uma nova instância do <xref:System.Data.Odbc.OdbcConnection>é criada, o modo só de escrita e só de leitura propriedades forem definidas para os seguintes valores iniciais, exceto se especificamente definidos utilizando as respetivas palavras-chave associadas no <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>propriedade.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| uma cadeia vazia (&quot;&quot;) |       Pode alterar o valor para estas propriedades utilizando apenas a <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>propriedade.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-vb[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public OdbcConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "A ligação utilizada para abrir a origem de dados."
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "A adicionar."
    return:
      type: System.Data.Common.DbTransaction
      description: "A adicionar."
  overload: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicia uma transação na origem de dados."
  remarks: "Para confirmar ou reverter a transação, tem de utilizar explicitamente o <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>ou <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>métodos.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Para se certificar de que o .NET Framework Data Provider para o modelo de gestão de transação de ODBC efetua corretamente, evite utilizar outros modelos de gestão de transação, tais como as fornecidas pela origem de dados.      > [!NOTE] > Se não especificar um nível de isolamento, o nível de isolamento será determinado pelo controlador a ser utilizado. Para especificar um nível de isolamento com o método BeginTransaction, utilize a sobrecarga que recebe o `isolevel` parâmetro."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_6_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_6_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Um objeto que representa a nova transação."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma transação está atualmente ativa. Transações paralelas não são suportadas."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicia uma transação na origem de dados com especificado <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> valor."
  remarks: "Para confirmar ou reverter a transação, tem de utilizar explicitamente o <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>ou <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>métodos.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Para se certificar de que o .NET Framework Data Provider para o modelo de gestão de transação de ODBC efetua corretamente, evite utilizar outros modelos de gestão de transação, tais como as fornecidas pela origem de dados."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_4_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_4_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);
    parameters:
    - id: isolevel
      type: System.Data.IsolationLevel
      description: "O nível de isolamento de transação para esta ligação. Se não especificar um nível de isolamento, é utilizado o nível de isolamento predefinido para o controlador."
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Um objeto que representa a nova transação."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma transação está atualmente ativa. Transações paralelas não são suportadas."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Altera a base de dados atual associado um open <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  remarks: "O `value` parâmetro tem de conter um nome de base de dados válido e não pode conter um valor nulo, uma cadeia vazia (&quot;&quot;), ou uma cadeia com apenas carateres em branco."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "O nome da base de dados."
  overload: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome de base de dados não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação não está aberta."
  - type: System.Data.Odbc.OdbcException
    commentId: T:System.Data.Odbc.OdbcException
    description: "Não é possível alterar a base de dados."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Close
  id: Close
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Fecha a ligação à origem de dados."
  remarks: "O método Fechar reverte quaisquer transações pendentes. Em seguida, disponibiliza a ligação ao conjunto de ligações ou fecha a ligação se o agrupamento de ligação está desativada. Se fechar denomina-se ao processamento de um <xref:System.Data.Common.DbConnection.StateChange>eventos, não adicionais <xref:System.Data.Common.DbConnection.StateChange>eventos são desencadeou.</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       Uma aplicação pode chamar fechar mais do que uma vez sem gerar uma exceção.      > [!NOTE] > Quando utiliza o .NET Framework Data Provider para ODBC, não precisa de ativar o agrupamento de ligações, porque o Gestor do controlador ODBC gere isto automaticamente. Para obter mais informações sobre como ativar e desativar o agrupamento de ligações, consulte a documentação de conectividade da base de dados aberta (ODBC) de Microsoft.      > [!CAUTION] > Não chame fechar ou `Dispose` de uma ligação, um DataReader ou qualquer outro objeto gerido no `Finalize` método da sua classe. Num Finalizador, deve apenas de versão não geridos recursos que a classe pertence diretamente. Se a classe não possui quaisquer recursos não geridos, não incluem um `Finalize` método na sua definição de classe. Para obter mais informações, consulte [recolha de lixo](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, opens it, displays some of its properties, and then closes the connection.  \n  \n [!code-vb[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_0_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_0_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define a cadeia utilizada para abrir uma origem de dados."
  remarks: "The ConnectionString property is designed to match ODBC connection string format as closely as possible. The ConnectionString can be set only when the connection is closed, and as soon as it is set it is passed, unchanged, to the Driver Manager and the underlying driver. Therefore, the syntax for the ConnectionString must exactly match what the Driver Manager and underlying driver support.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. This includes an ODBC data source name (DSN). The following example illustrates several possible connection strings.  \n  \n```  \n\"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;\"  \n  \n\"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes\"  \n  \n\"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\\bin\\Northwind.mdb\"  \n  \n\"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\\bin\\book1.xls\"  \n  \n\"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\\bin\"  \n  \n\"DSN=dsnname\"  \n```  \n  \n> [!NOTE]\n>  The .NET Framework Data Provider for ODBC does not support the `Persist Security Info` keyword that is supported by other .NET Framework data providers. However, the ConnectionString property behaves as if `Persist Security Info` were set to `false`. This means that you cannot retrieve the password from the ConnectionString property if the connection has been opened. When the ConnectionString property is read from an <xref:System.Data.Odbc.OdbcConnection> object that has been opened, the connection string is returned minus the password. You cannot change this behavior; therefore, if the application requires the password, store it separately before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>.  \n  \n Many of the settings specified in the string have corresponding read-only properties (for example, `Server=(local)`, which corresponds to the <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> property). These properties are updated after the connection is opened, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.Odbc.OdbcConnection> properties (such as <xref:System.Data.Odbc.OdbcConnection.Database%2A>) return only default settings or those settings specified in the ConnectionString.  \n  \n In the Microsoft .NET Framework version 1.0, validation of the connection string does not occur until an application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method. It is the responsibility of the underlying ODBC driver to validate the connection string. If the connection string contains invalid or unsupported properties, the driver may raise an <xref:System.Data.Odbc.OdbcException> at run time.  \n  \n However, in the .NET Framework version 1.1 and later versions, some basic validation of the connection string occurs as soon as you set the ConnectionString property. At that time, the data provider verifies that the connection string meets the \"keyword=value;...\" format, but it does not verify whether keywords or values are valid. The remaining verification is performed by the underlying ODBC driver when the application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.  \n  \n An ODBC connection string has the following syntax:  \n  \n```  \nconnection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  \nempty-string ::=  \nattribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  \nattribute-keyword ::= DSN | UID | PWD  \n | driver-defined-attribute-keyword  \nattribute-value ::= character-string  \ndriver-defined-attribute-keyword ::= identifier  \n```  \n  \n where `character-string` has zero or more characters; `identifier` has one or more characters; `attribute-keyword` is not case sensitive; `attribute-value` can be case sensitive; and the value of the DSN keyword does not consist only of blanks.  \n  \n Because of connection string and initialization file grammar, keywords and attribute values should be avoided that contain the characters []{}(),;?*=!@ not enclosed with braces. The value of the DSN keyword cannot consist only of blanks and should not contain leading blanks. Because of the grammar of the system information, keywords and data source names cannot contain the backslash (\\\\) character.  \n  \n Applications do not have to add braces around the attribute value after the Driver keyword unless the attribute contains a semicolon (;), in which case the braces are required. If the attribute value that the driver receives includes braces, the driver should not remove them but they should be part of the returned connection string.  \n  \n A DSN or connection string value enclosed with braces ({}) that contains any of the characters []{}(),;?*=!@ is passed intact to the driver. However, when you use these characters in a keyword, the Driver Manager returns an error when you work with file DSNs, but passes the connection string to the driver for regular connection strings. Avoid using embedded braces in a keyword value.  \n  \n The connection string may include any number of driver-defined keywords. Because the DRIVER keyword does not use information from the system, the driver must define enough keywords so that a driver can connect to a data source using only the information in the connection string. The driver defines which keywords are required to connect to the data source.  \n  \n If any keywords are repeated in the connection string, there is no guarantee which value will be selected.  \n  \n> [!NOTE]\n>  If an ODBC driver supports connection strings longer than 1024 characters, you can use a data source name (DSN) to exceed the maximum length limitation."
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "A cadeia de ligação de controlador do ODBC inclui definições, tais como o nome de origem de dados, necessário para estabelecer a ligação inicial. O valor predefinido é uma cadeia vazia (&quot;&quot;). O comprimento máximo é de 1024 carateres."
  overload: System.Data.Odbc.OdbcConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o tempo de espera ao tentar estabelecer uma ligação antes de terminar a tentativa e de gerar um erro."
  remarks: "Ao contrário dos fornecedores de dados .NET Framework para SQL Server e OLE DB, o .NET Framework Data Provider para ODBC não suporta a definição desta propriedade como um valor de cadeia de ligação, porque não é uma palavra-chave da ligação de ODBC válida. Para especificar um tempo limite de ligação, defina a propriedade ConnectionTimeout antes de chamar <xref:System.Data.Odbc.OdbcConnection.Open%2A>.</xref:System.Data.Odbc.OdbcConnection.Open%2A> Isto é equivalente à definição de ODBC `SQLSetConnectAttr` atributo SQL_ATTR_LOGIN_TIMOUT."
  syntax:
    content: public int ConnectionTimeout { get; set; }
    return:
      type: System.Int32
      description: "O tempo em segundos de espera por uma ligação abrir. O valor predefinido é 15 segundos."
  overload: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor definido é inferior a 0."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Cria e devolve um <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objeto associado a <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public System.Data.Odbc.OdbcCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Um <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objeto."
  overload: System.Data.Odbc.OdbcConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A adicionar."
  overload: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Database
  id: Database
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém o nome da base de dados atual ou a base de dados sejam utilizados depois de uma ligação está aberta."
  remarks: "Em primeiro lugar, a propriedade de base de dados está definida na cadeia de ligação. A propriedade de base de dados pode ser atualizada utilizando o <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>método.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> Se alterar a base de dados atual, utilizar uma instrução de SQL Server ou o <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>método, é enviada uma mensagem informativa e, em seguida, a propriedade é atualizada.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>       Obter a propriedade de base de dados é equivalente a chamar a função ODBC `SQLGetInfo` com o `Attribute` parâmetro definido como SQL_ATTR_CURRENT_CATALOG."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "O nome da base de dados atual. O valor predefinido é uma cadeia vazia (&quot;&quot;) até que a ligação está aberta."
  overload: System.Data.Odbc.OdbcConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.DataSource
  id: DataSource
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém o nome do servidor ou o nome de ficheiro da origem de dados."
  remarks: "Obter a propriedade DataSource é equivalente a chamar a função ODBC `SQLGetInfo` com o `InfoType` parâmetro definido como SQL_SERVER_NAME."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and displays the backend data source name.  \n  \n [!code-vb[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "O nome do servidor ou o nome de ficheiro da origem de dados. O valor predefinido é uma cadeia vazia (&quot;&quot;) até que a ligação está aberta."
  overload: System.Data.Odbc.OdbcConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.Odbc.OdbcConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Driver
  id: Driver
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém o nome do controlador ODBC especificado para a ligação atual."
  remarks: "Obter a propriedade de controlador é equivalente a chamar a função ODBC `SQLGetInfo` com o `InfoType` parâmetro definido como SQL_DRIVER_NAME."
  syntax:
    content: public string Driver { get; }
    return:
      type: System.String
      description: "O nome do controlador ODBC. Normalmente, este é o nome DLL (por exemplo, Sqlsrv32.dll). O valor predefinido é uma cadeia vazia (&quot;&quot;) até que a ligação está aberta."
  overload: System.Data.Odbc.OdbcConnection.Driver*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Enlists na transação especificada como uma transação distribuída."
  remarks: "Novo no ADO.NET 2.0 é o suporte para utilizar o <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>método para efetuar a inscrição na transação distribuída.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Porque enlists-uma ligação num <xref:System.Transactions.Transaction>instância, **EnlistTransaction** tira partido das funcionalidades disponíveis no <xref:System.Transactions>espaço de nomes para a gestão distribuída de transações, tornando preferível **EnlistDistributedTransaction** para esta finalidade.</xref:System.Transactions> </xref:System.Transactions.Transaction> Para obter mais informações, consulte [transações distribuídas](~/add/includes/ajax-current-ext-md.md).       Pode continuar a efetuar a inscrição na transação distribuída uma existente, utilizando o <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A>método se a inscrição automática está desativada.</xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> Inscrever-se numa transação distribuída existente certifica-se de que, se a transação está consolidada ou revertida, modificações efetuadas pelo código na origem de dados são também consolidadas ou revertidas. Para mais informações sobre transações distribuídas, consulte [transações distribuídas](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction devolve uma exceção se <xref:System.Data.OdbcClient.OdbcConnection>já começou a transação utilizando <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A> </xref:System.Data.OdbcClient.OdbcConnection> No entanto, se a transação é uma transação local foi iniciada na origem de dados (por exemplo, executando explicitamente a instrução BEGIN TRANSACTION utilizando um <xref:System.Data.OdbcClient.OdbcCommand>objeto), EnlistDistributedTransaction reverter a transação local e enlists na transação distribuída existente, conforme solicitado.</xref:System.Data.OdbcClient.OdbcCommand> Tenha em atenção que a transação local foi revertida e são responsáveis pela gestão de quaisquer transações locais não iniciado utilizando <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A> não irá receber"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Uma referência a um existente <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> no qual pretende efetuar a inscrição."
  overload: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Enlists na transação especificada como uma transação distribuída."
  remarks: 'Novo no ADO.NET 2.0 é o suporte para utilizar o <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>método para efetuar a inscrição na transação distribuída.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Porque enlists-uma ligação num <xref:System.Transactions.Transaction>instância, **EnlistTransaction** tira partido das funcionalidades disponíveis no <xref:System.Transactions>espaço de nomes para a gestão distribuída de transações, tornando preferível **EnlistDistributedTransaction**, que utiliza um **System.EnterpriseServices.ITransaction** objeto.</xref:System.Transactions> </xref:System.Transactions.Transaction> Também tem semânticas ligeiramente diferentes: depois de uma ligação é explicitamente inscrita numa transação, não é possível unenlisted ou inscrita numa transação outra até termina a transação primeiro. Para mais informações sobre transações distribuídas, consulte [transações distribuídas](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Uma referência a um existente <xref href=&quot;System.Transactions.Transaction&quot;> </xref> no qual pretende efetuar a inscrição."
  overload: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  id: GetSchema
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Devolve informações de esquema para a origem de dados deste <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Devolve informações de esquema para a origem de dados deste <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> utilizando o nome especificado para o nome do esquema."
  remarks: "Quando `collectionName` é nulo, o <xref:System.Data.DataTable>contém informações sobre quaisquer restrições e de metadados disponíveis.</xref:System.Data.DataTable>      > [!NOTE] > Todas as restrições que se aplicam à `SQLStatistics` método também se aplicam à `ODBCConnection.GetSchema(&quot;`índices`&quot;)` coleção."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Especifica o nome do esquema para devolver."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Devolve informações de esquema para a origem de dados deste <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> utilizando a cadeia especificada para o nome de esquema e de matriz da cadeia especificado para os valores de restrição."
  remarks: "Quando `collectionName` está especificado como nulo, o <xref:System.Data.DataTable>contém informações sobre todos os metadados que estão disponíveis e respetivas restrições.</xref:System.Data.DataTable>       O `restrictionValues` pode fornecer o parâmetro *n* profundidade de valores que são especificadas pela coleção de restrições de uma coleção específica. Para definir os valores numa restrição especificada e não os valores das outras restrições, tem de configurar as restrições anteriores para nulo e, em seguida, colocar o valor adequado em para a restrição que gostaria de especificar um valor para.       Um exemplo desta situação é uma coleção &quot;Tabelas&quot;. Se a coleção &quot;Tabelas&quot; tem restrições de três (base de dados, proprietário e nome da tabela) e pretender voltar a apenas as tabelas associadas com o proprietário &quot;Carl&quot;, em seguida, terá de passar em, pelo menos, os seguintes valores: null, &quot;Carl&quot;. Se um valor de restrição não é transmitido, os valores predefinidos são utilizados para essa restrição. Este é o mesmo mapeamento como transmissão nulo, o que é diferente da transmissão numa cadeia vazia para o valor do parâmetro. Nesse caso, a cadeia vazia (&quot;&quot;) é considerado o valor para o parâmetro especificado.      > [!NOTE] > Todas as restrições que se aplicam ao método SQLStatistics serão aplicada à coleção ODBCConnection.GetSchema(&quot;indexes&quot;)."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Especifica o nome do esquema para devolver."
    - id: restrictionValues
      type: System.String[]
      description: "Especifica um conjunto de valores de restrição para o esquema pedido."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ocorre quando o controlador ODBC envia um aviso ou uma mensagem meramente informativa."
  remarks: "Clientes que pretendem processar avisos e mensagens informativas enviadas pelo servidor devem criar um <xref:System.Data.Odbc.OdbcInfoMessageEventHandler>delegado escutar a este evento.</xref:System.Data.Odbc.OdbcInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.Odbc.OdbcInfoMessageEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Open
  id: Open
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "É aberta uma ligação a uma origem de dados com as definições de propriedade especificadas pelo <xref:System.Data.Odbc.OdbcConnection.ConnectionString*>.</xref:System.Data.Odbc.OdbcConnection.ConnectionString*>"
  remarks: "O <xref:System.Data.Odbc.OdbcConnection>desenha uma ligação aberta do conjunto de ligações esteja disponível.</xref:System.Data.Odbc.OdbcConnection> Caso contrário, estabelece uma nova ligação à origem de dados.      > [!NOTE] > Se o <xref:System.Data.Odbc.OdbcConnection>ficar fora do âmbito, a ligação representa não fechar automaticamente.</xref:System.Data.Odbc.OdbcConnection> Por conseguinte, explicitamente deve fechar a ligação ao chamar <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **eliminar**, ou colocando a ligação dentro de um `Using` instrução.</xref:System.Data.Odbc.OdbcConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Open*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A funcionalidade deste método não é suportada na classe base e tem de ser implementada numa classe derivada em vez disso."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Indica que o identificador de ambiente de Gestor do controlador ODBC pode ser lançado quando for lançada a última ligação subjacente."
  remarks: "`ReleaseObjectPool`pode ser chamado para libertar o identificador de ambiente de ODBC. Pode querer chamar este método se, por exemplo, o objeto de ligação não será utilizado novamente. Quando todas as ligações de ambiente são fechadas, o ambiente pode ser eliminado. Tenha em atenção que a chamada do método individualmente não, na verdade, de versão ligações ativas existentes no ambiente.       Tem de ocorrer o seguinte antes do ambiente, finalmente, é eliminado: 1.  Chamar <xref:System.Data.Odbc.OdbcConnection.Close%2A>para libertar o <xref:System.Data.Odbc.OdbcConnection>objeto a partir do ambiente.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection.Close%2A>      2.  Permitir que cada objeto de ligação para o tempo limite.      3.  Chame ReleaseObjectPool.      4.  Invocar a recolha de lixo.       Por outro lado, se chamar <xref:System.Data.Odbc.OdbcConnection.Close%2A>em todas as ligações ativas e invocar libertação da memória, mas não o chamam ReleaseObjectPool, os recursos reservados para o ambiente permanecem disponíveis.</xref:System.Data.Odbc.OdbcConnection.Close%2A>       Depois de um identificador de ambiente é lançado, um pedido para um novo <xref:System.Data.Odbc.OdbcConnection>cria um novo ambiente.</xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém uma cadeia que contém a versão do servidor ao qual o cliente está ligado."
  remarks: "Se ServerVersion não é suportada pelo controlador ODBC subjacente, uma cadeia vazia (&quot;&quot;) é devolvido.       A propriedade ServerVersion assume a forma &quot;*# #. # #. # # #*,&quot; onde os primeiros dois dígitos são a versão principal, os dois dígitos são a versão secundária e se os últimos quatro dígitos a versão de lançamento. O controlador tem compor a versão de produto neste formulário, mas também pode acrescentar a versão de produto específica como uma cadeia (por exemplo, &quot;04.01.0000 Rdb 4.1&quot;). Esta cadeia assume a forma &quot;*major*&quot; onde *principais* e *secundárias* são exatamente dois dígitos e *criar* é exatamente quatro dígitos."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "A versão do servidor ligado."
  overload: System.Data.Odbc.OdbcConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.State
  id: State
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém o estado atual da ligação."
  remarks: "As seguintes são permitidas alterações de estado: - a partir de `Closed` para `Open`, utilizando o <xref:System.Data.Odbc.OdbcConnection.Open%2A>método.</xref:System.Data.Odbc.OdbcConnection.Open%2A>      -De `Open` para `Closed`, utilizando o <xref:System.Data.Odbc.OdbcConnection.Close%2A>ou **eliminar** método.</xref:System.Data.Odbc.OdbcConnection.Close%2A>      > [!NOTE] > Chamar a propriedade de estado numa ligação aberta aumenta a sobrecarga de aplicação porque cada chamada tal faz com que uma chamada SQL_ATTR_CONNECTION_DEAD para o controlador ODBC subjacente determinar se a ligação ainda é válida."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Uma combinação bit a bit do <xref href=&quot;System.Data.ConnectionState&quot;> </xref> valores. A predefinição é <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Para obter uma descrição deste membro, consulte &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.Odbc.OdbcConnection>instância é convertida para um <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo <xref:System.Object>que é uma cópia desta instância.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Odbc.OdbcException
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcException
  nameWithType: OdbcException
  fullName: System.Data.Odbc.OdbcException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.Odbc.OdbcConnection.#ctor
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
- uid: System.Data.Odbc.OdbcConnection.Close
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Odbc.OdbcConnection.Database
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcConnection.Driver
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
- uid: System.Data.Odbc.OdbcInfoMessageEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcInfoMessageEventHandler
  nameWithType: OdbcInfoMessageEventHandler
  fullName: System.Data.Odbc.OdbcInfoMessageEventHandler
- uid: System.Data.Odbc.OdbcConnection.Open
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcConnection.#ctor*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection.OdbcConnection
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OdbcConnection.BeginDbTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OdbcConnection.BeginTransaction
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OdbcConnection.ChangeDatabase
- uid: System.Data.Odbc.OdbcConnection.Close*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close
  nameWithType: OdbcConnection.Close
- uid: System.Data.Odbc.OdbcConnection.ConnectionString*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
- uid: System.Data.Odbc.OdbcConnection.CreateCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OdbcConnection.CreateCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OdbcConnection.CreateDbCommand
- uid: System.Data.Odbc.OdbcConnection.Database*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose
  nameWithType: OdbcConnection.Dispose
- uid: System.Data.Odbc.OdbcConnection.Driver*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OdbcConnection.EnlistDistributedTransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OdbcConnection.EnlistTransaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema
  nameWithType: OdbcConnection.GetSchema
- uid: System.Data.Odbc.OdbcConnection.Open*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open
  nameWithType: OdbcConnection.Open
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OdbcConnection.ReleaseObjectPool
- uid: System.Data.Odbc.OdbcConnection.ServerVersion*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcConnection.System.ICloneable.Clone
