### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.RegistrationHelper
  id: RegistrationHelper
  children:
  - System.EnterpriseServices.RegistrationHelper.#ctor
  - System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)
  - System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)
  - System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  - System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)
  - System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)
  - System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  langs:
  - csharp
  name: RegistrationHelper
  nameWithType: RegistrationHelper
  fullName: System.EnterpriseServices.RegistrationHelper
  type: Class
  summary: "Installs and configures assemblies in the COM+ catalog. This class cannot be inherited."
  remarks: "RegistrationHelper is used by both the .NET Services Installation Tool (Regsvcs.exe) and the automatic registration steps that are performed on first activation of a <xref:System.EnterpriseServices.ServicedComponent>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("89a86e7b-c229-4008-9baa-2f5c8411d7e0")]

      public sealed class RegistrationHelper : MarshalByRefObject, System.EnterpriseServices.IRegistrationHelper
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.EnterpriseServices.IRegistrationHelper
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.EnterpriseServices.RegistrationHelper.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.RegistrationHelper
  langs:
  - csharp
  name: RegistrationHelper()
  nameWithType: RegistrationHelper.RegistrationHelper()
  fullName: System.EnterpriseServices.RegistrationHelper.RegistrationHelper()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initializes a new instance of the <xref href=&quot;System.EnterpriseServices.RegistrationHelper&quot;></xref> class."
  syntax:
    content: public RegistrationHelper ();
    parameters: []
  overload: System.EnterpriseServices.RegistrationHelper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)
  id: InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)
  parent: System.EnterpriseServices.RegistrationHelper
  langs:
  - csharp
  name: InstallAssembly(String,String,String,InstallationFlags)
  nameWithType: RegistrationHelper.InstallAssembly(String,String,String,InstallationFlags)
  fullName: System.EnterpriseServices.RegistrationHelper.InstallAssembly(String,String,String,InstallationFlags)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Installs the named assembly in a COM+ application."
  remarks: "InstallAssembly performs the following steps: registration, generation of a type library, registration of the type library, installation of the type library under the specified application, and configuration of the components contained in the type library.       This method requires the caller to have administrative privileges on the local computer."
  example:
  - "The following code example shows how to use the `InstalAssembly` method to install a named assembly in a COM+ application.  \n  \n [!code-cpp[EnterpriseServices Registration#1](~/add/codesnippet/cpp/de7f8e8b-41c6-47b1-a376-_1.cpp)]\n [!code-cs[EnterpriseServices Registration#1](~/add/codesnippet/csharp/de7f8e8b-41c6-47b1-a376-_1.cs)]\n [!code-vb[EnterpriseServices Registration#1](~/add/codesnippet/visualbasic/de7f8e8b-41c6-47b1-a376-_1.vb)]"
  syntax:
    content: public void InstallAssembly (string assembly, ref string application, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);
    parameters:
    - id: assembly
      type: System.String
      description: "The file name of the assembly to install."
    - id: application
      type: System.String
      description: "The name of the COM+ application to install into. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. If the parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and the assembly contains a <xref href=&quot;System.EnterpriseServices.ApplicationNameAttribute&quot;></xref>, then the attribute is used. Otherwise, the name of the application is generated based on the name of the assembly, then is returned."
    - id: tlb
      type: System.String
      description: "The name of the output Type Library Exporter (Tlbexp.exe) file, or a string that contains <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the registration helper is expected to generate the name. The actual name used is placed in the parameter on call completion."
    - id: installFlags
      type: System.EnterpriseServices.InstallationFlags
      description: "A bitwise combination of the <xref href=&quot;System.EnterpriseServices.InstallationFlags&quot;></xref> values."
  overload: System.EnterpriseServices.RegistrationHelper.InstallAssembly*
  exceptions:
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "The input assembly does not have a strong name."
  platform:
  - net462
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)
  id: InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)
  parent: System.EnterpriseServices.RegistrationHelper
  langs:
  - csharp
  name: InstallAssembly(String,String,String,String,InstallationFlags)
  nameWithType: RegistrationHelper.InstallAssembly(String,String,String,String,InstallationFlags)
  fullName: System.EnterpriseServices.RegistrationHelper.InstallAssembly(String,String,String,String,InstallationFlags)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Installs the named assembly in a COM+ application."
  remarks: "<xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> performs the following steps: registration, generation of a type library, registration of the type library, installation of the type library under the specified application, and configuration of the components contained in the type library.       This method requires the caller to have administrative privileges on the local computer."
  syntax:
    content: public void InstallAssembly (string assembly, ref string application, string partition, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);
    parameters:
    - id: assembly
      type: System.String
      description: "The file name of the assembly to install."
    - id: application
      type: System.String
      description: "The name of the COM+ application to install into. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. If the parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and the assembly contains a <xref href=&quot;System.EnterpriseServices.ApplicationNameAttribute&quot;></xref>, then the attribute is used. Otherwise, the name of the application is generated based on the name of the assembly, then is returned."
    - id: partition
      type: System.String
      description: "The name of the partition. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: tlb
      type: System.String
      description: "The name of the output Type Library Exporter (Tlbexp.exe) file, or a string that contains <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the registration helper is expected to generate the name. The actual name used is placed in the parameter on call completion."
    - id: installFlags
      type: System.EnterpriseServices.InstallationFlags
      description: "A bitwise combination of the <xref href=&quot;System.EnterpriseServices.InstallationFlags&quot;></xref> values."
  overload: System.EnterpriseServices.RegistrationHelper.InstallAssembly*
  exceptions:
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "The input assembly does not have a strong name."
  platform:
  - net462
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  id: InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  parent: System.EnterpriseServices.RegistrationHelper
  langs:
  - csharp
  name: InstallAssemblyFromConfig(RegistrationConfig)
  nameWithType: RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig)
  fullName: System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Installs the named assembly in a COM+ application."
  remarks: "This method requires the caller to have administrative privileges on the local computer."
  example:
  - "The following code example shows how to use the `InstalAssemblyFromConfig` method to install a named assembly in a COM+ application.  \n  \n [!code-cpp[EnterpriseServices Registration#2](~/add/codesnippet/cpp/06b8a4ec-358d-4442-9f31-_1.cpp)]\n [!code-cs[EnterpriseServices Registration#2](~/add/codesnippet/csharp/06b8a4ec-358d-4442-9f31-_1.cs)]\n [!code-vb[EnterpriseServices Registration#2](~/add/codesnippet/visualbasic/06b8a4ec-358d-4442-9f31-_1.vb)]"
  syntax:
    content: public void InstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);
    parameters:
    - id: regConfig
      type: System.EnterpriseServices.RegistrationConfig
      description: "A <xref href=&quot;System.EnterpriseServices.RegistrationConfig&quot;></xref> identifying the assembly to install."
  overload: System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)
  id: UninstallAssembly(System.String,System.String)
  parent: System.EnterpriseServices.RegistrationHelper
  langs:
  - csharp
  name: UninstallAssembly(String,String)
  nameWithType: RegistrationHelper.UninstallAssembly(String,String)
  fullName: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Uninstalls the assembly from the given application."
  syntax:
    content: public void UninstallAssembly (string assembly, string application);
    parameters:
    - id: assembly
      type: System.String
      description: "The file name of the assembly to uninstall."
    - id: application
      type: System.String
      description: "If this name is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, it is the name of the application that contains the components in the assembly."
  overload: System.EnterpriseServices.RegistrationHelper.UninstallAssembly*
  exceptions:
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "The input assembly does not have a strong name."
  platform:
  - net462
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)
  id: UninstallAssembly(System.String,System.String,System.String)
  parent: System.EnterpriseServices.RegistrationHelper
  langs:
  - csharp
  name: UninstallAssembly(String,String,String)
  nameWithType: RegistrationHelper.UninstallAssembly(String,String,String)
  fullName: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Uninstalls the assembly from the given application."
  syntax:
    content: public void UninstallAssembly (string assembly, string application, string partition);
    parameters:
    - id: assembly
      type: System.String
      description: "The file name of the assembly to uninstall."
    - id: application
      type: System.String
      description: "If this name is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, it is the name of the application that contains the components in the assembly."
    - id: partition
      type: System.String
      description: "The name of the partition. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.RegistrationHelper.UninstallAssembly*
  exceptions:
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "The input assembly does not have a strong name."
  platform:
  - net462
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  id: UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  parent: System.EnterpriseServices.RegistrationHelper
  langs:
  - csharp
  name: UninstallAssemblyFromConfig(RegistrationConfig)
  nameWithType: RegistrationHelper.UninstallAssemblyFromConfig(RegistrationConfig)
  fullName: System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(RegistrationConfig)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Uninstalls the assembly from the given application."
  syntax:
    content: public void UninstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);
    parameters:
    - id: regConfig
      type: System.EnterpriseServices.RegistrationConfig
      description: "A <xref href=&quot;System.EnterpriseServices.RegistrationConfig&quot;></xref> identifying the assembly to uninstall."
  overload: System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.EnterpriseServices.RegistrationException
  parent: System.EnterpriseServices
  isExternal: false
  name: RegistrationException
  nameWithType: RegistrationException
  fullName: System.EnterpriseServices.RegistrationException
- uid: System.EnterpriseServices.RegistrationHelper.#ctor
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: RegistrationHelper()
  nameWithType: RegistrationHelper.RegistrationHelper()
  fullName: System.EnterpriseServices.RegistrationHelper.RegistrationHelper()
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: InstallAssembly(String,String,String,InstallationFlags)
  nameWithType: RegistrationHelper.InstallAssembly(String,String,String,InstallationFlags)
  fullName: System.EnterpriseServices.RegistrationHelper.InstallAssembly(String,String,String,InstallationFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.InstallationFlags
  parent: System.EnterpriseServices
  isExternal: false
  name: InstallationFlags
  nameWithType: InstallationFlags
  fullName: System.EnterpriseServices.InstallationFlags
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: InstallAssembly(String,String,String,String,InstallationFlags)
  nameWithType: RegistrationHelper.InstallAssembly(String,String,String,String,InstallationFlags)
  fullName: System.EnterpriseServices.RegistrationHelper.InstallAssembly(String,String,String,String,InstallationFlags)
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: InstallAssemblyFromConfig(RegistrationConfig)
  nameWithType: RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig)
  fullName: System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig)
- uid: System.EnterpriseServices.RegistrationConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: RegistrationConfig
  nameWithType: RegistrationConfig
  fullName: System.EnterpriseServices.RegistrationConfig
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: UninstallAssembly(String,String)
  nameWithType: RegistrationHelper.UninstallAssembly(String,String)
  fullName: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(String,String)
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: UninstallAssembly(String,String,String)
  nameWithType: RegistrationHelper.UninstallAssembly(String,String,String)
  fullName: System.EnterpriseServices.RegistrationHelper.UninstallAssembly(String,String,String)
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: UninstallAssemblyFromConfig(RegistrationConfig)
  nameWithType: RegistrationHelper.UninstallAssemblyFromConfig(RegistrationConfig)
  fullName: System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(RegistrationConfig)
- uid: System.EnterpriseServices.RegistrationHelper.#ctor*
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: RegistrationHelper
  nameWithType: RegistrationHelper.RegistrationHelper
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssembly*
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: InstallAssembly
  nameWithType: RegistrationHelper.InstallAssembly
- uid: System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig*
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: InstallAssemblyFromConfig
  nameWithType: RegistrationHelper.InstallAssemblyFromConfig
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssembly*
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: UninstallAssembly
  nameWithType: RegistrationHelper.UninstallAssembly
- uid: System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig*
  parent: System.EnterpriseServices.RegistrationHelper
  isExternal: false
  name: UninstallAssemblyFromConfig
  nameWithType: RegistrationHelper.UninstallAssemblyFromConfig
