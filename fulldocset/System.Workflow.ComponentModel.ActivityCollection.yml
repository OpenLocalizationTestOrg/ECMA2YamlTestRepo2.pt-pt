### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.ActivityCollection
  id: ActivityCollection
  children:
  - System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Clear
  - System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Count
  - System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  - System.Workflow.ComponentModel.ActivityCollection.ListChanged
  - System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: ActivityCollection
  nameWithType: ActivityCollection
  fullName: System.Workflow.ComponentModel.ActivityCollection
  type: Class
  summary: "Models a strongly typed <xref:System.Collections.ICollection> of type <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.      > [!NOTE] >  Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>. Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences."
  example:
  - "The following example shows access of the ActivityCollection which is the member of a composite activity class containing all child activities. This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCollectionMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ActivityCollection : System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>
  inheritance:
  - System.Collections.Generic.List`1
  implements:
  - System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>
  - System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>
  - System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  id: '#ctor(System.Workflow.ComponentModel.Activity)'
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: ActivityCollection(Activity)
  nameWithType: ActivityCollection.ActivityCollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.ActivityCollection(Activity)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.ComponentModel.ActivityCollection&quot;></xref> class, initializing an owner <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>."
  remarks: "Example"
  syntax:
    content: public ActivityCollection (System.Workflow.ComponentModel.Activity owner);
    parameters:
    - id: owner
      type: System.Workflow.ComponentModel.Activity
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> designated as owning this instance."
  overload: System.Workflow.ComponentModel.ActivityCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>owner</code> is not a descendent of <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  id: Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Add(Activity)
  nameWithType: ActivityCollection.Add(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Add(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Adds the <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> to the <xref:System.Collections.ICollection>."
  remarks: ''
  example:
  - "The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities. This example illustrates the use of Add. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public void Add (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> to be added to the <xref:System.Collections.ICollection>."
  overload: System.Workflow.ComponentModel.ActivityCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear
  id: Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ActivityCollection.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.Clear()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes every <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> from the <xref:System.Collections.ICollection>."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  id: Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Contains(Activity)
  nameWithType: ActivityCollection.Contains(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Contains(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Provides a test for membership of the <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> in the <xref:System.Collections.ICollection>."
  remarks: "This <xref:System.Collections.ICollection> is type-safe. A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>."
  syntax:
    content: public bool Contains (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> being tested for membership."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> belongs to the <xref:System.Collections.ICollection>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Count
  id: Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Count
  nameWithType: ActivityCollection.Count
  fullName: System.Workflow.ComponentModel.ActivityCollection.Count
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets the number of members of the <xref:System.Collections.ICollection>."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of members of the <xref:System.Collections.ICollection>."
  overload: System.Workflow.ComponentModel.ActivityCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ActivityCollection.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Implements an enumeration interface to the <xref:System.Collections.ICollection>."
  remarks: "Enumerators only enable reading the data in the collection. You cannot use enumerators to modify the underlying collection.       To begin, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A>raises an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.       After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.       To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> . If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection. This causes the enumerator to raise an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
      description: "Returns an enumerator that can iterate through the <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;></xref> instance."
  overload: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  id: IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: IndexOf(Activity)
  nameWithType: ActivityCollection.IndexOf(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.IndexOf(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets the index of the <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> in the <xref:System.Collections.ICollection>."
  remarks: "This collection is type-safe. A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>."
  syntax:
    content: public int IndexOf (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "The activity for which to acquire the index."
    return:
      type: System.Int32
      description: "The index of the <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> in the <xref:System.Collections.ICollection>. Otherwise -1 (if <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> is not in the <xref:System.Collections.ICollection>)."
  overload: System.Workflow.ComponentModel.ActivityCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  id: Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Insert(Int32,Activity)
  nameWithType: ActivityCollection.Insert(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Insert(Int32,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inserts the item at the index in the <xref:System.Collections.ICollection>."
  remarks: "This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>."
  syntax:
    content: public void Insert (int index, System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: index
      type: System.Int32
      description: "Zero-based index of the collection at which to insert the item."
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> to be inserted into the collection."
  overload: System.Workflow.ComponentModel.ActivityCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ActivityCollection.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets or sets the activity in the <xref:System.Collections.ICollection> based on the index."
  syntax:
    content: public System.Workflow.ComponentModel.Activity this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Zero-based index into the <xref:System.Collections.ICollection>."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "A member activity of the <xref:System.Collections.ICollection>, whose index in the <xref:System.Collections.ICollection> was specified in the call."
  overload: System.Workflow.ComponentModel.ActivityCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is not a valid index in <xref:System.Collections.IList>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The property is set and the <xref:System.Collections.IList> is read-only."
  - type: System.Exception
    commentId: T:System.Exception
    description: "An attempt to set to an <xref:System.Object> that is not an <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ActivityCollection.Item(String)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(String)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets the activity in the <xref:System.Collections.ICollection> based on the string which is a unique key."
  remarks: "If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised."
  syntax:
    content: public System.Workflow.ComponentModel.Activity this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "Unique identifier for activity in the <xref:System.Collections.ICollection>."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "A member <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> of the <xref:System.Collections.ICollection>; the key in the <xref:System.Collections.ICollection> which was specified in the call."
  overload: System.Workflow.ComponentModel.ActivityCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  id: ListChanged
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: ListChanged
  nameWithType: ActivityCollection.ListChanged
  fullName: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Raised whenever a change is made to the contents of this <xref:System.Collections.ICollection>."
  remarks: "In this context, adding or removing members raises the event. Modifying a member does not raise this event.       When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs> ListChanged;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  id: Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Remove(Activity)
  nameWithType: ActivityCollection.Remove(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Remove(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes the activity specified in the call from the <xref:System.Collections.ICollection>."
  remarks: "This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>."
  syntax:
    content: public bool Remove (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "The activity to remove from the <xref:System.Collections.ICollection>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the operation succeeded; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ActivityCollection.RemoveAt(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes the <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> in the <xref:System.Collections.ICollection> at the specified <code>index</code>."
  remarks: "A run-time exception occurs if the index is not valid (out of range)."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Position in a zero-based index to remove the activity from the collection."
  overload: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.Add (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection()
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool ICollection<Activity>.Contains (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity[],Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Workflow.ComponentModel.Activity[]
      description: "To be added."
    - id: arrayIndex
      type: System.Int32
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: int System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool ICollection<Activity>.Remove (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> IEnumerable<Activity>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable<System#Workflow#ComponentModel#Activity>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: int IList<Activity>.IndexOf (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32,Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void IList<Activity>.Insert (int index, System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: System.Workflow.ComponentModel.Activity System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void IList<Activity>.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Copies the elements of the <xref:System.Collections.ICollection> to an <xref:System.Array>, starting at a particular <xref:System.Array> index."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The <xref:System.Array> which is the target of the copy operation."
    - id: index
      type: System.Int32
      description: "The zero-based index within the <xref:System.Collections.ICollection> where the copy starts."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets a value that indicates whether access to the &lt;xref:System.Collections.Generic.ICollection%601&gt; is synchronized, that is thread-safe."
  remarks: "<xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.       Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to the &lt;xref:System.Collections.Generic.ICollection%601&gt; is synchronized, that is, thread-safe; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets an object that can be used to synchronize access to the &lt;xref:System.Collections.Generic.ICollection%601&gt;."
  remarks: "For collections whose underlying store is not publicly available, the expected implementation is to return the current instance. Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.       Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection. However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A> property of the collection, not directly on the collection. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the &lt;xref:System.Collections.Generic.ICollection%601&gt;."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Returns an <xref:System.Collections.IEnumerator> that iterates through the underlying <xref:System.Collections.IList>."
  remarks: "An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection. You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Add(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Adds an object to the <xref:System.Collections.IList> at the end of the <xref:System.Collections.IList>."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to add to the <xref:System.Collections.IList>."
    return:
      type: System.Int32
      description: "Returns <xref:System.Int32>.       The zero-based index of the <xref:System.Object> that was just added."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ActivityCollection.System.Collections.IList.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes all <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> from the <xref:System.Collections.ICollection>."
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Contains(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets a value that indicates whether the <xref:System.Object> is a member of the collection."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to locate in the <xref:System.Collections.IList>."
    return:
      type: System.Boolean
      description: "Returns <xref:System.Boolean><xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>value</code> is in the collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets the zero-based index of the <xref:System.Object> in the underlying activities collection."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to be indexed."
    return:
      type: System.Int32
      description: "The zero-based index of the <code>value</code> in the underlying activities collection or -1 if not found in the collection."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>value</code> is not of type <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> and the exception object contains &quot;Error_InvalidListItem&quot; error message."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inserts an <xref:System.Object> into the <xref:System.Collections.IList> at the zero-based index specified."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based position of the insertion."
    - id: value
      type: System.Object
      description: "The object to insert. It must be of type <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets a value indicating whether the <xref:System.Collections.IList> has a fixed size."
  remarks: "A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Collections.IList> has a fixed size; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets a value indicating whether the &lt;xref:System.Collections.Generic.ICollection%601&gt; is read-only."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Returns <xref:System.Boolean><xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the &lt;xref:System.Collections.Generic.ICollection%601&gt; is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ActivityCollection.System.Collections.IList.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets or sets the activity in the <xref:System.Collections.ICollection> based on the index."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Zero-based index into the <xref:System.Collections.ICollection>."
    return:
      type: System.Object
      description: "Returns <xref:System.Object>, a member activity of the <xref:System.Collections.ICollection>, whose index in the <xref:System.Collections.ICollection> was specified in the call."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Remove(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes the first occurrence of a specific object from the <xref:System.Collections.IList>."
  remarks: "The elements that follow the removed element move up to occupy the vacated spot."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to remove from the <xref:System.Collections.IList>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.Collections.IList> is read-only.       <xref:System.Collections.IList> has a fixed size."
  platform:
  - net462
references:
- uid: System.Collections.Generic.List`1
  isExternal: false
  name: System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ActivityCollection(Activity)
  nameWithType: ActivityCollection.ActivityCollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.ActivityCollection(Activity)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Add(Activity)
  nameWithType: ActivityCollection.Add(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Add(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Clear()
  nameWithType: ActivityCollection.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.Clear()
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Contains(Activity)
  nameWithType: ActivityCollection.Contains(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Contains(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.ActivityCollection.Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Count
  nameWithType: ActivityCollection.Count
  fullName: System.Workflow.ComponentModel.ActivityCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ActivityCollection.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Activity>
  nameWithType: IEnumerator<Activity>
  fullName: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: IndexOf(Activity)
  nameWithType: ActivityCollection.IndexOf(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.IndexOf(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Insert(Int32,Activity)
  nameWithType: ActivityCollection.Insert(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Insert(Int32,Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ActivityCollection.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item(String)
  nameWithType: ActivityCollection.Item(String)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ListChanged
  nameWithType: ActivityCollection.ListChanged
  fullName: System.Workflow.ComponentModel.ActivityCollection.ListChanged
- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ActivityCollectionChangeEventArgs>
  nameWithType: EventHandler<ActivityCollectionChangeEventArgs>
  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
    name: ActivityCollectionChangeEventArgs
    nameWithType: ActivityCollectionChangeEventArgs
    fullName: ActivityCollectionChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Remove(Activity)
  nameWithType: ActivityCollection.Remove(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Remove(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ActivityCollection.RemoveAt(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection()
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity[],Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
- uid: System.Workflow.ComponentModel.Activity[]
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity[]
  spec.csharp:
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IEnumerable()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32,Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Add(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Add(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ActivityCollection.System.Collections.IList.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Clear()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Contains(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Contains(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsFixedSize
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ActivityCollection.System.Collections.IList.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Item(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Remove(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Remove(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ActivityCollection
  nameWithType: ActivityCollection.ActivityCollection
- uid: System.Workflow.ComponentModel.ActivityCollection.Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Add
  nameWithType: ActivityCollection.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Clear
  nameWithType: ActivityCollection.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Contains
  nameWithType: ActivityCollection.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.Count*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Count
  nameWithType: ActivityCollection.Count
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ActivityCollection.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: IndexOf
  nameWithType: ActivityCollection.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Insert
  nameWithType: ActivityCollection.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item
  nameWithType: ActivityCollection.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Remove
  nameWithType: ActivityCollection.Remove
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ActivityCollection.RemoveAt
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#CopyTo*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Count*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#IsReadOnly*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable<System#Workflow#ComponentModel#Activity>#GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#RemoveAt*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ActivityCollection.System.Collections.IList.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ActivityCollection.System.Collections.IList.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ActivityCollection.System.Collections.IList.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ActivityCollection.System.Collections.IList.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ActivityCollection.System.Collections.IList.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ActivityCollection.System.Collections.IList.Remove
