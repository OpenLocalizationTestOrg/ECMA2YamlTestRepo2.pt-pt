### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.ActivityCollection
  id: ActivityCollection
  children:
  - System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Clear
  - System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Count
  - System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  - System.Workflow.ComponentModel.ActivityCollection.ListChanged
  - System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: ActivityCollection
  nameWithType: ActivityCollection
  fullName: System.Workflow.ComponentModel.ActivityCollection
  type: Class
  summary: "Modelos um com tipo seguro <xref:System.Collections.ICollection>do tipo <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Esta classe é utilizada para representar a lista de atividades subordinadas para <xref:System.Workflow.ComponentModel.CompositeActivity>.</xref:System.Workflow.ComponentModel.CompositeActivity>      > [!NOTE] > Só é possível chamar métodos derivados <xref:System.Collections.Generic.IList%601>e não <xref:System.Collections.Generic.List%601>, como <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>Adicionar atividades em vez de <xref:System.Collections.Generic.List%601.AddRange%2A>.</xref:System.Collections.Generic.List%601.AddRange%2A> </xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> </xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.IList%601> Chamar os métodos derivados <xref:System.Collections.Generic.List%601>terão consequências inesperadas.</xref:System.Collections.Generic.List%601>"
  example:
  - "The following example shows access of the ActivityCollection which is the member of a composite activity class containing all child activities. This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCollectionMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ActivityCollection : System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>
  inheritance:
  - System.Collections.Generic.List`1
  implements:
  - System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>
  - System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>
  - System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  id: '#ctor(System.Workflow.ComponentModel.Activity)'
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: ActivityCollection(Activity)
  nameWithType: ActivityCollection.ActivityCollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.ActivityCollection(Activity)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.ComponentModel.ActivityCollection&quot;> </xref> classe, inicializar um proprietário <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  remarks: "Exemplo"
  syntax:
    content: public ActivityCollection (System.Workflow.ComponentModel.Activity owner);
    parameters:
    - id: owner
      type: System.Workflow.ComponentModel.Activity
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> designado como o proprietário desta instância."
  overload: System.Workflow.ComponentModel.ActivityCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>owner</code>Não é um descendente do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  id: Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Add(Activity)
  nameWithType: ActivityCollection.Add(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Add(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Adiciona o <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> para <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: ''
  example:
  - "The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities. This example illustrates the use of Add. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public void Add (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> a ser adicionado ao <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear
  id: Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ActivityCollection.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.Clear()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Remove todos os <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> de <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  id: Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Contains(Activity)
  nameWithType: ActivityCollection.Contains(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Contains(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Fornece um teste para associação a <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> no <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "Isto <xref:System.Collections.ICollection>é de tipo seguro.</xref:System.Collections.ICollection> É gerada uma exceção de tempo de execução se o item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public bool Contains (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> a ser testados para associação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> pertence a <xref:System.Collections.ICollection>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Count
  id: Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Count
  nameWithType: ActivityCollection.Count
  fullName: System.Workflow.ComponentModel.ActivityCollection.Count
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o número de membros de <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de membros de <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ActivityCollection.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Implementa uma interface de enumeração para <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "Enumeradores apenas ative a leitura dos dados na coleção. Não é possível utilizar enumeradores para modificar a colecção subjacente.       Para começar, o enumerador está posicionado antes do primeiro elemento da coleção. <xref:System.Collections.IEnumerator.Reset%2A>também oferece o enumerador novamente para nesta posição.</xref:System.Collections.IEnumerator.Reset%2A> AT isto posicionar, chamar <xref:System.Collections.IEnumerator.Current%2A>emite uma exceção.</xref:System.Collections.IEnumerator.Current%2A> Por conseguinte, tem de chamar <xref:System.Collections.IEnumerator.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção de antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Devolve o mesmo objeto até ser <xref:System.Collections.IEnumerator.MoveNext%2A>ou <xref:System.Collections.IEnumerator.Reset%2A>é chamado.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Define <xref:System.Collections.IEnumerator.Current%2A>para o próximo elemento.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Após o final da colecção é passado, o enumerador está posicionado após o último elemento da coleção e chamar <xref:System.Collections.IEnumerator.MoveNext%2A>devolve `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Se a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A>devolvido `false`, chamar <xref:System.Collections.IEnumerator.Current%2A>emite uma exceção.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Para definir `Current` para o primeiro elemento da coleção novamente, pode chamar `Reset` seguido <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A>       Um enumerador permanece válido desde que a coleção permanece inalterada. Caso sejam feitas alterações à coleção, como adicionar, modificar ou eliminar elementos, o enumerador está irreversibly inválido e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A>ou `Reset` desencadeia um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A>e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>irá devolver o elemento que está definido, mesmo que o enumerador já é invalidado.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       O enumerador não tem acesso exclusivo à coleção; Por conseguinte, a enumerar através de uma coleção intrinsecamente não é um procedimento seguro para thread. Mesmo quando uma coleção está sincronizada, outros threads ainda foi possível modificar a coleção. Isto faz com que o enumerador gerar uma exceção. Para garantir a segurança de thread durante a enumeração, pode bloquear a coleção durante a enumeração de toda ou detetar exceções resultantes das alterações efetuadas por outros threads."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
      description: "Devolve um enumerador que pode itere através de <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> instância."
  overload: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  id: IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: IndexOf(Activity)
  nameWithType: ActivityCollection.IndexOf(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.IndexOf(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o índice do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> no <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "Esta coleção está tipo seguro. Será desencadeada uma exceção de tempo de execução se um item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public int IndexOf (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "A atividade para o qual pretende adquirir o índice."
    return:
      type: System.Int32
      description: "O índice do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> no <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> Caso contrário, -1 (se <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> não está a ser o <xref:System.Collections.ICollection>).</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  id: Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Insert(Int32,Activity)
  nameWithType: ActivityCollection.Insert(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Insert(Int32,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Insere o item no índice no <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "Isto <xref:System.Collections.ICollection>é de tipo seguro.</xref:System.Collections.ICollection> É gerada uma exceção de tempo de execução se um item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public void Insert (int index, System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: index
      type: System.Int32
      description: "Índice baseado em zero da coleção na qual o item de inserção."
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> inseridos na coleção."
  overload: System.Workflow.ComponentModel.ActivityCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ActivityCollection.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém ou define a atividade no <xref:System.Collections.ICollection>com base no índice.</xref:System.Collections.ICollection>"
  syntax:
    content: public System.Workflow.ComponentModel.Activity this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Índice baseado em zero para <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Uma atividade de membro do <xref:System.Collections.ICollection>, cujo índice no <xref:System.Collections.ICollection>foi especificada na chamada.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>Não é um índice válido na <xref:System.Collections.IList>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade está definida e o <xref:System.Collections.IList>é só de leitura.</xref:System.Collections.IList>"
  - type: System.Exception
    commentId: T:System.Exception
    description: "Uma tentativa para definir como um <xref:System.Object>que não é um <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Object>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ActivityCollection.Item(String)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(String)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém a atividade <xref:System.Collections.ICollection>com base na cadeia que é uma chave exclusiva.</xref:System.Collections.ICollection>"
  remarks: "Se não houver nenhuma <xref:System.Workflow.ComponentModel.Activity>no <xref:System.Collections.ICollection>com a chave especificada, uma exceção.</xref:System.Collections.ICollection> </xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public System.Workflow.ComponentModel.Activity this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "Identificador exclusivo para a atividade no <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Um membro <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> do <xref:System.Collections.ICollection>; a chave no <xref:System.Collections.ICollection>que foi especificada na chamada.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  id: ListChanged
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: ListChanged
  nameWithType: ActivityCollection.ListChanged
  fullName: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "É desencadeado sempre que for efetuada uma alteração aos conteúdos do <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "Neste contexto, adicionar ou remover membros desencadeia o evento. Modificar um membro não gere este evento.       Quando cria um <xref:System.Workflow.ComponentModel.ActivityCollection>delegado, que identifica o método que irá processar o evento.</xref:System.Workflow.ComponentModel.ActivityCollection> Para associar o evento com o processador de eventos, adicione uma instância do delegado para o evento. O processador de eventos é chamado sempre que o evento ocorre, a menos que remova o delegado. Para obter mais informações sobre o delegado de processador de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs> ListChanged;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  id: Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Remove(Activity)
  nameWithType: ActivityCollection.Remove(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Remove(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Remove a atividade especificada na chamada de <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "Isto <xref:System.Collections.ICollection>é de tipo seguro.</xref:System.Collections.ICollection> É gerada uma exceção de tempo de execução se um item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public bool Remove (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "A atividade remover <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação foi bem sucedida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ActivityCollection.RemoveAt(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Remove o <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> no <xref:System.Collections.ICollection>especificado em <code> index </code>.</xref:System.Collections.ICollection>"
  remarks: "Ocorre uma exceção de tempo de execução se o índice não é válido (fora do intervalo)."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Posição num índice baseado em zero para remover a atividade da coleção."
  overload: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.Add (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection()
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool ICollection<Activity>.Contains (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity[],Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Workflow.ComponentModel.Activity[]
      description: "A adicionar."
    - id: arrayIndex
      type: System.Int32
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: int System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count { get; }
    return:
      type: System.Int32
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool ICollection<Activity>.Remove (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> IEnumerable<Activity>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable<System#Workflow#ComponentModel#Activity>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: int IList<Activity>.IndexOf (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "A adicionar."
    return:
      type: System.Int32
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32,Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void IList<Activity>.Insert (int index, System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: index
      type: System.Int32
      description: "A adicionar."
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: System.Workflow.ComponentModel.Activity System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "A adicionar."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void IList<Activity>.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Copia os elementos do <xref:System.Collections.ICollection>para um <xref:System.Array>, começando num determinado <xref:System.Array>índice.</xref:System.Array> </xref:System.Array> </xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O <xref:System.Array>que é o destino da operação de cópia.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice baseado em zero dentro do <xref:System.Collections.ICollection>onde inicia a cópia.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém um valor que indica se o acesso à &lt;xref:System.Collections.Generic.ICollection%601&gt; está sincronizado, que é seguro para thread."
  remarks: "<xref:System.Collections.ICollection.SyncRoot%2A>Devolve um objeto, que pode ser utilizado para sincronizar o acesso ao <xref:System.Collections.Generic.ICollection%601>.</xref:System.Collections.Generic.ICollection%601></xref:System.Collections.ICollection.SyncRoot%2A>       Coleção a maioria das classes no <xref:System.Collections?displayProperty=fullName>espaço de nomes também implementar um `Synchronized` método, o que fornece um papel de embrulho à volta a colecção subjacente sincronizado.</xref:System.Collections?displayProperty=fullName>       Enumerar através de uma coleção intrinsecamente não é um procedimento seguro para thread. Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador acionar uma excepção. Para garantir a segurança de thread durante a enumeração, pode bloquear a coleção durante a enumeração de toda ou detetar exceções resultantes das alterações efetuadas por outros threads."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso à &lt;xref:System.Collections.Generic.ICollection%601&gt; está a sincronizar, ou seja, seguro para thread; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém um objeto que pode ser utilizado para sincronizar acesso para o &lt;xref:System.Collections.Generic.ICollection%601&gt;."
  remarks: "Para coleções cujo arquivo subjacente não está disponível publicamente, a implementação esperada é devolver a instância atual. Tenha em atenção que o apontador para a instância atual poderá não ser suficiente para coleções que moldam outras coleções; os deverá devolver a colecção subjacente <xref:System.Collections.ICollection.SyncRoot%2A>propriedade.</xref:System.Collections.ICollection.SyncRoot%2A>       Coleção a maioria das classes no <xref:System.Collections?displayProperty=fullName>espaço de nomes também implementar um `Synchronized` método, o que fornece um papel de embrulho à volta a colecção subjacente sincronizado.</xref:System.Collections?displayProperty=fullName> No entanto, as classes derivadas podem fornecer os seus próprios versão sincronizado da utilização de coleção a <xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A>propriedade.</xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A> O código de sincronização tem de efetuar operações no <xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A>propriedade da coleção, não diretamente na coleção.</xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A> Isto assegura um funcionamento correto de coleções que são derivadas de outros objetos. Especificamente, mantém a sincronização adequada com outros threads que podem ser simultaneamente modificar a instância de coleção."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser utilizado para sincronizar acesso para o &lt;xref:System.Collections.Generic.ICollection%601&gt;."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Devolve um <xref:System.Collections.IEnumerator>que itera através de subjacente <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Collections.IEnumerator>"
  remarks: "Um <xref:System.Collections.IEnumerator>só permite a leitura dos dados na coleção.</xref:System.Collections.IEnumerator> Não é possível utilizar um <xref:System.Collections.IEnumerator>para modificar a colecção subjacente.</xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que podem ser utilizados para iterar através da coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Add(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Adiciona um objeto <xref:System.Collections.IList>no fim do <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Collections.IList>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para adicionar a <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Int32
      description: "Devolve <xref:System.Int32>.</xref:System.Int32>       O índice baseado em zero do <xref:System.Object>que acabou de ser adicionada.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ActivityCollection.System.Collections.IList.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Remove todos os <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> de <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Contains(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém um valor que indica se o <xref:System.Object>é um membro da coleção.</xref:System.Object>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Localizar no <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "Devolve <xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se <code> value </code> na coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Boolean>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o índice baseado em zero do <xref:System.Object>na coleção de atividades subjacente.</xref:System.Object>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>ser indexados.</xref:System.Object>"
    return:
      type: System.Int32
      description: "O índice baseado em zero do <code> value </code> na coleção de atividades subjacente ou -1 se não foi encontrado na coleção."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> value </code> não é do tipo <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> e o objeto de exceção contém mensagem de erro &quot;Error_InvalidListItem&quot;."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Insere um <xref:System.Object>para o <xref:System.Collections.IList>no índice baseado em zero especificado.</xref:System.Collections.IList> </xref:System.Object>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A posição baseado em zero da inserção."
    - id: value
      type: System.Object
      description: "O objeto a inserir. Tem de ser do tipo <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém um valor que indica se o <xref:System.Collections.IList>tem um tamanho fixo.</xref:System.Collections.IList>"
  remarks: "Uma coleção com um tamanho fixo não permite a adição ou remoção de elementos depois da coleção é criada, mas permite a modificação de elementos existentes."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Collections.IList>tem fixa tamanho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém um valor que indica se o &lt;xref:System.Collections.Generic.ICollection%601&gt; é só de leitura."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Devolve <xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o &lt;xref:System.Collections.Generic.ICollection%601&gt; é só de leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Boolean>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ActivityCollection.System.Collections.IList.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém ou define a atividade no <xref:System.Collections.ICollection>com base no índice.</xref:System.Collections.ICollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Índice baseado em zero para <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Object
      description: "Devolve <xref:System.Object>, uma atividade de membro do <xref:System.Collections.ICollection>, cujo índice no <xref:System.Collections.ICollection>foi especificada na chamada.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Remove(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Remove a primeira ocorrência de um objeto específico da <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  remarks: "Os elementos que se seguem o elemento removido mover para cima para ocupam o vacated lugar para cima."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para remover <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Collections.IList>é só de leitura.</xref:System.Collections.IList>       <xref:System.Collections.IList>tem um tamanho fixo.</xref:System.Collections.IList>"
  platform:
  - net462
references:
- uid: System.Collections.Generic.List`1
  isExternal: false
  name: System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ActivityCollection(Activity)
  nameWithType: ActivityCollection.ActivityCollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.ActivityCollection(Activity)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Add(Activity)
  nameWithType: ActivityCollection.Add(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Add(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Clear()
  nameWithType: ActivityCollection.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.Clear()
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Contains(Activity)
  nameWithType: ActivityCollection.Contains(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Contains(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.ActivityCollection.Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Count
  nameWithType: ActivityCollection.Count
  fullName: System.Workflow.ComponentModel.ActivityCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ActivityCollection.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Activity>
  nameWithType: IEnumerator<Activity>
  fullName: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: IndexOf(Activity)
  nameWithType: ActivityCollection.IndexOf(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.IndexOf(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Insert(Int32,Activity)
  nameWithType: ActivityCollection.Insert(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Insert(Int32,Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ActivityCollection.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item(String)
  nameWithType: ActivityCollection.Item(String)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ListChanged
  nameWithType: ActivityCollection.ListChanged
  fullName: System.Workflow.ComponentModel.ActivityCollection.ListChanged
- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ActivityCollectionChangeEventArgs>
  nameWithType: EventHandler<ActivityCollectionChangeEventArgs>
  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
    name: ActivityCollectionChangeEventArgs
    nameWithType: ActivityCollectionChangeEventArgs
    fullName: ActivityCollectionChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Remove(Activity)
  nameWithType: ActivityCollection.Remove(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Remove(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ActivityCollection.RemoveAt(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection()
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity[],Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
- uid: System.Workflow.ComponentModel.Activity[]
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity[]
  spec.csharp:
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IEnumerable()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32,Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Add(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Add(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ActivityCollection.System.Collections.IList.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Clear()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Contains(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Contains(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsFixedSize
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ActivityCollection.System.Collections.IList.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Item(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Remove(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Remove(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ActivityCollection
  nameWithType: ActivityCollection.ActivityCollection
- uid: System.Workflow.ComponentModel.ActivityCollection.Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Add
  nameWithType: ActivityCollection.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Clear
  nameWithType: ActivityCollection.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Contains
  nameWithType: ActivityCollection.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.Count*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Count
  nameWithType: ActivityCollection.Count
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ActivityCollection.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: IndexOf
  nameWithType: ActivityCollection.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Insert
  nameWithType: ActivityCollection.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item
  nameWithType: ActivityCollection.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Remove
  nameWithType: ActivityCollection.Remove
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ActivityCollection.RemoveAt
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#CopyTo*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Count*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#IsReadOnly*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable<System#Workflow#ComponentModel#Activity>#GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#RemoveAt*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ActivityCollection.System.Collections.IList.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ActivityCollection.System.Collections.IList.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ActivityCollection.System.Collections.IList.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ActivityCollection.System.Collections.IList.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ActivityCollection.System.Collections.IList.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ActivityCollection.System.Collections.IList.Remove
