### YamlMime:ManagedReference
items:
- uid: System.Collections.CaseInsensitiveComparer
  id: CaseInsensitiveComparer
  children:
  - System.Collections.CaseInsensitiveComparer.#ctor
  - System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)
  - System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)
  - System.Collections.CaseInsensitiveComparer.Default
  - System.Collections.CaseInsensitiveComparer.DefaultInvariant
  langs:
  - csharp
  name: CaseInsensitiveComparer
  nameWithType: CaseInsensitiveComparer
  fullName: System.Collections.CaseInsensitiveComparer
  type: Class
  summary: "Compares two objects for equivalence, ignoring the case of strings."
  remarks: "CaseInsensitiveComparer implements the <xref:System.Collections.IComparer> interface supporting case-insensitive comparisons on strings, just as <xref:System.Collections.CaseInsensitiveHashCodeProvider> implements the <xref:System.Collections.IHashCodeProvider> interface supporting case-insensitive comparisons on strings.       The <xref:System.Collections.Comparer> class is the default implementation of the <xref:System.Collections.IComparer> interface and performs case-sensitive string comparisons.       The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=fullName> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=fullName> method (or the <xref:System.Collections.IComparer> interface). The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly. For example, when creating a <xref:System.Collections.Hashtable>, you must use this class with the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation.       String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/t-system.collections.cas_0_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/t-system.collections.cas_0_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/t-system.collections.cas_0_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CaseInsensitiveComparer : System.Collections.IComparer
  inheritance:
  - System.Object
  implements:
  - System.Collections.IComparer
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveComparer.#ctor
  id: '#ctor'
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: CaseInsensitiveComparer()
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer()
  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initializes a new instance of the <xref href=&quot;System.Collections.CaseInsensitiveComparer&quot;></xref> class using the &lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt; of the current thread."
  remarks: "When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using this constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread is saved. Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/m-system.collections.cas_1_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/m-system.collections.cas_1_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/m-system.collections.cas_1_1.vb)]"
  syntax:
    content: public CaseInsensitiveComparer ();
    parameters: []
  overload: System.Collections.CaseInsensitiveComparer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)
  id: '#ctor(System.Globalization.CultureInfo)'
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: CaseInsensitiveComparer(CultureInfo)
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initializes a new instance of the <xref href=&quot;System.Collections.CaseInsensitiveComparer&quot;></xref> class using the specified &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;."
  remarks: "Comparison procedures use the specified <xref:System.Globalization.CultureInfo?displayProperty=fullName> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/c673d06d-6fe1-4527-9d81-_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/c673d06d-6fe1-4527-9d81-_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/c673d06d-6fe1-4527-9d81-_1.vb)]"
  syntax:
    content: public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; to use for the new <xref href=&quot;System.Collections.CaseInsensitiveComparer&quot;></xref>."
  overload: System.Collections.CaseInsensitiveComparer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>culture</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: Compare(Object,Object)
  nameWithType: CaseInsensitiveComparer.Compare(Object,Object)
  fullName: System.Collections.CaseInsensitiveComparer.Compare(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other."
  remarks: "If `a` and `b` are both strings, this method uses <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> to compare the strings with the casing ignored; otherwise, it uses the <xref:System.IComparable> implementation of either object. That is, if `a` implements <xref:System.IComparable>, then this method returns the result of `a`. `CompareTo` (`b`); otherwise, if `b` implements <xref:System.IComparable>, then it returns the negated result of `b`. `CompareTo` (`a`).       Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>. When sorting, `null` is considered to be less than any other object.       String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Compare (object a, object b);
    parameters:
    - id: a
      type: System.Object
      description: "The first object to compare."
    - id: b
      type: System.Object
      description: "The second object to compare."
    return:
      type: System.Int32
      description: "A signed integer that indicates the relative values of <code>a</code> and <code>b</code>, as shown in the following table.       <table><thead><tr><th> Value       </th><th> Meaning       </th></tr></thead><tbody><tr><td> Less than zero       </td><td><code>a</code> is less than <code>b</code>, with casing ignored.       </td></tr><tr><td> Zero       </td><td><code>a</code> equals <code>b</code>, with casing ignored.       </td></tr><tr><td> Greater than zero       </td><td><code>a</code> is greater than <code>b</code>, with casing ignored.       </td></tr></tbody></table>"
  overload: System.Collections.CaseInsensitiveComparer.Compare*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Neither <code>a</code> nor <code>b</code> implements the <xref:System.IComparable> interface.       -or-       <code>a</code> and <code>b</code> are of different types."
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveComparer.Default
  id: Default
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: Default
  nameWithType: CaseInsensitiveComparer.Default
  fullName: System.Collections.CaseInsensitiveComparer.Default
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Gets an instance of <xref href=&quot;System.Collections.CaseInsensitiveComparer&quot;></xref> that is associated with the &lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt; of the current thread and that is always available."
  remarks: "When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using the parameterless constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread is saved. Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Collections.CaseInsensitiveComparer Default { get; }
    return:
      type: System.Collections.CaseInsensitiveComparer
      description: "An instance of <xref href=&quot;System.Collections.CaseInsensitiveComparer&quot;></xref> that is associated with the &lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt; of the current thread."
  overload: System.Collections.CaseInsensitiveComparer.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant
  id: DefaultInvariant
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: DefaultInvariant
  nameWithType: CaseInsensitiveComparer.DefaultInvariant
  fullName: System.Collections.CaseInsensitiveComparer.DefaultInvariant
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Gets an instance of <xref href=&quot;System.Collections.CaseInsensitiveComparer&quot;></xref> that is associated with &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt; and that is always available."
  remarks: "Comparison procedures use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/p-system.collections.cas_1_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/p-system.collections.cas_1_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/p-system.collections.cas_1_1.vb)]"
  syntax:
    content: public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }
    return:
      type: System.Collections.CaseInsensitiveComparer
      description: "An instance of <xref href=&quot;System.Collections.CaseInsensitiveComparer&quot;></xref> that is associated with &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;."
  overload: System.Collections.CaseInsensitiveComparer.DefaultInvariant*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.CaseInsensitiveComparer.#ctor
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: CaseInsensitiveComparer()
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer()
  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer()
- uid: System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: CaseInsensitiveComparer(CultureInfo)
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Compare(Object,Object)
  nameWithType: CaseInsensitiveComparer.Compare(Object,Object)
  fullName: System.Collections.CaseInsensitiveComparer.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.CaseInsensitiveComparer.Default
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Default
  nameWithType: CaseInsensitiveComparer.Default
  fullName: System.Collections.CaseInsensitiveComparer.Default
- uid: System.Collections.CaseInsensitiveComparer
  parent: System.Collections
  isExternal: false
  name: CaseInsensitiveComparer
  nameWithType: CaseInsensitiveComparer
  fullName: System.Collections.CaseInsensitiveComparer
- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: DefaultInvariant
  nameWithType: CaseInsensitiveComparer.DefaultInvariant
  fullName: System.Collections.CaseInsensitiveComparer.DefaultInvariant
- uid: System.Collections.CaseInsensitiveComparer.#ctor*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: CaseInsensitiveComparer
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer
- uid: System.Collections.CaseInsensitiveComparer.Compare*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Compare
  nameWithType: CaseInsensitiveComparer.Compare
- uid: System.Collections.CaseInsensitiveComparer.Default*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Default
  nameWithType: CaseInsensitiveComparer.Default
- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: DefaultInvariant
  nameWithType: CaseInsensitiveComparer.DefaultInvariant
