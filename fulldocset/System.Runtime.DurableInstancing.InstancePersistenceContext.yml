### YamlMime:ManagedReference
items:
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext
  id: InstancePersistenceContext
  children:
  - System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  - System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  langs:
  - csharp
  name: InstancePersistenceContext
  nameWithType: InstancePersistenceContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext
  type: Class
  summary: "Representa as informações de estado de execução enquanto está a ser executado um comando de persistência."
  remarks: "Uma instância desta classe é transmitida ao método TryCommand de implementações de fornecedor de persistência. Fornecedores de persistência utilizam esta classe para inspecionar a vista de memória da instância, bem como para indicar os resultados de operações no arquivo externo que podem afetar a vista ou o outro contexto dentro da memória."
  syntax:
    content: public sealed class InstancePersistenceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  id: AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência associou com êxito uma chave para a instância atual no arquivo de instância. O identificador da chave é especificado como um parâmetro."
  remarks: "A chave de instância tem de ser não associada. O identificador de instância atual tem de ser vinculado a uma instância, bem como um bloqueio nessa instância."
  syntax:
    content: public void AssociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "O identificador da chave instância para a chave que foi associado. Não pode ser GUID. Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Iniciar uma operação assíncrona para vincular um bloqueio existente numa instância para o identificador de instância atual. A versão do bloqueio existente é transmitida como um parâmetro."
  remarks: "Ao tentar adquirir um bloqueio, o fornecedor de persistência pode decidir que a instância atual já está bloqueada no arquivo de atual. Se o token de bloqueio corresponde ao token de bloqueio do identificador de atual, em seguida, o fornecedor de persistência pode tentar recuperar o bloqueio inspecionar a respetiva versão e passou-a para BeginBindReclaimedLock. O fornecedor de persistência não pode fazer alterações à instância até que o bloqueio é recuperado com êxito. Se nenhum outro identificador estiver vinculada ao bloqueio, em seguida, BeginBindReclaimedLock operação ter êxito e o identificador atual torna-se vinculada ao bloqueio. Caso contrário, BeginBindReclaimedLock ou EndBindReclaimedLock emite InstanceHandleConflictException. Se os comandos estão em curso nos outros identificadores, não pode concluir a operação ao aguardar que o resultado desses comandos para decidir se o bloqueio pode ser recuperado.       O identificador de instância atual tem de ser vinculado a uma instância e um proprietário de bloqueio. A instância não tem de ser concluída. O token de bloqueio associado com o proprietário do bloqueio é utilizado para identificar o proprietário do bloqueio.       Depois de um bloqueio está vinculado a um identificador, continua a ser vinculada para a duração do identificador. O token de bloqueio e a versão de instância não pode ser alterada."
  syntax:
    content: public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "A versão do bloqueio contido na instância, ou zero se o fornecedor de persistência não implementar versões de bloqueio."
    - id: timeout
      type: System.TimeSpan
      description: "O período de tempo limite para a operação assíncrona."
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado quando a operação for concluída."
    - id: state
      type: System.Object
      description: "As informações de estado associadas a operação assíncrona."
    return:
      type: System.IAsyncResult
      description: "O estado de uma operação assíncrona."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Começa a executar um comando de persistência de forma assíncrona."
  remarks: "Um fornecedor de persistência pode utilizar este método para executar comandos secundárias como parte de um comando. O subsecção será possível executar o comando utilizando BeginTryCommand, semelhante à comandos transmitida para Beginexecute. Os comandos podem ser aninhados, mas um comando não tem de ser executado subcomando mais do que um cada vez."
  syntax:
    content: public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "O comando de persistência para ser executada."
    - id: timeout
      type: System.TimeSpan
      description: "O valor de tempo limite para a operação."
    - id: callback
      type: System.AsyncCallback
      description: "O delegado que recebe a notificação a assíncronas receber que concluir uma operação de pedido."
    - id: state
      type: System.Object
      description: "As informações de estado."
    return:
      type: System.IAsyncResult
      description: "O estado de uma operação assíncrona."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  id: BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Está vinculado a um bloqueio recentemente adquirido numa instância para o identificador de instância atual. A versão do bloqueio adquirida é transmitida como um parâmetro."
  remarks: "Se um fornecedor de persistência implementa versões de bloqueios, em seguida, sempre que é adquirir um bloqueio na instância, a versão tem ser incrementada por um no arquivo de externo. Na primeira vez que a instância está bloqueada, a versão deverá ser 1. Cada aquisição do bloqueio invalida o bloqueio anterior. O identificador de instância atual tem de ser vinculado a uma instância e um proprietário de bloqueio. A instância não tem de ser concluída. O token de bloqueio associado com o proprietário do bloqueio é utilizado para identificar o proprietário do bloqueio depois de um bloqueio está vinculado a um identificador, continua a ser vinculada para a duração do identificador. O token de bloqueio e a versão de instância não pode ser alterada."
  syntax:
    content: public void BindAcquiredLock (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Versão do bloqueio adquirido a instância, ou zero se o fornecedor de persistência não implementar versões de bloqueio."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  id: BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Associa um <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> para um identificador de instância."
  syntax:
    content: public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "Um <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> objeto que contém informações sobre o evento."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  id: BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Está vinculado a uma instância cujo identificador é especificado como um parâmetro para o identificador de instância atual."
  remarks: "Depois de uma instância está vinculada a um identificador, continua a ser vinculada para a duração do identificador. Nunca não pode estar vinculada nenhuma outra instância para o identificador."
  syntax:
    content: public void BindInstance (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Um identificador de instância. Não pode ser GUID. Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  id: BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Está vinculado a um proprietário de instância para o identificador de instância atual."
  remarks: "Assim que um proprietário de instância está vinculado a um identificador, continua a ser vinculada para a duração do identificador. Nunca pode estar vinculado sem proprietário de instância para o identificador."
  syntax:
    content: public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);
    parameters:
    - id: instanceOwnerId
      type: System.Guid
      description: "O identificador para o proprietário de instância."
    - id: lockToken
      type: System.Guid
      description: "O token de bloqueio do proprietário da instância. Um fornecedor de persistência pode optar por utilizar o mesmo valor para o identificador de proprietário de instância e o token de bloqueio do proprietário."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  id: BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Está vinculado a um bloqueio existente numa instância para o identificador de instância atual. A versão do bloqueio existente é transmitida como um parâmetro."
  remarks: "Ao tentar adquirir um bloqueio, o fornecedor de persistência pode decidir que a instância atual já está bloqueada no arquivo de atual. Se o token de bloqueio corresponde ao token de bloqueio do identificador de atual, em seguida, o fornecedor de persistência pode tentar recuperar o bloqueio inspecionar a respetiva versão e passou-a para BindReclaimedLock. O fornecedor de persistência não pode fazer alterações à instância até que o bloqueio é recuperado com êxito. Se nenhum outro identificador estiver vinculada ao bloqueio, BindReclaimedLock for bem sucedida e torna-se vincular o identificador de atual para o bloqueio. Caso contrário, BindReclaimedLock emite InstanceHandleConflictException. Se os comandos estão em curso nos outros identificadores, BindReclaimedLock pode bloquear a espera do resultado desses comandos antes de decidir se o bloqueio pode ser recuperado.       O identificador de instância atual tem de ser vinculado a uma instância e um proprietário de bloqueio. A instância não tem de ser concluída. O token de bloqueio associado com o proprietário do bloqueio é utilizado para identificar o proprietário do bloqueio.       Depois de um bloqueio está vinculado a um identificador, continua a ser vinculada para a duração do identificador. O token de bloqueio e a versão de instância não pode ser alterada."
  syntax:
    content: public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Versão do bloqueio contido na instância, ou zero se o fornecedor de persistência não implementar versões de bloqueio."
    - id: timeout
      type: System.TimeSpan
      description: "O valor de tempo limite para a operação."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  id: CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência com êxito marcou a instância atual como concluídos no arquivo de instância."
  remarks: "O identificador de instância atual tem de ser vinculado a uma instância, bem como um bloqueio nessa instância. A instância tem de ser inicializada e não ser concluída. (Uma instância é inicializada se um conjunto de dados de instâncias tem alguma vez foi continuado-la.) Todas as chaves associadas à instância que têm de ser concluídas."
  syntax:
    content: public void CompletedInstance ();
    parameters: []
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  id: CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência marcou com êxito uma chave como concluídos no arquivo de externo. O identificador da chave é especificado como um parâmetro."
  remarks: "O identificador de instância atual tem de ser vinculado a uma instância, bem como um bloqueio nessa instância. A chave de instância tem de estar associada à instância atual e não ser concluída."
  syntax:
    content: public void CompletedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "O identificador da chave instância para a chave que foi concluída. Não pode ser GUID. Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  id: CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Cria uma instância de uma exceção que pode ser emitida emitido por trycommand para acionar BindReclaimedLock comportamento."
  remarks: "Código de exemplo:```      protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       throw context.CreateBindReclaimedLockException(5);   }   is equivalent to   protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       context.BindReclaimedLock(5, timeout);       throw new OperationCanceledException();   }      ```"
  syntax:
    content: public Exception CreateBindReclaimedLockException (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "A versão do bloqueio contido na instância, ou zero se o fornecedor de persistência não implementar versões de bloqueio."
    return:
      type: System.Exception
      description: "Uma exceção."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  id: EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Termina a operação assíncrona ao iniciar o <xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>método.</xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>"
  syntax:
    content: public void EndBindReclaimedLock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação assíncrona."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  id: EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Termina a operação assíncrona."
  syntax:
    content: public void EndExecute (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O estado de uma operação assíncrona."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Executa um comando de persistência."
  remarks: "Um fornecedor de persistência pode utilizar este método para executar comandos secundárias como parte de um comando. O subsecção será possível executar o comando utilizando TryCommand, semelhante à comandos transmitida para instancestore. Execute. Os comandos podem ser aninhados, mas um comando não tem de ser executado subcomando mais do que um cada vez."
  syntax:
    content: public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "O comando de persistência para ser executada."
    - id: timeout
      type: System.TimeSpan
      description: "O valor de tempo limite para a operação."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  id: InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Obtém o identificador de instância atual."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "O identificador de instância atual."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  id: InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Obtém a versão do bloqueio na instância atual, o identificador de instância atual."
  remarks: "O fornecedor de persistência deve verificar este valor contra a versão de bloqueio do bloqueio numa instância no arquivo de instância quando efetuar uma operação que requer um bloqueio (tais como os dados de instância persistentes) com um identificador vinculado para o bloqueio. Se a versão de bloqueio não corresponderem, o comando deve falhar com InstanceLockLostException."
  syntax:
    content: public long InstanceVersion { get; }
    return:
      type: System.Int64
      description: "A versão do bloqueio instância vincular o identificador de instância atual, ou -1 se o identificador não está vinculado a um bloqueio."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  id: InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Obtém o objeto de vista de instância que representa o estado de memória da instância atual. Esta vista reflete as atualizações, que são introduzidas pelo comando em curso."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "O objeto de vista de instância."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  id: LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência tem obteve com êxito a instância atual do arquivo de instância."
  remarks: "O identificador de instância atual deve ser vinculado a uma instância. Se o identificador da instância está vinculado a um bloqueio ou instância carregada está marcada como completa, os dados carregados são considerados para estar consistente; caso contrário, é considerado em dúvida."
  syntax:
    content: public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceData, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> completedInstanceKeyMetadata);
    parameters:
    - id: state
      type: System.Runtime.DurableInstancing.InstanceState
      description: "As informações de estado de instância."
    - id: instanceData
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Os dados da instância como um dicionário de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
    - id: instanceMetadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Metadados de instância como uma coleção de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
    - id: associatedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "Metadados de chave de instância associados como um dicionário do identificador de instância e metadados de chave de instância, que é um dicionário de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
    - id: completedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "Concluir a instância metadados porque um dicionário do identificador de instância e metadados de chave de instância, que é um dicionário de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  id: LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Obtém o bloqueio de token do proprietário de instância vinculado ao identificador de instância atual."
  remarks: "O fornecedor de persistência deve verificar este valor contra o token de bloqueio do bloqueio numa instância no arquivo de instância quando efetuar uma operação que requer um bloqueio (tais como os dados de instância persistentes) com um identificador vinculado para o bloqueio. Se o token de bloqueio não corresponderem, o comando deve falhar com InstanceLockLostException.       O fornecedor de persistência deve utilizar este valor como o token de bloqueio ao adquirir um novo bloqueio numa instância (tais como os dados de instância persistentes com um identificador que ainda não estiver vinculado a um bloqueio). Se a instância já está bloqueada no arquivo de instância e o token de bloqueio corresponde a este token de bloqueio, o fornecedor de persistência pode tentar recuperar a instância utilizando BindReclaimedLock."
  syntax:
    content: public Guid LockToken { get; }
    return:
      type: System.Guid
      description: "O token de bloqueio vincular o identificador de instância atual ou o GUID. Empty se o identificador não está vinculado a um proprietário de instância."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  id: PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência foi continuada com êxito um conjunto de dados de instância para o arquivo de instância. Isto tem o efeito de inicializar a instância se já não."
  remarks: "O identificador de instância atual tem de ser vinculado a uma instância, bem como um bloqueio nessa instância. Cada conjunto de dados de instância completamente substitui o conjunto anterior. O conjunto de dados da instância pode ser nulo – este é o mesmo como vazio. A persistência de um conjunto de nulo de dados de instância elimina o conjunto de dados de instância existente. (A persistência de um conjunto de dados de instância não tem qualquer efeito nos metadados de instância.)"
  syntax:
    content: public void PersistedInstance (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> data);
    parameters:
    - id: data
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "A instância de dados como um dicionário de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  id: QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Adiciona o <xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;> </xref> transmitida como um parâmetro para uma lista de <xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;> </xref> objetos num <xref href=&quot;System.Runtime.DurableInstancing.InstanceView&quot;> </xref>."
  syntax:
    content: public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);
    parameters:
    - id: queryResult
      type: System.Runtime.DurableInstancing.InstanceStoreQueryResult
      description: "Os resultados de uma consulta em relação a um arquivo de instância."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência com êxito tem leitura alguns metadados de chave de instância para uma chave associado à instância atual do arquivo de instância."
  remarks: "O identificador de instância atual deve ser vinculado a uma instância. Se o identificador da instância está vinculado a um bloqueio ou a instância atual está marcada como completa, os metadados é considerado para estar consistente; caso contrário, é considerado em dúvida."
  syntax:
    content: public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: key
      type: System.Guid
      description: "O identificador da chave instância para a chave foi lido cujo metadados. Não pode ser GUID. Empty."
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Os metadados como um dicionário de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os metadados representa todos os metadados associados à chave de instância, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência com êxito ler alguns metadados de instância para a instância atual do arquivo de instância."
  syntax:
    content: public void ReadInstanceMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Os metadados como um dicionário de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os metadados representa todos os metadados associados à instância, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Define os metadados de proprietário de instância com os dados transmitidos no parâmetro."
  remarks: "O identificador de instância atual deve ser vinculado a uma instância. Se o identificador da instância está vinculado a um bloqueio ou a instância atual está marcada como completa, os metadados é considerado para estar consistente; caso contrário, é considerado em dúvida."
  syntax:
    content: public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "O dicionário de <xref:System.Xml.Linq.XName>e <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objetos.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "O valor para especificar se a consistência de ser definida como <xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;> </xref> ou <xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  id: SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Define o processador de cancelamento ser chamado quando é solicitado o cancelamento de uma operação."
  remarks: "Se o processador de cancelamento é denominado, o fornecedor de persistência deve cancelar todas as operações pendentes e acionar OperationCanceledException emitido por trycommand para indicar que o comando de persistência foi interrompido antes de poder ser concluída."
  syntax:
    content: public void SetCancellationHandler (Action<System.Runtime.DurableInstancing.InstancePersistenceContext> cancellationHandler);
    parameters:
    - id: cancellationHandler
      type: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
      description: "A referência a uma função a chamar."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  id: UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência com êxito tem desassociar uma chave de instância atual no arquivo de instância. O identificador da chave é especificado como um parâmetro."
  remarks: "O identificador de instância atual tem de ser vinculado a uma instância, bem como um bloqueio nessa instância. A chave de instância tem de estar associada à instância atual e tem de ser marcada como completa. A instância atual não pode estar marcada concluída."
  syntax:
    content: public void UnassociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "O identificador da chave instância para a chave que foi não associada. Não pode ser GUID. Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  id: UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Obtém as informações de contexto de utilizador ligadas para o identificador de instância atual."
  remarks: "O objeto é o que é devolvido de InstanceStore.OnNewInstanceHandle para o identificador de instância atual."
  syntax:
    content: public object UserContext { get; }
    return:
      type: System.Object
      description: "As informações de contexto de utilizador."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência foi escrita com êxito num valor de metadados para uma chave de instância que está associado a instância atual para o arquivo de instância"
  remarks: "O identificador de instância atual tem de ser vinculado a uma instância, bem como um bloqueio nessa instância. A chave de instância tem de estar associada com a instância atual e não tem de ser concluída."
  syntax:
    content: public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: key
      type: System.Guid
      description: "O identificador da chave instância para a chave. Não pode ser GUID. Empty."
    - id: name
      type: System.Xml.Linq.XName
      description: "O nome da propriedade de metadados."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "O valor da propriedade de metadados."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência com êxito escrito um valor de metadados para a instância atual para o arquivo de instância externo."
  remarks: "O identificador de instância atual tem de ser vinculado a uma instância, bem como tem um bloqueio nessa instância. A instância não tem de ser concluída."
  syntax:
    content: public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "O nome da propriedade de metadados."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "O valor da propriedade de metadados."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Indica que o fornecedor de persistência foi escrita com êxito num valor de metadados para o proprietário de instância atual para o arquivo de instância."
  remarks: "O identificador de instância atual deve ser vinculado a um proprietário de instância."
  syntax:
    content: public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "O nome da propriedade de metadados."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "O valor da propriedade de metadados."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceCommand
  nameWithType: InstancePersistenceCommand
  fullName: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceHandle
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceHandle
  nameWithType: InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
- uid: System.Runtime.DurableInstancing.InstanceState
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceState
  nameWithType: InstanceState
  fullName: System.Runtime.DurableInstancing.InstanceState
- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<XName,InstanceValue>
  nameWithType: IDictionary<XName,InstanceValue>
  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  nameWithType: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  fullName: System.Collections.Generic.IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
- uid: System.Runtime.DurableInstancing.InstanceStoreQueryResult
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceStoreQueryResult
  nameWithType: InstanceStoreQueryResult
  fullName: System.Runtime.DurableInstancing.InstanceStoreQueryResult
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
- uid: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
  parent: System
  isExternal: true
  name: Action<InstancePersistenceContext>
  nameWithType: Action<InstancePersistenceContext>
  fullName: System.Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstancePersistenceContext
    name: InstancePersistenceContext
    nameWithType: InstancePersistenceContext
    fullName: InstancePersistenceContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: true
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Runtime.DurableInstancing.InstanceValue
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceValue
  nameWithType: InstanceValue
  fullName: System.Runtime.DurableInstancing.InstanceValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute
  nameWithType: InstancePersistenceContext.BeginExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock
  nameWithType: InstancePersistenceContext.BindAcquiredLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent
  nameWithType: InstancePersistenceContext.BindEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance
  nameWithType: InstancePersistenceContext.BindInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner
  nameWithType: InstancePersistenceContext.BindInstanceOwner
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock
  nameWithType: InstancePersistenceContext.BindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance
  nameWithType: InstancePersistenceContext.CompletedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey
  nameWithType: InstancePersistenceContext.CompletedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute
  nameWithType: InstancePersistenceContext.EndExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute
  nameWithType: InstancePersistenceContext.Execute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance
  nameWithType: InstancePersistenceContext.LoadedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance
  nameWithType: InstancePersistenceContext.PersistedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore
  nameWithType: InstancePersistenceContext.QueriedInstanceStore
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler
  nameWithType: InstancePersistenceContext.SetCancellationHandler
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue
