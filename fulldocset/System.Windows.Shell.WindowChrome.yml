### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.WindowChrome
  id: WindowChrome
  children:
  - System.Windows.Shell.WindowChrome.#ctor
  - System.Windows.Shell.WindowChrome.CaptionHeight
  - System.Windows.Shell.WindowChrome.CaptionHeightProperty
  - System.Windows.Shell.WindowChrome.CornerRadius
  - System.Windows.Shell.WindowChrome.CornerRadiusProperty
  - System.Windows.Shell.WindowChrome.CreateInstanceCore
  - System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  - System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)
  - System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)
  - System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  - System.Windows.Shell.WindowChrome.GlassFrameThickness
  - System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  - System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  - System.Windows.Shell.WindowChrome.NonClientFrameEdges
  - System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  - System.Windows.Shell.WindowChrome.ResizeBorderThickness
  - System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  - System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  - System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  - System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  - System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  - System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  - System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  - System.Windows.Shell.WindowChrome.WindowChromeProperty
  langs:
  - csharp
  name: WindowChrome
  nameWithType: WindowChrome
  fullName: System.Windows.Shell.WindowChrome
  type: Class
  summary: "Represents an object that describes the customizations to the non-client area of a window."
  remarks: "The                          WindowChrome class enables you to extend Windows Presentation Foundation (WPF) content into the non-client area of a window that is typically reserved for the operating system’s window manager.      ## Standard Windows    Standard windows are composed of two overlapping rectangles. The outer rectangle is the                                  *non-client area*, which is often referred to as                                  *chrome*. It is drawn and managed by the operating system’s window manager. Its dimensions are determined by standard operating system settings. The non-client frame provides standard window features and behaviors. These include caption buttons (Minimize, Maximize, and Close), the window border, resize and move behaviors, the application icon and title, and the system menu. The inner rectangle is the                                  *client area*. It contains the contents of your application, and it is drawn and managed by the application. For more information about windows in WPF applications, see                                  [WPF Windows Overview](~/add/includes/ajax-current-ext-md.md).       The following illustration shows the parts of a standard window.       ![Window elements](~/add/media/windowoverviewfigure1.PNG &quot;Window elements&quot;)      ## Custom Windows    You can customize a window border by setting the                                  <xref:System.Windows.Window.WindowStyle%2A?displayProperty=fullName> property to                                  <xref:System.Windows.WindowStyle> or by using the                                  WindowChrome class.      ### WindowStyle.None    One way to customize the appearance of a WPF application window is to set the                                          <xref:System.Windows.Window.WindowStyle%2A?displayProperty=fullName> property to                                          <xref:System.Windows.WindowStyle>. This removes the non-client frame from the window and leaves only the client area, to which you can apply a custom style. However, when the non-client frame is removed, you also lose the system features and behaviors that it provides, such as caption buttons and window resizing. Another side effect is that the window will cover the Windows taskbar when it is maximized. Setting                                          <xref:System.Windows.WindowStyle?displayProperty=fullName> enables you to create a completely custom application, but also requires that you implement custom logic in your application to emulate standard window behavior.      ### WindowChrome    To customize a window while retaining its standard functionality, you can use the                                          WindowChrome class. The                                          WindowChrome class separates the functionality of the window frame from the visuals, and lets you control the boundary between the client and non-client areas of your application window. The                                          WindowChrome class lets you put WPF content in the window frame by extending the client area to cover the non-client area. At the same time, it retains system behaviors through two invisible areas; the                                          *resize border* and                                          *caption* areas                                         .       There are                                          two main parts                                          to creating a custom window using the                                          WindowChrome class. First, you customize the non-client part of the window by setting properties exposed on the                                          WindowChrome object. Then you provide a template for the window that defines the part of your application that is extended into the non-client area.The properties exposed on the                                          WindowChrome object are                                          <xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A>,                                          <xref:System.Windows.Shell.WindowChrome.CaptionHeight%2A>,                                          <xref:System.Windows.Shell.WindowChrome.CornerRadius%2A>, and                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>.       The                                          <xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A> property specifies an invisible border around the outside of the application window that the user can click-and-drag to resize the window.       The                                          <xref:System.Windows.Shell.WindowChrome.CaptionHeight%2A> property specifies an invisible area at the top of the window that enables system behaviors typically associated with the title bar. These behaviors include: click and drag to move the window, double-click to maximize the window, and right-click to show the system menu.       The resize border and caption area do not have any visual elements; they only define areas that respond to input and enable standard system-provided window behaviors.       The                                          <xref:System.Windows.Shell.WindowChrome.CornerRadius%2A> property specifies the amount that the corners of the window are rounded. This property does not have any effect if the glass frame is enabled for a window.       The                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property specifies the width of the glass frame around the window. By default, it uses the system value specified by the                                          <xref:System.Windows.SystemParameters.WindowNonClientFrameThickness%2A> property to emulate the appearance of a standard window. When the glass frame is used, the caption buttons for Minimize, Maximize, and Close are visible and interactive. The application is responsible for displaying the application icon and caption text. You can set the                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property to make the glass frame wider or narrower than the default.      > [!CAUTION] >  The size of the caption buttons does not change when the                                              <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property is changed. If the height of the top of the glass frame is less than the height of the caption buttons, the caption buttons will not be completely visible.       To make a custom window that does not have a glass frame, set the                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property to a uniform value of 0. This will disable and hide the standard caption buttons.       To extend the glass frame to cover the entire window, set the                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property to a negative value on any side. When the                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property is set to a negative value for any side, its coerced value will be equal to                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A>.      > [!NOTE] >  Aero is a set of visual enhancements to the look and functionality of the Windows desktop that was introduced in Windows Vista. One of the more visually obvious features of Aero is translucent glass window borders. Windows Aero is enabled by the desktop composition feature of the Desktop Window Manager (DWM).       Windows Aero glass effects are not supported on all operating systems, and can be disabled on supported operating systems. If Windows Aero is not available, the glass frame will not be displayed regardless of the                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property value. The border area specified by this property will appear black instead.Check the                                          <xref:System.Windows.SystemParameters.IsGlassEnabled%2A> property to verify that Windows Aero glass effects are available. If glass effects are not available, you should provide an alternate window style that does not use the glass frame or use the standard window by setting the window style to null.       You extend your WPF content into the window frame by specifying a ControlTemplate that defines the appearance and behavior of the frame content. You set the TargetType of the ControlTemplate to the type of the window that you are customizing.      ```   <ControlTemplate TargetType=&quot;{x:Type local:MainWindow}&quot;>   ```       By default, the parts of any visual elements that are within the non-client area of the window are not interactive. To enable interactive elements in the non-client area, attach the WindowsChrome.IsHitTestVisibleInChrome attached property to the element and set it to true.       The following XAML markup shows the main elements needed to customize a window using the WindowChrome class.      ```   <Style x:Key=&quot;StandardStyle&quot; TargetType=&quot;{x:Type local:MainWindow}&quot;>       <Setter Property=&quot;shell:WindowChrome.WindowChrome&quot;>           <Setter.Value>               <shell:WindowChrome />           </Setter.Value>       </Setter>       <Setter Property=&quot;Template&quot;>           <Setter.Value>               <ControlTemplate TargetType=&quot;{x:Type local:MainWindow}&quot;>                   <Grid>                       <Border Background=&quot;White&quot;                               Margin=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=WindowNonClientFrameThickness}&quot;>                           <ContentPresenter Content=&quot;{TemplateBinding Content}&quot; />                       </Border>                       <TextBlock Text=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}&quot;                                   VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;                                   Margin=&quot;36,8,0,0&quot;/>                       <Image Source=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}&quot;                              VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;                              Margin=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}&quot;                               Width=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=SmallIconSize.Width}&quot;                              shell:WindowChrome.IsHitTestVisibleInChrome=&quot;True&quot;/>                   </Grid>               </ControlTemplate>           </Setter.Value>       </Setter>   </Style>   ```       The first setter attaches the WindowChrome to the window. It uses all default values for the WindowChrome properties, which makes the window look like a standard window.      ```   <Setter Property=&quot;shell:WindowChrome.WindowChrome&quot;>       <Setter.Value>           <shell:WindowChrome />       </Setter.Value>   </Setter>   ```       The window template must specify a content presenter to display the contents of the window specified in your application. By default the WindowChrome class extends the client area to cover the non-client border. In order to uncover the glass frame, you need to specify a margin around the ContentPresenter. This markup specifies a border with a white background around the content presenter to emulate the appearance of a standard window. It also specifies a margin that is bound to the WindowNonClientFrameThickness property, which gets the default system width for the frame.      ```   <Border Background=&quot;White&quot;       Margin=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=WindowNonClientFrameThickness}&quot;>       <ContentPresenter Content=&quot;{TemplateBinding Content}&quot; />   </Border>   ```       The application icon and title are not displayed by the WindowChrome class; they have to be added to the border as custom content. The following XAML adds an image and a textblock to display the icon and title. Both elements are bound to the corresponding properties on the window. The image width is bound to the SmallIconSize width, which gets the default system size for the icon. The IsHitTestVisibleInChrome attached property is set on the image so that it can receive mouse events.      ```   <Image Source=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}&quot;          VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;          Margin=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}&quot;           Width=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=SmallIconSize.Width}&quot;          shell:WindowChrome.IsHitTestVisibleInChrome=&quot;True&quot;/>      <TextBlock Text=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}&quot;               VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;               Margin=&quot;36,8,0,0&quot;/>   ```"
  syntax:
    content: 'public class WindowChrome : System.Windows.Freezable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: WindowChrome()
  nameWithType: WindowChrome.WindowChrome()
  fullName: System.Windows.Shell.WindowChrome.WindowChrome()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Shell.WindowChrome&quot;></xref> class."
  syntax:
    content: public WindowChrome ();
    parameters: []
  overload: System.Windows.Shell.WindowChrome.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CaptionHeight
  id: CaptionHeight
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CaptionHeight
  nameWithType: WindowChrome.CaptionHeight
  fullName: System.Windows.Shell.WindowChrome.CaptionHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets or sets the height of the caption area at the top of a window."
  remarks: "Set the CaptionHeight property to specify the area at the top of the window that enables the system behaviors typically associated with the title bar. These behaviors include double-click to maximize the window, right-click to open the system menu, and click-and-drag to move the window. This property can be set to any non-negative double value.       The area defined by the CaptionHeight property starts at the bottom edge of the top resize border and extends downward the specified amount. It spans the width of the window inside the right and left resize borders. This area does not have any visual elements associated with it; it is only used to define the region that responds to the title bar behaviors. By default, the parts of any visual elements that are within the caption area of the window are not interactive. To enable interactive elements in the caption area, attach the <xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome%2A> attached property to the element and set it to `true`.      <a name=&quot;dependencyPropertyInfo_CaptionHeight&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Shell.WindowChrome.CaptionHeightProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public double CaptionHeight { get; set; }
    return:
      type: System.Double
      description: "The height of the caption area."
  overload: System.Windows.Shell.WindowChrome.CaptionHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CaptionHeightProperty
  id: CaptionHeightProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CaptionHeightProperty
  nameWithType: WindowChrome.CaptionHeightProperty
  fullName: System.Windows.Shell.WindowChrome.CaptionHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.CaptionHeight*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty CaptionHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CornerRadius
  id: CornerRadius
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CornerRadius
  nameWithType: WindowChrome.CornerRadius
  fullName: System.Windows.Shell.WindowChrome.CornerRadius
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets or sets a value that indicates the amount that the corners of a window are rounded."
  remarks: "Set the CornerRadius property to specify the amount of rounding at the corners of a window. This property can be set to any non-negative double value. The values can be non-uniform.       This property does not affect maximized windows or windows that have a Windows Aero glass frame. It only has an effect when Windows Aero (also called Desktop Window Manager) is not enabled or the <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property is set to 0. Hit testing in the non-client area does not take the CornerRadius into account when determining whether the mouse is over a resize border. If the radius is too large relative to the <xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A> then it is possible that the user cannot perform a diagonal resize using the mouse.      <a name=&quot;dependencyPropertyInfo_CornerRadius&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Shell.WindowChrome.CornerRadiusProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.CornerRadius CornerRadius { get; set; }
    return:
      type: System.Windows.CornerRadius
      description: "A value that describes the amount that corners are rounded."
  overload: System.Windows.Shell.WindowChrome.CornerRadius*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CornerRadiusProperty
  id: CornerRadiusProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CornerRadiusProperty
  nameWithType: WindowChrome.CornerRadiusProperty
  fullName: System.Windows.Shell.WindowChrome.CornerRadiusProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.CornerRadius*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty CornerRadiusProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: WindowChrome.CreateInstanceCore()
  fullName: System.Windows.Shell.WindowChrome.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Creates a new instance of the <xref href=&quot;System.Windows.Shell.WindowChrome&quot;></xref> class."
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "The new instance of this class."
  overload: System.Windows.Shell.WindowChrome.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  id: GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GetIsHitTestVisibleInChrome(IInputElement)
  nameWithType: WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets the value of the <xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*> attached property from the specified input element."
  syntax:
    content: public static bool GetIsHitTestVisibleInChrome (System.Windows.IInputElement inputElement);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "The input element from which to read the property value."
    return:
      type: System.Boolean
      description: "The value of the <xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*> attached property."
  overload: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code> is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)
  id: GetResizeGripDirection(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GetResizeGripDirection(IInputElement)
  nameWithType: WindowChrome.GetResizeGripDirection(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetResizeGripDirection(IInputElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets the value of the <xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*> attached property from the specified input element."
  syntax:
    content: public static System.Windows.Shell.ResizeGripDirection GetResizeGripDirection (System.Windows.IInputElement inputElement);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "The input element from which to read the property value."
    return:
      type: System.Windows.Shell.ResizeGripDirection
      description: "The value of the <xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*> attached property."
  overload: System.Windows.Shell.WindowChrome.GetResizeGripDirection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code> is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)
  id: GetWindowChrome(System.Windows.Window)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GetWindowChrome(Window)
  nameWithType: WindowChrome.GetWindowChrome(Window)
  fullName: System.Windows.Shell.WindowChrome.GetWindowChrome(Window)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets the value of the <xref:System.Windows.Shell.WindowChrome.WindowChrome*> attached property from the specified <xref href=&quot;System.Windows.Window&quot;></xref>."
  syntax:
    content: public static System.Windows.Shell.WindowChrome GetWindowChrome (System.Windows.Window window);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "The <xref href=&quot;System.Windows.Window&quot;></xref> from which to read the property value."
    return:
      type: System.Windows.Shell.WindowChrome
      description: "The instance of <xref href=&quot;System.Windows.Shell.WindowChrome&quot;></xref> that is attached to the specified <xref href=&quot;System.Windows.Window&quot;></xref>."
  overload: System.Windows.Shell.WindowChrome.GetWindowChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>window</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  id: GlassFrameCompleteThickness
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GlassFrameCompleteThickness
  nameWithType: WindowChrome.GlassFrameCompleteThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets a uniform thickness of -1."
  remarks: "The GlassFrameCompleteThickness property is provided as a utility to enable you to set the thickness of the glass frame to a named property. You set the <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property equal to GlassFrameCompleteThickness to extend the glass frame over the entire window. If the <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> property is set to a negative value for any side, its coerced value will be equal to GlassFrameCompleteThickness."
  syntax:
    content: public static System.Windows.Thickness GlassFrameCompleteThickness { get; }
    return:
      type: System.Windows.Thickness
      description: "A uniform thickness of -1 in all cases."
  overload: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GlassFrameThickness
  id: GlassFrameThickness
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GlassFrameThickness
  nameWithType: WindowChrome.GlassFrameThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets or sets a value that indicates the width of the glass border around a window."
  remarks: "Set the GlassFrameThickness property to specify the amount that the Windows Aero glass frame extends into the client area of a window. By default, the glass frame will use system values to emulate the look of a standard window. If Windows Aero is enabled, then the standard caption buttons (Maximize, Minimize, Close) are enabled and interactive. To make a custom window that does not have a glass frame, set this thickness to a uniform value of 0. This will disable the standard caption buttons.       To extend the glass frame to cover the entire window, set the GlassFrameThickness property to a negative value on any side. If the GlassFrameThickness property is set to a negative value for any side, its coerced value will be equal to<xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A>. The <xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A> property is provided as a utility to enable you to set the thickness of the glass frame to a named property that extends the glass over the entire window.       Windows Aero glass effects are not supported on all operating systems, and can be disabled on supported operating systems. If Windows Aero is not available, the glass frame will not be displayed regardless of the GlassFrameThickness property value. You should check the <xref:System.Windows.SystemParameters.IsGlassEnabled%2A> property to verify that Windows Aero glass effects are available. If glass effects are not available, you should provide an alternate window style that does not use the glass frame.      <a name=&quot;dependencyPropertyInfo_GlassFrameThickness&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Thickness GlassFrameThickness { get; set; }
    return:
      type: System.Windows.Thickness
      description: "The width of the glass border around a window."
  overload: System.Windows.Shell.WindowChrome.GlassFrameThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  id: GlassFrameThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GlassFrameThicknessProperty
  nameWithType: WindowChrome.GlassFrameThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty GlassFrameThicknessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  id: IsHitTestVisibleInChromeProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: IsHitTestVisibleInChromeProperty
  nameWithType: WindowChrome.IsHitTestVisibleInChromeProperty
  fullName: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHitTestVisibleInChromeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdges
  id: NonClientFrameEdges
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: NonClientFrameEdges
  nameWithType: WindowChrome.NonClientFrameEdges
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdges
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets or sets a value that indicates which edges of the window frame are not owned by the client."
  remarks: "<a name=&quot;dependencyPropertyInfo_NonClientFrameEdges&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Shell.NonClientFrameEdges NonClientFrameEdges { get; set; }
    return:
      type: System.Windows.Shell.NonClientFrameEdges
      description: "A bitwise combination of the enumeration values that specify which edges of the frame are not owned by the client.       The registered default is <xref href=&quot;System.Windows.Shell.NonClientFrameEdges&quot;></xref>. For more information about what can influence the value, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md)."
  overload: System.Windows.Shell.WindowChrome.NonClientFrameEdges*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "‘Left, Right, Top, Bottom’ is not a valid value. At least one edge must belong to the client."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  id: NonClientFrameEdgesProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: NonClientFrameEdgesProperty
  nameWithType: WindowChrome.NonClientFrameEdgesProperty
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.NonClientFrameEdges*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty NonClientFrameEdgesProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThickness
  id: ResizeBorderThickness
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: ResizeBorderThickness
  nameWithType: WindowChrome.ResizeBorderThickness
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets or sets a value that indicates the width of the border that is used to resize a window."
  remarks: "Set the ResizeBorderThickness property to specify the width of the area where a user can click-and-drag to resize a window. The mouse pointer changes to resize arrows when it is moved over the resize border.       This property can be set to any non-negative double value. The values can be non-uniform. By default, the resize border will use system values to emulate the behavior of a standard window.       This area is only used to define the region that is used to resize the window; it does not have any visual elements associated with it. However, it does affect the layout of elements inside the resize border.      <a name=&quot;dependencyPropertyInfo_ResizeBorderThickness&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Thickness ResizeBorderThickness { get; set; }
    return:
      type: System.Windows.Thickness
      description: "The width of the border that is used to resize a window."
  overload: System.Windows.Shell.WindowChrome.ResizeBorderThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  id: ResizeBorderThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: ResizeBorderThicknessProperty
  nameWithType: WindowChrome.ResizeBorderThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ResizeBorderThicknessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  id: ResizeGripDirectionProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: ResizeGripDirectionProperty
  nameWithType: WindowChrome.ResizeGripDirectionProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ResizeGripDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  id: SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  nameWithType: WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  fullName: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Sets the value of the <xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*> attached property on the specified input element."
  syntax:
    content: public static void SetIsHitTestVisibleInChrome (System.Windows.IInputElement inputElement, bool hitTestVisible);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "The element on which to set the <xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*> attached property."
    - id: hitTestVisible
      type: System.Boolean
      description: "The property value to set."
  overload: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code> is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  id: SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: SetResizeGripDirection(IInputElement,ResizeGripDirection)
  nameWithType: WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
  fullName: System.Windows.Shell.WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Sets the value of the <xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*> attached property on the specified input element."
  syntax:
    content: public static void SetResizeGripDirection (System.Windows.IInputElement inputElement, System.Windows.Shell.ResizeGripDirection direction);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "The element on which to set the <xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*> attached property."
    - id: direction
      type: System.Windows.Shell.ResizeGripDirection
      description: "The property value to set."
  overload: System.Windows.Shell.WindowChrome.SetResizeGripDirection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code> is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  id: SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: SetWindowChrome(Window,WindowChrome)
  nameWithType: WindowChrome.SetWindowChrome(Window,WindowChrome)
  fullName: System.Windows.Shell.WindowChrome.SetWindowChrome(Window,WindowChrome)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Sets the value of the <xref:System.Windows.Shell.WindowChrome.WindowChrome*> attached property on the specified <xref href=&quot;System.Windows.Window&quot;></xref>."
  syntax:
    content: public static void SetWindowChrome (System.Windows.Window window, System.Windows.Shell.WindowChrome chrome);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "The <xref href=&quot;System.Windows.Window&quot;></xref> on which to set the <xref:System.Windows.Shell.WindowChrome.WindowChrome*> attached property."
    - id: chrome
      type: System.Windows.Shell.WindowChrome
      description: "The instance of <xref href=&quot;System.Windows.Shell.WindowChrome&quot;></xref> to set."
  overload: System.Windows.Shell.WindowChrome.SetWindowChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>window</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  id: UseAeroCaptionButtons
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: UseAeroCaptionButtons
  nameWithType: WindowChrome.UseAeroCaptionButtons
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Gets or sets a value that indicates whether hit-testing is enabled on the Windows Aero caption buttons."
  remarks: "The default Windows Aero caption buttons are Close, Maximize/Restore, and Minimize. If you do not use the Windows Aero captions buttons, you should provide an alternative method for a user to accomplish these tasks.      <a name=&quot;dependencyPropertyInfo_UseAeroCaptionButtons&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public bool UseAeroCaptionButtons { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if hit-testing is enabled on the caption buttons; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The registered default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. For more information about what can influence the value, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md)."
  overload: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  id: UseAeroCaptionButtonsProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: UseAeroCaptionButtonsProperty
  nameWithType: WindowChrome.UseAeroCaptionButtonsProperty
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty UseAeroCaptionButtonsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.WindowChromeProperty
  id: WindowChromeProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: WindowChromeProperty
  nameWithType: WindowChrome.WindowChromeProperty
  fullName: System.Windows.Shell.WindowChrome.WindowChromeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Identifies the <xref:System.Windows.Shell.WindowChrome.WindowChrome*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty WindowChromeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Freezable
  isExternal: false
  name: System.Windows.Freezable
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Shell.WindowChrome.#ctor
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: WindowChrome()
  nameWithType: WindowChrome.WindowChrome()
  fullName: System.Windows.Shell.WindowChrome.WindowChrome()
- uid: System.Windows.Shell.WindowChrome.CaptionHeight
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CaptionHeight
  nameWithType: WindowChrome.CaptionHeight
  fullName: System.Windows.Shell.WindowChrome.CaptionHeight
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Shell.WindowChrome.CaptionHeightProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CaptionHeightProperty
  nameWithType: WindowChrome.CaptionHeightProperty
  fullName: System.Windows.Shell.WindowChrome.CaptionHeightProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Shell.WindowChrome.CornerRadius
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CornerRadius
  nameWithType: WindowChrome.CornerRadius
  fullName: System.Windows.Shell.WindowChrome.CornerRadius
- uid: System.Windows.CornerRadius
  parent: System.Windows
  isExternal: false
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
- uid: System.Windows.Shell.WindowChrome.CornerRadiusProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CornerRadiusProperty
  nameWithType: WindowChrome.CornerRadiusProperty
  fullName: System.Windows.Shell.WindowChrome.CornerRadiusProperty
- uid: System.Windows.Shell.WindowChrome.CreateInstanceCore
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: WindowChrome.CreateInstanceCore()
  fullName: System.Windows.Shell.WindowChrome.CreateInstanceCore()
- uid: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetIsHitTestVisibleInChrome(IInputElement)
  nameWithType: WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetResizeGripDirection(IInputElement)
  nameWithType: WindowChrome.GetResizeGripDirection(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetResizeGripDirection(IInputElement)
- uid: System.Windows.Shell.ResizeGripDirection
  parent: System.Windows.Shell
  isExternal: false
  name: ResizeGripDirection
  nameWithType: ResizeGripDirection
  fullName: System.Windows.Shell.ResizeGripDirection
- uid: System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetWindowChrome(Window)
  nameWithType: WindowChrome.GetWindowChrome(Window)
  fullName: System.Windows.Shell.WindowChrome.GetWindowChrome(Window)
- uid: System.Windows.Shell.WindowChrome
  parent: System.Windows.Shell
  isExternal: false
  name: WindowChrome
  nameWithType: WindowChrome
  fullName: System.Windows.Shell.WindowChrome
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameCompleteThickness
  nameWithType: WindowChrome.GlassFrameCompleteThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Shell.WindowChrome.GlassFrameThickness
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameThickness
  nameWithType: WindowChrome.GlassFrameThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThickness
- uid: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameThicknessProperty
  nameWithType: WindowChrome.GlassFrameThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
- uid: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: IsHitTestVisibleInChromeProperty
  nameWithType: WindowChrome.IsHitTestVisibleInChromeProperty
  fullName: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdges
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: NonClientFrameEdges
  nameWithType: WindowChrome.NonClientFrameEdges
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdges
- uid: System.Windows.Shell.NonClientFrameEdges
  parent: System.Windows.Shell
  isExternal: false
  name: NonClientFrameEdges
  nameWithType: NonClientFrameEdges
  fullName: System.Windows.Shell.NonClientFrameEdges
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: NonClientFrameEdgesProperty
  nameWithType: WindowChrome.NonClientFrameEdgesProperty
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThickness
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeBorderThickness
  nameWithType: WindowChrome.ResizeBorderThickness
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThickness
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeBorderThicknessProperty
  nameWithType: WindowChrome.ResizeBorderThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
- uid: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeGripDirectionProperty
  nameWithType: WindowChrome.ResizeGripDirectionProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
- uid: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  nameWithType: WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  fullName: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
- uid: System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetResizeGripDirection(IInputElement,ResizeGripDirection)
  nameWithType: WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
  fullName: System.Windows.Shell.WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
- uid: System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetWindowChrome(Window,WindowChrome)
  nameWithType: WindowChrome.SetWindowChrome(Window,WindowChrome)
  fullName: System.Windows.Shell.WindowChrome.SetWindowChrome(Window,WindowChrome)
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: UseAeroCaptionButtons
  nameWithType: WindowChrome.UseAeroCaptionButtons
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: UseAeroCaptionButtonsProperty
  nameWithType: WindowChrome.UseAeroCaptionButtonsProperty
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
- uid: System.Windows.Shell.WindowChrome.WindowChromeProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: WindowChromeProperty
  nameWithType: WindowChrome.WindowChromeProperty
  fullName: System.Windows.Shell.WindowChrome.WindowChromeProperty
- uid: System.Windows.Shell.WindowChrome.#ctor*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: WindowChrome
  nameWithType: WindowChrome.WindowChrome
- uid: System.Windows.Shell.WindowChrome.CaptionHeight*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CaptionHeight
  nameWithType: WindowChrome.CaptionHeight
- uid: System.Windows.Shell.WindowChrome.CornerRadius*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CornerRadius
  nameWithType: WindowChrome.CornerRadius
- uid: System.Windows.Shell.WindowChrome.CreateInstanceCore*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CreateInstanceCore
  nameWithType: WindowChrome.CreateInstanceCore
- uid: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetIsHitTestVisibleInChrome
  nameWithType: WindowChrome.GetIsHitTestVisibleInChrome
- uid: System.Windows.Shell.WindowChrome.GetResizeGripDirection*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetResizeGripDirection
  nameWithType: WindowChrome.GetResizeGripDirection
- uid: System.Windows.Shell.WindowChrome.GetWindowChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetWindowChrome
  nameWithType: WindowChrome.GetWindowChrome
- uid: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameCompleteThickness
  nameWithType: WindowChrome.GlassFrameCompleteThickness
- uid: System.Windows.Shell.WindowChrome.GlassFrameThickness*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameThickness
  nameWithType: WindowChrome.GlassFrameThickness
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdges*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: NonClientFrameEdges
  nameWithType: WindowChrome.NonClientFrameEdges
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThickness*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeBorderThickness
  nameWithType: WindowChrome.ResizeBorderThickness
- uid: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetIsHitTestVisibleInChrome
  nameWithType: WindowChrome.SetIsHitTestVisibleInChrome
- uid: System.Windows.Shell.WindowChrome.SetResizeGripDirection*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetResizeGripDirection
  nameWithType: WindowChrome.SetResizeGripDirection
- uid: System.Windows.Shell.WindowChrome.SetWindowChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetWindowChrome
  nameWithType: WindowChrome.SetWindowChrome
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: UseAeroCaptionButtons
  nameWithType: WindowChrome.UseAeroCaptionButtons
