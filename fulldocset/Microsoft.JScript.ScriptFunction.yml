### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.ScriptFunction
  id: ScriptFunction
  children:
  - Microsoft.JScript.ScriptFunction.#ctor(Microsoft.JScript.ScriptObject,System.String)
  - Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])
  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  - Microsoft.JScript.ScriptFunction.ilength
  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptFunction.length
  - Microsoft.JScript.ScriptFunction.prototype
  - Microsoft.JScript.ScriptFunction.ToString
  langs:
  - csharp
  name: ScriptFunction
  nameWithType: ScriptFunction
  fullName: Microsoft.JScript.ScriptFunction
  type: Class
  summary: "Represents a prototype-based object that is defined by a constructor function. Most of the constructor function classes, such as <xref href=&quot;Microsoft.JScript.DateConstructor&quot;></xref>, <xref href=&quot;Microsoft.JScript.NumberConstructor&quot;></xref>, <xref href=&quot;Microsoft.JScript.StringConstructor&quot;></xref>, and <xref href=&quot;Microsoft.JScript.ObjectConstructor&quot;></xref>, inherit from this class. This class belongs to the objects and functions category."
  syntax:
    content: 'public abstract class ScriptFunction : Microsoft.JScript.JSObject'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.#ctor(Microsoft.JScript.ScriptObject,System.String)
  id: '#ctor(Microsoft.JScript.ScriptObject,System.String)'
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: ScriptFunction(ScriptObject,String)
  nameWithType: ScriptFunction.ScriptFunction(ScriptObject,String)
  fullName: Microsoft.JScript.ScriptFunction.ScriptFunction(ScriptObject,String)
  type: Constructor
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.JScript.ScriptFunction&quot;></xref> class."
  remarks: "The parent is the object to which the object delegates requests for properties or methods that it does not implement itself. For example, when you create a <xref:Microsoft.JScript.NumberObject> by using a <xref:Microsoft.JScript.NumberConstructor>, the parent is a <xref:Microsoft.JScript.NumberPrototype>."
  syntax:
    content: protected ScriptFunction (Microsoft.JScript.ScriptObject parent, string name);
    parameters:
    - id: parent
      type: Microsoft.JScript.ScriptObject
      description: "The parent prototype of the object that this function constructs."
    - id: name
      type: System.String
      description: "The name of the object that this function constructs."
  overload: Microsoft.JScript.ScriptFunction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: ScriptFunction.CreateInstance(Object[])
  fullName: Microsoft.JScript.ScriptFunction.CreateInstance(Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Creates an instance of the prototype-based object, passing in the specified arguments."
  syntax:
    content: public object CreateInstance (object[] args);
    parameters:
    - id: args
      type: System.Object[]
      description: "The arguments to pass to the constructor."
    return:
      type: System.Object
      description: "An instance of the object."
  overload: Microsoft.JScript.ScriptFunction.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  id: GetPrototypeForConstructedObject
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: GetPrototypeForConstructedObject()
  nameWithType: ScriptFunction.GetPrototypeForConstructedObject()
  fullName: Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the prototype object for this constructor function."
  remarks: "The prototype is the object to which the object delegates requests for properties or methods that it does not implement itself. For example, when you create a <xref:Microsoft.JScript.NumberObject> by using a <xref:Microsoft.JScript.NumberConstructor>, the prototype is a <xref:Microsoft.JScript.NumberPrototype>."
  syntax:
    content: protected Microsoft.JScript.ScriptObject GetPrototypeForConstructedObject ();
    parameters: []
    return:
      type: Microsoft.JScript.ScriptObject
      description: "The prototype object for this constructor function."
  overload: Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.ilength
  id: ilength
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: ilength
  nameWithType: ScriptFunction.ilength
  fullName: Microsoft.JScript.ScriptFunction.ilength
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Stores the number of elements that are in the <code>args</code> parameter of the <xref:Microsoft.JScript.ScriptFunction.CreateInstance*> method."
  syntax:
    content: protected int ilength;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: ScriptFunction.Invoke(Object,Object[])
  fullName: Microsoft.JScript.ScriptFunction.Invoke(Object,Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Invokes a method of the prototype-based object, passing in the specified arguments."
  remarks: "Invoke often acts as a constructor or create instance call."
  syntax:
    content: public object Invoke (object thisob, object[] args);
    parameters:
    - id: thisob
      type: System.Object
      description: "The object that this method is acting upon."
    - id: args
      type: System.Object[]
      description: "The arguments to pass to the method."
    return:
      type: System.Object
      description: "The result of the call to the method."
  overload: Microsoft.JScript.ScriptFunction.Invoke*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: ScriptFunction.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: Microsoft.JScript.ScriptFunction.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Invokes the specified member."
  syntax:
    content: public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "The name of the member to invoke."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection."
    - id: binder
      type: System.Reflection.Binder
      description: "An object that performs type conversion from actual argument type to formal argument type."
    - id: target
      type: System.Object
      description: "The object on which to invoke the member. This must be the current script object."
    - id: args
      type: System.Object[]
      description: "An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array that has the same length as the `args` parameter. It represents the invoked member&quot;s argument attributes in the metadata."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly."
    - id: namedParameters
      type: System.String[]
      description: "An array of parameters."
    return:
      type: System.Object
      description: "The return value of the call to the member."
  overload: Microsoft.JScript.ScriptFunction.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.length
  id: length
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: length
  nameWithType: ScriptFunction.length
  fullName: Microsoft.JScript.ScriptFunction.length
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets or sets the number of elements that are in the <code>args</code> parameter of the <xref:Microsoft.JScript.ScriptFunction.CreateInstance*> method."
  syntax:
    content: public virtual int length { get; set; }
    return:
      type: System.Int32
      description: "The number of elements that are in the <code>args</code> parameter of the <xref:Microsoft.JScript.ScriptFunction.CreateInstance*> method."
  overload: Microsoft.JScript.ScriptFunction.length*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.prototype
  id: prototype
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: prototype
  nameWithType: ScriptFunction.prototype
  fullName: Microsoft.JScript.ScriptFunction.prototype
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets or sets the prototype object for this constructor function."
  remarks: "The prototype is the object to which the object delegates requests for properties or methods that it does not implement itself. For example, when you create a <xref:Microsoft.JScript.NumberObject> by using a <xref:Microsoft.JScript.NumberConstructor>, the prototype is a <xref:Microsoft.JScript.NumberPrototype>."
  syntax:
    content: public object prototype { get; set; }
    return:
      type: System.Object
      description: "The prototype object for this constructor function."
  overload: Microsoft.JScript.ScriptFunction.prototype*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptFunction.ToString
  id: ToString
  parent: Microsoft.JScript.ScriptFunction
  langs:
  - csharp
  name: ToString()
  nameWithType: ScriptFunction.ToString()
  fullName: Microsoft.JScript.ScriptFunction.ToString()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Returns a string representation of the constructor function."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that contains the name of the constructor function and a placeholder for the code."
  overload: Microsoft.JScript.ScriptFunction.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.JSObject
  isExternal: false
  name: Microsoft.JScript.JSObject
- uid: Microsoft.JScript.ScriptFunction.#ctor(Microsoft.JScript.ScriptObject,System.String)
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: ScriptFunction(ScriptObject,String)
  nameWithType: ScriptFunction.ScriptFunction(ScriptObject,String)
  fullName: Microsoft.JScript.ScriptFunction.ScriptFunction(ScriptObject,String)
- uid: Microsoft.JScript.ScriptObject
  parent: Microsoft.JScript
  isExternal: false
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: Microsoft.JScript.ScriptObject
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: ScriptFunction.CreateInstance(Object[])
  fullName: Microsoft.JScript.ScriptFunction.CreateInstance(Object[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: GetPrototypeForConstructedObject()
  nameWithType: ScriptFunction.GetPrototypeForConstructedObject()
  fullName: Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject()
- uid: Microsoft.JScript.ScriptFunction.ilength
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: ilength
  nameWithType: ScriptFunction.ilength
  fullName: Microsoft.JScript.ScriptFunction.ilength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: ScriptFunction.Invoke(Object,Object[])
  fullName: Microsoft.JScript.ScriptFunction.Invoke(Object,Object[])
- uid: Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: ScriptFunction.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: Microsoft.JScript.ScriptFunction.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptFunction.length
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: length
  nameWithType: ScriptFunction.length
  fullName: Microsoft.JScript.ScriptFunction.length
- uid: Microsoft.JScript.ScriptFunction.prototype
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: prototype
  nameWithType: ScriptFunction.prototype
  fullName: Microsoft.JScript.ScriptFunction.prototype
- uid: Microsoft.JScript.ScriptFunction.ToString
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: ToString()
  nameWithType: ScriptFunction.ToString()
  fullName: Microsoft.JScript.ScriptFunction.ToString()
- uid: Microsoft.JScript.ScriptFunction.#ctor*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: ScriptFunction
  nameWithType: ScriptFunction.ScriptFunction
- uid: Microsoft.JScript.ScriptFunction.CreateInstance*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: CreateInstance
  nameWithType: ScriptFunction.CreateInstance
- uid: Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: GetPrototypeForConstructedObject
  nameWithType: ScriptFunction.GetPrototypeForConstructedObject
- uid: Microsoft.JScript.ScriptFunction.Invoke*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: Invoke
  nameWithType: ScriptFunction.Invoke
- uid: Microsoft.JScript.ScriptFunction.InvokeMember*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: InvokeMember
  nameWithType: ScriptFunction.InvokeMember
- uid: Microsoft.JScript.ScriptFunction.length*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: length
  nameWithType: ScriptFunction.length
- uid: Microsoft.JScript.ScriptFunction.prototype*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: prototype
  nameWithType: ScriptFunction.prototype
- uid: Microsoft.JScript.ScriptFunction.ToString*
  parent: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: ToString
  nameWithType: ScriptFunction.ToString
