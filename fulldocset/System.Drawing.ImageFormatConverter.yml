### YamlMime:ManagedReference
items:
- uid: System.Drawing.ImageFormatConverter
  id: ImageFormatConverter
  children:
  - System.Drawing.ImageFormatConverter.#ctor
  - System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ImageFormatConverter
  nameWithType: ImageFormatConverter
  fullName: System.Drawing.ImageFormatConverter
  type: Class
  summary: "ImageFormatConverter is a class that can be used to convert <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;></xref> objects from one data type to another. Access this class through the <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref> object."
  remarks: "A type converter is used to convert values between data types. A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from. Access the ImageFormatConverter class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method.       The ImageFormatConverter converts to and from known image formats, as specified in the <xref:System.Drawing.Imaging.ImageFormat> class.      > [!NOTE] >  If you want to convert between image formats, such as converting between BMP and JPEG, use one of the <xref:System.Drawing.Image.Save%2A?displayProperty=fullName> methods that takes an <xref:System.Drawing.Imaging.ImageFormat> object as a parameter."
  syntax:
    content: 'public class ImageFormatConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.ImageFormatConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.ImageFormatConverter
  langs:
  - csharp
  name: ImageFormatConverter()
  nameWithType: ImageFormatConverter.ImageFormatConverter()
  fullName: System.Drawing.ImageFormatConverter.ImageFormatConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.ImageFormatConverter&quot;></xref> class."
  remarks: "Do not create a <xref:System.Drawing.ImageFormatConverter> object directly. Access the <xref:System.Drawing.ImageFormatConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method."
  syntax:
    content: public ImageFormatConverter ();
    parameters: []
  overload: System.Drawing.ImageFormatConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.ImageFormatConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ImageFormatConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.ImageFormatConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indicates whether this converter can convert an object in the specified source type to the native type of the converter."
  remarks: "The <xref:System.Drawing.ImageFormatConverter> converts to and from known image formats, as specified in the <xref:System.Drawing.Imaging.ImageFormat> class."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: sourceType
      type: System.Type
      description: "The type you want to convert from."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this object can perform the conversion."
  overload: System.Drawing.ImageFormatConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.ImageFormatConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ImageFormatConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.ImageFormatConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets a value indicating whether this converter can convert an object to the specified destination type using the context."
  remarks: "The <xref:System.Drawing.ImageFormatConverter> converts to and from known image formats, as specified in the <xref:System.Drawing.Imaging.ImageFormat> class."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that specifies the context for this type conversion."
    - id: destinationType
      type: System.Type
      description: "The <xref:System.Type> that represents the type to which you want to convert this <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;></xref> object."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this object can perform the conversion."
  overload: System.Drawing.ImageFormatConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.ImageFormatConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ImageFormatConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.ImageFormatConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the specified object to an <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;></xref> object."
  remarks: "The <xref:System.Drawing.ImageFormatConverter> converts to and from known image formats, as specified in the <xref:System.Drawing.Imaging.ImageFormat> class."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object that specifies formatting conventions for a particular culture."
    - id: value
      type: System.Object
      description: "The object to convert."
    return:
      type: System.Object
      description: "The converted object."
  overload: System.Drawing.ImageFormatConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be completed."
  platform:
  - net462
- uid: System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.ImageFormatConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ImageFormatConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.ImageFormatConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the specified object to the specified type."
  remarks: "The <xref:System.Drawing.ImageFormatConverter> converts to and from known image formats, as specified in the <xref:System.Drawing.Imaging.ImageFormat> class.       The most common type conversion is to and from a string type. The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is `string`. If this method cannot convert the specified object to the specified destination type, it throws a <xref:System.NotSupportedException> exception."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object that specifies formatting conventions for a particular culture."
    - id: value
      type: System.Object
      description: "The object to convert."
    - id: destinationType
      type: System.Type
      description: "The type to convert the object to."
    return:
      type: System.Object
      description: "The converted object."
  overload: System.Drawing.ImageFormatConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be completed."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code> is <xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.ImageFormatConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ImageFormatConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Drawing.ImageFormatConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets a collection that contains a set of standard values for the data type this validator is designed for. Returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the data type does not support a standard set of values."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A collection that contains a standard set of valid values, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. The default implementation always returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.ImageFormatConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.ImageFormatConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ImageFormatConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.ImageFormatConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indicates whether this object supports a standard set of values that can be picked from a list."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A type descriptor through which additional context can be provided."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Drawing.ImageFormatConverter.GetStandardValues*> method should be called to find a common set of values the object supports."
  overload: System.Drawing.ImageFormatConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Drawing.ImageFormatConverter.#ctor
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: ImageFormatConverter()
  nameWithType: ImageFormatConverter.ImageFormatConverter()
  fullName: System.Drawing.ImageFormatConverter.ImageFormatConverter()
- uid: System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ImageFormatConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.ImageFormatConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ImageFormatConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.ImageFormatConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ImageFormatConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.ImageFormatConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ImageFormatConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.ImageFormatConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ImageFormatConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Drawing.ImageFormatConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ImageFormatConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.ImageFormatConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Drawing.ImageFormatConverter.#ctor*
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: ImageFormatConverter
  nameWithType: ImageFormatConverter.ImageFormatConverter
- uid: System.Drawing.ImageFormatConverter.CanConvertFrom*
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: ImageFormatConverter.CanConvertFrom
- uid: System.Drawing.ImageFormatConverter.CanConvertTo*
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: ImageFormatConverter.CanConvertTo
- uid: System.Drawing.ImageFormatConverter.ConvertFrom*
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: ImageFormatConverter.ConvertFrom
- uid: System.Drawing.ImageFormatConverter.ConvertTo*
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: ConvertTo
  nameWithType: ImageFormatConverter.ConvertTo
- uid: System.Drawing.ImageFormatConverter.GetStandardValues*
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: ImageFormatConverter.GetStandardValues
- uid: System.Drawing.ImageFormatConverter.GetStandardValuesSupported*
  parent: System.Drawing.ImageFormatConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: ImageFormatConverter.GetStandardValuesSupported
